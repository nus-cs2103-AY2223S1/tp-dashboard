[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T11-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T11-2/tp/actions)","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"* InTrack helps Computer Science students keep track of internships they are applying to / have applied to.","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"johnrhimawan":1,"chantellyu":4,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"bigcrushes"},"content":"run {","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"bigcrushes"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"bigcrushes"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":"mainClassName \u003d \u0027seedu.intrack.Main\u0027","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"jetlfj"},"content":"run {","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"jetlfj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"jetlfj"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jetlfj":5,"bigcrushes":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"### John","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":"\u003cimg src\u003d\"images/johnrhimawan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"[[github](https://github.com/johnrhimawan)]","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"bigcrushes"},"content":"[[portfolio](team/johnrhimawan.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":"* Role: Developer","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"* Responsibilities: Something","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"kangqiao322"},"content":"### Kang Qiao","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"kangqiao322"},"content":"\u003cimg src\u003d\"images/kangqiao322.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"kangqiao322"},"content":"[[github](https://github.com/kangqiao322)]","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"kangqiao322"},"content":"[[portfolio](team/kangqiao322.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"* Role: Developer","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"kangqiao322"},"content":"* Responsibilities: Something","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"### Jet","lastModifiedDate":"2022-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":"\u003cimg src\u003d\"images/jetlfj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"[[github](http://github.com/jetlfj)] [[portfolio](team/jetlfj.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"* Responsibilities: Something","lastModifiedDate":"2022-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"bigcrushes"},"content":"### Charlton","lastModifiedDate":"2022-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"bigcrushes"},"content":"\u003cimg src\u003d\"images/bigcrushes.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"bigcrushes"},"content":"[[github](http://github.com/bigcrushes)]","lastModifiedDate":"2022-09-24"},{"lineNumber":47,"author":{"gitId":"bigcrushes"},"content":"[[portfolio](team/bigcrushes.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"chantellyu"},"content":"### Chantell","lastModifiedDate":"2022-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"chantellyu"},"content":"\u003cimg src\u003d\"images/chantellyu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"chantellyu"},"content":"[[github](http://github.com/chantellyu)]","lastModifiedDate":"2022-09-24"},{"lineNumber":57,"author":{"gitId":"chantellyu"},"content":"[[portfolio](team/chantellyu.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jetlfj":10,"bigcrushes":5,"chantellyu":4,"kangqiao322":5,"-":36}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"jetlfj"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `InternshipListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"jetlfj"},"content":"* depends on some classes in the `Model` component, as it displays `Internship` object residing in the `Model`.","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"jetlfj"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add an internship).","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"jetlfj"},"content":"* stores the address book data i.e., all `Internship` objects (which are contained in a `UniqueInternshipList` object).","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"jetlfj"},"content":"* stores the currently \u0027selected\u0027 `Internship` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cInternship\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"jetlfj"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Internship` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Internship` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"bigcrushes"},"content":"### Add internship application feature","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"bigcrushes"},"content":"#### About this feature","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"bigcrushes"},"content":"The add internship application feature allows users to quickly add an internship application  in the tracker via the ","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"bigcrushes"},"content":"command `add n/NAME p/POSITION hp/PHONE e/EMAIL a/ADDRESS [t/TAG]...`.","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"bigcrushes"},"content":"#### How it is implemented","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"bigcrushes"},"content":"The `add` command is facilitated by the `AddCommand` and the `AddCommandParser`. It uses the `ArgumentTokenizer#tokenize(String argString, Prefix... prefixes)`","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"bigcrushes"},"content":"to extract the relevant inputs for each field. A new `Internship` object is then created with the corresponding name, position, phone, email, address and tag.","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"bigcrushes"},"content":"The status field, by default, will be set to `Progress`. The `InTrack#addInternship(Internship target)` which is exposed in the `Model` interface as","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"bigcrushes"},"content":"`Model#addInternship(Internship target, Internship editedInternship)` is called to add the new `Internship` object to the list of internship applications.","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"bigcrushes"},"content":"#### Parsing user input","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"bigcrushes"},"content":"1. The user inputs the `add` command.","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"bigcrushes"},"content":"2. The `InTrackParser` processes the input and creates a new `AddCommandParser`.","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"bigcrushes"},"content":"3. The `AddCommandParser` then calls `ArgumentTokenizer#tokenize(String argString, Prefix... prefixes)` to extract the relevant inputs for each field.","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"bigcrushes"},"content":"   If any prefix is absent but compulsory or invalid, a `ParseException` would be thrown.","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"bigcrushes"},"content":"4. The respective `Name`, `Position`, `Phone`, `Email`, `Address` and `Tag` constructors then check for the validity of parsed inputs. ","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"bigcrushes"},"content":"   If any of the parsed inputs are absent but compulsory or invalid, a `ParseException` would be thrown.","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"bigcrushes"},"content":"5. The `AddCommandParser` then creates the `AddCommand` based on the processed input.","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"bigcrushes"},"content":"#### Command execution","lastModifiedDate":"2022-10-20"},{"lineNumber":182,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":183,"author":{"gitId":"bigcrushes"},"content":"1. The `LogicManager` executes the `AddCommand`.","lastModifiedDate":"2022-10-20"},{"lineNumber":184,"author":{"gitId":"bigcrushes"},"content":"2. The `AddCommand` then creates a new `Internship` object with the corresponding parsed inputs for each field.","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"bigcrushes"},"content":"3. The `AddCommand` then calls `InTrack#addInternship(Internship target, Internship editedInternship)` to add the","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"bigcrushes"},"content":"   new `Internship` object to the list of internship applications.","lastModifiedDate":"2022-10-20"},{"lineNumber":187,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"bigcrushes"},"content":"#### Displaying of result","lastModifiedDate":"2022-10-20"},{"lineNumber":189,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"bigcrushes"},"content":"1. Finally, the `AddCommand` creates a `CommandResult` with a success message and returns it to the `LogicManager`","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"bigcrushes"},"content":"   to complete the command execution. The GUI would also be updated with the change of status.","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"bigcrushes"},"content":"The following sequence diagram shows how the `add` command works:","lastModifiedDate":"2022-10-20"},{"lineNumber":194,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":195,"author":{"gitId":"bigcrushes"},"content":"![StatusSequenceDiagram](images/AddSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":196,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":197,"author":{"gitId":"bigcrushes"},"content":"The following activity diagram shows what happens when a user executes a `add` command:","lastModifiedDate":"2022-10-20"},{"lineNumber":198,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":199,"author":{"gitId":"bigcrushes"},"content":"![StatusActivityDiagram](images/AddActivityDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":200,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":201,"author":{"gitId":"bigcrushes"},"content":"#### Design considerations","lastModifiedDate":"2022-10-20"},{"lineNumber":202,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":203,"author":{"gitId":"bigcrushes"},"content":"**Aspect: Command to add status of an internship application**","lastModifiedDate":"2022-10-20"},{"lineNumber":204,"author":{"gitId":"bigcrushes"},"content":"Most internship applications added by users would still be in progress, so a default \"Progress\" status is provided for","lastModifiedDate":"2022-10-20"},{"lineNumber":205,"author":{"gitId":"bigcrushes"},"content":"each new `Internship` instead of requiring the user to provide one initially, saving time. As such, there is no need for","lastModifiedDate":"2022-10-20"},{"lineNumber":206,"author":{"gitId":"bigcrushes"},"content":"a prefix for the `Status` field.","lastModifiedDate":"2022-10-20"},{"lineNumber":207,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":208,"author":{"gitId":"jetlfj"},"content":"### Update internship application status feature","lastModifiedDate":"2022-10-20"},{"lineNumber":209,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":210,"author":{"gitId":"jetlfj"},"content":"#### About this feature","lastModifiedDate":"2022-10-20"},{"lineNumber":211,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":212,"author":{"gitId":"jetlfj"},"content":"The update internship application status feature allows users to quickly update the status of an internship application","lastModifiedDate":"2022-10-20"},{"lineNumber":213,"author":{"gitId":"jetlfj"},"content":"in the tracker via the command `status INDEX STATUS`, where `INDEX` must be a positive integer within the list and ","lastModifiedDate":"2022-10-20"},{"lineNumber":214,"author":{"gitId":"jetlfj"},"content":"`STATUS` must be either `o` (for **O**ffered), `p` (for in **P**rogress) or `r` (for **R**ejected).","lastModifiedDate":"2022-10-20"},{"lineNumber":215,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":216,"author":{"gitId":"jetlfj"},"content":"#### How it is implemented","lastModifiedDate":"2022-10-20"},{"lineNumber":217,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":218,"author":{"gitId":"jetlfj"},"content":"The `status` command is facilitated by the `StatusCommand` and the `StatusCommandParser`. It uses the `List#get(int index)`","lastModifiedDate":"2022-10-20"},{"lineNumber":219,"author":{"gitId":"jetlfj"},"content":"on the list of internship applications returned from the `Model#getFilteredInternshipList()` to get the target `Internship` ","lastModifiedDate":"2022-10-20"},{"lineNumber":220,"author":{"gitId":"jetlfj"},"content":"object to be updated. A new `Internship` object is then created with the new status. The ","lastModifiedDate":"2022-10-20"},{"lineNumber":221,"author":{"gitId":"jetlfj"},"content":"`InTrack#setInternship(Internship target, Internship editedInternship)` which is exposed in the `Model` interface as ","lastModifiedDate":"2022-10-20"},{"lineNumber":222,"author":{"gitId":"jetlfj"},"content":"`Model#setInternship(Internship target, Internship editedInternship)` is called to replace the target `Internship` object","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"jetlfj"},"content":"with the updated one.","lastModifiedDate":"2022-10-20"},{"lineNumber":224,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":225,"author":{"gitId":"jetlfj"},"content":"#### Parsing user input","lastModifiedDate":"2022-10-20"},{"lineNumber":226,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":227,"author":{"gitId":"jetlfj"},"content":"1. The user inputs the `status` command.","lastModifiedDate":"2022-10-20"},{"lineNumber":228,"author":{"gitId":"jetlfj"},"content":"2. The `InTrackParser` processes the input and creates a new `StatusCommandParser`.","lastModifiedDate":"2022-10-20"},{"lineNumber":229,"author":{"gitId":"jetlfj"},"content":"3. The `StatusCommandParser` then calls `ParserUtil#parseIndex(String oneBasedIndex)` to check for the validity of INDEX. ","lastModifiedDate":"2022-10-20"},{"lineNumber":230,"author":{"gitId":"jetlfj"},"content":"If `INDEX` is absent or invalid, a `ParseException` would be thrown.","lastModifiedDate":"2022-10-20"},{"lineNumber":231,"author":{"gitId":"jetlfj"},"content":"4. The `StatusCommandParser` then checks for the validity of STATUS. If `STATUS` is absent or invalid, a `ParseException` ","lastModifiedDate":"2022-10-20"},{"lineNumber":232,"author":{"gitId":"jetlfj"},"content":"would be thrown.","lastModifiedDate":"2022-10-20"},{"lineNumber":233,"author":{"gitId":"jetlfj"},"content":"5. The `StatusCommandParser` then creates the `StatusCommand` based on the processed input.","lastModifiedDate":"2022-10-20"},{"lineNumber":234,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":235,"author":{"gitId":"jetlfj"},"content":"#### Command execution","lastModifiedDate":"2022-10-20"},{"lineNumber":236,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":237,"author":{"gitId":"jetlfj"},"content":"1. The `LogicManager` executes the `StatusCommand`.","lastModifiedDate":"2022-10-20"},{"lineNumber":238,"author":{"gitId":"jetlfj"},"content":"2. The `StatusCommand` calls the `Model#getFilteredPersonList()` and `List#get(int index)` to get the target `Internship` ","lastModifiedDate":"2022-10-20"},{"lineNumber":239,"author":{"gitId":"jetlfj"},"content":"object to be updated based on the provided `INDEX`.","lastModifiedDate":"2022-10-20"},{"lineNumber":240,"author":{"gitId":"jetlfj"},"content":"3. The `StatusCommand` then creates a new `Internship` object with the same variables as the target one except with the ","lastModifiedDate":"2022-10-20"},{"lineNumber":241,"author":{"gitId":"jetlfj"},"content":"new status.","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"jetlfj"},"content":"4. The `StatusCommand` then calls `InTrack#setInternship(Internship target, Internship editedInternship)` to replace the ","lastModifiedDate":"2022-10-20"},{"lineNumber":243,"author":{"gitId":"jetlfj"},"content":"target `Internship` object with the updated one.","lastModifiedDate":"2022-10-20"},{"lineNumber":244,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":245,"author":{"gitId":"jetlfj"},"content":"#### Displaying of result","lastModifiedDate":"2022-10-20"},{"lineNumber":246,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":247,"author":{"gitId":"jetlfj"},"content":"1. Finally, the `StatusCommand` creates a `CommandResult` with a success message and returns it to the `LogicManager` ","lastModifiedDate":"2022-10-20"},{"lineNumber":248,"author":{"gitId":"jetlfj"},"content":"to complete the command execution. The GUI would also be updated with the change of status.","lastModifiedDate":"2022-10-20"},{"lineNumber":249,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":250,"author":{"gitId":"jetlfj"},"content":"The following sequence diagram shows how the `status` command works:","lastModifiedDate":"2022-10-20"},{"lineNumber":251,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":252,"author":{"gitId":"jetlfj"},"content":"![StatusSequenceDiagram](images/StatusSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":253,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":254,"author":{"gitId":"jetlfj"},"content":"The following activity diagram shows what happens when a user executes a `status` command:","lastModifiedDate":"2022-10-20"},{"lineNumber":255,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":256,"author":{"gitId":"jetlfj"},"content":"![StatusActivityDiagram](images/StatusActivityDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":257,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":258,"author":{"gitId":"jetlfj"},"content":"#### Design considerations","lastModifiedDate":"2022-10-20"},{"lineNumber":259,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":260,"author":{"gitId":"jetlfj"},"content":"**Aspect: Command to update status of an internship application**","lastModifiedDate":"2022-10-20"},{"lineNumber":261,"author":{"gitId":"jetlfj"},"content":"Most internship applications added by users would still be in progress, so a default \"Progress\" status is provided for ","lastModifiedDate":"2022-10-20"},{"lineNumber":262,"author":{"gitId":"jetlfj"},"content":"each new `Internship` instead of requiring the user to provide one initially, saving time. As such, there is no need for ","lastModifiedDate":"2022-10-20"},{"lineNumber":263,"author":{"gitId":"jetlfj"},"content":"a prefix for the `Status` field and the `edit` command will not work in this case. Having a separate `status` command ","lastModifiedDate":"2022-10-20"},{"lineNumber":264,"author":{"gitId":"jetlfj"},"content":"allows for the format to be kept short and simple which further increases the ease of updating the status of internship","lastModifiedDate":"2022-10-20"},{"lineNumber":265,"author":{"gitId":"jetlfj"},"content":"applications.","lastModifiedDate":"2022-10-20"},{"lineNumber":266,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":267,"author":{"gitId":"johnrhimawan"},"content":"### Add internship application task feature","lastModifiedDate":"2022-10-21"},{"lineNumber":268,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":269,"author":{"gitId":"johnrhimawan"},"content":"#### About this feature","lastModifiedDate":"2022-10-21"},{"lineNumber":270,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":271,"author":{"gitId":"johnrhimawan"},"content":"The add internship application task feature allows users to add a task associated to an internship application ","lastModifiedDate":"2022-10-21"},{"lineNumber":272,"author":{"gitId":"johnrhimawan"},"content":"in the tracker via the command `addtask INDEX TASKNAME /at TASKTIME`, where `INDEX` must be a positive integer within","lastModifiedDate":"2022-10-21"},{"lineNumber":273,"author":{"gitId":"johnrhimawan"},"content":"the list, `TASKNAME` must not be an empty string, and `TASKTIME` must be in the format `dd-MM-yyyy HH:mm`.","lastModifiedDate":"2022-10-21"},{"lineNumber":274,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":275,"author":{"gitId":"johnrhimawan"},"content":"#### How it is implemented","lastModifiedDate":"2022-10-21"},{"lineNumber":276,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":277,"author":{"gitId":"johnrhimawan"},"content":"The `addtask` command is facilitated by the `AddTaskCommand` and `AddTaskCommandParser`. It uses the ","lastModifiedDate":"2022-10-21"},{"lineNumber":278,"author":{"gitId":"johnrhimawan"},"content":"`List#get(int index)` on the list of internship applications returned from the `Model#getFilteredInternshipList()` to","lastModifiedDate":"2022-10-21"},{"lineNumber":279,"author":{"gitId":"johnrhimawan"},"content":"get the target `Internship` object to be updated. A new `Internship` object is then created with the new `Task` updated","lastModifiedDate":"2022-10-21"},{"lineNumber":280,"author":{"gitId":"johnrhimawan"},"content":"in the `List\u003cTask\u003e`. The `InTrack#setInternship(Internship target, Internship editedInternship)` which is exposed in the","lastModifiedDate":"2022-10-21"},{"lineNumber":281,"author":{"gitId":"johnrhimawan"},"content":"`Model` interface as `Model#setInternship(Internship target, Internship editedInternship)` is called to replace the","lastModifiedDate":"2022-10-21"},{"lineNumber":282,"author":{"gitId":"johnrhimawan"},"content":"target `Internship` object with the updated one.","lastModifiedDate":"2022-10-21"},{"lineNumber":283,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":284,"author":{"gitId":"johnrhimawan"},"content":"#### Parsing user input","lastModifiedDate":"2022-10-21"},{"lineNumber":285,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":286,"author":{"gitId":"johnrhimawan"},"content":"1. The user inputs the `addtask` command.","lastModifiedDate":"2022-10-21"},{"lineNumber":287,"author":{"gitId":"johnrhimawan"},"content":"2. The `InTrackParser` processes the input and creates a new `AddTaskCommandParser`.","lastModifiedDate":"2022-10-21"},{"lineNumber":288,"author":{"gitId":"johnrhimawan"},"content":"3. The `AddTaskCommandParser` then calls `ParserUtil#parseIndex(String oneBasedIndex)` to check for the validity of","lastModifiedDate":"2022-10-21"},{"lineNumber":289,"author":{"gitId":"johnrhimawan"},"content":"`INDEX`. If `INDEX` is absent or invalid, a `ParseException` would be thrown.","lastModifiedDate":"2022-10-21"},{"lineNumber":290,"author":{"gitId":"johnrhimawan"},"content":"4. The `AddTaskCommandParser` then checks for the validity of `TASKNAME` and `TASKTIME`. If either `TASKNAME` or","lastModifiedDate":"2022-10-21"},{"lineNumber":291,"author":{"gitId":"johnrhimawan"},"content":"`TASKTIME` is absent or invalid, a `ParseException` would be thrown.","lastModifiedDate":"2022-10-21"},{"lineNumber":292,"author":{"gitId":"johnrhimawan"},"content":"5. The `AddTaskCommandParser` then creates the `AddTaskCommand` based on the processed input.","lastModifiedDate":"2022-10-21"},{"lineNumber":293,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":294,"author":{"gitId":"johnrhimawan"},"content":"#### Command execution","lastModifiedDate":"2022-10-21"},{"lineNumber":295,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":296,"author":{"gitId":"johnrhimawan"},"content":"1. The `LogicManager` executes the `AddTaskCommand`.","lastModifiedDate":"2022-10-21"},{"lineNumber":297,"author":{"gitId":"johnrhimawan"},"content":"2. The `AddTaskCommand` calls the `Model#getFilteredPersonList()` and `List#get(int index)` to get the target `Internship`","lastModifiedDate":"2022-10-21"},{"lineNumber":298,"author":{"gitId":"johnrhimawan"},"content":"   object to be updated based on the provided `INDEX`.","lastModifiedDate":"2022-10-21"},{"lineNumber":299,"author":{"gitId":"johnrhimawan"},"content":"3. The `AddTaskCommand` then creates a new `Internship` object with the same variables as the target and adds the new","lastModifiedDate":"2022-10-21"},{"lineNumber":300,"author":{"gitId":"johnrhimawan"},"content":"task to the `List\u003cTask\u003e`.","lastModifiedDate":"2022-10-21"},{"lineNumber":301,"author":{"gitId":"johnrhimawan"},"content":"4. The `AddTaskCommand` then calls `InTrack#setInternship(Internship target, Internship editedInternship)` to replace the","lastModifiedDate":"2022-10-21"},{"lineNumber":302,"author":{"gitId":"johnrhimawan"},"content":"   target `Internship` object with the updated one.","lastModifiedDate":"2022-10-21"},{"lineNumber":303,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":304,"author":{"gitId":"johnrhimawan"},"content":"#### Displaying of result","lastModifiedDate":"2022-10-21"},{"lineNumber":305,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":306,"author":{"gitId":"johnrhimawan"},"content":"1. Finally, the `AddTaskCommand` creates a `CommandResult` with a success message and returns it to the `LogicManager`","lastModifiedDate":"2022-10-21"},{"lineNumber":307,"author":{"gitId":"johnrhimawan"},"content":"   to complete the command execution. The GUI would also be updated with the new task added.","lastModifiedDate":"2022-10-21"},{"lineNumber":308,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":309,"author":{"gitId":"johnrhimawan"},"content":"The following sequence diagram shows how the `addtask` command works:","lastModifiedDate":"2022-10-21"},{"lineNumber":310,"author":{"gitId":"johnrhimawan"},"content":"![AddTaskSequenceDiagram](images/AddTaskSequenceDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":311,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":312,"author":{"gitId":"johnrhimawan"},"content":"The following activity diagram shows what happens when a user executes a `addtask` command:","lastModifiedDate":"2022-10-21"},{"lineNumber":313,"author":{"gitId":"johnrhimawan"},"content":"![AddTaskActivityDiagram](images/AddTaskActivityDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":314,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":315,"author":{"gitId":"chantellyu"},"content":"### Find internship application by company name feature","lastModifiedDate":"2022-10-22"},{"lineNumber":316,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":317,"author":{"gitId":"chantellyu"},"content":"#### About this feature","lastModifiedDate":"2022-10-22"},{"lineNumber":318,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":319,"author":{"gitId":"chantellyu"},"content":"The find internship application by company name feature allows users to query the list of added internship applications ","lastModifiedDate":"2022-10-22"},{"lineNumber":320,"author":{"gitId":"chantellyu"},"content":"for applications that match the desired company name via the command `findn COMPANYNAME`, where `COMPANYNAME` must not ","lastModifiedDate":"2022-10-22"},{"lineNumber":321,"author":{"gitId":"chantellyu"},"content":"be an empty string.","lastModifiedDate":"2022-10-22"},{"lineNumber":322,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":323,"author":{"gitId":"chantellyu"},"content":"#### How it is implemented","lastModifiedDate":"2022-10-22"},{"lineNumber":324,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":325,"author":{"gitId":"chantellyu"},"content":"The `findn` command is facilitated by the `FindNameCommand`, `FindNameCommandParser` and the `NameContainsKeywordsPredicate`. ","lastModifiedDate":"2022-10-22"},{"lineNumber":326,"author":{"gitId":"chantellyu"},"content":"It uses `Model#updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate)` to apply the `NameContainsKeywordsPredicate` ","lastModifiedDate":"2022-10-22"},{"lineNumber":327,"author":{"gitId":"chantellyu"},"content":"in order to produce a filtered list containing only entries whose names correspond to `COMPANYNAME`.","lastModifiedDate":"2022-10-22"},{"lineNumber":328,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":329,"author":{"gitId":"chantellyu"},"content":"#### Parsing user input","lastModifiedDate":"2022-10-22"},{"lineNumber":330,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":331,"author":{"gitId":"chantellyu"},"content":"1. The user inputs the `findn` command.","lastModifiedDate":"2022-10-22"},{"lineNumber":332,"author":{"gitId":"chantellyu"},"content":"2. The `InTrackParser` processes the input and creates a new `FindNameCommandParser`.","lastModifiedDate":"2022-10-22"},{"lineNumber":333,"author":{"gitId":"chantellyu"},"content":"3. The `FindNameCommandParser` then trims the input to remove whitespace. If the input is an empty string, a `ParseException` ","lastModifiedDate":"2022-10-22"},{"lineNumber":334,"author":{"gitId":"chantellyu"},"content":"would be thrown.","lastModifiedDate":"2022-10-22"},{"lineNumber":335,"author":{"gitId":"chantellyu"},"content":"4. The `FindNameCommandParser` then creates the new `FindNameCommand` based on the processed input.","lastModifiedDate":"2022-10-22"},{"lineNumber":336,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":337,"author":{"gitId":"chantellyu"},"content":"#### Command execution","lastModifiedDate":"2022-10-22"},{"lineNumber":338,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":339,"author":{"gitId":"chantellyu"},"content":"1. The `LogicManager` executes the `FindNameCommand`.","lastModifiedDate":"2022-10-22"},{"lineNumber":340,"author":{"gitId":"chantellyu"},"content":"2. The `FindNameCommand` calls the `Model#updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate)` to update the ","lastModifiedDate":"2022-10-22"},{"lineNumber":341,"author":{"gitId":"chantellyu"},"content":"current internship list to only show internship applications matching the provided `COMPANYNAME`.","lastModifiedDate":"2022-10-22"},{"lineNumber":342,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":343,"author":{"gitId":"chantellyu"},"content":"#### Displaying of result","lastModifiedDate":"2022-10-22"},{"lineNumber":344,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":345,"author":{"gitId":"chantellyu"},"content":"1. Finally, the `FindNameCommand` creates a `CommandResult` containing the number of matching internship applications ","lastModifiedDate":"2022-10-22"},{"lineNumber":346,"author":{"gitId":"chantellyu"},"content":"and returns it to the `LogicManager` to complete the command execution. The GUI would also be updated with the change in ","lastModifiedDate":"2022-10-22"},{"lineNumber":347,"author":{"gitId":"chantellyu"},"content":"list.","lastModifiedDate":"2022-10-22"},{"lineNumber":348,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":349,"author":{"gitId":"chantellyu"},"content":"The following sequence diagram shows how the `findn` command works:","lastModifiedDate":"2022-10-22"},{"lineNumber":350,"author":{"gitId":"chantellyu"},"content":"![FindNameSequenceDiagram](images/FindNameSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":351,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":352,"author":{"gitId":"chantellyu"},"content":"The following activity diagram shows what happens when a user executes a `findn` command:","lastModifiedDate":"2022-10-22"},{"lineNumber":353,"author":{"gitId":"chantellyu"},"content":"![FindNameActivityDiagram](images/FindNameActivityDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":354,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":355,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"jetlfj"},"content":"Step 2. The user executes `delete 5` command to delete the 5th internship in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-10-05"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"jetlfj"},"content":"Step 3. The user executes `add n/David …​` to add a new internship. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-10-05"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"jetlfj"},"content":"Step 4. The user now decides that adding the internship was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-10-05"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"jetlfj"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the internship being deleted).","lastModifiedDate":"2022-10-05"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":441,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":442,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":443,"author":{"gitId":"kangqiao322"},"content":"### \\[Implemented\\] Add internship remark feature","lastModifiedDate":"2022-10-19"},{"lineNumber":444,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":445,"author":{"gitId":"kangqiao322"},"content":"#### About Add internship remark feature","lastModifiedDate":"2022-10-19"},{"lineNumber":446,"author":{"gitId":"kangqiao322"},"content":"The add internship remark feature allows users to add a remark to his/her internship information via the command","lastModifiedDate":"2022-10-19"},{"lineNumber":447,"author":{"gitId":"kangqiao322"},"content":"`remark` `INDEX` `r/`.","lastModifiedDate":"2022-10-19"},{"lineNumber":448,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":449,"author":{"gitId":"kangqiao322"},"content":"###How it is implemented","lastModifiedDate":"2022-10-19"},{"lineNumber":450,"author":{"gitId":"kangqiao322"},"content":"The implemented `remark` command is facilitated by `RemarkCommand` and `RemarkCommandParser`. It enables users to add a Remark to their internship information.","lastModifiedDate":"2022-10-19"},{"lineNumber":451,"author":{"gitId":"kangqiao322"},"content":"It uses the `get(int INDEX)` on the list of internships received from `getFilteredInternshipList()` which is exposed to the `Model` interface as `Model#getFilteredInternshipList()` to","lastModifiedDate":"2022-10-19"},{"lineNumber":452,"author":{"gitId":"kangqiao322"},"content":"get an Internship Object. A new Internship object is then created with the new remark. Then the`InTrack#setInternship(Internship target, Internship editedInternship)` which is exposed in the Model interface as","lastModifiedDate":"2022-10-19"},{"lineNumber":453,"author":{"gitId":"kangqiao322"},"content":"`Model#setInternship(Internship target, Internship editedInternship)`, is used to replace the old Internship panel with the new one.","lastModifiedDate":"2022-10-19"},{"lineNumber":454,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":455,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":456,"author":{"gitId":"kangqiao322"},"content":"Given below is how the remark mechanism behaves at each step.","lastModifiedDate":"2022-10-19"},{"lineNumber":457,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":458,"author":{"gitId":"kangqiao322"},"content":"####Parsing","lastModifiedDate":"2022-10-19"},{"lineNumber":459,"author":{"gitId":"kangqiao322"},"content":"Step 1. The user inputs the `remark` command  and provide the `INDEX` of the internship the user wants to add the remark to, the `r/` prefix and finally the `REMARK_CONTENT`","lastModifiedDate":"2022-10-19"},{"lineNumber":460,"author":{"gitId":"kangqiao322"},"content":"that he/she wants to add.","lastModifiedDate":"2022-10-19"},{"lineNumber":461,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":462,"author":{"gitId":"kangqiao322"},"content":"Step 2. The \u0027InTrackParser\u0027 then parses the user input and checks if the command word and arguments are correct before creating a new","lastModifiedDate":"2022-10-19"},{"lineNumber":463,"author":{"gitId":"kangqiao322"},"content":"`RemarkCommandParser`.","lastModifiedDate":"2022-10-19"},{"lineNumber":464,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":465,"author":{"gitId":"kangqiao322"},"content":"Step 3. The `RemarkCommandParser` then parses the user input and checks if the input variables are correct by checking for the presence of","lastModifiedDate":"2022-10-19"},{"lineNumber":466,"author":{"gitId":"kangqiao322"},"content":"the prefixes. It also checks whether the command is in the correct format. The correct format of the input is `r/REMARK_CONTENT`.","lastModifiedDate":"2022-10-19"},{"lineNumber":467,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":468,"author":{"gitId":"kangqiao322"},"content":"A `ParseException` will be thrown if the format is incorrect.","lastModifiedDate":"2022-10-19"},{"lineNumber":469,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":470,"author":{"gitId":"kangqiao322"},"content":"Step 4. If the format is correct, `RemarkCommandParser` will create a `RemarkCommand` based on the given inputs.","lastModifiedDate":"2022-10-19"},{"lineNumber":471,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":472,"author":{"gitId":"kangqiao322"},"content":"####Command execution","lastModifiedDate":"2022-10-19"},{"lineNumber":473,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":474,"author":{"gitId":"kangqiao322"},"content":"Step 5. The `LogicManager` executes the `RemarkCommand`.","lastModifiedDate":"2022-10-19"},{"lineNumber":475,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":476,"author":{"gitId":"kangqiao322"},"content":"Step 6. The `RemarkCommand` obtains a list of `Internship`s via the `getFilteredInternshipList()` method","lastModifiedDate":"2022-10-19"},{"lineNumber":477,"author":{"gitId":"kangqiao322"},"content":"which is exposed to the `Model` interface as `Model#getFilteredInternshipList()`","lastModifiedDate":"2022-10-19"},{"lineNumber":478,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":479,"author":{"gitId":"kangqiao322"},"content":"Step 7. The `RemarkCommand` obtains the `Internship` object that the user wants to add the remark to via the","lastModifiedDate":"2022-10-19"},{"lineNumber":480,"author":{"gitId":"kangqiao322"},"content":"`get(int INDEX)` method from list of `Internship`s.","lastModifiedDate":"2022-10-19"},{"lineNumber":481,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":482,"author":{"gitId":"kangqiao322"},"content":"Step 8. The `RemarkCommand` then creates a new `Internship` object with the same variables as the old `Internship` except for the","lastModifiedDate":"2022-10-19"},{"lineNumber":483,"author":{"gitId":"kangqiao322"},"content":"`REMARK_CONTENT` that the user has input.","lastModifiedDate":"2022-10-19"},{"lineNumber":484,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":485,"author":{"gitId":"kangqiao322"},"content":"Step 9. `RemarkCommand` then call the `Model#setInternship(internshipToEdit, editedInternship)` to replace the old `Internship` with the new `Internship` with the new `Remark`","lastModifiedDate":"2022-10-19"},{"lineNumber":486,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":487,"author":{"gitId":"kangqiao322"},"content":"####Display","lastModifiedDate":"2022-10-19"},{"lineNumber":488,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":489,"author":{"gitId":"kangqiao322"},"content":"Step 10. Finally, the `RemarkCommand` creates a `CommandResult` with a succsess message and returns it to the `LogicManager` to complete the command execution. The","lastModifiedDate":"2022-10-19"},{"lineNumber":490,"author":{"gitId":"kangqiao322"},"content":"GUI would also be updated on this change in the internship list and update the display of the `Internship` respectively.","lastModifiedDate":"2022-10-19"},{"lineNumber":491,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":492,"author":{"gitId":"kangqiao322"},"content":"The following sequence diagram shows how the `remark` command works:","lastModifiedDate":"2022-10-19"},{"lineNumber":493,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":494,"author":{"gitId":"kangqiao322"},"content":"![RemarkSequenceDiagram](images/RemarkSequenceDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":495,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":496,"author":{"gitId":"kangqiao322"},"content":"The following activity diagram summarises what happens when a user executes the `remark` command:","lastModifiedDate":"2022-10-20"},{"lineNumber":497,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":498,"author":{"gitId":"kangqiao322"},"content":"![RemarkActivityDiagram](images/RemarkActivityDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":499,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":500,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":501,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":504,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":507,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":508,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":509,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":510,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"kangqiao322"},"content":"* has a need to manage a significant number of internship applications","lastModifiedDate":"2022-09-29"},{"lineNumber":521,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":524,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"kangqiao322"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-29"},{"lineNumber":527,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":528,"author":{"gitId":"kangqiao322"},"content":"* Manage internship applications faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-29"},{"lineNumber":529,"author":{"gitId":"kangqiao322"},"content":"* Manage multiple internships and provide comparisons between them for better decision-making","lastModifiedDate":"2022-09-29"},{"lineNumber":530,"author":{"gitId":"kangqiao322"},"content":"* Easily customizable and personalizable to manage internships applications","lastModifiedDate":"2022-09-29"},{"lineNumber":531,"author":{"gitId":"kangqiao322"},"content":"* Frequent reminders for deadlines","lastModifiedDate":"2022-09-29"},{"lineNumber":532,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                                          | So that I can…​                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"kangqiao322"},"content":"|----------|--------------------------------------------|-----------------------------------------------------------------------|--------------------------------------------------------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":541,"author":{"gitId":"kangqiao322"},"content":"| `* * *`  | new user                                   | see usage instructions                                                | learn how to use the App                                           |","lastModifiedDate":"2022-09-29"},{"lineNumber":542,"author":{"gitId":"kangqiao322"},"content":"| `* * *`  | user                                       | view a list of current internship applications                        | -                                                                  |","lastModifiedDate":"2022-09-29"},{"lineNumber":543,"author":{"gitId":"kangqiao322"},"content":"| `* * *`  | user                                       | add a new internship application                                      | -                                                                  |","lastModifiedDate":"2022-09-29"},{"lineNumber":544,"author":{"gitId":"kangqiao322"},"content":"| `* * *`  | user                                       | delete an internship application                                      | remove entries that I no longer need                               |","lastModifiedDate":"2022-09-29"},{"lineNumber":545,"author":{"gitId":"kangqiao322"},"content":"| `* *`    | user                                       | mark internship applications as completed                             | clearly see my progress                                            |","lastModifiedDate":"2022-09-29"},{"lineNumber":546,"author":{"gitId":"kangqiao322"},"content":"| `*`      | user                                       | unmark completed internship applications                              | clearly see my progress                                            |","lastModifiedDate":"2022-09-29"},{"lineNumber":547,"author":{"gitId":"kangqiao322"},"content":"| `* * *`  | forgetful user                             | obtain the information of the company                                 | contact them if I have any queries                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":548,"author":{"gitId":"kangqiao322"},"content":"| `*`      | potential user                             | see the app populated with sample data                                | see what the app is like while it is in use                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":549,"author":{"gitId":"kangqiao322"},"content":"| `* *`    | new user                                   | purge all current data                                                | get rid of experimental data I used for exploring the app          |","lastModifiedDate":"2022-09-29"},{"lineNumber":550,"author":{"gitId":"kangqiao322"},"content":"| `* * *`  | organized user                             | color code tags for different interviews and statuses                 | sort and prioritize my interview data                              |","lastModifiedDate":"2022-09-29"},{"lineNumber":551,"author":{"gitId":"kangqiao322"},"content":"| `* *`    | user applying to many internships          | sort application deadlines by time and priority                       | take note of upcoming deadlines                                    |","lastModifiedDate":"2022-09-29"},{"lineNumber":552,"author":{"gitId":"kangqiao322"},"content":"| `* *`    | user applying to many internships          | record down the dates of the interviews                               | avoid interview clashes                                            |","lastModifiedDate":"2022-09-29"},{"lineNumber":553,"author":{"gitId":"kangqiao322"},"content":"| `* *`    | user who just started his interviews       | record my mistakes made during interviews                             | reflect on t hem                                                   |","lastModifiedDate":"2022-09-29"},{"lineNumber":554,"author":{"gitId":"kangqiao322"},"content":"| `* * *`  | user applying to many internships          | search for a specific company via keywords                            | easily find the information I am looking for                       |","lastModifiedDate":"2022-09-29"},{"lineNumber":555,"author":{"gitId":"kangqiao322"},"content":"| `* *`    | user applying to many internships          | receive reminders about upcoming interviews and deadlines             | not miss any important dates                                       |","lastModifiedDate":"2022-09-29"},{"lineNumber":556,"author":{"gitId":"kangqiao322"},"content":"| `* * *`  | user applying to many internships          | make my own tags                                                      | sort my applications better                                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":557,"author":{"gitId":"kangqiao322"},"content":"| `* *`    | user applying to technical internships     | view different stages of my interview such as HR and technical stages | see what phase of the interviews I am at                           |","lastModifiedDate":"2022-09-29"},{"lineNumber":558,"author":{"gitId":"kangqiao322"},"content":"| `* * *`  | user applying to internships progressively | edit individual application information at any time                   | make sure the information stays relevant                           |","lastModifiedDate":"2022-09-29"},{"lineNumber":559,"author":{"gitId":"kangqiao322"},"content":"| `* *`    | user applying to technical internships     | filter through my internships by job role                             | to keep track of the roles I have applied for                      |","lastModifiedDate":"2022-09-29"},{"lineNumber":560,"author":{"gitId":"kangqiao322"},"content":"| `*`      | user applying to many internships          | sort the salaries of each company                                     | compare the options I have                                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":561,"author":{"gitId":"kangqiao322"},"content":"| `*`      | user applying to many internships          | archive the interviews I have been rejected from                      | avoid cluttering the app with data and also refer to them later on |","lastModifiedDate":"2022-09-29"},{"lineNumber":562,"author":{"gitId":"kangqiao322"},"content":"| `* *`    | user applying to many internships          | prioritize the companies I am keen on                                 | compare the options I have                                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":563,"author":{"gitId":"kangqiao322"},"content":"| `* * *`  | frequent user                              | the commands to be simple and memorable                               | access my information quickly and easily                           |","lastModifiedDate":"2022-09-29"},{"lineNumber":564,"author":{"gitId":"kangqiao322"},"content":"| `*`      | frequent user                              | search for applications through case sensitive searching              | find and sort my internships more easily                           |","lastModifiedDate":"2022-09-29"},{"lineNumber":565,"author":{"gitId":"kangqiao322"},"content":"| `* *`    | user                                       | view internship periods of different companies                        | more informed about my applications                                |","lastModifiedDate":"2022-09-29"},{"lineNumber":566,"author":{"gitId":"kangqiao322"},"content":"| `*`      | frequent user                              | have a customizable GUI                                               | have more visible information on my applications                   |","lastModifiedDate":"2022-09-29"},{"lineNumber":567,"author":{"gitId":"kangqiao322"},"content":"| `* *`    | frequent user                              | compare internship statistics such as internship lengths              | make a more informed choice                                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":568,"author":{"gitId":"kangqiao322"},"content":"| `*`      | frequent user                              | send feedback to the developers of the application                    | make them optimize the app more                                    |","lastModifiedDate":"2022-09-29"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"jetlfj"},"content":"(For all use cases below, the **System** is the `InTrack` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-29"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"jetlfj"},"content":"**Use case: UC01 - View usage instructions**","lastModifiedDate":"2022-09-29"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"jetlfj"},"content":"1. User requests to view usage instructions.","lastModifiedDate":"2022-09-29"},{"lineNumber":581,"author":{"gitId":"jetlfj"},"content":"2. InTrack displays the usage instructions.","lastModifiedDate":"2022-09-29"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":585,"author":{"gitId":"jetlfj"},"content":"**Use case: UC02 - View all current internship applications**","lastModifiedDate":"2022-09-29"},{"lineNumber":586,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":587,"author":{"gitId":"jetlfj"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":588,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":589,"author":{"gitId":"jetlfj"},"content":"1. User requests to list internship applications.","lastModifiedDate":"2022-09-29"},{"lineNumber":590,"author":{"gitId":"jetlfj"},"content":"2. InTrack displays a list of internship applications.","lastModifiedDate":"2022-09-29"},{"lineNumber":591,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":592,"author":{"gitId":"jetlfj"},"content":"   Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":593,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":594,"author":{"gitId":"jetlfj"},"content":"**Use case: UC03 - Add a new internship application**","lastModifiedDate":"2022-09-29"},{"lineNumber":595,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":596,"author":{"gitId":"jetlfj"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":597,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":598,"author":{"gitId":"jetlfj"},"content":"1. User requests to add a new internship application to the list.","lastModifiedDate":"2022-09-29"},{"lineNumber":599,"author":{"gitId":"jetlfj"},"content":"2. InTrack adds the new internship application.","lastModifiedDate":"2022-09-29"},{"lineNumber":600,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":601,"author":{"gitId":"jetlfj"},"content":"   Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":602,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":603,"author":{"gitId":"jetlfj"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":604,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":605,"author":{"gitId":"jetlfj"},"content":"* 1a. The given command has an invalid format.","lastModifiedDate":"2022-09-29"},{"lineNumber":606,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":607,"author":{"gitId":"jetlfj"},"content":"    * 1a1. InTrack shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":608,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":609,"author":{"gitId":"jetlfj"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":610,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":611,"author":{"gitId":"jetlfj"},"content":"**Use case: UC04 - Delete an internship application**","lastModifiedDate":"2022-09-29"},{"lineNumber":612,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":613,"author":{"gitId":"jetlfj"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":614,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":615,"author":{"gitId":"jetlfj"},"content":"1. User \u003cu\u003eviews list of current internship applications (UC02)\u003c/u\u003e.","lastModifiedDate":"2022-09-29"},{"lineNumber":616,"author":{"gitId":"jetlfj"},"content":"2. User requests to delete a specific internship application in the list.","lastModifiedDate":"2022-09-29"},{"lineNumber":617,"author":{"gitId":"jetlfj"},"content":"3. InTrack deletes the internship application.","lastModifiedDate":"2022-09-29"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"jetlfj"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":624,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":625,"author":{"gitId":"jetlfj"},"content":"    * 3a1. InTrack shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":626,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":627,"author":{"gitId":"jetlfj"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":629,"author":{"gitId":"jetlfj"},"content":"**Use case: UC05 - Mark an internship application as completed**","lastModifiedDate":"2022-09-29"},{"lineNumber":630,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":631,"author":{"gitId":"jetlfj"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":632,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":633,"author":{"gitId":"jetlfj"},"content":"1. User \u003cu\u003eviews list of current internship applications (UC02)\u003c/u\u003e.","lastModifiedDate":"2022-09-29"},{"lineNumber":634,"author":{"gitId":"jetlfj"},"content":"2. User requests to mark a specific internship application in the list as completed.","lastModifiedDate":"2022-09-29"},{"lineNumber":635,"author":{"gitId":"jetlfj"},"content":"3. InTrack marks the internship application as completed.","lastModifiedDate":"2022-09-29"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"jetlfj"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":641,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"jetlfj"},"content":"    * 3a1. InTrack shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"johnrhimawan"},"content":"2. Should be able to hold up to 1000 internship applications without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-29"},{"lineNumber":653,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"johnrhimawan"},"content":"4. Data should be stored consistently upon closing and reopening the app","lastModifiedDate":"2022-09-29"},{"lineNumber":655,"author":{"gitId":"johnrhimawan"},"content":"5. System should be usable by a Computing student who has never applied to an internship before","lastModifiedDate":"2022-09-29"},{"lineNumber":656,"author":{"gitId":"johnrhimawan"},"content":"6. System should be easily usable by the majority of Year 2+ Computing students","lastModifiedDate":"2022-09-29"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":659,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":662,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"johnrhimawan"},"content":"| Term        | Explanation |","lastModifiedDate":"2022-09-29"},{"lineNumber":665,"author":{"gitId":"johnrhimawan"},"content":"| ----------- | ----------- |","lastModifiedDate":"2022-09-29"},{"lineNumber":666,"author":{"gitId":"johnrhimawan"},"content":"| Mainstream OS | Windows, Linux, Unix, OS-X |","lastModifiedDate":"2022-09-29"},{"lineNumber":667,"author":{"gitId":"johnrhimawan"},"content":"| Graphical User Interface (GUI) | An interface for the user to interact with the system via graphical icons and audio |","lastModifiedDate":"2022-09-29"},{"lineNumber":668,"author":{"gitId":"johnrhimawan"},"content":"| Command Line Interface (CLI) | An interface for the user to input commands to interact with the system |","lastModifiedDate":"2022-09-29"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"jetlfj"},"content":"### Deleting an internship","lastModifiedDate":"2022-10-05"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"jetlfj"},"content":"1. Deleting an internship while all internships are being shown","lastModifiedDate":"2022-10-05"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"jetlfj"},"content":"   1. Prerequisites: List all internships using the `list` command. Multiple internships in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"jetlfj"},"content":"      Expected: No internship is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-10-05"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jetlfj":124,"bigcrushes":51,"johnrhimawan":59,"chantellyu":39,"kangqiao322":99,"-":349}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"InTrack is a **desktop app for managing your internship applications, optimized for use via a Command Line Interface**","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"(CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InTrack can get your","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"bigcrushes"},"content":"1. Download the latest `InTrack.jar` from [here](https://github.com/AY2223S1-CS2103T-T11-2/tp).","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"bigcrushes"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for InTrack.","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"bigcrushes"},"content":"   * **`list`** : Lists all internships.","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"bigcrushes"},"content":"   * **`add`**`p/Software Engineer Intern c/Google e/email@gmail.com a/1600 Amphitheatre Parkway t/Urgent` : Adds a `Software Engineer Intern` internship application to `Google` with respective email, location and tag to InTrack.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"bigcrushes"},"content":"   * **`mark`** `1` : Marks the 1st internship shown in the current list as completed","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"bigcrushes"},"content":"   * **`delete`**`1` : Deletes the 1st internship shown in the current list.","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"bigcrushes"},"content":"  e.g. in `add p/POSITION`, `POSITION` is a parameter which can be used as `add p/Software Engineer Intern`.","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"bigcrushes"},"content":"  e.g `a/ADDRESS [t/TAG]` can be used as `a/1600 Amphitheatre Parkway t/virtual` or as `a/1600 Amphitheatre Parkway`.","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"bigcrushes"},"content":"* Items with `…` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"bigcrushes"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/urgent`, `t/urgent t/virtual` etc.","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":56,"author":{"gitId":"bigcrushes"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help` and `list`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"bigcrushes"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"bigcrushes"},"content":"### Adding an internship application: `add`","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"bigcrushes"},"content":"Adds a new internship application to the tracker.","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"bigcrushes"},"content":"Format: `add p/POSITION c/COMPANY e/EMAIL a/ADDRESS [t/TAG]…`","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"bigcrushes"},"content":"An internship can have any number of tags (including 0)","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"bigcrushes"},"content":"* `add p/Software Engineer Intern c/Google e/email@gmail.com a/1600 Amphitheatre Parkway t/Urgent`","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"bigcrushes"},"content":"* `add p/Data Analyst c/TikTok e/tiktok@bytedance.com a/1 Raffles Quay`","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"bigcrushes"},"content":"### Listing all internship applications : `list`","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"bigcrushes"},"content":"Shows a list of all internship applications in the tracker.","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"bigcrushes"},"content":"### Deleting an internship application : `delete`","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"bigcrushes"},"content":"Deletes the specified internship application from the tracker.","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"bigcrushes"},"content":"* Deletes the internship application at the specified INDEX.","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"bigcrushes"},"content":"* The index refers to the index number shown in the displayed internship list.","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"bigcrushes"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"bigcrushes"},"content":"* `list` followed by `delete 1` deletes the 1st internship application in InTrack.","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"bigcrushes"},"content":"### Marking completion status of an internship application : `mark`","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"bigcrushes"},"content":"Marks the specified internship application as completed.","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"bigcrushes"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"bigcrushes"},"content":"* Marks the internship application at the specified INDEX.","lastModifiedDate":"2022-09-29"},{"lineNumber":110,"author":{"gitId":"bigcrushes"},"content":"* The index refers to the index number shown in the displayed internship list.","lastModifiedDate":"2022-09-29"},{"lineNumber":111,"author":{"gitId":"bigcrushes"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"bigcrushes"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"bigcrushes"},"content":"* `list` followed by `mark 1` marks the 1st internship application in InTrack as completed.","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"bigcrushes"},"content":"InTrack data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"bigcrushes"},"content":"- Work in progress","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"jetlfj"},"content":"| Action     | Format, Examples                                                                                                                                                  |","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"jetlfj"},"content":"|------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"jetlfj"},"content":"| **Help**   | `help`                                                                                                                                                            |","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"jetlfj"},"content":"| **Add**    | `add p/POSITION c/COMPANY e/EMAIL a/ADDRESS [t/TAG]…` \u003cbr\u003e e.g., `add p/Software Engineer Intern c/Google e/email@gmail.com a/1600 Amphitheatre Parkway t/Urgent` |","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"jetlfj"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 1`                                                                                                                               |","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"jetlfj"},"content":"| **Mark**   | `mark INDEX`\u003cbr\u003e e.g., `mark 1`                                                                                                                                   |","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"jetlfj"},"content":"| **List**   | `list`                                                                                                                                                            |","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"jetlfj":10,"bigcrushes":37,"-":90}},{"path":"docs/diagrams/AddActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bigcrushes"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"bigcrushes"},"content":"start","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"bigcrushes"},"content":":User executes add command;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"bigcrushes"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"bigcrushes"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"bigcrushes"},"content":"if () then ([command is in an invalid format])","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"bigcrushes"},"content":"    :Show invalid command","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"bigcrushes"},"content":"    error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"bigcrushes"},"content":"else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"bigcrushes"},"content":"    if () then ([name is invalid])","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"bigcrushes"},"content":"    :Show invalid name","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"bigcrushes"},"content":"    error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"bigcrushes"},"content":"    else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"bigcrushes"},"content":"        if () then ([position is invalid])","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"bigcrushes"},"content":"            :Show invalid position","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"bigcrushes"},"content":"            error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"bigcrushes"},"content":"        else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"bigcrushes"},"content":"            if () then ([phone number is invalid])","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"bigcrushes"},"content":"                :Show invalid phone number","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"bigcrushes"},"content":"                error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"bigcrushes"},"content":"            else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"bigcrushes"},"content":"                if () then ([email is invalid])","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"bigcrushes"},"content":"                    :Show invalid email","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"bigcrushes"},"content":"                    error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"bigcrushes"},"content":"                else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"bigcrushes"},"content":"                    if () then ([address is invalid])","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"bigcrushes"},"content":"                        :Show invalid address","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"bigcrushes"},"content":"                        error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"bigcrushes"},"content":"                        else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"bigcrushes"},"content":"                        :Add new internship to list of","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"bigcrushes"},"content":"                        internship applications;","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"bigcrushes"},"content":"                    endif","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"bigcrushes"},"content":"                endif","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"bigcrushes"},"content":"            endif","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"bigcrushes"},"content":"        endif","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"bigcrushes"},"content":"    endif","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"bigcrushes"},"content":"endif","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"bigcrushes"},"content":"stop","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"bigcrushes"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"bigcrushes":47}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bigcrushes"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"bigcrushes"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"bigcrushes"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"bigcrushes"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"bigcrushes"},"content":"participant \":InTrackParser\" as InTrackParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"bigcrushes"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"bigcrushes"},"content":"participant \":Internship\" as Internship LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"bigcrushes"},"content":"participant \":AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"bigcrushes"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"bigcrushes"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"bigcrushes"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"bigcrushes"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"bigcrushes"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"bigcrushes"},"content":"[-\u003e LogicManager : execute(\"add n/Google p/SWE hp/65025300002 \\ne/support@google.com a/16 Park Way t/Urgent\")","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"bigcrushes"},"content":"activate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"bigcrushes"},"content":"LogicManager -\u003e InTrackParser : parseCommand(\"add n/Google p/SWE hp/65025300002 \\ne/support@google.com a/16 Park Way t/Urgent\")","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"bigcrushes"},"content":"activate InTrackParser","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"bigcrushes"},"content":"create AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"bigcrushes"},"content":"InTrackParser -\u003e AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"bigcrushes"},"content":"activate AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"bigcrushes"},"content":"AddCommandParser --\u003e InTrackParser","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"bigcrushes"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"bigcrushes"},"content":"InTrackParser -\u003e AddCommandParser : parse(\"add n/Google p/SWE hp/65025300002 \\ne/support@google.com a/16 Park Way t/Urgent\")","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"bigcrushes"},"content":"activate AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"bigcrushes"},"content":"create Internship","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"bigcrushes"},"content":"AddCommandParser -\u003e Internship","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"bigcrushes"},"content":"activate Internship","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"bigcrushes"},"content":"Internship -\u003e AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"bigcrushes"},"content":"deactivate Internship","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"bigcrushes"},"content":"create AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"bigcrushes"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"bigcrushes"},"content":"activate AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"bigcrushes"},"content":"AddCommand --\u003e AddCommandParser : d","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"bigcrushes"},"content":"deactivate AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"bigcrushes"},"content":"AddCommandParser --\u003e InTrackParser : d","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"bigcrushes"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"bigcrushes"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"bigcrushes"},"content":"AddCommandParser -[hidden]-\u003e InTrackParser","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"bigcrushes"},"content":"destroy AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"bigcrushes"},"content":"InTrackParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"bigcrushes"},"content":"deactivate InTrackParser","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"bigcrushes"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"bigcrushes"},"content":"activate AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"bigcrushes"},"content":"AddCommand -\u003e Model : addInternship(internship)","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"bigcrushes"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"bigcrushes"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"bigcrushes"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"bigcrushes"},"content":"create CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"bigcrushes"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"bigcrushes"},"content":"activate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"bigcrushes"},"content":"CommandResult --\u003e AddCommand : result","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"bigcrushes"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"bigcrushes"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"bigcrushes"},"content":"deactivate AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"bigcrushes"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"bigcrushes"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"bigcrushes"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"bigcrushes":77}},{"path":"docs/diagrams/AddTaskActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"johnrhimawan"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"johnrhimawan"},"content":"start","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"johnrhimawan"},"content":":User executes addtask command;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"johnrhimawan"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"johnrhimawan"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"johnrhimawan"},"content":"if () then ([command is in an invalid format])","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"johnrhimawan"},"content":"    :Show invalid command","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"johnrhimawan"},"content":"    error message;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"johnrhimawan"},"content":"else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"johnrhimawan"},"content":"    if () then ([index is invalid])","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"johnrhimawan"},"content":"    :Show invalid index","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"johnrhimawan"},"content":"    error message;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"johnrhimawan"},"content":"    else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"johnrhimawan"},"content":"        if () then ([taskname or tasktime is invalid])","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"johnrhimawan"},"content":"        :Show invalid addtask","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"johnrhimawan"},"content":"        error message;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"johnrhimawan"},"content":"        else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"johnrhimawan"},"content":"        :Update the list of tasks of the","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"johnrhimawan"},"content":"        internship application;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"johnrhimawan"},"content":"        endif","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"johnrhimawan"},"content":"    endif","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"johnrhimawan"},"content":"endif","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"johnrhimawan"},"content":"stop","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"johnrhimawan"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"johnrhimawan":29}},{"path":"docs/diagrams/AddTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"johnrhimawan"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"johnrhimawan"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"johnrhimawan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"johnrhimawan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"johnrhimawan"},"content":"participant \":InTrackParser\" as InTrackParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"johnrhimawan"},"content":"participant \":AddTaskCommandParser\" as AddTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"johnrhimawan"},"content":"participant \"d:AddTaskCommand\" as AddTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"johnrhimawan"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"johnrhimawan"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"johnrhimawan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"johnrhimawan"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"johnrhimawan"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"johnrhimawan"},"content":"[-\u003e LogicManager : execute(\"addtask 1 Technical Interview /at 25-10-2022 12:00\")","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"johnrhimawan"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"johnrhimawan"},"content":"LogicManager -\u003e InTrackParser : parseCommand(\"addtask 1 Technical Interview /at 25-10-2022 12:00\")","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"johnrhimawan"},"content":"activate InTrackParser","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"johnrhimawan"},"content":"create AddTaskCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"johnrhimawan"},"content":"InTrackParser -\u003e AddTaskCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"johnrhimawan"},"content":"activate AddTaskCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"johnrhimawan"},"content":"AddTaskCommandParser --\u003e InTrackParser","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"johnrhimawan"},"content":"deactivate AddTaskCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"johnrhimawan"},"content":"InTrackParser -\u003e AddTaskCommandParser : parse(\"1 Technical Interview /at 25-10-2022 12:00\")","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"johnrhimawan"},"content":"activate AddTaskCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"johnrhimawan"},"content":"create AddTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"johnrhimawan"},"content":"AddTaskCommandParser -\u003e AddTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"johnrhimawan"},"content":"activate AddTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"johnrhimawan"},"content":"AddTaskCommand --\u003e AddTaskCommandParser : d","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"johnrhimawan"},"content":"deactivate AddTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"johnrhimawan"},"content":"AddTaskCommandParser --\u003e InTrackParser : d","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"johnrhimawan"},"content":"deactivate AddTaskCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"johnrhimawan"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"johnrhimawan"},"content":"AddTaskCommandParser -[hidden]-\u003e InTrackParser","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"johnrhimawan"},"content":"destroy AddTaskCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"johnrhimawan"},"content":"InTrackParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"johnrhimawan"},"content":"deactivate InTrackParser","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"johnrhimawan"},"content":"LogicManager -\u003e AddTaskCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"johnrhimawan"},"content":"activate AddTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"johnrhimawan"},"content":"AddTaskCommand -\u003e Model : getFilteredInternshipList()","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"johnrhimawan"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"johnrhimawan"},"content":"Model --\u003e AddTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"johnrhimawan"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"johnrhimawan"},"content":"AddTaskCommand -\u003e Model : setInternship(target, editedInternship)","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"johnrhimawan"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"johnrhimawan"},"content":"Model --\u003e AddTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"johnrhimawan"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"johnrhimawan"},"content":"create CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"johnrhimawan"},"content":"AddTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"johnrhimawan"},"content":"activate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"johnrhimawan"},"content":"CommandResult --\u003e AddTaskCommand : result","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"johnrhimawan"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"johnrhimawan"},"content":"AddTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"johnrhimawan"},"content":"deactivate AddTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"johnrhimawan"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"johnrhimawan"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"johnrhimawan"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"johnrhimawan":75}},{"path":"docs/diagrams/FindNameActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"start","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":":User executes findn command;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"if () then ([command is in an invalid format])","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"    :Show invalid command","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"    error message;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"    :Show number of matching","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"    internships and filtered","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"    internship application list;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"endif","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"stop","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"chantellyu":18}},{"path":"docs/diagrams/FindNameSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"participant \":InTrackParser\" as InTrackParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"participant \":FindNameCommandParser\" as FindNameCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"participant \"d:FindNameCommand\" as FindNameCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"[-\u003e LogicManager : execute(\"findn google\")","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"LogicManager -\u003e InTrackParser : parseCommand(\"findn google\")","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"activate InTrackParser","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"create FindNameCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"InTrackParser -\u003e FindNameCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"activate FindNameCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"FindNameCommandParser --\u003e InTrackParser","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"deactivate FindNameCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"InTrackParser -\u003e FindNameCommandParser : parse(\"google\")","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"activate FindNameCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"create FindNameCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"FindNameCommandParser -\u003e FindNameCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"chantellyu"},"content":"activate FindNameCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"chantellyu"},"content":"FindNameCommand --\u003e FindNameCommandParser : d","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"deactivate FindNameCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"FindNameCommandParser --\u003e InTrackParser : d","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"deactivate FindNameCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"chantellyu"},"content":"FindNameCommandParser -[hidden]-\u003e InTrackParser","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"chantellyu"},"content":"destroy FindNameCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"InTrackParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"chantellyu"},"content":"deactivate InTrackParser","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"chantellyu"},"content":"LogicManager -\u003e FindNameCommand : execute()","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"chantellyu"},"content":"activate FindNameCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"chantellyu"},"content":"FindNameCommand -\u003e Model : updateFilteredInternshipList(predicate)","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"chantellyu"},"content":"activate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"chantellyu"},"content":"Model --\u003e FindNameCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"chantellyu"},"content":"deactivate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"chantellyu"},"content":"create CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"chantellyu"},"content":"FindNameCommand -\u003e CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"chantellyu"},"content":"activate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"chantellyu"},"content":"CommandResult --\u003e FindNameCommand : result","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"chantellyu"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"chantellyu"},"content":"FindNameCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"chantellyu"},"content":"deactivate FindNameCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"chantellyu"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"chantellyu"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"chantellyu"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"chantellyu":69}},{"path":"docs/diagrams/RemarkActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kangqiao322"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"kangqiao322"},"content":"start","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"kangqiao322"},"content":":User executes remark command;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"kangqiao322"},"content":"if () then ([command is in invalid format])","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"kangqiao322"},"content":"    :Show invalid command format as error message;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"kangqiao322"},"content":"else ([else])","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"kangqiao322"},"content":"    if () then ([command contains wrong index])","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"kangqiao322"},"content":"    :Show incorrect index error message;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"kangqiao322"},"content":"    else([else])","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"kangqiao322"},"content":"    :Displays the remark in the internship panel;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"kangqiao322"},"content":"    endif","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"kangqiao322"},"content":"endif","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"kangqiao322"},"content":"stop","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"kangqiao322"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"kangqiao322":17}},{"path":"docs/diagrams/RemarkSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kangqiao322"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"kangqiao322"},"content":"!include style.puml","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"kangqiao322"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"kangqiao322"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"kangqiao322"},"content":"participant \":InTrackParser\" as InTrackParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"kangqiao322"},"content":"participant \":RemarkCommandParser\" as RemarkCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"kangqiao322"},"content":"participant \"d:RemarkCommand\" as RemarkCommand LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"kangqiao322"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"kangqiao322"},"content":"end box","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"kangqiao322"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"kangqiao322"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"kangqiao322"},"content":"end box","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"kangqiao322"},"content":"[-\u003e LogicManager : execute(\"remark 1 r/example\")","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"kangqiao322"},"content":"activate LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"kangqiao322"},"content":"LogicManager -\u003e InTrackParser : parseCommand(\"remark 1 r/example\")","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"kangqiao322"},"content":"activate InTrackParser","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"kangqiao322"},"content":"create RemarkCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"kangqiao322"},"content":"InTrackParser -\u003e RemarkCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"kangqiao322"},"content":"activate RemarkCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"kangqiao322"},"content":"RemarkCommandParser --\u003e InTrackParser","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"kangqiao322"},"content":"deactivate RemarkCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"kangqiao322"},"content":"InTrackParser -\u003e RemarkCommandParser : parse(\"1 r/example\")","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"kangqiao322"},"content":"activate RemarkCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"kangqiao322"},"content":"create RemarkCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"kangqiao322"},"content":"RemarkCommandParser -\u003e RemarkCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"kangqiao322"},"content":"activate RemarkCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"kangqiao322"},"content":"RemarkCommand --\u003e RemarkCommandParser : d","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"kangqiao322"},"content":"deactivate","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"kangqiao322"},"content":"RemarkCommandParser --\u003e InTrackParser : d","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"kangqiao322"},"content":"deactivate","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"kangqiao322"},"content":"InTrackParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"kangqiao322"},"content":"deactivate","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"kangqiao322"},"content":"destroy RemarkCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"kangqiao322"},"content":"LogicManager -\u003e RemarkCommand : execute()","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"kangqiao322"},"content":"activate RemarkCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"kangqiao322"},"content":"RemarkCommand -\u003e Model : getFilteredInternshipList()","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"kangqiao322"},"content":"activate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"kangqiao322"},"content":"Model --\u003e RemarkCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"kangqiao322"},"content":"deactivate","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"kangqiao322"},"content":"RemarkCommand -\u003e Model : setInternship(internToEdit, editedIntern);","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"kangqiao322"},"content":"activate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"kangqiao322"},"content":"Model --\u003e RemarkCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"kangqiao322"},"content":"deactivate","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"kangqiao322"},"content":"create CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"kangqiao322"},"content":"RemarkCommand -\u003eCommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"kangqiao322"},"content":"activate CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"kangqiao322"},"content":"CommandResult --\u003e RemarkCommand : result","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"kangqiao322"},"content":"deactivate","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"kangqiao322"},"content":"RemarkCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"kangqiao322"},"content":"deactivate","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"kangqiao322"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"kangqiao322"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"kangqiao322"},"content":"@enduml","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"kangqiao322"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"kangqiao322":75}},{"path":"docs/diagrams/StatusActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jetlfj"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jetlfj"},"content":"start","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jetlfj"},"content":":User executes status command;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"if () then ([command is in an invalid format])","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"    :Show invalid command","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"    error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":"    if () then ([index is invalid])","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":"    :Show invalid index","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"    error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"    else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jetlfj"},"content":"        if () then ([status is invalid])","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":"        :Show invalid status","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":"        error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"        else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"        :Update the status of the","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"        internship application;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"        endif","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"    endif","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"endif","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"stop","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jetlfj":29}},{"path":"docs/diagrams/StatusSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jetlfj"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jetlfj"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"participant \":InTrackParser\" as InTrackParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"participant \":StatusCommandParser\" as StatusCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"participant \"d:StatusCommand\" as StatusCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":"[-\u003e LogicManager : execute(\"status 1 o\")","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"activate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":"LogicManager -\u003e InTrackParser : parseCommand(\"status 1 o\")","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":"activate InTrackParser","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"create StatusCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"InTrackParser -\u003e StatusCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"activate StatusCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"StatusCommandParser --\u003e InTrackParser","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"deactivate StatusCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"InTrackParser -\u003e StatusCommandParser : parse(\"1 o\")","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"activate StatusCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"create StatusCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"StatusCommandParser -\u003e StatusCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"activate StatusCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"StatusCommand --\u003e StatusCommandParser : d","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"deactivate StatusCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"StatusCommandParser --\u003e InTrackParser : d","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"deactivate StatusCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"StatusCommandParser -[hidden]-\u003e InTrackParser","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"destroy StatusCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"InTrackParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"deactivate InTrackParser","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jetlfj"},"content":"LogicManager -\u003e StatusCommand : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"activate StatusCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"StatusCommand -\u003e Model : getFilteredInternshipList()","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jetlfj"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jetlfj"},"content":"Model --\u003e StatusCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"StatusCommand -\u003e Model : setInternship(target, editedInternship)","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"Model --\u003e StatusCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"create CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"StatusCommand -\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"activate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"jetlfj"},"content":"CommandResult --\u003e StatusCommand : result","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"StatusCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jetlfj"},"content":"deactivate StatusCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jetlfj"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"jetlfj"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"jetlfj"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jetlfj":75}},{"path":"docs/team/bigcrushes.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bigcrushes"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"bigcrushes"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"bigcrushes"},"content":"title: Charlton\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"bigcrushes"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"bigcrushes"},"content":"### Project: InTrack","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"bigcrushes"},"content":"InTrack is a desktop application helps Computer Science students who are applying for multiple internships to keep","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"bigcrushes"},"content":"track of their progress and deadlines across these applications. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"bigcrushes"},"content":"GUI created with JavaFX.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"bigcrushes"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"bigcrushes"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dbigcrushes\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"bigcrushes"},"content":"* **Enhancements implemented**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"bigcrushes"},"content":"* **Contributions to the UG:**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"bigcrushes"},"content":"* **Contributions to the DG**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"bigcrushes"},"content":"* **Contributions to team-based tasks**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"bigcrushes"},"content":"* **Review/mentoring contributions:**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"bigcrushes"},"content":"* **Contributions beyond the project team**: *to be added soon*","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"bigcrushes":19}},{"path":"docs/team/chantellyu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"title: Chantell\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"### Project: InTrack","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"InTrack is a desktop application helps Computer Science students who are applying for multiple internships to keep","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"track of their progress and deadlines across these applications. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"GUI created with JavaFX.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dchantellyu\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"* **Enhancements implemented**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"* **Contributions to the UG:**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"* **Contributions to the DG**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"* **Contributions to team-based tasks**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"* **Review/mentoring contributions:**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"* **Contributions beyond the project team**: *to be added soon*","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"chantellyu":19}},{"path":"docs/team/jetlfj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jetlfj"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"jetlfj"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jetlfj"},"content":"title: Jet\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"### Project: InTrack","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"InTrack is a desktop application helps Computer Science students who are applying for multiple internships to keep","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"track of their progress and deadlines across these applications. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"GUI created with JavaFX.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djetlfj\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":"* **Enhancements implemented**: *to be added soon*","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"* **Contributions to the UG:**: *to be added soon*","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":"* **Contributions to the DG**: *to be added soon*","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"* **Contributions to team-based tasks**: *to be added soon*","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"jetlfj"},"content":"* **Review/mentoring contributions:**: *to be added soon*","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":"* **Contributions beyond the project team**: *to be added soon*","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jetlfj":19}},{"path":"docs/team/johnrhimawan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"johnrhimawan"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"johnrhimawan"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"johnrhimawan"},"content":"title: John\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"johnrhimawan"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"johnrhimawan"},"content":"### Project: InTrack","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"johnrhimawan"},"content":"InTrack is a desktop application helps Computer Science students who are applying for multiple internships to keep","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"johnrhimawan"},"content":"track of their progress and deadlines across these applications. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"johnrhimawan"},"content":"GUI created with JavaFX.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"johnrhimawan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"johnrhimawan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djohnrhimawan\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"johnrhimawan"},"content":"* **Enhancements implemented**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"johnrhimawan"},"content":"* **Contributions to the UG:**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"johnrhimawan"},"content":"* **Contributions to the DG**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"johnrhimawan"},"content":"* **Contributions to team-based tasks**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"johnrhimawan"},"content":"* **Review/mentoring contributions:**: *to be added soon*","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"johnrhimawan"},"content":"* **Contributions beyond the project team**: *to be added soon*","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"johnrhimawan":21}},{"path":"docs/team/kangqiao322.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kangqiao322"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"kangqiao322"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"kangqiao322"},"content":"title: Kang Qiao\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kangqiao322"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kangqiao322"},"content":"### Project: Intrack","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kangqiao322"},"content":"InTrack helps Computer Science students who are applying for multiple internships to keep track of their progress and deadlines across these applications.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kangqiao322"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kangqiao322"},"content":"* ***TO BE ADDED SOON***","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kangqiao322"},"content":"* **New Feature**: [To be added soon].","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"kangqiao322"},"content":"    * What it does: [To be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kangqiao322"},"content":"    * Justification: [To be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kangqiao322"},"content":"    * Highlights: [To be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kangqiao322"},"content":"    * Credits: [To be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kangqiao322"},"content":"* **New Feature**: [StatusCommand]","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kangqiao322"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dkangqiao322\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"kangqiao322"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"kangqiao322"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"kangqiao322"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"kangqiao322"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"kangqiao322"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"kangqiao322"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"kangqiao322"},"content":"    * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"kangqiao322"},"content":"        * [To be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"kangqiao322"},"content":"        * [To be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"kangqiao322"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"kangqiao322"},"content":"        * [To be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"kangqiao322"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"kangqiao322"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"kangqiao322"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"kangqiao322"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"kangqiao322"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"kangqiao322":43}},{"path":"src/main/java/seedu/intrack/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.util.FileUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"chantellyu":3,"-":61}},{"path":"src/main/java/seedu/intrack/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"chantellyu":1,"-":24}},{"path":"src/main/java/seedu/intrack/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.Config;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.Version;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.util.StringUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.Logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.LogicManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.storage.InTrackStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.storage.JsonInTrackStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.storage.Storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.storage.StorageManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.ui.Ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.ui.UiManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 0, true);","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"chantellyu"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing InTrack ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"chantellyu"},"content":"        InTrackStorage inTrackStorage \u003d new JsonInTrackStorage(userPrefs.getInTrackFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"chantellyu"},"content":"        storage \u003d new StorageManager(inTrackStorage, userPrefsStorage);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"chantellyu"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s tracker and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"chantellyu"},"content":"     * The data from the sample internship tracker will be used instead if {@code storage}\u0027s tracker is not found,","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"chantellyu"},"content":"     * or an empty tracker will be used instead if errors occur when reading {@code storage}\u0027s internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"chantellyu"},"content":"        Optional\u003cReadOnlyInTrack\u003e inTrackOptional;","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"chantellyu"},"content":"        ReadOnlyInTrack initialData;","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"chantellyu"},"content":"            inTrackOptional \u003d storage.readInTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"chantellyu"},"content":"            if (!inTrackOptional.isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"chantellyu"},"content":"                logger.info(\"Data file not found. Will be starting with a sample InTrack\");","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"chantellyu"},"content":"            initialData \u003d inTrackOptional.orElseGet(SampleDataUtil::getSampleInTrack);","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"chantellyu"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty InTrack\");","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"chantellyu"},"content":"            initialData \u003d new InTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"chantellyu"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty InTrack\");","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"chantellyu"},"content":"            initialData \u003d new InTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"chantellyu"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty InTrack\");","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"chantellyu"},"content":"        logger.info(\"Starting InTrack \" + MainApp.VERSION);","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"chantellyu"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping InTrack ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jetlfj":1,"chantellyu":43,"-":139}},{"path":"src/main/java/seedu/intrack/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":1,"-":62}},{"path":"src/main/java/seedu/intrack/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":1,"-":78}},{"path":"src/main/java/seedu/intrack/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"    private static final String LOG_FILE \u003d \"intrack.log\";","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":2,"-":110}},{"path":"src/main/java/seedu/intrack/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX \u003d \"The internship index provided is invalid\";","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_INTERNSHIPS_LISTED_OVERVIEW \u003d \"%1$d internships listed!\";","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"bigcrushes"},"content":"    public static final String MESSAGE_INTERNSHIPS_STATS_OVERVIEW \u003d \"Offered: %1$d (%2$.2f%%)\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"bigcrushes"},"content":"            + \"In Progress: %3$d (%4$.2f%%)\\nRejected: %5$d (%6$.2f%%)\";","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jetlfj":2,"bigcrushes":2,"chantellyu":1,"-":10}},{"path":"src/main/java/seedu/intrack/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":1,"-":115}},{"path":"src/main/java/seedu/intrack/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.core.index;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"chantellyu":1,"-":53}},{"path":"src/main/java/seedu/intrack/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":1,"-":10}},{"path":"src/main/java/seedu/intrack/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chantellyu":1,"-":20}},{"path":"src/main/java/seedu/intrack/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chantellyu":2,"-":40}},{"path":"src/main/java/seedu/intrack/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chantellyu":1,"-":34}},{"path":"src/main/java/seedu/intrack/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.Config;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chantellyu":3,"-":20}},{"path":"src/main/java/seedu/intrack/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":1,"-":82}},{"path":"src/main/java/seedu/intrack/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":3,"-":140}},{"path":"src/main/java/seedu/intrack/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":2,"-":66}},{"path":"src/main/java/seedu/intrack/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"     * Returns the InTrack.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"     * @see seedu.intrack.model.Model#getInTrack()","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"    ReadOnlyInTrack getInTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"    /** Returns an unmodifiable view of the filtered list of internships */","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"    ObservableList\u003cInternship\u003e getFilteredInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"     * Returns the user prefs\u0027 internship tracker file path.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"    Path getInTrackFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jetlfj":2,"chantellyu":12,"-":36}},{"path":"src/main/java/seedu/intrack/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.InTrackParser;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.storage.Storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"    private final InTrackParser inTrackParser;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"        inTrackParser \u003d new InTrackParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"        Command command \u003d inTrackParser.parseCommand(commandText);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"chantellyu"},"content":"            storage.saveInTrack(model.getInTrack());","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"chantellyu"},"content":"    public ReadOnlyInTrack getInTrack() {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"chantellyu"},"content":"        return model.getInTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"    public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"        return model.getFilteredInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"chantellyu"},"content":"    public Path getInTrackFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"chantellyu"},"content":"        return model.getInTrackFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jetlfj":2,"chantellyu":20,"-":59}},{"path":"src/main/java/seedu/intrack/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":" * Adds an internship to the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an internship to the tracker.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"bigcrushes"},"content":"            + PREFIX_POSITION + \"POSITION \"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"            + PREFIX_NAME + \"Google \"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"            + PREFIX_POSITION + \"SWE \"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"            + PREFIX_PHONE + \"65025300002 \"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"            + PREFIX_EMAIL + \"support@google.com \"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":"            + PREFIX_ADDRESS + \"1600 Amphitheatre Parkway \"","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"            + PREFIX_TAG + \"Urgent\";","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New internship added: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"This internship already exists in the tracker\";","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"    private final Internship toAdd;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"     * Creates an AddCommand to add the specified {@code Internship}","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"    public AddCommand(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"jetlfj"},"content":"        requireNonNull(internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"        toAdd \u003d internship;","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"        if (model.hasInternship(toAdd)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"        model.addInternship(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jetlfj":19,"bigcrushes":1,"chantellyu":11,"-":40}},{"path":"src/main/java/seedu/intrack/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johnrhimawan"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"johnrhimawan"},"content":"import static seedu.intrack.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"johnrhimawan"},"content":"import static seedu.intrack.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"johnrhimawan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"johnrhimawan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.model.internship.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"johnrhimawan"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"johnrhimawan"},"content":" * Updates the current task of an Internship.","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"johnrhimawan"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"johnrhimawan"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"johnrhimawan"},"content":"    public static final String COMMAND_WORD \u003d \"addtask\";","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"johnrhimawan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the task of the internship identified by \"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"johnrhimawan"},"content":"            + \"the index number used in the displayed list.\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"johnrhimawan"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"            + \" DESCRIPTION /at TIME\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 Technical Interview /at 04-11-2022 17:00\";","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"johnrhimawan"},"content":"    public static final String TASK_COMMAND_CONSTRAINTS \u003d \"TASK must be in the format: \\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"johnrhimawan"},"content":"            + COMMAND_WORD + \" INDEX DESCRIPTION /at TIME\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"            + \"TIME must be in the format dd-MM-yyyy HH:mm\";","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"johnrhimawan"},"content":"    public static final String MESSAGE_UPDATE_TASK_SUCCESS \u003d \"Updated task of internship: %1$s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"johnrhimawan"},"content":"    private final Index index;","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"johnrhimawan"},"content":"    private final Task task;","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"johnrhimawan"},"content":"     * @param index of the internship in the internship list to update the task of","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"johnrhimawan"},"content":"     * @param task of the internship application","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"johnrhimawan"},"content":"    public AddTaskCommand(Index index, Task task) {","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"johnrhimawan"},"content":"        requireAllNonNull(index, task);","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"johnrhimawan"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"johnrhimawan"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"johnrhimawan"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"johnrhimawan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"johnrhimawan"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"johnrhimawan"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"johnrhimawan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"johnrhimawan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"johnrhimawan"},"content":"        Internship internshipToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"johnrhimawan"},"content":"        List\u003cTask\u003e copyTasks \u003d internshipToEdit.getTasks();","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"johnrhimawan"},"content":"        List\u003cTask\u003e editedTasks \u003d new ArrayList\u003c\u003e(copyTasks);","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"johnrhimawan"},"content":"        editedTasks.add(task);","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"        Internship editedInternship \u003d new Internship(internshipToEdit.getName(), internshipToEdit.getPosition(),","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"                internshipToEdit.getStatus(), internshipToEdit.getPhone(), internshipToEdit.getEmail(),","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"                internshipToEdit.getAddress(), editedTasks, internshipToEdit.getTags(), internshipToEdit.getRemark());","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"johnrhimawan"},"content":"        model.setInternship(internshipToEdit, editedInternship);","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"johnrhimawan"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"johnrhimawan"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_TASK_SUCCESS, editedInternship));","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"johnrhimawan"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"johnrhimawan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"johnrhimawan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"johnrhimawan"},"content":"            return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"johnrhimawan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"johnrhimawan"},"content":"        if (!(other instanceof AddTaskCommand)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"johnrhimawan"},"content":"            return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"johnrhimawan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"johnrhimawan"},"content":"        AddTaskCommand e \u003d (AddTaskCommand) other;","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"johnrhimawan"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"johnrhimawan"},"content":"                \u0026\u0026 task.equals(e.task);","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"johnrhimawan"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"jetlfj":6,"johnrhimawan":83}},{"path":"src/main/java/seedu/intrack/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":" * Clears the internship tracker.","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Internship tracker has been cleared!\";","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"        model.setInTrack(new InTrack());","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jetlfj":2,"chantellyu":5,"-":16}},{"path":"src/main/java/seedu/intrack/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chantellyu":3,"-":17}},{"path":"src/main/java/seedu/intrack/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chantellyu":1,"-":70}},{"path":"src/main/java/seedu/intrack/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":" * Deletes an internship identified using its displayed index from the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"            + \": Deletes the internship identified by the index number used in the displayed list.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_DELETE_INTERNSHIP_SUCCESS \u003d \"Deleted internship: %1$s\";","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"        Internship internshipToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"        model.deleteInternship(internshipToDelete);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INTERNSHIP_SUCCESS, internshipToDelete));","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jetlfj":8,"chantellyu":7,"-":39}},{"path":"src/main/java/seedu/intrack/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.internship.Remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Status;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.model.internship.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":" * Edits the details of an existing internship in the tracker.","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the internship identified by \"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"            + \"the index number used in the displayed list. \"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"bigcrushes"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"            + PREFIX_EMAIL + \"newemail@example.com\";","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_EDIT_INTERNSHIP_SUCCESS \u003d \"Edited internship: %1$s\";","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"chantellyu"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"This internship already exists in the tracker.\";","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"    private final EditInternshipDescriptor editInternshipDescriptor;","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"     * @param index of the internship in the filtered internship list to edit","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"     * @param editInternshipDescriptor details to edit the internship with","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"    public EditCommand(Index index, EditInternshipDescriptor editInternshipDescriptor) {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"        requireNonNull(editInternshipDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"jetlfj"},"content":"        this.editInternshipDescriptor \u003d new EditInternshipDescriptor(editInternshipDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"jetlfj"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"jetlfj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"jetlfj"},"content":"        Internship internshipToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"jetlfj"},"content":"        Internship editedInternship \u003d createEditedInternship(internshipToEdit, editInternshipDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"jetlfj"},"content":"        if (!internshipToEdit.isSameInternship(editedInternship) \u0026\u0026 model.hasInternship(editedInternship)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"jetlfj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"jetlfj"},"content":"        model.setInternship(internshipToEdit, editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"jetlfj"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"jetlfj"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship));","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"jetlfj"},"content":"     * Creates and returns a {@code Internship} with the details of {@code internshipToEdit}","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"jetlfj"},"content":"     * edited with {@code editInternshipDescriptor}.","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"jetlfj"},"content":"    private static Internship createEditedInternship(Internship internshipToEdit,","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"jetlfj"},"content":"                                                     EditInternshipDescriptor editInternshipDescriptor) {","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"jetlfj"},"content":"        assert internshipToEdit !\u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"jetlfj"},"content":"        Name updatedName \u003d editInternshipDescriptor.getName().orElse(internshipToEdit.getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"bigcrushes"},"content":"        Position updatedPosition \u003d editInternshipDescriptor.getPosition().orElse(internshipToEdit.getPosition());","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"jetlfj"},"content":"        Status updatedStatus \u003d internshipToEdit.getStatus(); // edit command does not allow editing status","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"jetlfj"},"content":"        Phone updatedPhone \u003d editInternshipDescriptor.getPhone().orElse(internshipToEdit.getPhone());","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"jetlfj"},"content":"        Email updatedEmail \u003d editInternshipDescriptor.getEmail().orElse(internshipToEdit.getEmail());","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"jetlfj"},"content":"        Address updatedAddress \u003d editInternshipDescriptor.getAddress().orElse(internshipToEdit.getAddress());","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"johnrhimawan"},"content":"        List\u003cTask\u003e updatedTasks \u003d internshipToEdit.getTasks();","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"jetlfj"},"content":"        Set\u003cTag\u003e updatedTags \u003d editInternshipDescriptor.getTags().orElse(internshipToEdit.getTags());","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"jetlfj"},"content":"        Remark updatedRemark \u003d internshipToEdit.getRemark(); // edit command does not allow editing remarks","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"jetlfj"},"content":"        return new Internship(updatedName, updatedPosition, updatedStatus, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"jetlfj"},"content":"                updatedTasks, updatedTags, updatedRemark);","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"jetlfj"},"content":"                \u0026\u0026 editInternshipDescriptor.equals(e.editInternshipDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"jetlfj"},"content":"     * Stores the details to edit the internship with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"jetlfj"},"content":"     * corresponding field value of the internship.","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"jetlfj"},"content":"    public static class EditInternshipDescriptor {","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"bigcrushes"},"content":"        private Position position;","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"jetlfj"},"content":"        public EditInternshipDescriptor() {}","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"jetlfj"},"content":"        public EditInternshipDescriptor(EditInternshipDescriptor toCopy) {","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"bigcrushes"},"content":"            setPosition(toCopy.position);","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"jetlfj"},"content":"            return CollectionUtil.isAnyNonNull(name, position, phone, email, address, tags);","lastModifiedDate":"2022-10-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"bigcrushes"},"content":"        public void setPosition(Position position) {","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"bigcrushes"},"content":"            this.position \u003d position;","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"bigcrushes"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"bigcrushes"},"content":"        public Optional\u003cPosition\u003e getPosition() {","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"bigcrushes"},"content":"            return Optional.ofNullable(position);","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"bigcrushes"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"jetlfj"},"content":"            if (!(other instanceof EditInternshipDescriptor)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"jetlfj"},"content":"            EditInternshipDescriptor e \u003d (EditInternshipDescriptor) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"bigcrushes"},"content":"                    \u0026\u0026 getPosition().equals(e.getPosition())","lastModifiedDate":"2022-10-06"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jetlfj":46,"johnrhimawan":2,"bigcrushes":13,"chantellyu":22,"kangqiao322":1,"-":168}},{"path":"src/main/java/seedu/intrack/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting InTrack as requested...\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chantellyu":3,"-":16}},{"path":"src/main/java/seedu/intrack/logic/commands/FindNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":" * Finds and lists all internships in the internship tracker whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"public class FindNameCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"    public static final String COMMAND_WORD \u003d \"findn\";","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all internships whose names contain any of \"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":"            + \"Example: \" + COMMAND_WORD + \" Google Meta\";","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"    public FindNameCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"        model.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"                String.format(Messages.MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, model.getFilteredInternshipList().size()));","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"                || (other instanceof FindNameCommand // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"                \u0026\u0026 predicate.equals(((FindNameCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jetlfj":6,"chantellyu":10,"-":27}},{"path":"src/main/java/seedu/intrack/logic/commands/FindPositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.PositionContainsKeywordsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":" * Finds and lists all internships in the internship tracker whose position contains any of the argument keywords.","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"public class FindPositionCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"    public static final String COMMAND_WORD \u003d \"findp\";","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all internships whose positions contain any of \"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"            + \"Example: \" + COMMAND_WORD + \"SWE\";","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"    private final PositionContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"    public FindPositionCommand(PositionContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"        model.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"                String.format(Messages.MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, model.getFilteredInternshipList().size()));","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"                || (other instanceof FindPositionCommand // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"                \u0026\u0026 predicate.equals(((FindPositionCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jetlfj":4,"chantellyu":13,"-":26}},{"path":"src/main/java/seedu/intrack/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jetlfj":1,"chantellyu":2,"-":19}},{"path":"src/main/java/seedu/intrack/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":" * Lists all internships in the internship tracker to the user.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all internships\";","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jetlfj":3,"chantellyu":4,"-":17}},{"path":"src/main/java/seedu/intrack/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kangqiao322"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"kangqiao322"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.internship.Remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"kangqiao322"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"kangqiao322"},"content":" * Changes the remark of an existing internship in the intrack book.","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"kangqiao322"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"kangqiao322"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"kangqiao322"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"kangqiao322"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the internship identified \"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"kangqiao322"},"content":"            + \"by the index number used in the last internship listing. \"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"kangqiao322"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"kangqiao322"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"kangqiao322"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"kangqiao322"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"kangqiao322"},"content":"            + PREFIX_REMARK + \"Passed with flying colors\";","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"kangqiao322"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to internship: %1$s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"kangqiao322"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from internship: %1$s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"kangqiao322"},"content":"    private final Index index;","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"kangqiao322"},"content":"    private final Remark remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"kangqiao322"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"kangqiao322"},"content":"     * @param index of the internship in the filtered internship list to edit the remark","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"kangqiao322"},"content":"     * @param remark of the internship to be updated to","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"kangqiao322"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"kangqiao322"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"kangqiao322"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"kangqiao322"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"kangqiao322"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"kangqiao322"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"kangqiao322"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"kangqiao322"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"kangqiao322"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"kangqiao322"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"kangqiao322"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"kangqiao322"},"content":"        Internship internshipToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"        Internship editedInternship \u003d new Internship(internshipToEdit.getName(), internshipToEdit.getPosition(),","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"                internshipToEdit.getStatus(), internshipToEdit.getPhone(), internshipToEdit.getEmail(),","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"johnrhimawan"},"content":"                internshipToEdit.getAddress(), internshipToEdit.getTasks(), internshipToEdit.getTags(), remark);","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"        model.setInternship(internshipToEdit, editedInternship);","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"kangqiao322"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"        return new CommandResult(generateSuccessMessage(editedInternship));","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"kangqiao322"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"kangqiao322"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"kangqiao322"},"content":"     * {@code internshipToEdit}.","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"kangqiao322"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"kangqiao322"},"content":"    private String generateSuccessMessage(Internship internshipToEdit) {","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"kangqiao322"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"kangqiao322"},"content":"        return String.format(message, internshipToEdit);","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"kangqiao322"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"kangqiao322"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"kangqiao322"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"kangqiao322"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"kangqiao322"},"content":"            return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"kangqiao322"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"kangqiao322"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"kangqiao322"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"kangqiao322"},"content":"            return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"kangqiao322"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"kangqiao322"},"content":"        // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"kangqiao322"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"kangqiao322"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"kangqiao322"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"kangqiao322"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"jetlfj":4,"johnrhimawan":1,"kangqiao322":87}},{"path":"src/main/java/seedu/intrack/logic/commands/StatsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bigcrushes"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"bigcrushes"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"bigcrushes"},"content":"import seedu.intrack.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"bigcrushes"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"bigcrushes"},"content":"import seedu.intrack.model.internship.StatusIsKeywordPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"bigcrushes"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"bigcrushes"},"content":" * Lists all internships in the internship tracker to the user.","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"bigcrushes"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"bigcrushes"},"content":"public class StatsCommand extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bigcrushes"},"content":"    public static final String COMMAND_WORD \u003d \"stats\";","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bigcrushes"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"bigcrushes"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"bigcrushes"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"bigcrushes"},"content":"        int offered \u003d model.getFilteredStatusInternshipListSize(new StatusIsKeywordPredicate(\"Offered\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"bigcrushes"},"content":"        int progress \u003d model.getFilteredStatusInternshipListSize(new StatusIsKeywordPredicate(\"Progress\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"bigcrushes"},"content":"        int rejected \u003d model.getFilteredStatusInternshipListSize(new StatusIsKeywordPredicate(\"Rejected\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"bigcrushes"},"content":"        int total \u003d offered + progress + rejected;","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"bigcrushes"},"content":"        if (total \u003d\u003d 0) {","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"bigcrushes"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"bigcrushes"},"content":"                    String.format(Messages.MESSAGE_INTERNSHIPS_STATS_OVERVIEW, offered, 0.00,","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"bigcrushes"},"content":"                            progress, 0.00, rejected, 0.00));","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"bigcrushes"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"bigcrushes"},"content":"        float offeredPercentage \u003d (float) offered / total * 100;","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"bigcrushes"},"content":"        float progressPercentage \u003d (float) progress / total * 100;","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"bigcrushes"},"content":"        float rejectedPercentage \u003d (float) rejected / total * 100;","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"bigcrushes"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"bigcrushes"},"content":"                String.format(Messages.MESSAGE_INTERNSHIPS_STATS_OVERVIEW, offered, offeredPercentage,","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"bigcrushes"},"content":"                        progress, progressPercentage, rejected, rejectedPercentage));","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"bigcrushes"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"bigcrushes":36}},{"path":"src/main/java/seedu/intrack/logic/commands/StatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"kangqiao322"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Status;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"kangqiao322"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"kangqiao322"},"content":" * Updates the status of an Internship with upper and lowercase \"p\", \"r\" and \"o\" after","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"kangqiao322"},"content":" * the s/ prefix.","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"kangqiao322"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"kangqiao322"},"content":"public class StatusCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"kangqiao322"},"content":"    public static final String COMMAND_WORD \u003d \"status\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the status of the internship identified by \"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"            + \"the index number used in the displayed list.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kangqiao322"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"            + \" STATUS\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 o\";","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"    public static final String STATUS_COMMAND_CONSTRAINTS \u003d \"STATUS must be either \\\"o\\\" to denote Offered, \"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"            + \"\\\"p\\\" to denote in Progress, \"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"            + \"or \\\"r\\\" to denote Rejected.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_UPDATE_STATUS_SUCCESS \u003d \"Updated status of internship: %1$s\";","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"kangqiao322"},"content":"    private final Index index;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"kangqiao322"},"content":"    private final Status status;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"kangqiao322"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"kangqiao322"},"content":"     * @param index of the internship in the internship list to update the status of","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"kangqiao322"},"content":"     * @param status of the internship application","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"kangqiao322"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"kangqiao322"},"content":"    public StatusCommand(Index index, Status status) {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"kangqiao322"},"content":"        requireAllNonNull(index, status);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"kangqiao322"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"kangqiao322"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"kangqiao322"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"kangqiao322"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"kangqiao322"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"kangqiao322"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"kangqiao322"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"kangqiao322"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"        Internship internshipToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"        Internship editedInternship \u003d new Internship(internshipToEdit.getName(), internshipToEdit.getPosition(),","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"                status, internshipToEdit.getPhone(), internshipToEdit.getEmail(), internshipToEdit.getAddress(),","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"johnrhimawan"},"content":"                internshipToEdit.getTasks(), internshipToEdit.getTags(), internshipToEdit.getRemark());","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"        model.setInternship(internshipToEdit, editedInternship);","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"kangqiao322"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_STATUS_SUCCESS, editedInternship));","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"kangqiao322"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"kangqiao322"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"kangqiao322"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"kangqiao322"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"kangqiao322"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"kangqiao322"},"content":"        if (!(other instanceof StatusCommand)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"kangqiao322"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"kangqiao322"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"kangqiao322"},"content":"        StatusCommand e \u003d (StatusCommand) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"kangqiao322"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"kangqiao322"},"content":"                \u0026\u0026 status.equals(e.status);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"kangqiao322"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jetlfj":18,"johnrhimawan":1,"chantellyu":9,"kangqiao322":57}},{"path":"src/main/java/seedu/intrack/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"chantellyu":1,"-":16}},{"path":"src/main/java/seedu/intrack/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"johnrhimawan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"johnrhimawan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.internship.Remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Status;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.model.internship.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"bigcrushes"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_POSITION, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_POSITION, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS)","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"bigcrushes"},"content":"        Position position \u003d ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"        Status status \u003d new Status(\"Progress\"); // add command will add an in-progress status by default","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"johnrhimawan"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"johnrhimawan"},"content":"        taskList.add(new Task());","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"        Internship internship \u003d new Internship(name, position, status, phone, email, address, taskList, tagList,","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"                remark);","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"        return new AddCommand(internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jetlfj":8,"johnrhimawan":5,"bigcrushes":2,"chantellyu":18,"kangqiao322":1,"-":40}},{"path":"src/main/java/seedu/intrack/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johnrhimawan"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"johnrhimawan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"johnrhimawan"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"johnrhimawan"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"johnrhimawan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.model.internship.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"johnrhimawan"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"johnrhimawan"},"content":" * Parses input arguments and creates a new {@code TaskCommand} object","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"johnrhimawan"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"johnrhimawan"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"johnrhimawan"},"content":"     * Regex pattern for the AddTaskCommand, this ensures that the parsed pattern would be in the form of","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"johnrhimawan"},"content":"     * {index} {description} /at {dateTime}","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"johnrhimawan"},"content":"    private static final Pattern TASK_COMMAND_FORMAT \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"johnrhimawan"},"content":"            Pattern.compile(\"(?\u003cindex\u003e\\\\d+)\\\\s+(?\u003cdescription\u003e.*)\\\\s+/at(?\u003cdateTime\u003e.*)\");","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"johnrhimawan"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TaskCommand}","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"johnrhimawan"},"content":"     * and returns a {@code TaskCommand} object for execution.","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"johnrhimawan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"johnrhimawan"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"johnrhimawan"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"johnrhimawan"},"content":"        final Matcher matcher \u003d TASK_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"johnrhimawan"},"content":"        Index index;","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"johnrhimawan"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"johnrhimawan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"johnrhimawan"},"content":"                    AddTaskCommand.TASK_COMMAND_CONSTRAINTS));","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"johnrhimawan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"johnrhimawan"},"content":"        String indexString \u003d matcher.group(\"index\").trim();","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"johnrhimawan"},"content":"        String descriptionString \u003d matcher.group(\"description\").trim();","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"johnrhimawan"},"content":"        String dateTimeString \u003d matcher.group(\"dateTime\").trim();","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"johnrhimawan"},"content":"        int commandLength \u003d args.split(\"\\\\s+\").length;","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"johnrhimawan"},"content":"        if (commandLength \u003c 3) {","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"johnrhimawan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"johnrhimawan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"johnrhimawan"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"johnrhimawan"},"content":"            index \u003d ParserUtil.parseIndex(indexString);","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"johnrhimawan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"johnrhimawan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"johnrhimawan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"johnrhimawan"},"content":"        return new AddTaskCommand(index, new Task(descriptionString, dateTimeString));","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"johnrhimawan"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"johnrhimawan":59}},{"path":"src/main/java/seedu/intrack/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"chantellyu":1,"-":59}},{"path":"src/main/java/seedu/intrack/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"chantellyu":1,"-":147}},{"path":"src/main/java/seedu/intrack/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"bigcrushes"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"bigcrushes"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"hp/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"kangqiao322"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bigcrushes":2,"chantellyu":1,"kangqiao322":1,"-":13}},{"path":"src/main/java/seedu/intrack/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"chantellyu":5,"-":23}},{"path":"src/main/java/seedu/intrack/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"bigcrushes"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_POSITION, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor editInternshipDescriptor \u003d new EditInternshipDescriptor();","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"            editInternshipDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"bigcrushes"},"content":"        if (argMultimap.getValue(PREFIX_POSITION).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"bigcrushes"},"content":"            editInternshipDescriptor.setPosition(ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get()));","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"            editInternshipDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"            editInternshipDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"            editInternshipDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editInternshipDescriptor::setTags);","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"        if (!editInternshipDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"jetlfj"},"content":"        return new EditCommand(index, editInternshipDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jetlfj":9,"bigcrushes":3,"chantellyu":13,"-":62}},{"path":"src/main/java/seedu/intrack/logic/parser/FindNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.FindNameCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":" * Parses input arguments and creates a new FindNameCommand object","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"public class FindNameCommandParser implements Parser\u003cFindNameCommand\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"     * Parses the given {@code String} of arguments in the context of the FindNameCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"     * and returns a FindNameCommand object for execution.","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"    public FindNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"        return new FindNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"chantellyu":12,"-":21}},{"path":"src/main/java/seedu/intrack/logic/parser/FindPositionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.FindPositionCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.PositionContainsKeywordsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":" * Parses input arguments and creates a new FindPositionCommand object","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"public class FindPositionCommandParser implements Parser\u003cFindPositionCommand\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPositionCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"     * and returns a FindPositionCommand object for execution.","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"    public FindPositionCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPositionCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"        String[] posKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"        return new FindPositionCommand(new PositionContainsKeywordsPredicate(Arrays.asList(posKeywords)));","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"chantellyu":33}},{"path":"src/main/java/seedu/intrack/logic/parser/InTrackParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.FindNameCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.FindPositionCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.logic.commands.RemarkCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"bigcrushes"},"content":"import seedu.intrack.logic.commands.StatsCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.StatusCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"public class InTrackParser {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"chantellyu"},"content":"        case FindNameCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"chantellyu"},"content":"            return new FindNameCommandParser().parse(arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"chantellyu"},"content":"        case FindPositionCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"chantellyu"},"content":"            return new FindPositionCommandParser().parse(arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"kangqiao322"},"content":"        case StatusCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"kangqiao322"},"content":"            return new StatusCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"jetlfj"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"jetlfj"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"johnrhimawan"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"johnrhimawan"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"bigcrushes"},"content":"        case StatsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"bigcrushes"},"content":"            return new StatsCommand();","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jetlfj":3,"johnrhimawan":4,"bigcrushes":4,"chantellyu":21,"kangqiao322":4,"-":60}},{"path":"src/main/java/seedu/intrack/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"chantellyu":3,"-":13}},{"path":"src/main/java/seedu/intrack/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.util.StringUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"bigcrushes"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"bigcrushes"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"bigcrushes"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"bigcrushes"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"bigcrushes"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"bigcrushes"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"bigcrushes"},"content":"    public static Position parsePosition(String position) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"bigcrushes"},"content":"        requireNonNull(position);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"bigcrushes"},"content":"        String trimmedPosition \u003d position.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"bigcrushes"},"content":"        if (!Position.isValidPosition(trimmedPosition)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"bigcrushes"},"content":"            throw new ParseException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"bigcrushes"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"bigcrushes"},"content":"        return new Position(trimmedPosition);","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bigcrushes":15,"chantellyu":10,"-":115}},{"path":"src/main/java/seedu/intrack/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"chantellyu":1,"-":38}},{"path":"src/main/java/seedu/intrack/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kangqiao322"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"kangqiao322"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.logic.commands.RemarkCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.internship.Remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"kangqiao322"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"kangqiao322"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"kangqiao322"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"kangqiao322"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"kangqiao322"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"kangqiao322"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"kangqiao322"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"kangqiao322"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"kangqiao322"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"kangqiao322"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"kangqiao322"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"kangqiao322"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"kangqiao322"},"content":"        Index index;","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"kangqiao322"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"kangqiao322"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"kangqiao322"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"kangqiao322"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"kangqiao322"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"kangqiao322"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"kangqiao322"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"kangqiao322"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"kangqiao322":37}},{"path":"src/main/java/seedu/intrack/logic/parser/StatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"kangqiao322"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.StatusCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Status;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"kangqiao322"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"kangqiao322"},"content":" * Parses input arguments and creates a new {@code StatusCommand} object","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"kangqiao322"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"kangqiao322"},"content":"public class StatusCommandParser implements Parser\u003cStatusCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"kangqiao322"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"kangqiao322"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code StatusCommand}","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"kangqiao322"},"content":"     * and returns a {@code StatusCommand} object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"kangqiao322"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"kangqiao322"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"kangqiao322"},"content":"    public StatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"kangqiao322"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"        String[] splitCommand \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"kangqiao322"},"content":"        Index index;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"        if (splitCommand.length !\u003d 3) {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kangqiao322"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"            index \u003d ParserUtil.parseIndex(splitCommand[1]);","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"kangqiao322"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"kangqiao322"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"kangqiao322"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"        switch (splitCommand[2].toUpperCase()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"        case \"O\":","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"            return new StatusCommand(index, new Status(\"Offered\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"        case \"P\":","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"            return new StatusCommand(index, new Status(\"Progress\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"        case \"R\":","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"            return new StatusCommand(index, new Status(\"Rejected\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"        default:","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"kangqiao322"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"kangqiao322"},"content":"                    StatusCommand.STATUS_COMMAND_CONSTRAINTS));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"kangqiao322"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"kangqiao322"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jetlfj":15,"chantellyu":7,"kangqiao322":28}},{"path":"src/main/java/seedu/intrack/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"chantellyu":2,"-":15}},{"path":"src/main/java/seedu/intrack/model/InTrack.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.UniqueInternshipList;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":" * Wraps all data at the internship-tracker level","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":" * Duplicates are not allowed (by .isSameInternship comparison)","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"public class InTrack implements ReadOnlyInTrack {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"    private final UniqueInternshipList internships;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"        internships \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"    public InTrack() {}","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"     * Creates an InTrack using the Internships in the {@code toBeCopied}","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"    public InTrack(ReadOnlyInTrack toBeCopied) {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"     * Replaces the contents of the internship list with {@code internships}.","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"     * {@code internships} must not contain duplicate internships.","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"        this.internships.setInternships(internships);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"chantellyu"},"content":"     * Resets the existing data of this {@code InTrack} with {@code newData}.","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"chantellyu"},"content":"    public void resetData(ReadOnlyInTrack newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"        setInternships(newData.getInternshipList());","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"    //// internship-level operations","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"chantellyu"},"content":"     * Returns true if an internship with the same identity as {@code internship} exists in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"        requireNonNull(internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"        return internships.contains(internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"chantellyu"},"content":"     * Adds an internship to the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"chantellyu"},"content":"     * The internship must not already exist in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"jetlfj"},"content":"    public void addInternship(Internship p) {","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"jetlfj"},"content":"        internships.add(p);","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"jetlfj"},"content":"     * Replaces the given internship {@code target} in the list with {@code editedInternship}.","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"chantellyu"},"content":"     * {@code target} must exist in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"jetlfj"},"content":"     * The internship identity of {@code editedInternship} must not be the same as another existing internship in the","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"chantellyu"},"content":"     * internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"jetlfj"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"jetlfj"},"content":"        requireNonNull(editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"jetlfj"},"content":"        internships.setInternship(target, editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"chantellyu"},"content":"     * Removes {@code key} from this {@code InTrack}.","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"chantellyu"},"content":"     * {@code key} must exist in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"jetlfj"},"content":"    public void removeInternship(Internship key) {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"jetlfj"},"content":"        internships.remove(key);","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"jetlfj"},"content":"        return internships.asUnmodifiableObservableList().size() + \" internships\";","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"jetlfj"},"content":"    public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"jetlfj"},"content":"        return internships.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"chantellyu"},"content":"                || (other instanceof InTrack // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"chantellyu"},"content":"                \u0026\u0026 internships.equals(((InTrack) other).internships));","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"jetlfj"},"content":"        return internships.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jetlfj":25,"chantellyu":19,"-":77}},{"path":"src/main/java/seedu/intrack/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"    Predicate\u003cInternship\u003e PREDICATE_SHOW_ALL_INTERNSHIPS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"     * Returns the user prefs\u0027 internship tracker file path.","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"    Path getInTrackFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"chantellyu"},"content":"     * Sets the user prefs\u0027 internship tracker file path.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"    void setInTrackFilePath(Path inTrackFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"chantellyu"},"content":"     * Replaces internship tracker data with the data in {@code inTrack}.","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"chantellyu"},"content":"    void setInTrack(ReadOnlyInTrack inTrack);","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"chantellyu"},"content":"    /** Returns the InTrack */","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"chantellyu"},"content":"    ReadOnlyInTrack getInTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"chantellyu"},"content":"     * Returns true if an internship with the same identity as {@code internship} exists in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"    boolean hasInternship(Internship internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"     * Deletes the given internship.","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"chantellyu"},"content":"     * The internship must exist in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"    void deleteInternship(Internship target);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"jetlfj"},"content":"     * Adds the given internship.","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"chantellyu"},"content":"     * {@code internship} must not already exist in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"    void addInternship(Internship internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"jetlfj"},"content":"     * Replaces the given internship {@code target} with {@code editedInternship}.","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"chantellyu"},"content":"     * {@code target} must exist in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"jetlfj"},"content":"     * The internship identity of {@code editedInternship} must not be the same as another existing internship in the","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"chantellyu"},"content":"     * internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"jetlfj"},"content":"    void setInternship(Internship target, Internship editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"jetlfj"},"content":"    /** Returns an unmodifiable view of the filtered internship list */","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"jetlfj"},"content":"    ObservableList\u003cInternship\u003e getFilteredInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"jetlfj"},"content":"     * Updates the filter of the filtered internship list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"jetlfj"},"content":"    void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"bigcrushes"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"bigcrushes"},"content":"     * Gets the size of the filtered internship list after applying a filter to it.","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"bigcrushes"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"bigcrushes"},"content":"     * @param predicate filter to be applied before getting size.","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"bigcrushes"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"bigcrushes"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"bigcrushes"},"content":"    int getFilteredStatusInternshipListSize(Predicate\u003cInternship\u003e predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jetlfj":13,"bigcrushes":8,"chantellyu":16,"-":59}},{"path":"src/main/java/seedu/intrack/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":" * Represents the in-memory model of the internship tracker data.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"    private final InTrack inTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"    private final FilteredList\u003cInternship\u003e filteredInternships;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"     * Initializes a ModelManager with the given inTrack and userPrefs.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"    public ModelManager(ReadOnlyInTrack inTrack, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"        requireAllNonNull(inTrack, userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"        logger.fine(\"Initializing with internship tracker: \" + inTrack + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"chantellyu"},"content":"        this.inTrack \u003d new InTrack(inTrack);","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"chantellyu"},"content":"        filteredInternships \u003d new FilteredList\u003c\u003e(this.inTrack.getInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"        this(new InTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"chantellyu"},"content":"    public Path getInTrackFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"chantellyu"},"content":"        return userPrefs.getInTrackFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"chantellyu"},"content":"    public void setInTrackFilePath(Path inTrackFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"chantellyu"},"content":"        requireNonNull(inTrackFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"chantellyu"},"content":"        userPrefs.setInTrackFilePath(inTrackFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"chantellyu"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d InTrack \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"chantellyu"},"content":"    public void setInTrack(ReadOnlyInTrack inTrack) {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"chantellyu"},"content":"        this.inTrack.resetData(inTrack);","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"chantellyu"},"content":"    public ReadOnlyInTrack getInTrack() {","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"chantellyu"},"content":"        return inTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"jetlfj"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"jetlfj"},"content":"        requireNonNull(internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"chantellyu"},"content":"        return inTrack.hasInternship(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"jetlfj"},"content":"    public void deleteInternship(Internship target) {","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"chantellyu"},"content":"        inTrack.removeInternship(target);","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"jetlfj"},"content":"    public void addInternship(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"chantellyu"},"content":"        inTrack.addInternship(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"jetlfj"},"content":"        updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"jetlfj"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"jetlfj"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"chantellyu"},"content":"        inTrack.setInternship(target, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"jetlfj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Internship List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"jetlfj"},"content":"     * Returns an unmodifiable view of the list of {@code Internship} backed by the internal list of","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"chantellyu"},"content":"     * {@code versionedInTrack}","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"jetlfj"},"content":"    public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"jetlfj"},"content":"        return filteredInternships;","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"jetlfj"},"content":"    public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"jetlfj"},"content":"        filteredInternships.setPredicate(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"bigcrushes"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"bigcrushes"},"content":"    public int getFilteredStatusInternshipListSize(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"bigcrushes"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"bigcrushes"},"content":"        FilteredList\u003cInternship\u003e internshipListToFilter \u003d new FilteredList\u003c\u003e(filteredInternships);","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"bigcrushes"},"content":"        internshipListToFilter.setPredicate(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"bigcrushes"},"content":"        return internshipListToFilter.size();","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"chantellyu"},"content":"        return inTrack.equals(other.inTrack)","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"jetlfj"},"content":"                \u0026\u0026 filteredInternships.equals(other.filteredInternships);","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jetlfj":15,"bigcrushes":8,"chantellyu":30,"-":105}},{"path":"src/main/java/seedu/intrack/model/ReadOnlyInTrack.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":" * Unmodifiable view of an internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"public interface ReadOnlyInTrack {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"     * Returns an unmodifiable view of the internships list.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":"     * This list will not contain any duplicate internships.","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"    ObservableList\u003cInternship\u003e getInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jetlfj":3,"chantellyu":4,"-":10}},{"path":"src/main/java/seedu/intrack/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"    Path getInTrackFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"chantellyu":3,"-":13}},{"path":"src/main/java/seedu/intrack/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"    private Path inTrackFilePath \u003d Paths.get(\"data\" , \"intrack.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"        setInTrackFilePath(newUserPrefs.getInTrackFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"chantellyu"},"content":"    public Path getInTrackFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"chantellyu"},"content":"        return inTrackFilePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"chantellyu"},"content":"    public void setInTrackFilePath(Path inTrackFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"chantellyu"},"content":"        requireNonNull(inTrackFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"chantellyu"},"content":"        this.inTrackFilePath \u003d inTrackFilePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"chantellyu"},"content":"                \u0026\u0026 inTrackFilePath.equals(o.inTrackFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"chantellyu"},"content":"        return Objects.hash(guiSettings, inTrackFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"chantellyu"},"content":"        sb.append(\"\\nLocal data file location : \" + inTrackFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":12,"-":75}},{"path":"src/main/java/seedu/intrack/model/internship/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":" * Represents an Internship\u0027s address in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"johnrhimawan"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"johnrhimawan":1,"chantellyu":3,"-":53}},{"path":"src/main/java/seedu/intrack/model/internship/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":" * Represents an Internship\u0027s email in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chantellyu":3,"-":68}},{"path":"src/main/java/seedu/intrack/model/internship/Internship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"johnrhimawan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"johnrhimawan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":" * Represents an Internship in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jetlfj"},"content":"public class Internship {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"bigcrushes"},"content":"    private final Position position;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"    private final Status status;","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"johnrhimawan"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"    private final Remark remark;","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"    public Internship(Name name, Position position, Status status, Phone phone, Email email, Address address,","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"johnrhimawan"},"content":"                      List\u003cTask\u003e tasks, Set\u003cTag\u003e tags, Remark remark) {","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"johnrhimawan"},"content":"        requireAllNonNull(name, position, phone, email, status, address, tasks, tags, remark);","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"bigcrushes"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"johnrhimawan"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"kangqiao322"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"bigcrushes"},"content":"    public Position getPosition() {","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"bigcrushes"},"content":"        return position;","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"    public Status getStatus() {","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"        return status;","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"jetlfj"},"content":"     * Returns an immutable task list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"johnrhimawan"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"johnrhimawan"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"johnrhimawan"},"content":"        return Collections.unmodifiableList(tasks);","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"jetlfj"},"content":"    public Remark getRemark() {","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"jetlfj"},"content":"        return remark;","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"jetlfj"},"content":"     * Returns true if both internships have the same name.","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"jetlfj"},"content":"     * This defines a weaker notion of equality between two internships.","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"jetlfj"},"content":"    public boolean isSameInternship(Internship otherInternship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"jetlfj"},"content":"        if (otherInternship \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"jetlfj"},"content":"        return otherInternship !\u003d null","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"bigcrushes"},"content":"                \u0026\u0026 otherInternship.getName().equals(getName())","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"bigcrushes"},"content":"                \u0026\u0026 otherInternship.getPosition().equals(getPosition());","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"jetlfj"},"content":"     * Returns true if both internships have the same identity and data fields.","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"jetlfj"},"content":"     * This defines a stronger notion of equality between two internships.","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"jetlfj"},"content":"        if (!(other instanceof Internship)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"jetlfj"},"content":"        Internship otherInternship \u003d (Internship) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"jetlfj"},"content":"        return otherInternship.getName().equals(getName())","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"bigcrushes"},"content":"                \u0026\u0026 otherInternship.getPosition().equals(getPosition())","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"jetlfj"},"content":"                \u0026\u0026 otherInternship.getStatus().equals(getStatus())","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"jetlfj"},"content":"                \u0026\u0026 otherInternship.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"jetlfj"},"content":"                \u0026\u0026 otherInternship.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"jetlfj"},"content":"                \u0026\u0026 otherInternship.getAddress().equals(getAddress())","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"jetlfj"},"content":"                \u0026\u0026 otherInternship.getTasks().equals(getTasks())","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"jetlfj"},"content":"                \u0026\u0026 otherInternship.getTags().equals(getTags());","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"jetlfj"},"content":"        return Objects.hash(name, position, phone, email, address, tags);","lastModifiedDate":"2022-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"jetlfj"},"content":"        builder.append(\"Company: \")","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"jetlfj"},"content":"                .append(getName())","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"bigcrushes"},"content":"                .append(\"; Position: \")","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"bigcrushes"},"content":"                .append(getPosition())","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"jetlfj"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"jetlfj"},"content":"                .append(getStatus())","lastModifiedDate":"2022-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":156,"author":{"gitId":"johnrhimawan"},"content":"        List\u003cTask\u003e tasks \u003d getTasks();","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"johnrhimawan"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":158,"author":{"gitId":"johnrhimawan"},"content":"            builder.append(\"; Tasks: \");","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"johnrhimawan"},"content":"            tasks.forEach(builder::append);","lastModifiedDate":"2022-10-17"},{"lineNumber":160,"author":{"gitId":"johnrhimawan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":161,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"kangqiao322"},"content":"        builder.append(\" Remark: \")","lastModifiedDate":"2022-10-17"},{"lineNumber":168,"author":{"gitId":"kangqiao322"},"content":"                .append(getRemark());","lastModifiedDate":"2022-10-17"},{"lineNumber":169,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jetlfj":39,"johnrhimawan":18,"bigcrushes":11,"chantellyu":4,"kangqiao322":3,"-":98}},{"path":"src/main/java/seedu/intrack/model/internship/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":" * Represents an Internship\u0027s name in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"bigcrushes"},"content":"                \u0026\u0026 fullName.equalsIgnoreCase(((Name) other).fullName)); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bigcrushes":1,"chantellyu":3,"-":55}},{"path":"src/main/java/seedu/intrack/model/internship/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.util.StringUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":" * Tests that a {@code Internship}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cInternship\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":"    public boolean test(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(internship.getName().fullName, keyword));","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jetlfj":4,"chantellyu":2,"-":25}},{"path":"src/main/java/seedu/intrack/model/internship/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":" * Represents an Internship\u0027s phone number in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chantellyu":3,"-":50}},{"path":"src/main/java/seedu/intrack/model/internship/Position.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"bigcrushes"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"bigcrushes"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":" * Represents an Internship\u0027s position name in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"bigcrushes"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPosition(String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"bigcrushes"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"bigcrushes"},"content":"public class Position {","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Positions can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"bigcrushes"},"content":"    /*","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"bigcrushes"},"content":"     * The first character of the position must not be a whitespace,","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"bigcrushes"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"bigcrushes"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"bigcrushes"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"bigcrushes"},"content":"    public final String positionName;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"bigcrushes"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"bigcrushes"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"bigcrushes"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"bigcrushes"},"content":"     * @param position Name of position being applied to.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"bigcrushes"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"bigcrushes"},"content":"    public Position(String position) {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"bigcrushes"},"content":"        requireNonNull(position);","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"bigcrushes"},"content":"        checkArgument(isValidPosition(position), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"bigcrushes"},"content":"        positionName \u003d position;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"bigcrushes"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"bigcrushes"},"content":"     * Returns true if a given string is a valid position name.","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"bigcrushes"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"bigcrushes"},"content":"    public static boolean isValidPosition(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"bigcrushes"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"bigcrushes"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"bigcrushes"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"bigcrushes"},"content":"        return positionName;","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"bigcrushes"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"bigcrushes"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"bigcrushes"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"bigcrushes"},"content":"                || (other instanceof Position // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"bigcrushes"},"content":"                \u0026\u0026 positionName.equalsIgnoreCase(((Position) other).positionName)); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"bigcrushes"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"bigcrushes"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"bigcrushes"},"content":"        return positionName.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"bigcrushes"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jetlfj":1,"bigcrushes":54,"chantellyu":3}},{"path":"src/main/java/seedu/intrack/model/internship/PositionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.util.StringUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":" * Tests that a {@code Internship}\u0027s {@code Position} matches any of the keywords given.","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"public class PositionContainsKeywordsPredicate implements Predicate\u003cInternship\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"    public PositionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"    public boolean test(Internship internship) {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(internship.getPosition().positionName, keyword));","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"                || (other instanceof PositionContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"                \u0026\u0026 keywords.equals(((PositionContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"chantellyu":31}},{"path":"src/main/java/seedu/intrack/model/internship/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kangqiao322"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"kangqiao322"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"kangqiao322"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"kangqiao322"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"kangqiao322"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"kangqiao322"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"kangqiao322"},"content":"public class Remark {","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"kangqiao322"},"content":"    public final String value;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"kangqiao322"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"kangqiao322"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"kangqiao322"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"kangqiao322"},"content":"     * @param remark Remark or note that a user added to application.","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"kangqiao322"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"kangqiao322"},"content":"    public Remark(String remark) {","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"kangqiao322"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"kangqiao322"},"content":"        value \u003d remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"kangqiao322"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"kangqiao322"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"kangqiao322"},"content":"        return value;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"kangqiao322"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"kangqiao322"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"kangqiao322"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"kangqiao322"},"content":"                || (other instanceof Remark","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"kangqiao322"},"content":"                \u0026\u0026 value.equals(((Remark) other).value));","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"kangqiao322"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"kangqiao322"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"kangqiao322"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"kangqiao322"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"kangqiao322":37}},{"path":"src/main/java/seedu/intrack/model/internship/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"johnrhimawan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"johnrhimawan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"johnrhimawan"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"johnrhimawan"},"content":" * Represents an Internship\u0027s application status.","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"johnrhimawan"},"content":" * Guarantees: details are present and not null","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"johnrhimawan"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"johnrhimawan"},"content":"public class Status {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"johnrhimawan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status can be of 3 types: Progress, Offered, Rejected\";","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"johnrhimawan"},"content":"    /*","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"johnrhimawan"},"content":"     * The first character of the status must not be a whitespace,","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"johnrhimawan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"johnrhimawan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"johnrhimawan"},"content":"    public final String value;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"johnrhimawan"},"content":"     * Constructs an {@code Status}.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"johnrhimawan"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"johnrhimawan"},"content":"     * @param status A valid status.","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"johnrhimawan"},"content":"    public Status(String status) {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"johnrhimawan"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"johnrhimawan"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"        this.value \u003d status;","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"johnrhimawan"},"content":"     * Returns true if a given string is a valid status.","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"johnrhimawan"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"johnrhimawan"},"content":"        return test.matches(VALIDATION_REGEX)","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"                \u0026\u0026 ((Objects.equals(test, \"Offered\")","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"                || Objects.equals(test, \"Progress\")","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"                || Objects.equals(test, \"Rejected\")));","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"johnrhimawan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"johnrhimawan"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"johnrhimawan"},"content":"        return value;","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"johnrhimawan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"johnrhimawan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"johnrhimawan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"johnrhimawan"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"johnrhimawan"},"content":"                \u0026\u0026 value.equals(((Status) other).value)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"johnrhimawan"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"johnrhimawan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"johnrhimawan"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"johnrhimawan"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jetlfj":4,"johnrhimawan":55,"chantellyu":2,"kangqiao322":1}},{"path":"src/main/java/seedu/intrack/model/internship/StatusIsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bigcrushes"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"bigcrushes"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"bigcrushes"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"bigcrushes"},"content":" * Tests that a {@code Internship}\u0027s {@code Status} matches the keyword given.","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"bigcrushes"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"bigcrushes"},"content":"public class StatusIsKeywordPredicate implements Predicate\u003cInternship\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"bigcrushes"},"content":"    private final String keyword;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"bigcrushes"},"content":"    public StatusIsKeywordPredicate(String keyword) {","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"bigcrushes"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"bigcrushes"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bigcrushes"},"content":"    public boolean test(Internship internship) {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"bigcrushes"},"content":"        return keyword.equalsIgnoreCase(internship.getStatus().value);","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"bigcrushes"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"bigcrushes"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"bigcrushes"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"bigcrushes"},"content":"                || (other instanceof StatusIsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"bigcrushes"},"content":"                \u0026\u0026 keyword.equals(((StatusIsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"bigcrushes"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"bigcrushes":27}},{"path":"src/main/java/seedu/intrack/model/internship/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johnrhimawan"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"johnrhimawan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"johnrhimawan"},"content":"import static seedu.intrack.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"johnrhimawan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"johnrhimawan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"johnrhimawan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"johnrhimawan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"johnrhimawan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"johnrhimawan"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"johnrhimawan"},"content":" * Represents an Internship\u0027s application task.","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"johnrhimawan"},"content":" * Guarantees: details are present and not null","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"johnrhimawan"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"johnrhimawan"},"content":"public class Task {","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"johnrhimawan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Task names can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"johnrhimawan"},"content":"    public static final String TIME_CONSTRAINTS \u003d \"Time must be in the format dd-MM-yyyy HH:mm\";","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"johnrhimawan"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"johnrhimawan"},"content":"     * The first character of the task must not be a whitespace,","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"johnrhimawan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"johnrhimawan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"johnrhimawan"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"johnrhimawan"},"content":"    public final String taskName;","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"johnrhimawan"},"content":"    public final LocalDateTime taskTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"johnrhimawan"},"content":"     * Constructs an {@code Task}","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"johnrhimawan"},"content":"    public Task() {","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"johnrhimawan"},"content":"        this.taskName \u003d \"Application submitted\";","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"johnrhimawan"},"content":"        this.taskTime \u003d LocalDateTime.now().truncatedTo(ChronoUnit.MINUTES);","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"johnrhimawan"},"content":"     * Constructs an {@code Task}.","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"johnrhimawan"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"johnrhimawan"},"content":"     * @param taskName A valid task name.","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"johnrhimawan"},"content":"     * @param taskTime A valid task time.","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"johnrhimawan"},"content":"    public Task(String taskName, String taskTime) {","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"johnrhimawan"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"johnrhimawan"},"content":"        requireNonNull(taskTime);","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"johnrhimawan"},"content":"        checkArgument(isValidTaskName(taskName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"johnrhimawan"},"content":"        checkArgument(isValidTaskTime(taskTime), TIME_CONSTRAINTS);","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"johnrhimawan"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"johnrhimawan"},"content":"        this.taskTime \u003d LocalDateTime.parse(taskTime, FORMATTER);","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"johnrhimawan"},"content":"     * Returns true if a given string is a valid task name.","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"johnrhimawan"},"content":"    public static boolean isValidTaskName(String test) {","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"johnrhimawan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"johnrhimawan"},"content":"     * Returns true if a given string is a valid task time.","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"johnrhimawan"},"content":"    public static boolean isValidTaskTime(String test) {","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"johnrhimawan"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"johnrhimawan"},"content":"            FORMATTER.parse(test);","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"johnrhimawan"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"johnrhimawan"},"content":"            return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"johnrhimawan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"johnrhimawan"},"content":"        return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"johnrhimawan"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"johnrhimawan"},"content":"        return taskName;","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"johnrhimawan"},"content":"    public LocalDateTime getTaskTime() {","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"johnrhimawan"},"content":"        return taskTime;","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"johnrhimawan"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"johnrhimawan"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"johnrhimawan"},"content":"        return taskName + \" at \" + taskTime.format(FORMATTER);","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"johnrhimawan"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"johnrhimawan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"johnrhimawan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"johnrhimawan"},"content":"                || (other instanceof Task // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"johnrhimawan"},"content":"                \u0026\u0026 taskName.equals(((Task) other).taskName))","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"johnrhimawan"},"content":"                \u0026\u0026 taskTime.equals(((Task) other).taskTime); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"johnrhimawan"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"johnrhimawan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"johnrhimawan"},"content":"        return Objects.hash(taskName, taskTime);","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"johnrhimawan"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"johnrhimawan":99}},{"path":"src/main/java/seedu/intrack/model/internship/UniqueInternshipList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"jetlfj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.exceptions.DuplicateInternshipException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.exceptions.InternshipNotFoundException;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":" * A list of internships that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":" * An internship is considered unique by comparing using {@code Internship#isSameInternship(Internship)}. As such,","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":" * adding and updating of internships uses Internship#isSameInternship(Internship) for equality so as to ensure that","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"jetlfj"},"content":" * the internship being added or updated is unique in terms of identity in the UniqueInternshipList. However, the","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":" * removal of an internship uses Internship#equals(Object) so as to ensure that the internship with exactly the same","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":" * fields will be removed.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":" *","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":" *","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":" * @see Internship#isSameInternship(Internship)","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"public class UniqueInternshipList implements Iterable\u003cInternship\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"    private final ObservableList\u003cInternship\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"    private final ObservableList\u003cInternship\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"     * Returns true if the list contains an equivalent internship as the given argument.","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":"    public boolean contains(Internship toCheck) {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"        return internalList.stream().anyMatch(toCheck::isSameInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"     * Adds an internship to the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"     * The internship must not already exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"    public void add(Internship toAdd) {","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"jetlfj"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"     * Replaces the internship {@code target} in the list with {@code editedInternship}.","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"jetlfj"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"     * The internship identity of {@code editedInternship} must not be the same as another existing internship in the","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"     * list.","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"        if (!target.isSameInternship(editedInternship) \u0026\u0026 contains(editedInternship)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"jetlfj"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"        internalList.set(index, editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"jetlfj"},"content":"     * Removes the equivalent internship from the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"jetlfj"},"content":"     * The internship must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"jetlfj"},"content":"    public void remove(Internship toRemove) {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"jetlfj"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"jetlfj"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"jetlfj"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"jetlfj"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"jetlfj"},"content":"    public void setInternships(UniqueInternshipList replacement) {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"jetlfj"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"jetlfj"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"jetlfj"},"content":"     * Replaces the contents of this list with {@code internships}.","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"jetlfj"},"content":"     * {@code internships} must not contain duplicate internships.","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"jetlfj"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"jetlfj"},"content":"        requireAllNonNull(internships);","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"jetlfj"},"content":"        if (!internshipsAreUnique(internships)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"jetlfj"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"jetlfj"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"jetlfj"},"content":"        internalList.setAll(internships);","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"jetlfj"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"jetlfj"},"content":"    public ObservableList\u003cInternship\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"jetlfj"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"jetlfj"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"jetlfj"},"content":"    public Iterator\u003cInternship\u003e iterator() {","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"jetlfj"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"jetlfj"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"jetlfj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"jetlfj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"jetlfj"},"content":"                || (other instanceof UniqueInternshipList // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"jetlfj"},"content":"                        \u0026\u0026 internalList.equals(((UniqueInternshipList) other).internalList));","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"jetlfj"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"jetlfj"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"jetlfj"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"jetlfj"},"content":"     * Returns true if {@code internships} contains only unique internships.","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"jetlfj"},"content":"    private boolean internshipsAreUnique(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"jetlfj"},"content":"        for (int i \u003d 0; i \u003c internships.size() - 1; i++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"jetlfj"},"content":"            for (int j \u003d i + 1; j \u003c internships.size(); j++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"jetlfj"},"content":"                if (internships.get(i).isSameInternship(internships.get(j))) {","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"jetlfj"},"content":"                    return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"jetlfj"},"content":"                }","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"jetlfj"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"jetlfj"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"jetlfj"},"content":"        return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"jetlfj"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jetlfj":135,"chantellyu":4}},{"path":"src/main/java/seedu/intrack/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":" * Represents a Tag in the internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chantellyu":3,"-":51}},{"path":"src/main/java/seedu/intrack/model/tag/exceptions/DuplicateInternshipException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.tag.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"jetlfj"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":" * Signals that the operation will result in duplicate Internships (Internships are considered duplicates if they have","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":" * the same identity).","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"public class DuplicateInternshipException extends RuntimeException {","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"    public DuplicateInternshipException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"        super(\"Operation would result in duplicate internships\");","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jetlfj":10,"chantellyu":1}},{"path":"src/main/java/seedu/intrack/model/tag/exceptions/InternshipNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.tag.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"jetlfj"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":" * Signals that the operation is unable to find the specified internship.","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"public class InternshipNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jetlfj":5,"chantellyu":1}},{"path":"src/main/java/seedu/intrack/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"johnrhimawan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.internship.Remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Status;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.model.internship.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":" * Contains utility methods for populating {@code InTrack} with sample data.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"    public static Internship[] getSampleInternships() {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"        return new Internship[] {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"            new Internship(new Name(\"Microsoft\"), new Position(\"Software Engineer\"), new Status(\"Progress\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"                new Phone(\"11111111\"), new Email(\"hr@microsoft.com\"), new Address(\"Microsoft Campus\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"                getTaskList(\"HR Interview /at 10-10-2023 12:00\"), getTagSet(\"Urgent\"), EMPTY_REMARK),","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"            new Internship(new Name(\"Apple\"), new Position(\"Frontend Developer\"), new Status(\"Progress\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"                new Phone(\"22222222\"), new Email(\"hr@apple.com\"), new Address(\"Apple Park\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":"                getTaskList(\"Technical Interview /at 11-11-2023 10:00\"), getTagSet(\"Remote\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"                EMPTY_REMARK),","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"            new Internship(new Name(\"Tesla\"), new Position(\"Machine Learning Expert\"), new Status(\"Progress\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"                new Phone(\"63456789\"), new Email(\"hr@tesla.com\"), new Address(\"Tesla Gigafactory\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"                getTaskList(\"Online Assessment /at 09-10-2023 12:00\"), getTagSet(\"Postponed\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"                EMPTY_REMARK),","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"            new Internship(new Name(\"Alphabet\"), new Position(\"Full Stack Developer\"), new Status(\"Progress\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"                new Phone(\"64567890\"), new Email(\"hr@alphabet.com\"), new Address(\"Googleplex\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"                getTaskList(\"Coding Interview /at 10-12-2022 09:00\"), getTagSet(\"Urgent\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"                EMPTY_REMARK),","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"            new Internship(new Name(\"Nvidia\"), new Position(\"Data Analyst\"), new Status(\"Progress\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"                new Phone(\"65678901\"), new Email(\"hr@nvidia.com\"), new Address(\"Nvidia HQ\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"                getTaskList(\"Coding Interview /at 10-12-2022 09:00\"), getTagSet(\"Remote\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"jetlfj"},"content":"                EMPTY_REMARK),","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"            new Internship(new Name(\"Amazon\"), new Position(\"Backend Developer\"), new Status(\"Progress\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"                new Phone(\"66789012\"), new Email(\"hr@amazon.com\"), new Address(\"Amazon HQ\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"                getTaskList(\"Behavioural Interview /at 10-10-2023 08:00\"), getTagSet(\"Postponed\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"jetlfj"},"content":"                EMPTY_REMARK)","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"chantellyu"},"content":"    public static ReadOnlyInTrack getSampleInTrack() {","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"chantellyu"},"content":"        InTrack sampleIt \u003d new InTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"        for (Internship sampleInternship : getSampleInternships()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"chantellyu"},"content":"            sampleIt.addInternship(sampleInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"chantellyu"},"content":"        return sampleIt;","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"johnrhimawan"},"content":"     * Returns a task list containing the list of strings given.","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"johnrhimawan"},"content":"    public static List\u003cTask\u003e getTaskList(String... strings) {","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"johnrhimawan"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"johnrhimawan"},"content":"                .map(s -\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"johnrhimawan"},"content":"                    String[] splitTask \u003d s.split(\" /at \");","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"johnrhimawan"},"content":"                    String taskName \u003d splitTask[0];","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"johnrhimawan"},"content":"                    String taskTime \u003d splitTask[1];","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"johnrhimawan"},"content":"                    return new Task(taskName, taskTime);","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"johnrhimawan"},"content":"                })","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"johnrhimawan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jetlfj":29,"johnrhimawan":16,"chantellyu":16,"kangqiao322":1,"-":25}},{"path":"src/main/java/seedu/intrack/storage/InTrackStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":" * Represents a storage for {@link InTrack}.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"public interface InTrackStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"    Path getInTrackFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"     * Returns InTrack data as a {@link ReadOnlyInTrack}.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"    Optional\u003cReadOnlyInTrack\u003e readInTrack() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"     * @see #getInTrackFilePath()","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"    Optional\u003cReadOnlyInTrack\u003e readInTrack(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"chantellyu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"     * Saves the given {@link ReadOnlyInTrack} to the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"chantellyu"},"content":"     * @param inTrack cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"    void saveInTrack(ReadOnlyInTrack inTrack) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"chantellyu"},"content":"     * @see #saveInTrack(ReadOnlyInTrack)","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"chantellyu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"chantellyu"},"content":"    void saveInTrack(ReadOnlyInTrack inTrack, Path filePath) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"chantellyu":46}},{"path":"src/main/java/seedu/intrack/storage/JsonAdaptedInternship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.internship.Remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Status;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.model.internship.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":" * Jackson-friendly version of {@link Internship}.","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"class JsonAdaptedInternship {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Internship\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"bigcrushes"},"content":"    private final String position;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"    private final String status;","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"johnrhimawan"},"content":"    private final List\u003cJsonAdaptedTask\u003e taskFilled \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"kangqiao322"},"content":"    private final String remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"     * Constructs a {@code JsonAdaptedInternship} with the given internship details.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"bigcrushes"},"content":"    public JsonAdaptedInternship(@JsonProperty(\"name\") String name, @JsonProperty(\"position\") String position,","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"            @JsonProperty(\"status\") String status, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"johnrhimawan"},"content":"            @JsonProperty(\"taskFilled\") List\u003cJsonAdaptedTask\u003e taskFilled,","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"kangqiao322"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"remark\") String remark) {","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"bigcrushes"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"jetlfj"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"johnrhimawan"},"content":"        if (taskFilled !\u003d null) {","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"johnrhimawan"},"content":"            this.taskFilled.addAll(taskFilled);","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"johnrhimawan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"kangqiao322"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"     * Converts a given {@code Internship} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"    public JsonAdaptedInternship(Internship source) {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"bigcrushes"},"content":"        position \u003d source.getPosition().positionName;","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"jetlfj"},"content":"        status \u003d source.getStatus().value;","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"johnrhimawan"},"content":"        taskFilled.addAll(source.getTasks().stream()","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"johnrhimawan"},"content":"                .map(JsonAdaptedTask::new)","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"johnrhimawan"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"kangqiao322"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"jetlfj"},"content":"     * Converts this Jackson-friendly adapted internship object into the model\u0027s {@code Internship} object.","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"jetlfj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted internship.","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"jetlfj"},"content":"    public Internship toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"johnrhimawan"},"content":"        final List\u003cTask\u003e internshipTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"johnrhimawan"},"content":"        for (JsonAdaptedTask task : taskFilled) {","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"johnrhimawan"},"content":"            internshipTasks.add(task.toModelType());","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"johnrhimawan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"jetlfj"},"content":"        final List\u003cTag\u003e internshipTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"jetlfj"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"jetlfj"},"content":"            internshipTags.add(tag.toModelType());","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"jetlfj"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"bigcrushes"},"content":"        if (position \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"bigcrushes"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"bigcrushes"},"content":"                    Position.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"bigcrushes"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"bigcrushes"},"content":"        if (!Position.isValidPosition(position)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"bigcrushes"},"content":"            throw new IllegalValueException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"bigcrushes"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"bigcrushes"},"content":"        final Position modelPosition \u003d new Position(position);","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"jetlfj"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"jetlfj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"jetlfj"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"jetlfj"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"jetlfj"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"jetlfj"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"jetlfj"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"jetlfj"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":149,"author":{"gitId":"kangqiao322"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"kangqiao322"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"kangqiao322"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"kangqiao322"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2022-10-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"johnrhimawan"},"content":"        final List\u003cTask\u003e modelTasks \u003d new ArrayList\u003c\u003e(internshipTasks);","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":156,"author":{"gitId":"jetlfj"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(internshipTags);","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":158,"author":{"gitId":"jetlfj"},"content":"        return new Internship(modelName, modelPosition, modelStatus, modelPhone, modelEmail, modelAddress, modelTasks,","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"jetlfj"},"content":"                modelTags, modelRemark);","lastModifiedDate":"2022-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jetlfj":33,"johnrhimawan":16,"bigcrushes":13,"chantellyu":10,"kangqiao322":9,"-":81}},{"path":"src/main/java/seedu/intrack/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chantellyu":3,"-":45}},{"path":"src/main/java/seedu/intrack/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johnrhimawan"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"johnrhimawan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"johnrhimawan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.model.internship.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"johnrhimawan"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"johnrhimawan"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"johnrhimawan"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"johnrhimawan"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"johnrhimawan"},"content":"    private final String taskName;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"johnrhimawan"},"content":"    private final String taskTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"johnrhimawan"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given {@code taskName} and {@code taskTime}.","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"johnrhimawan"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"johnrhimawan"},"content":"    public JsonAdaptedTask(@JsonProperty(\"taskName\") String taskName, @JsonProperty(\"taskTime\") String taskTime) {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"johnrhimawan"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"johnrhimawan"},"content":"        this.taskTime \u003d taskTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"johnrhimawan"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"johnrhimawan"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"johnrhimawan"},"content":"        this.taskName \u003d source.getTaskName();","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"johnrhimawan"},"content":"        this.taskTime \u003d source.getTaskTime().format(Task.FORMATTER);","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"johnrhimawan"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"johnrhimawan"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"johnrhimawan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"johnrhimawan"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"johnrhimawan"},"content":"        if (!Task.isValidTaskName(taskName)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"johnrhimawan"},"content":"            throw new IllegalValueException(Task.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"johnrhimawan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"johnrhimawan"},"content":"        if (!Task.isValidTaskTime(taskTime)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"johnrhimawan"},"content":"            throw new IllegalValueException(Task.TIME_CONSTRAINTS);","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"johnrhimawan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"johnrhimawan"},"content":"        return new Task(taskName, taskTime);","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"johnrhimawan"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"johnrhimawan":49}},{"path":"src/main/java/seedu/intrack/storage/JsonInTrackStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.util.FileUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.util.JsonUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":" * A class to access InTrack data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"public class JsonInTrackStorage implements InTrackStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonInTrackStorage.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"    public JsonInTrackStorage(Path filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"    public Path getInTrackFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"        return filePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"    public Optional\u003cReadOnlyInTrack\u003e readInTrack() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"chantellyu"},"content":"        return readInTrack(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"     * Similar to {@link #readInTrack()}.","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"chantellyu"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"chantellyu"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"chantellyu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"    public Optional\u003cReadOnlyInTrack\u003e readInTrack(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"chantellyu"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"chantellyu"},"content":"        Optional\u003cJsonSerializableInTrack\u003e jsonInTrack \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"chantellyu"},"content":"                filePath, JsonSerializableInTrack.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"chantellyu"},"content":"        if (!jsonInTrack.isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"chantellyu"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"chantellyu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"chantellyu"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"chantellyu"},"content":"            return Optional.of(jsonInTrack.get().toModelType());","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"chantellyu"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"chantellyu"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"chantellyu"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"chantellyu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"chantellyu"},"content":"    public void saveInTrack(ReadOnlyInTrack inTrack) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"chantellyu"},"content":"        saveInTrack(inTrack, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"chantellyu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"chantellyu"},"content":"     * Similar to {@link #saveInTrack(ReadOnlyInTrack)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"chantellyu"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"chantellyu"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"chantellyu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"chantellyu"},"content":"    public void saveInTrack(ReadOnlyInTrack inTrack, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"chantellyu"},"content":"        requireNonNull(inTrack);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"chantellyu"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"chantellyu"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"chantellyu"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableInTrack(inTrack), filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"chantellyu":80}},{"path":"src/main/java/seedu/intrack/storage/JsonSerializableInTrack.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":" * An Immutable InTrack that is serializable to JSON format.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"@JsonRootName(value \u003d \"intrack\")","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"class JsonSerializableInTrack {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"Internships list contains duplicate internship(s).\";","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"    private final List\u003cJsonAdaptedInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"     * Constructs a {@code JsonSerializableInTrack} with the given internships.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"    public JsonSerializableInTrack(@JsonProperty(\"internships\") List\u003cJsonAdaptedInternship\u003e internships) {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"        this.internships.addAll(internships);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"     * Converts a given {@code ReadOnlyInTrack} into this class for Jackson use.","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableInTrack}.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"    public JsonSerializableInTrack(ReadOnlyInTrack source) {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"        internships.addAll(source.getInternshipList().stream().map(JsonAdaptedInternship::new)","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"     * Converts this internship tracker into the model\u0027s {@code InTrack} object.","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"chantellyu"},"content":"    public InTrack toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"chantellyu"},"content":"        InTrack inTrack \u003d new InTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"        for (JsonAdaptedInternship jsonAdaptedInternship : internships) {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"jetlfj"},"content":"            Internship internship \u003d jsonAdaptedInternship.toModelType();","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"chantellyu"},"content":"            if (inTrack.hasInternship(internship)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"jetlfj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"chantellyu"},"content":"            inTrack.addInternship(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"chantellyu"},"content":"        return inTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jetlfj":8,"chantellyu":19,"-":34}},{"path":"src/main/java/seedu/intrack/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.util.JsonUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chantellyu":5,"-":42}},{"path":"src/main/java/seedu/intrack/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":" * API of the Storage component","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"public interface Storage extends InTrackStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"    Path getInTrackFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"    Optional\u003cReadOnlyInTrack\u003e readInTrack() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"    void saveInTrack(ReadOnlyInTrack inTrack) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"chantellyu":32}},{"path":"src/main/java/seedu/intrack/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":" * Manages storage of InTrack data in local storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"    private InTrackStorage inTrackStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"     * Creates a {@code StorageManager} with the given {@code InTrackStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"    public StorageManager(InTrackStorage inTrackStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"        this.inTrackStorage \u003d inTrackStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"chantellyu"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"chantellyu"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"chantellyu"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d InTrack methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"chantellyu"},"content":"    public Path getInTrackFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"chantellyu"},"content":"        return inTrackStorage.getInTrackFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"chantellyu"},"content":"    public Optional\u003cReadOnlyInTrack\u003e readInTrack() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"chantellyu"},"content":"        return readInTrack(inTrackStorage.getInTrackFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"chantellyu"},"content":"    public Optional\u003cReadOnlyInTrack\u003e readInTrack(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"chantellyu"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"chantellyu"},"content":"        return inTrackStorage.readInTrack(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"chantellyu"},"content":"    public void saveInTrack(ReadOnlyInTrack inTrack) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"chantellyu"},"content":"        saveInTrack(inTrack, inTrackStorage.getInTrackFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"chantellyu"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"chantellyu"},"content":"    public void saveInTrack(ReadOnlyInTrack inTrack, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"chantellyu"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"chantellyu"},"content":"        inTrackStorage.saveInTrack(inTrack, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"chantellyu":78}},{"path":"src/main/java/seedu/intrack/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":" * Represents a storage for {@link seedu.intrack.model.UserPrefs}.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"     * Saves the given {@link seedu.intrack.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chantellyu":6,"-":30}},{"path":"src/main/java/seedu/intrack/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"chantellyu"},"content":"         * @see seedu.intrack.logic.Logic#execute(String)","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"chantellyu":5,"-":80}},{"path":"src/main/java/seedu/intrack/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-t11-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chantellyu":3,"-":99}},{"path":"src/main/java/seedu/intrack/ui/InternshipCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import javafx.css.PseudoClass;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.model.internship.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":" * An UI component that displays information of a {@code Internship}.","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"public class InternshipCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":"    private static final String FXML \u003d \"InternshipListCard.fxml\";","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"    public final Internship internship;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"bigcrushes"},"content":"    private Label position;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"bigcrushes"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"    private FlowPane status;","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"johnrhimawan"},"content":"    private FlowPane tasks;","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"johnrhimawan"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"kangqiao322"},"content":"    private Label remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"     * Creates a {@code InternshipCode} with the given {@code Internship} and index to display.","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"    public InternshipCard(Internship internship, int displayedIndex) {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"chantellyu"},"content":"        Label lab \u003d new Label(internship.getStatus().toString());","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"chantellyu"},"content":"        PseudoClass rejected \u003d PseudoClass.getPseudoClass(\"rejected\");","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"chantellyu"},"content":"        lab.pseudoClassStateChanged(rejected, (internship.getStatus().toString()).equals(\"Rejected\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"chantellyu"},"content":"        PseudoClass offered \u003d PseudoClass.getPseudoClass(\"offered\");","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"chantellyu"},"content":"        lab.pseudoClassStateChanged(offered, (internship.getStatus().toString()).equals(\"Offered\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"        this.internship \u003d internship;","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"        name.setText(internship.getName().fullName);","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"bigcrushes"},"content":"        position.setText(internship.getPosition().positionName);","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"        status.getChildren().add(lab);","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"jetlfj"},"content":"        phone.setText(internship.getPhone().value);","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"jetlfj"},"content":"        address.setText(internship.getAddress().value);","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"jetlfj"},"content":"        email.setText(internship.getEmail().value);","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"johnrhimawan"},"content":"        internship.getTasks().stream()","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"johnrhimawan"},"content":"                .sorted(Comparator.comparing(task -\u003e task.taskTime))","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"johnrhimawan"},"content":"                .forEach(task -\u003e tasks.getChildren().add(new Label(task.taskName + \" at \"","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"johnrhimawan"},"content":"                        + task.taskTime.format(Task.FORMATTER))));","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"jetlfj"},"content":"        internship.getTags().stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":81,"author":{"gitId":"kangqiao322"},"content":"        remark.setText(internship.getRemark().value);","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"jetlfj"},"content":"        if (!(other instanceof InternshipCard)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"jetlfj"},"content":"        InternshipCard card \u003d (InternshipCard) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"jetlfj"},"content":"                \u0026\u0026 internship.equals(card.internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jetlfj":22,"johnrhimawan":7,"bigcrushes":3,"chantellyu":9,"kangqiao322":2,"-":58}},{"path":"src/main/java/seedu/intrack/ui/InternshipListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"jetlfj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":" * Panel containing the list of internships.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":"public class InternshipListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"    private static final String FXML \u003d \"InternshipListPanel.fxml\";","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"jetlfj"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InternshipListPanel.class);","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"    private ListView\u003cInternship\u003e internshipListView;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"     * Creates a {@code InternshipListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"    public InternshipListPanel(ObservableList\u003cInternship\u003e internshipList) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"        super(FXML);","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"        internshipListView.setItems(internshipList);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"        internshipListView.setCellFactory(listView -\u003e new InternshipListViewCell());","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Internship} using a {@code InternshipCard}.","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":"    class InternshipListViewCell extends ListCell\u003cInternship\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"        protected void updateItem(Internship internship, boolean empty) {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"            super.updateItem(internship, empty);","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"            if (empty || internship \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"                setText(null);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"            } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"                setGraphic(new InternshipCard(internship, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jetlfj":46,"chantellyu":3}},{"path":"src/main/java/seedu/intrack/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.Logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"    private InternshipListPanel internshipListPanel;","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"    private StackPane internshipListPanelPlaceholder;","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"jetlfj"},"content":"        internshipListPanel \u003d new InternshipListPanel(logic.getFilteredInternshipList());","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"jetlfj"},"content":"        internshipListPanelPlaceholder.getChildren().add(internshipListPanel.getRoot());","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"chantellyu"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getInTrackFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"jetlfj"},"content":"    public InternshipListPanel getInternshipListPanel() {","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"jetlfj"},"content":"        return internshipListPanel;","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"chantellyu"},"content":"     * @see seedu.intrack.logic.Logic#execute(String)","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jetlfj":6,"chantellyu":9,"-":181}},{"path":"src/main/java/seedu/intrack/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chantellyu":1,"-":27}},{"path":"src/main/java/seedu/intrack/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":1,"-":27}},{"path":"src/main/java/seedu/intrack/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chantellyu":1,"-":12}},{"path":"src/main/java/seedu/intrack/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.util.StringUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.Logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chantellyu":5,"-":83}},{"path":"src/main/java/seedu/intrack/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chantellyu":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"jetlfj"},"content":"#filterField, #internshipListPanel, #internshipWebpage {","lastModifiedDate":"2022-10-05"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":354,"author":{"gitId":"jetlfj"},"content":"#status {","lastModifiedDate":"2022-10-14"},{"lineNumber":355,"author":{"gitId":"jetlfj"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-14"},{"lineNumber":356,"author":{"gitId":"jetlfj"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-14"},{"lineNumber":357,"author":{"gitId":"jetlfj"},"content":"}","lastModifiedDate":"2022-10-14"},{"lineNumber":358,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":359,"author":{"gitId":"jetlfj"},"content":"#status .label {","lastModifiedDate":"2022-10-14"},{"lineNumber":360,"author":{"gitId":"chantellyu"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-14"},{"lineNumber":361,"author":{"gitId":"chantellyu"},"content":"    -fx-background-color: #808080;","lastModifiedDate":"2022-10-14"},{"lineNumber":362,"author":{"gitId":"chantellyu"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-14"},{"lineNumber":363,"author":{"gitId":"chantellyu"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-14"},{"lineNumber":364,"author":{"gitId":"chantellyu"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-14"},{"lineNumber":365,"author":{"gitId":"chantellyu"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-14"},{"lineNumber":366,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-14"},{"lineNumber":367,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":368,"author":{"gitId":"chantellyu"},"content":"#status .label:rejected {","lastModifiedDate":"2022-10-14"},{"lineNumber":369,"author":{"gitId":"chantellyu"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-14"},{"lineNumber":370,"author":{"gitId":"chantellyu"},"content":"    -fx-background-color: #ff0000;","lastModifiedDate":"2022-10-14"},{"lineNumber":371,"author":{"gitId":"chantellyu"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-14"},{"lineNumber":372,"author":{"gitId":"chantellyu"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-14"},{"lineNumber":373,"author":{"gitId":"chantellyu"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-14"},{"lineNumber":374,"author":{"gitId":"chantellyu"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-14"},{"lineNumber":375,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-14"},{"lineNumber":376,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":377,"author":{"gitId":"chantellyu"},"content":"#status .label:offered {","lastModifiedDate":"2022-10-14"},{"lineNumber":378,"author":{"gitId":"jetlfj"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-14"},{"lineNumber":379,"author":{"gitId":"jetlfj"},"content":"    -fx-background-color: #008000;","lastModifiedDate":"2022-10-14"},{"lineNumber":380,"author":{"gitId":"jetlfj"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-14"},{"lineNumber":381,"author":{"gitId":"jetlfj"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-14"},{"lineNumber":382,"author":{"gitId":"jetlfj"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-14"},{"lineNumber":383,"author":{"gitId":"jetlfj"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-14"},{"lineNumber":384,"author":{"gitId":"jetlfj"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"jetlfj":15,"chantellyu":18,"-":351}},{"path":"src/main/resources/view/InternshipListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"      \u003cFlowPane fx:id\u003d\"status\" /\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"johnrhimawan"},"content":"      \u003cFlowPane fx:id\u003d\"tasks\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"bigcrushes"},"content":"      \u003cLabel fx:id\u003d\"position\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$position\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"kangqiao322"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jetlfj":4,"johnrhimawan":1,"bigcrushes":1,"kangqiao322":1,"-":35}},{"path":"src/main/resources/view/InternshipListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"  \u003cListView fx:id\u003d\"internshipListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jetlfj":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"        \u003cVBox fx:id\u003d\"internshipList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"          \u003cStackPane fx:id\u003d\"internshipListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jetlfj":2,"-":58}},{"path":"src/test/java/seedu/intrack/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"chantellyu":1,"-":57}},{"path":"src/test/java/seedu/intrack/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"chantellyu":1,"-":26}},{"path":"src/test/java/seedu/intrack/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":2,"-":133}},{"path":"src/test/java/seedu/intrack/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.core.index;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"        final Index fifthInternshipIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"        assertTrue(fifthInternshipIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"        assertTrue(fifthInternshipIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"        assertTrue(fifthInternshipIndex.equals(fifthInternshipIndex));","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"jetlfj"},"content":"        assertFalse(fifthInternshipIndex.equals(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"        assertFalse(fifthInternshipIndex.equals(5.0f));","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"        assertFalse(fifthInternshipIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jetlfj":7,"chantellyu":2,"-":51}},{"path":"src/test/java/seedu/intrack/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"chantellyu":2,"-":34}},{"path":"src/test/java/seedu/intrack/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"chantellyu":3,"-":105}},{"path":"src/test/java/seedu/intrack/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.Config;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chantellyu":4,"-":112}},{"path":"src/test/java/seedu/intrack/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":2,"-":21}},{"path":"src/test/java/seedu/intrack/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.TestUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":3,"-":42}},{"path":"src/test/java/seedu/intrack/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chantellyu":2,"-":141}},{"path":"src/test/java/seedu/intrack/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.ADDRESS_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.EMAIL_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.NAME_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.PHONE_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.POSITION_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.testutil.TypicalInternships.MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.storage.JsonInTrackStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.storage.StorageManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"chantellyu"},"content":"        JsonInTrackStorage inTrackStorage \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"chantellyu"},"content":"                new JsonInTrackStorage(temporaryFolder.resolve(\"inTrack.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"chantellyu"},"content":"        StorageManager storage \u003d new StorageManager(inTrackStorage, userPrefsStorage);","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"chantellyu"},"content":"        // Setup LogicManager with JsonInTrackIoExceptionThrowingStub","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"chantellyu"},"content":"        JsonInTrackStorage inTrackStorage \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"chantellyu"},"content":"                new JsonInTrackIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionInTrack.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"chantellyu"},"content":"        StorageManager storage \u003d new StorageManager(inTrackStorage, userPrefsStorage);","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"jetlfj"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"jetlfj"},"content":"                + EMAIL_DESC_MSFT + ADDRESS_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"jetlfj"},"content":"        Internship expectedInternship \u003d new InternshipBuilder(MSFT).withTags().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"jetlfj"},"content":"        expectedModel.addInternship(expectedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"jetlfj"},"content":"    public void getFilteredInternshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"jetlfj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredInternshipList().remove(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"chantellyu"},"content":"        Model expectedModel \u003d new ModelManager(model.getInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"chantellyu"},"content":"    private static class JsonInTrackIoExceptionThrowingStub extends JsonInTrackStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"chantellyu"},"content":"        private JsonInTrackIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"chantellyu"},"content":"        public void saveInTrack(ReadOnlyInTrack inTrack, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jetlfj":13,"chantellyu":29,"-":121}},{"path":"src/test/java/seedu/intrack/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"        model \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"    public void execute_newInternship_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"        Model expectedModel \u003d new ModelManager(model.getInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"        expectedModel.addInternship(validInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":"        assertCommandSuccess(new AddCommand(validInternship), model,","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validInternship), expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"    public void execute_duplicateInternship_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"        Internship internshipInList \u003d model.getInTrack().getInternshipList().get(0);","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"        assertCommandFailure(new AddCommand(internshipInList), model, AddCommand.MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jetlfj":7,"chantellyu":12,"-":26}},{"path":"src/test/java/seedu/intrack/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"    public void constructor_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"    public void execute_internshipAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":"        ModelStubAcceptingInternshipAdded modelStub \u003d new ModelStubAcceptingInternshipAdded();","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"        CommandResult commandResult \u003d new AddCommand(validInternship).execute(modelStub);","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validInternship), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"        assertEquals(Arrays.asList(validInternship), modelStub.internshipsAdded);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"    public void execute_duplicateInternship_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"        AddCommand addCommand \u003d new AddCommand(validInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"jetlfj"},"content":"        ModelStub modelStub \u003d new ModelStubWithInternship(validInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_INTERNSHIP, ()","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"                -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"        Internship alice \u003d new InternshipBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"        Internship bob \u003d new InternshipBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"jetlfj"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"chantellyu"},"content":"        public Path getInTrackFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"chantellyu"},"content":"        public void setInTrackFilePath(Path inTrackFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"jetlfj"},"content":"        public void addInternship(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"chantellyu"},"content":"        public void setInTrack(ReadOnlyInTrack newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"chantellyu"},"content":"        public ReadOnlyInTrack getInTrack() {","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"jetlfj"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"jetlfj"},"content":"        public void deleteInternship(Internship target) {","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"jetlfj"},"content":"        public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"jetlfj"},"content":"        public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"jetlfj"},"content":"        public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"bigcrushes"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"bigcrushes"},"content":"        public int getFilteredStatusInternshipListSize(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"bigcrushes"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"bigcrushes"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"jetlfj"},"content":"     * A Model stub that contains a single internship.","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"jetlfj"},"content":"    private class ModelStubWithInternship extends ModelStub {","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"jetlfj"},"content":"        private final Internship internship;","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":164,"author":{"gitId":"jetlfj"},"content":"        ModelStubWithInternship(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"jetlfj"},"content":"            requireNonNull(internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"jetlfj"},"content":"            this.internship \u003d internship;","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"jetlfj"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"jetlfj"},"content":"            requireNonNull(internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"jetlfj"},"content":"            return this.internship.isSameInternship(internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"jetlfj"},"content":"     * A Model stub that always accept the internship being added.","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"jetlfj"},"content":"    private class ModelStubAcceptingInternshipAdded extends ModelStub {","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"jetlfj"},"content":"        final ArrayList\u003cInternship\u003e internshipsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"jetlfj"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"jetlfj"},"content":"            requireNonNull(internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"jetlfj"},"content":"            return internshipsAdded.stream().anyMatch(internship::isSameInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"jetlfj"},"content":"        public void addInternship(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"jetlfj"},"content":"            requireNonNull(internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"jetlfj"},"content":"            internshipsAdded.add(internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"chantellyu"},"content":"        public ReadOnlyInTrack getInTrack() {","lastModifiedDate":"2022-10-13"},{"lineNumber":196,"author":{"gitId":"chantellyu"},"content":"            return new InTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jetlfj":40,"bigcrushes":5,"chantellyu":16,"-":139}},{"path":"src/test/java/seedu/intrack/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"    public void execute_emptyInTrack_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"    public void execute_nonEmptyInTrack_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"        Model model \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"        expectedModel.setInTrack(new InTrack());","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"chantellyu":32}},{"path":"src/test/java/seedu/intrack/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"chantellyu":1,"-":53}},{"path":"src/test/java/seedu/intrack/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"johnrhimawan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"johnrhimawan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.model.internship.Task;","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_NAME_AAPL \u003d \"Apple\";","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_NAME_MSFT \u003d \"Microsoft\";","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_POSITION_AAPL \u003d \"Software Engineer\";","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_POSITION_MSFT \u003d \"Frontend Developer\";","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_STATUS_AAPL \u003d \"Offered\";","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_STATUS_MSFT \u003d \"Progress\";","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_PHONE_AAPL \u003d \"11111111\";","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_PHONE_MSFT \u003d \"22222222\";","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_EMAIL_AAPL \u003d \"hr@apple.com\";","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_EMAIL_MSFT \u003d \"hr@microsoft.com\";","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_ADDRESS_AAPL \u003d \"Apple Park\";","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_ADDRESS_MSFT \u003d \"Microsoft Campus\";","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"johnrhimawan"},"content":"    public static final String VALID_TASK_AAPL \u003d \"Application submitted /at \"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"johnrhimawan"},"content":"            + LocalDateTime.now().truncatedTo(ChronoUnit.MINUTES).format(Task.FORMATTER);","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"johnrhimawan"},"content":"    public static final String VALID_TASK_MSFT \u003d \"Application submitted /at \"","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"johnrhimawan"},"content":"            + LocalDateTime.now().truncatedTo(ChronoUnit.MINUTES).format(Task.FORMATTER);","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_TAG_REMOTE \u003d \"Remote\";","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_TAG_URGENT \u003d \"Urgent\";","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_REMARK_AAPL \u003d \"Revise Trees\";","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"    public static final String VALID_REMARK_MSFT \u003d \"Revise Graphs\";","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"    public static final String NAME_DESC_AAPL \u003d \" \" + PREFIX_NAME + VALID_NAME_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"    public static final String NAME_DESC_MSFT \u003d \" \" + PREFIX_NAME + VALID_NAME_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"    public static final String POSITION_DESC_AAPL \u003d \" \" + PREFIX_POSITION + VALID_POSITION_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"    public static final String POSITION_DESC_MSFT \u003d \" \" + PREFIX_POSITION + VALID_POSITION_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"    public static final String PHONE_DESC_AAPL \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"    public static final String PHONE_DESC_MSFT \u003d \" \" + PREFIX_PHONE + VALID_PHONE_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"    public static final String EMAIL_DESC_AAPL \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"    public static final String EMAIL_DESC_MSFT \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"    public static final String ADDRESS_DESC_AAPL \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"    public static final String ADDRESS_DESC_MSFT \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"    public static final String TAG_DESC_REMOTE \u003d \" \" + PREFIX_TAG + VALID_TAG_REMOTE;","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"    public static final String TAG_DESC_URGENT \u003d \" \" + PREFIX_TAG + VALID_TAG_URGENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"kangqiao322"},"content":"    public static final String REMARK_DESC_AAPL \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AAPL;","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"kangqiao322"},"content":"    public static final String REMARK_DESC_MSFT \u003d \" \" + PREFIX_REMARK + VALID_REMARK_MSFT;","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Apple\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"jetlfj"},"content":"    public static final String INVALID_POSITION_DESC \u003d \" \" + PREFIX_POSITION; // empty string not allowed in positions","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"jetlfj"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"11111111a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"jetlfj"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"hr!apple\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"jetlfj"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"remote*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"jetlfj"},"content":"    public static final EditCommand.EditInternshipDescriptor DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"jetlfj"},"content":"    public static final EditCommand.EditInternshipDescriptor DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"jetlfj"},"content":"        DESC_AAPL \u003d new EditInternshipDescriptorBuilder().withName(VALID_NAME_AAPL)","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"jetlfj"},"content":"                .withPhone(VALID_PHONE_AAPL).withEmail(VALID_EMAIL_AAPL).withAddress(VALID_ADDRESS_AAPL)","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"jetlfj"},"content":"                .withTags(VALID_TAG_REMOTE).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"jetlfj"},"content":"        DESC_MSFT \u003d new EditInternshipDescriptorBuilder().withName(VALID_NAME_MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"jetlfj"},"content":"                .withPhone(VALID_PHONE_MSFT).withEmail(VALID_EMAIL_MSFT).withAddress(VALID_ADDRESS_MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"jetlfj"},"content":"                .withTags(VALID_TAG_REMOTE, VALID_TAG_URGENT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"chantellyu"},"content":"     * - the tracker, filtered internship list and selected internship in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"chantellyu"},"content":"        InTrack expectedInTrack \u003d new InTrack(actualModel.getInTrack());","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"jetlfj"},"content":"        List\u003cInternship\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredInternshipList());","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":131,"author":{"gitId":"chantellyu"},"content":"        assertEquals(expectedInTrack, actualModel.getInTrack());","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"jetlfj"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredInternshipList());","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"jetlfj"},"content":"     * Updates {@code model}\u0027s filtered list to show only the internship at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"chantellyu"},"content":"     * {@code model}\u0027s internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"jetlfj"},"content":"    public static void showInternshipAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"jetlfj"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredInternshipList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"jetlfj"},"content":"        Internship internship \u003d model.getFilteredInternshipList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"jetlfj"},"content":"        final String[] splitName \u003d internship.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"jetlfj"},"content":"        model.updateFilteredInternshipList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"jetlfj"},"content":"        assertEquals(1, model.getFilteredInternshipList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jetlfj":50,"johnrhimawan":7,"chantellyu":19,"kangqiao322":3,"-":69}},{"path":"src/test/java/seedu/intrack/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"    private Model model \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"        Internship internshipToDelete \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INTERNSHIP_SUCCESS, internshipToDelete);","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"chantellyu"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"        expectedModel.deleteInternship(internshipToDelete);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"jetlfj"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"jetlfj"},"content":"        Internship internshipToDelete \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INTERNSHIP_SUCCESS, internshipToDelete);","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"chantellyu"},"content":"        Model expectedModel \u003d new ModelManager(model.getInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"        expectedModel.deleteInternship(internshipToDelete);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"        showNoInternship(expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"chantellyu"},"content":"        // ensures that outOfBoundIndex is still in bounds of internship tracker list","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"chantellyu"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInTrack().getInternshipList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"jetlfj"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"jetlfj"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"jetlfj"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"jetlfj"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"jetlfj"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"jetlfj"},"content":"    private void showNoInternship(Model model) {","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"jetlfj"},"content":"        model.updateFilteredInternshipList(p -\u003e false);","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"jetlfj"},"content":"        assertTrue(model.getFilteredInternshipList().isEmpty());","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jetlfj":22,"chantellyu":18,"-":69}},{"path":"src/test/java/seedu/intrack/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_NAME_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_PHONE_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TAG_URGENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"    private Model model \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"    // Uncomment after updating Task","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"johnrhimawan"},"content":"    /*","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"        Internship editedInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder(editedInternship).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"        Model expectedModel \u003d new ModelManager(new InTrack(model.getInTrack()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"        expectedModel.setInternship(model.getFilteredInternshipList().get(0), editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"johnrhimawan"},"content":"    */","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"        Index indexLastInternship \u003d Index.fromOneBased(model.getFilteredInternshipList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"jetlfj"},"content":"        Internship lastInternship \u003d model.getFilteredInternshipList().get(indexLastInternship.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"        InternshipBuilder internshipInList \u003d new InternshipBuilder(lastInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"        Internship editedInternship \u003d internshipInList.withName(VALID_NAME_MSFT).withPhone(VALID_PHONE_MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"                .withTags(VALID_TAG_URGENT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withName(VALID_NAME_MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"                .withPhone(VALID_PHONE_MSFT).withTags(VALID_TAG_URGENT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastInternship, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"chantellyu"},"content":"        Model expectedModel \u003d new ModelManager(new InTrack(model.getInTrack()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"jetlfj"},"content":"        expectedModel.setInternship(lastInternship, editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"jetlfj"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, new EditInternshipDescriptor());","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"jetlfj"},"content":"        Internship editedInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"chantellyu"},"content":"        Model expectedModel \u003d new ModelManager(new InTrack(model.getInTrack()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"jetlfj"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"jetlfj"},"content":"        Internship internshipInFilteredList \u003d model.getFilteredInternshipList()","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"jetlfj"},"content":"                .get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"jetlfj"},"content":"        Internship editedInternship \u003d new InternshipBuilder(internshipInFilteredList).withName(VALID_NAME_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"jetlfj"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"jetlfj"},"content":"                new EditInternshipDescriptorBuilder().withName(VALID_NAME_MSFT).build());","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"chantellyu"},"content":"        Model expectedModel \u003d new ModelManager(new InTrack(model.getInTrack()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"jetlfj"},"content":"        expectedModel.setInternship(model.getFilteredInternshipList().get(0), editedInternship);","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"jetlfj"},"content":"    public void execute_duplicateInternshipUnfilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"jetlfj"},"content":"        Internship firstInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder(firstInternship).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"jetlfj"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_INTERNSHIP, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"jetlfj"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"jetlfj"},"content":"    public void execute_duplicateInternshipFilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"jetlfj"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"chantellyu"},"content":"        // edit internship in filtered list into a duplicate in internship tracker","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"chantellyu"},"content":"        Internship internshipInList \u003d model.getInTrack().getInternshipList()","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"jetlfj"},"content":"                .get(INDEX_SECOND_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"jetlfj"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"jetlfj"},"content":"                new EditInternshipDescriptorBuilder(internshipInList).build());","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"jetlfj"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"jetlfj"},"content":"    public void execute_invalidInternshipIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"jetlfj"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withName(VALID_NAME_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"jetlfj"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"chantellyu"},"content":"     * but smaller than size of internship tracker.","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"jetlfj"},"content":"    public void execute_invalidInternshipIndexFilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"jetlfj"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"jetlfj"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"chantellyu"},"content":"        // ensures that outOfBoundIndex is still in bounds of internship tracker list","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"chantellyu"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInTrack().getInternshipList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"jetlfj"},"content":"                new EditInternshipDescriptorBuilder().withName(VALID_NAME_MSFT).build());","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"jetlfj"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"jetlfj"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, DESC_AAPL);","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor copyDescriptor \u003d new EditInternshipDescriptor(DESC_AAPL);","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"jetlfj"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, copyDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"jetlfj"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_INTERNSHIP, DESC_AAPL)));","lastModifiedDate":"2022-10-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"jetlfj"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_INTERNSHIP, DESC_MSFT)));","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jetlfj":57,"johnrhimawan":4,"chantellyu":27,"-":87}},{"path":"src/test/java/seedu/intrack/logic/commands/EditInternshipDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_ADDRESS_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_EMAIL_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_NAME_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_PHONE_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_POSITION_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TAG_URGENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":"public class EditInternshipDescriptorTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor descriptorWithSameValues \u003d new EditInternshipDescriptor(DESC_AAPL);","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"        assertTrue(DESC_AAPL.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"        assertTrue(DESC_AAPL.equals(DESC_AAPL));","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"        assertFalse(DESC_AAPL.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"        assertFalse(DESC_AAPL.equals(5));","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"        assertFalse(DESC_AAPL.equals(DESC_MSFT));","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor editedAapl \u003d new EditInternshipDescriptorBuilder(DESC_AAPL).withName(VALID_NAME_MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"                .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"        assertFalse(DESC_AAPL.equals(editedAapl));","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"bigcrushes"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"        editedAapl \u003d new EditInternshipDescriptorBuilder(DESC_AAPL).withPosition(VALID_POSITION_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"        assertFalse(DESC_AAPL.equals(editedAapl));","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"        editedAapl \u003d new EditInternshipDescriptorBuilder(DESC_AAPL).withPhone(VALID_PHONE_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"        assertFalse(DESC_AAPL.equals(editedAapl));","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"        editedAapl \u003d new EditInternshipDescriptorBuilder(DESC_AAPL).withEmail(VALID_EMAIL_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"jetlfj"},"content":"        assertFalse(DESC_AAPL.equals(editedAapl));","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"johnrhimawan"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"        // editedAapl \u003d new EditInternshipDescriptorBuilder(DESC_AAPL).withStatus(VALID_STATUS_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"        // assertFalse(DESC_AAPL.equals(editedAapl));","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"        editedAapl \u003d new EditInternshipDescriptorBuilder(DESC_AAPL).withAddress(VALID_ADDRESS_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"        assertFalse(DESC_AAPL.equals(editedAapl));","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"        editedAapl \u003d new EditInternshipDescriptorBuilder(DESC_AAPL).withTags(VALID_TAG_URGENT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"        assertFalse(DESC_AAPL.equals(editedAapl));","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jetlfj":30,"bigcrushes":2,"johnrhimawan":2,"chantellyu":3,"-":31}},{"path":"src/test/java/seedu/intrack/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chantellyu":5,"-":15}},{"path":"src/test/java/seedu/intrack/logic/commands/FindNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INTERNSHIPS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.CARL;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.ELLE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.FIONA;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":" * Contains integration tests (interaction with the Model) for {@code FindNameCommand}.","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"public class FindNameCommandTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"    private Model model \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"        FindNameCommand findFirstCommand \u003d new FindNameCommand(firstPredicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"        FindNameCommand findSecondCommand \u003d new FindNameCommand(secondPredicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"chantellyu"},"content":"        FindNameCommand findFirstCommandCopy \u003d new FindNameCommand(firstPredicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"    public void execute_zeroKeywords_noInternshipFound() {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"chantellyu"},"content":"        FindNameCommand command \u003d new FindNameCommand(predicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredInternshipList());","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"    public void execute_multipleKeywords_multipleInternshipsFound() {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"chantellyu"},"content":"        FindNameCommand command \u003d new FindNameCommand(predicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jetlfj"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"jetlfj"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredInternshipList());","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jetlfj":9,"chantellyu":20,"-":54}},{"path":"src/test/java/seedu/intrack/logic/commands/FindPositionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INTERNSHIPS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.CARL;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.ELLE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.FIONA;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.PositionContainsKeywordsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPositionCommand}.","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"public class FindPositionCommandTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"    private Model model \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"        PositionContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"                new PositionContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"chantellyu"},"content":"        PositionContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"                new PositionContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"        FindPositionCommand findFirstCommand \u003d new FindPositionCommand(firstPredicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"        FindPositionCommand findSecondCommand \u003d new FindPositionCommand(secondPredicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"chantellyu"},"content":"        FindPositionCommand findFirstCommandCopy \u003d new FindPositionCommand(firstPredicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"    public void execute_zeroKeywords_noInternshipFound() {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"chantellyu"},"content":"        PositionContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"chantellyu"},"content":"        FindPositionCommand command \u003d new FindPositionCommand(predicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredInternshipList());","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"    public void execute_multipleKeywords_multipleInternshipsFound() {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"chantellyu"},"content":"        PositionContainsKeywordsPredicate predicate \u003d preparePredicate(\"Frontend Stack Security\");","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"chantellyu"},"content":"        FindPositionCommand command \u003d new FindPositionCommand(predicate);","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jetlfj"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"jetlfj"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredInternshipList());","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"chantellyu"},"content":"     * Parses {@code userInput} into a {@code PositionContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"chantellyu"},"content":"    private PositionContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"chantellyu"},"content":"        return new PositionContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jetlfj":9,"chantellyu":29,"-":45}},{"path":"src/test/java/seedu/intrack/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chantellyu":5,"-":15}},{"path":"src/test/java/seedu/intrack/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"        model \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"        expectedModel \u003d new ModelManager(model.getInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jetlfj":1,"chantellyu":10,"-":28}},{"path":"src/test/java/seedu/intrack/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kangqiao322"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"kangqiao322"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"kangqiao322"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_REMARK_AAPL;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_REMARK_MSFT;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"kangqiao322"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.internship.Remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"kangqiao322"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"kangqiao322"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"kangqiao322"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"kangqiao322"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"kangqiao322"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"kangqiao322"},"content":"    private Model model \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"kangqiao322"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"kangqiao322"},"content":"        Internship firstInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"kangqiao322"},"content":"        Internship editedInternship \u003d new InternshipBuilder(firstInternship).withRemark(REMARK_STUB).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"kangqiao322"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"kangqiao322"},"content":"                new Remark(editedInternship.getRemark().value));","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"kangqiao322"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"kangqiao322"},"content":"                editedInternship);","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"kangqiao322"},"content":"        Model expectedModel \u003d new ModelManager(new InTrack(model.getInTrack()), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"kangqiao322"},"content":"        expectedModel.setInternship(firstInternship, editedInternship);","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"kangqiao322"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"kangqiao322"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"kangqiao322"},"content":"        Internship firstInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"kangqiao322"},"content":"                .getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"kangqiao322"},"content":"        Internship editedInternship \u003d new InternshipBuilder(firstInternship).withRemark(\"\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"kangqiao322"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"kangqiao322"},"content":"                new Remark(editedInternship.getRemark().toString()));","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"kangqiao322"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"kangqiao322"},"content":"        Model expectedModel \u003d new ModelManager(new InTrack(model.getInTrack()), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"kangqiao322"},"content":"        expectedModel.setInternship(firstInternship, editedInternship);","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"kangqiao322"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"kangqiao322"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"kangqiao322"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"kangqiao322"},"content":"        Internship firstInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"kangqiao322"},"content":"                .getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"kangqiao322"},"content":"        Internship editedInternship \u003d new InternshipBuilder(model.getFilteredInternshipList()","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"kangqiao322"},"content":"                .get(INDEX_FIRST_INTERNSHIP.getZeroBased()))","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"kangqiao322"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"kangqiao322"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"kangqiao322"},"content":"                new Remark(editedInternship.getRemark().value));","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"kangqiao322"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"kangqiao322"},"content":"                editedInternship);","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"kangqiao322"},"content":"        Model expectedModel \u003d new ModelManager(new InTrack(model.getInTrack()), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"kangqiao322"},"content":"        expectedModel.setInternship(firstInternship, editedInternship);","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"kangqiao322"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"kangqiao322"},"content":"    public void execute_invalidInternshipIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"kangqiao322"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"kangqiao322"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_MSFT));","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"kangqiao322"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"kangqiao322"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"kangqiao322"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"kangqiao322"},"content":"     * but smaller than size of intrack book","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"kangqiao322"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"kangqiao322"},"content":"    public void execute_invalidInternshipIndexFilteredList_failure() {","lastModifiedDate":"2022-10-17"},{"lineNumber":105,"author":{"gitId":"kangqiao322"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"kangqiao322"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"kangqiao322"},"content":"        // ensures that outOfBoundIndex is still in bounds of intrack book list","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"kangqiao322"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInTrack().getInternshipList().size());","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"kangqiao322"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_MSFT));","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"kangqiao322"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"kangqiao322"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"kangqiao322"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"kangqiao322"},"content":"                new Remark(VALID_REMARK_AAPL));","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"kangqiao322"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"kangqiao322"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"kangqiao322"},"content":"                new Remark(VALID_REMARK_AAPL));","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"kangqiao322"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"kangqiao322"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"kangqiao322"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"kangqiao322"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"kangqiao322"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":130,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"kangqiao322"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"kangqiao322"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"kangqiao322"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"kangqiao322"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_INTERNSHIP,","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"kangqiao322"},"content":"                new Remark(VALID_REMARK_AAPL))));","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"kangqiao322"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":139,"author":{"gitId":"kangqiao322"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"kangqiao322"},"content":"                new Remark(VALID_REMARK_MSFT))));","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"kangqiao322"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"kangqiao322":142}},{"path":"src/test/java/seedu/intrack/logic/commands/StatsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bigcrushes"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"bigcrushes"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INTERNSHIPS_STATS_OVERVIEW;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bigcrushes"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"bigcrushes"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"bigcrushes"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"bigcrushes"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"bigcrushes"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"bigcrushes"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"bigcrushes"},"content":"import seedu.intrack.model.internship.StatusIsKeywordPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bigcrushes"},"content":"public class StatsCommandTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bigcrushes"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"bigcrushes"},"content":"    public void execute_emptyInTrack_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"bigcrushes"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"bigcrushes"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"bigcrushes"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIPS_STATS_OVERVIEW, 0, 0.00, 0, 0.00, 0, 0.00);","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"bigcrushes"},"content":"        assertCommandSuccess(new StatsCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"bigcrushes"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"bigcrushes"},"content":"    public void execute_nonEmptyInTrack_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"bigcrushes"},"content":"        Model model \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"bigcrushes"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"bigcrushes"},"content":"        int offered \u003d model.getFilteredStatusInternshipListSize(new StatusIsKeywordPredicate(\"Offered\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"bigcrushes"},"content":"        int progress \u003d model.getFilteredStatusInternshipListSize(new StatusIsKeywordPredicate(\"Progress\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"bigcrushes"},"content":"        int rejected \u003d model.getFilteredStatusInternshipListSize(new StatusIsKeywordPredicate(\"Rejected\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"bigcrushes"},"content":"        int total \u003d offered + progress + rejected;","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"bigcrushes"},"content":"        float offeredPercentage \u003d (float) offered / total * 100;","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"bigcrushes"},"content":"        float progressPercentage \u003d (float) progress / total * 100;","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"bigcrushes"},"content":"        float rejectedPercentage \u003d (float) rejected / total * 100;","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"bigcrushes"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"bigcrushes"},"content":"                MESSAGE_INTERNSHIPS_STATS_OVERVIEW, offered, offeredPercentage, progress, progressPercentage,","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"bigcrushes"},"content":"                rejected, rejectedPercentage);","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"bigcrushes"},"content":"        assertCommandSuccess(new StatsCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"bigcrushes"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"bigcrushes":48}},{"path":"src/test/java/seedu/intrack/logic/commands/StatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"kangqiao322"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_STATUS_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"kangqiao322"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Status;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"kangqiao322"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"kangqiao322"},"content":" * Contains integration tests (interaction with the Model) and unit tests for StatusCommand.","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"kangqiao322"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"kangqiao322"},"content":"class StatusCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"    private static final String STATUS_STUB \u003d \"Progress\";","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"    private Model model \u003d new ModelManager(getTypicalInTrack(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"kangqiao322"},"content":"    //not testing equals and delete status yet","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"kangqiao322"},"content":"    void execute_updateStatusUnfilteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"kangqiao322"},"content":"        Internship firstInternship \u003d model.getFilteredInternshipList()","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"kangqiao322"},"content":"                .get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"kangqiao322"},"content":"        Internship editedInternship \u003d new InternshipBuilder(firstInternship)","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"kangqiao322"},"content":"                .withStatus(STATUS_STUB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"kangqiao322"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"kangqiao322"},"content":"                new Status(editedInternship.getStatus().value));","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d String.format(statusCommand.MESSAGE_UPDATE_STATUS_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"chantellyu"},"content":"        Model expectedModel \u003d new ModelManager(new InTrack(model.getInTrack()),","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"kangqiao322"},"content":"                new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"kangqiao322"},"content":"        expectedModel.setInternship(firstInternship, editedInternship);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"kangqiao322"},"content":"        assertCommandSuccess(statusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"kangqiao322"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"kangqiao322"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"kangqiao322"},"content":"        Internship firstInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"kangqiao322"},"content":"        Internship editedInternship \u003d new InternshipBuilder(model.getFilteredInternshipList()","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"kangqiao322"},"content":"                .get(INDEX_FIRST_INTERNSHIP.getZeroBased()))","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"kangqiao322"},"content":"                .withStatus(STATUS_STUB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"kangqiao322"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"kangqiao322"},"content":"                new Status(editedInternship.getStatus().value));","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"kangqiao322"},"content":"        String expectedMessage \u003d String.format(statusCommand.MESSAGE_UPDATE_STATUS_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"chantellyu"},"content":"        Model expectedModel \u003d new ModelManager(new InTrack(model.getInTrack()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"kangqiao322"},"content":"        expectedModel.setInternship(firstInternship, editedInternship);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"kangqiao322"},"content":"        assertCommandSuccess(statusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"kangqiao322"},"content":"    public void execute_invalidInternshipIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"kangqiao322"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jetlfj"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(outOfBoundIndex, new Status(VALID_STATUS_MSFT));","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"kangqiao322"},"content":"        assertCommandFailure(statusCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"kangqiao322"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"kangqiao322"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"kangqiao322"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"kangqiao322"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"kangqiao322"},"content":"    public void execute_invalidInternshipIndexFilteredList_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"kangqiao322"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"kangqiao322"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"kangqiao322"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"chantellyu"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInTrack().getInternshipList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"jetlfj"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(outOfBoundIndex, new Status(VALID_STATUS_MSFT));","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"kangqiao322"},"content":"        assertCommandFailure(statusCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"kangqiao322"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jetlfj":5,"chantellyu":20,"kangqiao322":74}},{"path":"src/test/java/seedu/intrack/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.ADDRESS_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.ADDRESS_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.EMAIL_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.EMAIL_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.NAME_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.NAME_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.PHONE_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.PHONE_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.POSITION_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.POSITION_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.TAG_DESC_REMOTE;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.TAG_DESC_URGENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_ADDRESS_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_EMAIL_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_NAME_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_PHONE_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_POSITION_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TAG_REMOTE;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TAG_URGENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.testutil.TypicalInternships.MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"import seedu.intrack.model.internship.Position;","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"jetlfj"},"content":"        Internship expectedInternship \u003d new InternshipBuilder(MSFT).withTags(VALID_TAG_REMOTE).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"                + EMAIL_DESC_MSFT + ADDRESS_DESC_MSFT + TAG_DESC_REMOTE, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"        assertParseSuccess(parser, NAME_DESC_AAPL + NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"                + EMAIL_DESC_MSFT + ADDRESS_DESC_MSFT + TAG_DESC_REMOTE, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"        // multiple positions - last name accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"        assertParseSuccess(parser, NAME_DESC_MSFT + POSITION_DESC_AAPL + POSITION_DESC_MSFT + PHONE_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"                + EMAIL_DESC_MSFT + ADDRESS_DESC_MSFT + TAG_DESC_REMOTE, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"jetlfj"},"content":"        assertParseSuccess(parser, NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_AAPL + PHONE_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"                + EMAIL_DESC_MSFT + ADDRESS_DESC_MSFT + TAG_DESC_REMOTE, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"jetlfj"},"content":"        assertParseSuccess(parser, NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT + EMAIL_DESC_AAPL","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"jetlfj"},"content":"                + EMAIL_DESC_MSFT + ADDRESS_DESC_MSFT + TAG_DESC_REMOTE, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"jetlfj"},"content":"        assertParseSuccess(parser, NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT + EMAIL_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"jetlfj"},"content":"                + ADDRESS_DESC_AAPL + ADDRESS_DESC_MSFT + TAG_DESC_REMOTE, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"jetlfj"},"content":"        Internship expectedInternshipMultipleTags \u003d new InternshipBuilder(MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"jetlfj"},"content":"                .withTags(VALID_TAG_REMOTE, VALID_TAG_URGENT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"jetlfj"},"content":"        assertParseSuccess(parser, NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT + EMAIL_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"jetlfj"},"content":"                + ADDRESS_DESC_MSFT + TAG_DESC_REMOTE + TAG_DESC_URGENT,","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"jetlfj"},"content":"                new AddCommand(expectedInternshipMultipleTags));","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"johnrhimawan"},"content":"        Internship expectedInternship \u003d new InternshipBuilder(MSFT).withTags().build();","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"johnrhimawan"},"content":"        assertParseSuccess(parser, NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"johnrhimawan"},"content":"                + EMAIL_DESC_MSFT + ADDRESS_DESC_MSFT, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, VALID_NAME_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT + EMAIL_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"jetlfj"},"content":"                + ADDRESS_DESC_MSFT, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"jetlfj"},"content":"        // missing name prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, NAME_DESC_MSFT + VALID_POSITION_MSFT + PHONE_DESC_MSFT + EMAIL_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"jetlfj"},"content":"                + ADDRESS_DESC_MSFT, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, NAME_DESC_MSFT + POSITION_DESC_MSFT + VALID_PHONE_MSFT + EMAIL_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"jetlfj"},"content":"                + ADDRESS_DESC_MSFT, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT + VALID_EMAIL_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"jetlfj"},"content":"                + ADDRESS_DESC_MSFT, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT + EMAIL_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"jetlfj"},"content":"                + VALID_ADDRESS_MSFT, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, VALID_NAME_MSFT + VALID_POSITION_MSFT + VALID_PHONE_MSFT + VALID_EMAIL_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"jetlfj"},"content":"                + VALID_ADDRESS_MSFT, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + POSITION_DESC_MSFT + PHONE_DESC_MSFT + EMAIL_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"jetlfj"},"content":"                + ADDRESS_DESC_MSFT + TAG_DESC_URGENT + TAG_DESC_REMOTE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"jetlfj"},"content":"        // invalid position","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, NAME_DESC_MSFT + INVALID_POSITION_DESC + PHONE_DESC_MSFT + EMAIL_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"jetlfj"},"content":"                + ADDRESS_DESC_MSFT + TAG_DESC_URGENT + TAG_DESC_REMOTE, Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, NAME_DESC_MSFT + POSITION_DESC_MSFT + INVALID_PHONE_DESC + EMAIL_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"jetlfj"},"content":"                + ADDRESS_DESC_MSFT + TAG_DESC_URGENT + TAG_DESC_REMOTE, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"jetlfj"},"content":"                + ADDRESS_DESC_MSFT + TAG_DESC_URGENT + TAG_DESC_REMOTE, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT + EMAIL_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"jetlfj"},"content":"                + INVALID_ADDRESS_DESC + TAG_DESC_URGENT + TAG_DESC_REMOTE,","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"bigcrushes"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT + EMAIL_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"jetlfj"},"content":"                + ADDRESS_DESC_MSFT + INVALID_TAG_DESC + VALID_TAG_REMOTE, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + POSITION_DESC_MSFT + PHONE_DESC_MSFT + EMAIL_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"jetlfj"},"content":"                + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_MSFT + POSITION_DESC_MSFT + PHONE_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"jetlfj"},"content":"                + EMAIL_DESC_MSFT + ADDRESS_DESC_MSFT + TAG_DESC_URGENT + TAG_DESC_REMOTE,","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jetlfj":74,"johnrhimawan":3,"bigcrushes":1,"chantellyu":19,"-":62}},{"path":"src/test/java/seedu/intrack/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"chantellyu":1,"-":149}},{"path":"src/test/java/seedu/intrack/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"chantellyu":3,"-":36}},{"path":"src/test/java/seedu/intrack/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_INTERNSHIP));","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jetlfj":1,"chantellyu":6,"-":25}},{"path":"src/test/java/seedu/intrack/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.ADDRESS_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.ADDRESS_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.EMAIL_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.EMAIL_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.NAME_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.PHONE_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.PHONE_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.TAG_DESC_REMOTE;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.TAG_DESC_URGENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_ADDRESS_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_ADDRESS_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_EMAIL_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_EMAIL_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_NAME_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_PHONE_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_PHONE_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TAG_REMOTE;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TAG_URGENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_THIRD_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, VALID_NAME_AAPL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AAPL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AAPL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AAPL, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_MSFT + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"jetlfj"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Internship} being edited,","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_REMOTE + TAG_DESC_URGENT + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_REMOTE + TAG_EMPTY + TAG_DESC_URGENT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_REMOTE + TAG_DESC_URGENT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"jetlfj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AAPL + VALID_PHONE_AAPL,","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"jetlfj"},"content":"        Index targetIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"jetlfj"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_MSFT + TAG_DESC_URGENT","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"jetlfj"},"content":"                + EMAIL_DESC_AAPL + ADDRESS_DESC_AAPL + NAME_DESC_AAPL + TAG_DESC_REMOTE;","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withName(VALID_NAME_AAPL)","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"jetlfj"},"content":"                .withPhone(VALID_PHONE_MSFT).withEmail(VALID_EMAIL_AAPL).withAddress(VALID_ADDRESS_AAPL)","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"jetlfj"},"content":"                .withTags(VALID_TAG_URGENT, VALID_TAG_REMOTE).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"jetlfj"},"content":"        Index targetIndex \u003d INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"jetlfj"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_MSFT + EMAIL_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withPhone(VALID_PHONE_MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"jetlfj"},"content":"                .withEmail(VALID_EMAIL_AAPL).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"jetlfj"},"content":"        Index targetIndex \u003d INDEX_THIRD_INTERNSHIP;","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"jetlfj"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withName(VALID_NAME_AAPL).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"jetlfj"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"jetlfj"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withPhone(VALID_PHONE_AAPL).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"jetlfj"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"jetlfj"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withEmail(VALID_EMAIL_AAPL).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"jetlfj"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"jetlfj"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withAddress(VALID_ADDRESS_AAPL).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"jetlfj"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_REMOTE;","lastModifiedDate":"2022-10-14"},{"lineNumber":163,"author":{"gitId":"jetlfj"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withTags(VALID_TAG_REMOTE).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"jetlfj"},"content":"        Index targetIndex \u003d INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"jetlfj"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AAPL + ADDRESS_DESC_AAPL + EMAIL_DESC_AAPL","lastModifiedDate":"2022-10-14"},{"lineNumber":172,"author":{"gitId":"jetlfj"},"content":"                + TAG_DESC_REMOTE + PHONE_DESC_AAPL + ADDRESS_DESC_AAPL + EMAIL_DESC_AAPL + TAG_DESC_REMOTE","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"jetlfj"},"content":"                + PHONE_DESC_MSFT + ADDRESS_DESC_MSFT + EMAIL_DESC_MSFT + TAG_DESC_URGENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withPhone(VALID_PHONE_MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"jetlfj"},"content":"                .withEmail(VALID_EMAIL_MSFT).withAddress(VALID_ADDRESS_MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":177,"author":{"gitId":"jetlfj"},"content":"                .withTags(VALID_TAG_REMOTE, VALID_TAG_URGENT)","lastModifiedDate":"2022-10-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"jetlfj"},"content":"        Index targetIndex \u003d INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"jetlfj"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":189,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withPhone(VALID_PHONE_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"jetlfj"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_MSFT + INVALID_PHONE_DESC + ADDRESS_DESC_MSFT","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"jetlfj"},"content":"                + PHONE_DESC_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":196,"author":{"gitId":"jetlfj"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withPhone(VALID_PHONE_MSFT).withEmail(VALID_EMAIL_MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":197,"author":{"gitId":"jetlfj"},"content":"                .withAddress(VALID_ADDRESS_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":204,"author":{"gitId":"jetlfj"},"content":"        Index targetIndex \u003d INDEX_THIRD_INTERNSHIP;","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jetlfj":65,"chantellyu":22,"-":125}},{"path":"src/test/java/seedu/intrack/logic/parser/FindNameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.FindNameCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"public class FindNameCommandParserTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"    private FindNameCommandParser parser \u003d new FindNameCommandParser();","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"                FindNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"        FindNameCommand expectedFindNameCommand \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"                new FindNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindNameCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindNameCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"chantellyu":14,"-":21}},{"path":"src/test/java/seedu/intrack/logic/parser/FindPositionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.FindPositionCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.PositionContainsKeywordsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"public class FindPositionCommandParserTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"    private FindPositionCommandParser parser \u003d new FindPositionCommandParser();","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"                FindPositionCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"        FindPositionCommand expectedFindPositionCommand \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"                new FindPositionCommand(new PositionContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindPositionCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindPositionCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"chantellyu":14,"-":21}},{"path":"src/test/java/seedu/intrack/logic/parser/InTrackParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.FindNameCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.FindPositionCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.logic.commands.RemarkCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"import seedu.intrack.logic.commands.StatusCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.PositionContainsKeywordsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.internship.Remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"import seedu.intrack.model.internship.Status;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"public class InTrackParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"    private final InTrackParser parser \u003d new InTrackParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"        Internship internship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(InternshipUtil.getAddCommand(internship));","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"        assertEquals(new AddCommand(internship), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_INTERNSHIP.getOneBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_INTERNSHIP), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"        Internship internship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder(internship).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"                + INDEX_FIRST_INTERNSHIP.getOneBased() + \" \"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"jetlfj"},"content":"                + InternshipUtil.getEditInternshipDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_INTERNSHIP, descriptor), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"chantellyu"},"content":"    public void parseCommand_findName() throws Exception {","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"chantellyu"},"content":"        FindNameCommand command \u003d (FindNameCommand) parser.parseCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"chantellyu"},"content":"                FindNameCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"chantellyu"},"content":"        assertEquals(new FindNameCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"chantellyu"},"content":"    public void parseCommand_findPosition() throws Exception {","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"chantellyu"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"chantellyu"},"content":"        FindPositionCommand command \u003d (FindPositionCommand) parser.parseCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"chantellyu"},"content":"                FindPositionCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"chantellyu"},"content":"        assertEquals(new FindPositionCommand(new PositionContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"jetlfj"},"content":"    public void parseCommand_status() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"jetlfj"},"content":"        StatusCommand command \u003d (StatusCommand) parser.parseCommand(StatusCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"jetlfj"},"content":"                + INDEX_FIRST_INTERNSHIP.getOneBased() + \" o\");","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"jetlfj"},"content":"        assertEquals(new StatusCommand(INDEX_FIRST_INTERNSHIP, new Status(\"Offered\")), command);","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"kangqiao322"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"kangqiao322"},"content":"        final Remark remark \u003d new Remark(\"New remark.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"kangqiao322"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"kangqiao322"},"content":"                + INDEX_FIRST_INTERNSHIP.getOneBased() + \" \" + PREFIX_REMARK + remark.value);","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"kangqiao322"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_INTERNSHIP, remark), command);","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jetlfj":19,"chantellyu":36,"kangqiao322":11,"-":66}},{"path":"src/test/java/seedu/intrack/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"        assertEquals(INDEX_FIRST_INTERNSHIP, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"        assertEquals(INDEX_FIRST_INTERNSHIP, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jetlfj":2,"chantellyu":10,"-":184}},{"path":"src/test/java/seedu/intrack/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kangqiao322"},"content":"package seedu.intrack.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"kangqiao322"},"content":"import static seedu.intrack.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"kangqiao322"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.logic.commands.RemarkCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.internship.Remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"kangqiao322"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"kangqiao322"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"kangqiao322"},"content":"    private final String nonEmptyRemark \u003d \"New remark.\";","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"kangqiao322"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"kangqiao322"},"content":"        // remark present","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"kangqiao322"},"content":"        Index targetIndex \u003d INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"kangqiao322"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"kangqiao322"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_INTERNSHIP, new Remark(nonEmptyRemark));","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"kangqiao322"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"kangqiao322"},"content":"        // remark not present","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"kangqiao322"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"kangqiao322"},"content":"        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_INTERNSHIP, new Remark(\"\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"kangqiao322"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"kangqiao322"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"kangqiao322"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"kangqiao322"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"kangqiao322"},"content":"        // no parameters","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"kangqiao322"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"kangqiao322"},"content":"        // no index","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"kangqiao322"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"kangqiao322"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"kangqiao322":43}},{"path":"src/test/java/seedu/intrack/model/InTrackTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_ADDRESS_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TAG_URGENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.exceptions.DuplicateInternshipException;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"public class InTrackTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"    private final InTrack inTrack \u003d new InTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"        assertEquals(Collections.emptyList(), inTrack.getInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"chantellyu"},"content":"        assertThrows(NullPointerException.class, () -\u003e inTrack.resetData(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"    public void resetData_withValidReadOnlyInTrack_replacesData() {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"        InTrack newData \u003d getTypicalInTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"chantellyu"},"content":"        inTrack.resetData(newData);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"chantellyu"},"content":"        assertEquals(newData, inTrack);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"chantellyu"},"content":"    public void resetData_withDuplicateInternships_throwsDuplicateInternshipException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"chantellyu"},"content":"        // Two internships with the same identity fields","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"        Internship editedAlice \u003d new InternshipBuilder(ALICE).withAddress(VALID_ADDRESS_MSFT).withTags(VALID_TAG_URGENT)","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"chantellyu"},"content":"                .build();","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"chantellyu"},"content":"        List\u003cInternship\u003e newInternships \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"chantellyu"},"content":"        InTrackStub newData \u003d new InTrackStub(newInternships);","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"chantellyu"},"content":"        assertThrows(DuplicateInternshipException.class, () -\u003e inTrack.resetData(newData));","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"chantellyu"},"content":"    public void hasInternship_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"chantellyu"},"content":"        assertThrows(NullPointerException.class, () -\u003e inTrack.hasInternship(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"chantellyu"},"content":"    public void hasInternship_internshipNotInInTrack_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"chantellyu"},"content":"        assertFalse(inTrack.hasInternship(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"chantellyu"},"content":"    public void hasInternship_internshipInInTrack_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"chantellyu"},"content":"        inTrack.addInternship(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"chantellyu"},"content":"        assertTrue(inTrack.hasInternship(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"chantellyu"},"content":"    public void hasInternship_internshipWithSameIdentityFieldsInInTrack_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"chantellyu"},"content":"        inTrack.addInternship(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"jetlfj"},"content":"        Internship editedAlice \u003d new InternshipBuilder(ALICE).withAddress(VALID_ADDRESS_MSFT).withTags(VALID_TAG_URGENT)","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"chantellyu"},"content":"                .build();","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"chantellyu"},"content":"        assertTrue(inTrack.hasInternship(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"chantellyu"},"content":"    public void getInternshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"chantellyu"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e inTrack.getInternshipList().remove(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"chantellyu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"chantellyu"},"content":"     * A stub ReadOnlyInTrack whose internships list can violate interface constraints.","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"chantellyu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"chantellyu"},"content":"    private static class InTrackStub implements ReadOnlyInTrack {","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"chantellyu"},"content":"        private final ObservableList\u003cInternship\u003e internships \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"chantellyu"},"content":"        InTrackStub(Collection\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"chantellyu"},"content":"            this.internships.setAll(internships);","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"chantellyu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"chantellyu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"chantellyu"},"content":"        public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"chantellyu"},"content":"            return internships;","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"chantellyu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jetlfj":4,"chantellyu":98}},{"path":"src/test/java/seedu/intrack/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.BENSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"bigcrushes"},"content":"import seedu.intrack.model.internship.StatusIsKeywordPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InTrackBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"        assertEquals(new InTrack(), new InTrack(modelManager.getInTrack()));","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"        userPrefs.setInTrackFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"chantellyu"},"content":"        userPrefs.setInTrackFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"chantellyu"},"content":"    public void setInTrackFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"chantellyu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setInTrackFilePath(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"chantellyu"},"content":"    public void setInTrackFilePath_validPath_setsInTrackFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"chantellyu"},"content":"        modelManager.setInTrackFilePath(path);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"chantellyu"},"content":"        assertEquals(path, modelManager.getInTrackFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"jetlfj"},"content":"    public void hasInternship_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"jetlfj"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasInternship(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"chantellyu"},"content":"    public void hasInternship_internshipNotInInTrack_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"jetlfj"},"content":"        assertFalse(modelManager.hasInternship(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"chantellyu"},"content":"    public void hasInternship_internshipInInTrack_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"jetlfj"},"content":"        modelManager.addInternship(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"jetlfj"},"content":"        assertTrue(modelManager.hasInternship(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"jetlfj"},"content":"    public void getFilteredInternshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"jetlfj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredInternshipList().remove(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"bigcrushes"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"bigcrushes"},"content":"    public void getFilteredStatusInternshipListSize_emptyList_returnsZero() {","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"bigcrushes"},"content":"        modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"bigcrushes"},"content":"        assertEquals(0, modelManager.getFilteredStatusInternshipListSize(new StatusIsKeywordPredicate(\"Offered\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"bigcrushes"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"bigcrushes"},"content":"    public void getFilteredStatusInternshipListSize_oneStatusFound() {","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"bigcrushes"},"content":"        modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"bigcrushes"},"content":"        modelManager.addInternship(ALICE);","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"bigcrushes"},"content":"        assertEquals(1, modelManager.getFilteredStatusInternshipListSize(","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"bigcrushes"},"content":"                new StatusIsKeywordPredicate(ALICE.getStatus().value)));","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"chantellyu"},"content":"        InTrack inTrack \u003d new InTrackBuilder().withInternship(ALICE).withInternship(BENSON).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"chantellyu"},"content":"        InTrack differentInTrack \u003d new InTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"chantellyu"},"content":"        modelManager \u003d new ModelManager(inTrack, userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"chantellyu"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(inTrack, userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"chantellyu"},"content":"        // different inTrack -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"chantellyu"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentInTrack, userPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":136,"author":{"gitId":"jetlfj"},"content":"        modelManager.updateFilteredInternshipList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"chantellyu"},"content":"        assertFalse(modelManager.equals(new ModelManager(inTrack, userPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"jetlfj"},"content":"        modelManager.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"chantellyu"},"content":"        differentUserPrefs.setInTrackFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"chantellyu"},"content":"        assertFalse(modelManager.equals(new ModelManager(inTrack, differentUserPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jetlfj":9,"bigcrushes":15,"chantellyu":27,"-":96}},{"path":"src/test/java/seedu/intrack/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"    public void setInTrackFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setInTrackFilePath(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"chantellyu":4,"-":17}},{"path":"src/test/java/seedu/intrack/model/internship/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chantellyu":2,"-":34}},{"path":"src/test/java/seedu/intrack/model/internship/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chantellyu":2,"-":66}},{"path":"src/test/java/seedu/intrack/model/internship/InternshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_ADDRESS_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_EMAIL_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_NAME_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_PHONE_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_POSITION_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_STATUS_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TAG_URGENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.testutil.TypicalInternships.MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":"public class InternshipTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"        Internship internship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e internship.getTags().remove(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"    public void isSameInternship() {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"        assertTrue(ALICE.isSameInternship(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"        assertFalse(ALICE.isSameInternship(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"        Internship editedAlice \u003d new InternshipBuilder(ALICE).withPhone(VALID_PHONE_MSFT).withEmail(VALID_EMAIL_MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"                .withStatus(VALID_STATUS_MSFT).withAddress(VALID_ADDRESS_MSFT).withTags(VALID_TAG_URGENT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"        assertTrue(ALICE.isSameInternship(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withName(VALID_NAME_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"        assertFalse(ALICE.isSameInternship(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"bigcrushes"},"content":"        // different position, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withPosition(VALID_POSITION_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"bigcrushes"},"content":"        assertFalse(ALICE.isSameInternship(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"bigcrushes"},"content":"        // same name, same position, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withPhone(VALID_PHONE_MSFT).withEmail(VALID_EMAIL_MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"                .withStatus(VALID_STATUS_MSFT).withAddress(VALID_ADDRESS_MSFT).withTags(VALID_TAG_URGENT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"bigcrushes"},"content":"        assertTrue(ALICE.isSameInternship(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"bigcrushes"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"        Internship editedMsft \u003d new InternshipBuilder(MSFT).withName(VALID_NAME_MSFT.toLowerCase()).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"bigcrushes"},"content":"        assertTrue(MSFT.isSameInternship(editedMsft));","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"bigcrushes"},"content":"        // position differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"bigcrushes"},"content":"        editedMsft \u003d new InternshipBuilder(MSFT).withPosition(VALID_POSITION_MSFT.toLowerCase()).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"bigcrushes"},"content":"        assertTrue(MSFT.isSameInternship(editedMsft));","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_MSFT + \" \";","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"        editedMsft \u003d new InternshipBuilder(MSFT).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"        assertFalse(MSFT.isSameInternship(editedMsft));","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"jetlfj"},"content":"        Internship aliceCopy \u003d new InternshipBuilder(ALICE).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"jetlfj"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"jetlfj"},"content":"        assertFalse(ALICE.equals(MSFT));","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"jetlfj"},"content":"        Internship editedAlice \u003d new InternshipBuilder(ALICE).withName(VALID_NAME_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"jetlfj"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"jetlfj"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"jetlfj"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withPosition(VALID_POSITION_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"jetlfj"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withPhone(VALID_PHONE_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"jetlfj"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withEmail(VALID_EMAIL_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"jetlfj"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withAddress(VALID_ADDRESS_MSFT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":107,"author":{"gitId":"jetlfj"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withTags(VALID_TAG_URGENT).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jetlfj":38,"bigcrushes":12,"chantellyu":4,"-":56}},{"path":"src/test/java/seedu/intrack/model/internship/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"jetlfj"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jetlfj":8,"chantellyu":2,"-":65}},{"path":"src/test/java/seedu/intrack/model/internship/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chantellyu":2,"-":38}},{"path":"src/test/java/seedu/intrack/model/internship/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chantellyu":2,"-":38}},{"path":"src/test/java/seedu/intrack/model/internship/PositionContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"public class PositionContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"    public void equals() {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"        PositionContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"                new PositionContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"        PositionContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"                new PositionContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"        PositionContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"                new PositionContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"chantellyu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"    public void test_positionContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"chantellyu"},"content":"        // One keyword","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"chantellyu"},"content":"        PositionContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"chantellyu"},"content":"                new PositionContainsKeywordsPredicate(Collections.singletonList(\"SWE\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"chantellyu"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withPosition(\"Junior SWE\").build()));","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"chantellyu"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"chantellyu"},"content":"        predicate \u003d new PositionContainsKeywordsPredicate(Arrays.asList(\"SWE\", \"Junior\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"chantellyu"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withPosition(\"Junior SWE\").build()));","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"chantellyu"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"chantellyu"},"content":"        predicate \u003d new PositionContainsKeywordsPredicate(Arrays.asList(\"SWE\", \"Senior\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"chantellyu"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withPosition(\"Junior SWE\").build()));","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"chantellyu"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"chantellyu"},"content":"        predicate \u003d new PositionContainsKeywordsPredicate(Arrays.asList(\"sWe\", \"juNiOR\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"chantellyu"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withPosition(\"Junior SWE\").build()));","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"chantellyu"},"content":"    public void test_positionDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"chantellyu"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"chantellyu"},"content":"        PositionContainsKeywordsPredicate predicate \u003d new PositionContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"chantellyu"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withPosition(\"Data analyst\").build()));","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"chantellyu"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"chantellyu"},"content":"        predicate \u003d new PositionContainsKeywordsPredicate(Arrays.asList(\"Security\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"chantellyu"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withPosition(\"Data analyst\").build()));","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"chantellyu"},"content":"        // Keywords match phone, email and address, but does not match position","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"chantellyu"},"content":"        predicate \u003d new PositionContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"chantellyu"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withPosition(\"SWE\").withPhone(\"12345\")","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"chantellyu"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"chantellyu":79}},{"path":"src/test/java/seedu/intrack/model/internship/PositionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"bigcrushes"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"bigcrushes"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"bigcrushes"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"bigcrushes"},"content":"public class PositionTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"bigcrushes"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"bigcrushes"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"bigcrushes"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Position(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"bigcrushes"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"bigcrushes"},"content":"    public void constructor_invalidPosition_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"bigcrushes"},"content":"        String invalidPosition \u003d \"\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"bigcrushes"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Position(invalidPosition));","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"bigcrushes"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"bigcrushes"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"        // null position","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"bigcrushes"},"content":"        assertThrows(NullPointerException.class, () -\u003e Position.isValidPosition(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"        // invalid positions","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"bigcrushes"},"content":"        assertFalse(Position.isValidPosition(\"\")); // empty string","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"bigcrushes"},"content":"        assertFalse(Position.isValidPosition(\" \")); // spaces only","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"        // valid positions","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"bigcrushes"},"content":"        assertTrue(Position.isValidPosition(\"Software Engineer\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"bigcrushes"},"content":"        assertTrue(Position.isValidPosition(\"-\")); // one character","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"        assertTrue(Position.isValidPosition(\"Machine Learning and AI Engineer\")); // long position","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"bigcrushes"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jetlfj":4,"bigcrushes":30,"chantellyu":2}},{"path":"src/test/java/seedu/intrack/model/internship/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jetlfj"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"jetlfj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"public class RemarkTest {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"    public void equals() {","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"        Remark remark \u003d new Remark(\"Hello\");","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"jetlfj"},"content":"        Remark remarkCopy \u003d new Remark(remark.value);","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":"        assertTrue(remark.equals(remarkCopy));","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"        assertFalse(remark.equals(1));","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"        Remark differentRemark \u003d new Remark(\"Bye\");","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"        assertFalse(remark.equals(differentRemark));","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"jetlfj":31}},{"path":"src/test/java/seedu/intrack/model/internship/StatusIsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bigcrushes"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"bigcrushes"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bigcrushes"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"bigcrushes"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"bigcrushes"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"bigcrushes"},"content":"public class StatusIsKeywordPredicateTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"bigcrushes"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"bigcrushes"},"content":"    public void equals() {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bigcrushes"},"content":"        String firstPredicateKeyword \u003d \"Offered\";","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"bigcrushes"},"content":"        String secondPredicateKeyword \u003d \"Rejected\";","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"bigcrushes"},"content":"        StatusIsKeywordPredicate firstPredicate \u003d new StatusIsKeywordPredicate(firstPredicateKeyword);","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"bigcrushes"},"content":"        StatusIsKeywordPredicate secondPredicate \u003d new StatusIsKeywordPredicate(secondPredicateKeyword);","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"bigcrushes"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"bigcrushes"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"bigcrushes"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"bigcrushes"},"content":"        StatusIsKeywordPredicate firstPredicateCopy \u003d new StatusIsKeywordPredicate(firstPredicateKeyword);","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"bigcrushes"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"bigcrushes"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"bigcrushes"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"bigcrushes"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"bigcrushes"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"bigcrushes"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"bigcrushes"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"bigcrushes"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"bigcrushes"},"content":"    public void test_statusIsKeyword_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"bigcrushes"},"content":"        // Rejected keyword","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"bigcrushes"},"content":"        StatusIsKeywordPredicate predicate \u003d new StatusIsKeywordPredicate(\"Rejected\");","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"bigcrushes"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withStatus(\"Rejected\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"bigcrushes"},"content":"        // Offered keyword","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"bigcrushes"},"content":"        predicate \u003d new StatusIsKeywordPredicate(\"Offered\");","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"bigcrushes"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withStatus(\"Offered\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"bigcrushes"},"content":"        // Progress keyword","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"bigcrushes"},"content":"        predicate \u003d new StatusIsKeywordPredicate(\"Progress\");","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"bigcrushes"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withStatus(\"Progress\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"bigcrushes"},"content":"        // Mixed-case keyword","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"bigcrushes"},"content":"        predicate \u003d new StatusIsKeywordPredicate(\"oFFeReD\");","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"bigcrushes"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withStatus(\"Offered\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"bigcrushes"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"bigcrushes"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"bigcrushes"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"bigcrushes"},"content":"        StatusIsKeywordPredicate predicate \u003d new StatusIsKeywordPredicate(\"\");","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"bigcrushes"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withStatus(\"Offered\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"bigcrushes"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"bigcrushes"},"content":"        predicate \u003d new StatusIsKeywordPredicate(\"Offered\");","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"bigcrushes"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withStatus(\"Rejected\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"bigcrushes"},"content":"        // Keyword matches name and email, but does not match status","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"bigcrushes"},"content":"        predicate \u003d new StatusIsKeywordPredicate(\"Progress\");","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"bigcrushes"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withName(\"Progress\").withEmail(\"progress@email.com\")","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"bigcrushes"},"content":"                .withStatus(\"Offered\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"bigcrushes"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"bigcrushes":71}},{"path":"src/test/java/seedu/intrack/model/internship/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jetlfj"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"jetlfj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"public class StatusTest {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"    public void equals() {","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"        Status status \u003d new Status(\"Progress\");","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"        assertTrue(status.equals(status));","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"jetlfj"},"content":"        Status statusCopy \u003d new Status(status.value);","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":"        assertTrue(status.equals(statusCopy));","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"        assertFalse(status.equals(1));","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"        assertFalse(status.equals(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"        Status differentStatus \u003d new Status(\"Offered\");","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"        assertFalse(status.equals(differentStatus));","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"jetlfj":31}},{"path":"src/test/java/seedu/intrack/model/internship/UniqueInternshipListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"jetlfj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_ADDRESS_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TAG_URGENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.testutil.TypicalInternships.MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.exceptions.DuplicateInternshipException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.exceptions.InternshipNotFoundException;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"public class UniqueInternshipListTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"    private final UniqueInternshipList uniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"    public void contains_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.contains(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"    public void contains_internshipNotInList_returnsFalse() {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"        assertFalse(uniqueInternshipList.contains(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"    public void contains_internshipInList_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"        assertTrue(uniqueInternshipList.contains(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"    public void contains_internshipWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"        Internship editedAlice \u003d new InternshipBuilder(ALICE).withAddress(VALID_ADDRESS_MSFT).withTags(VALID_TAG_URGENT)","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"                .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"        assertTrue(uniqueInternshipList.contains(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"    public void add_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"jetlfj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.add(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"    public void add_duplicateInternship_throwsDuplicateInternshipException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"        assertThrows(DuplicateInternshipException.class, () -\u003e uniqueInternshipList.add(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"    public void setInternship_nullTargetInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.setInternship(null, ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"jetlfj"},"content":"    public void setInternship_nullEditedInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.setInternship(ALICE, null));","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"jetlfj"},"content":"    public void setInternship_targetInternshipNotInList_throwsInternshipNotFoundException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"jetlfj"},"content":"        assertThrows(InternshipNotFoundException.class, () -\u003e uniqueInternshipList.setInternship(ALICE, ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"jetlfj"},"content":"    public void setInternship_editedInternshipIsSameInternship_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.setInternship(ALICE, ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"jetlfj"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"jetlfj"},"content":"        expectedUniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"jetlfj"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"jetlfj"},"content":"    public void setInternship_editedInternshipHasSameIdentity_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"jetlfj"},"content":"        Internship editedAlice \u003d new InternshipBuilder(ALICE).withAddress(VALID_ADDRESS_MSFT).withTags(VALID_TAG_URGENT)","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"jetlfj"},"content":"                .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.setInternship(ALICE, editedAlice);","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"jetlfj"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"jetlfj"},"content":"        expectedUniqueInternshipList.add(editedAlice);","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"jetlfj"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"jetlfj"},"content":"    public void setInternship_editedInternshipHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.setInternship(ALICE, MSFT);","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"jetlfj"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"jetlfj"},"content":"        expectedUniqueInternshipList.add(MSFT);","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"jetlfj"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"jetlfj"},"content":"    public void setInternship_editedInternshipHasNonUniqueIdentity_throwsDuplicateInternshipException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.add(MSFT);","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"jetlfj"},"content":"        assertThrows(DuplicateInternshipException.class, () -\u003e uniqueInternshipList.setInternship(ALICE, MSFT));","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"jetlfj"},"content":"    public void remove_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"jetlfj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.remove(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"jetlfj"},"content":"    public void remove_internshipDoesNotExist_throwsInternshipNotFoundException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"jetlfj"},"content":"        assertThrows(InternshipNotFoundException.class, () -\u003e uniqueInternshipList.remove(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"jetlfj"},"content":"    public void remove_existingInternship_removesInternship() {","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.remove(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"jetlfj"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"jetlfj"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"jetlfj"},"content":"    public void setInternships_nullUniqueInternshipList_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"jetlfj"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"jetlfj"},"content":"                -\u003e uniqueInternshipList.setInternships((UniqueInternshipList) null));","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"jetlfj"},"content":"    public void setInternships_uniqueInternshipList_replacesOwnListWithProvidedUniqueInternshipList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"jetlfj"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"jetlfj"},"content":"        expectedUniqueInternshipList.add(MSFT);","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.setInternships(expectedUniqueInternshipList);","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"jetlfj"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"jetlfj"},"content":"    public void setInternships_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"jetlfj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.setInternships((List\u003cInternship\u003e) null));","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"jetlfj"},"content":"    public void setInternships_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"jetlfj"},"content":"        List\u003cInternship\u003e internshipList \u003d Collections.singletonList(MSFT);","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"jetlfj"},"content":"        uniqueInternshipList.setInternships(internshipList);","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"jetlfj"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"jetlfj"},"content":"        expectedUniqueInternshipList.add(MSFT);","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"jetlfj"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"jetlfj"},"content":"    public void setInternships_listWithDuplicateInternships_throwsDuplicateInternshipException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"jetlfj"},"content":"        List\u003cInternship\u003e listWithDuplicateInternships \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"jetlfj"},"content":"        assertThrows(DuplicateInternshipException.class, ()","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"jetlfj"},"content":"                -\u003e uniqueInternshipList.setInternships(listWithDuplicateInternships));","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"jetlfj"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"jetlfj"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"jetlfj"},"content":"            -\u003e uniqueInternshipList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"jetlfj"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jetlfj":166,"chantellyu":6}},{"path":"src/test/java/seedu/intrack/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.model.tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"chantellyu":2,"-":24}},{"path":"src/test/java/seedu/intrack/storage/JsonAdaptedInternshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.storage.JsonAdaptedInternship.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.BENSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Status;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"public class JsonAdaptedInternshipTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"bigcrushes"},"content":"    private static final String INVALID_POSITION \u003d \" \";","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"    private static final String INVALID_STATUS \u003d \" \";","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"johnrhimawan"},"content":"    private static final String INVALID_TASK \u003d \"hahahaha\";","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"bigcrushes"},"content":"    private static final String VALID_POSITION \u003d BENSON.getPosition().toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"johnrhimawan"},"content":"    private static final List\u003cJsonAdaptedTask\u003e VALID_TASKS \u003d BENSON.getTasks().stream()","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"johnrhimawan"},"content":"            .map(JsonAdaptedTask::new)","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"johnrhimawan"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"kangqiao322"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"    public void toModelType_validInternshipDetails_returnsInternship() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"jetlfj"},"content":"        JsonAdaptedInternship internship \u003d new JsonAdaptedInternship(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"        assertEquals(BENSON, internship.toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"jetlfj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(INVALID_NAME, VALID_POSITION, VALID_STATUS, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"                        VALID_ADDRESS, VALID_TASKS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(null, VALID_POSITION, VALID_STATUS, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"                        VALID_ADDRESS, VALID_TASKS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"jetlfj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"bigcrushes"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"bigcrushes"},"content":"    public void toModelType_invalidPosition_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"bigcrushes"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(VALID_NAME, INVALID_POSITION, VALID_STATUS, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"jetlfj"},"content":"                        VALID_ADDRESS, VALID_TASKS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"bigcrushes"},"content":"        String expectedMessage \u003d Position.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"bigcrushes"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"bigcrushes"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"bigcrushes"},"content":"    public void toModelType_nullPosition_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"bigcrushes"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(VALID_NAME, null, VALID_STATUS, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"jetlfj"},"content":"                        VALID_ADDRESS, VALID_TASKS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"bigcrushes"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Position.class.getSimpleName());","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"bigcrushes"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"jetlfj"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"jetlfj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(VALID_NAME, VALID_POSITION, INVALID_STATUS, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"jetlfj"},"content":"                        VALID_ADDRESS, VALID_TASKS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"jetlfj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"jetlfj"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"jetlfj"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"jetlfj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(VALID_NAME, VALID_POSITION, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"jetlfj"},"content":"                        VALID_ADDRESS, VALID_TASKS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"jetlfj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"jetlfj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"jetlfj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(VALID_NAME, VALID_POSITION, VALID_STATUS, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"johnrhimawan"},"content":"                        VALID_ADDRESS, VALID_TASKS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"jetlfj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"jetlfj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(VALID_NAME, VALID_POSITION, VALID_STATUS, null, VALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"johnrhimawan"},"content":"                        VALID_ADDRESS, VALID_TASKS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"jetlfj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"jetlfj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(VALID_NAME, VALID_POSITION, VALID_STATUS, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"johnrhimawan"},"content":"                        VALID_ADDRESS, VALID_TASKS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"jetlfj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"jetlfj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(VALID_NAME, VALID_POSITION, VALID_STATUS, VALID_PHONE, null,","lastModifiedDate":"2022-10-19"},{"lineNumber":137,"author":{"gitId":"johnrhimawan"},"content":"                        VALID_ADDRESS, VALID_TASKS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"jetlfj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"jetlfj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(VALID_NAME, VALID_POSITION, VALID_STATUS, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":146,"author":{"gitId":"johnrhimawan"},"content":"                        INVALID_ADDRESS, VALID_TASKS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"jetlfj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"jetlfj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(VALID_NAME, VALID_POSITION, VALID_STATUS, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"jetlfj"},"content":"                        null, VALID_TASKS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"jetlfj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"jetlfj"},"content":"    public void toModelType_invalidTasks_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"jetlfj"},"content":"        List\u003cJsonAdaptedTask\u003e invalidTasks \u003d new ArrayList\u003c\u003e(VALID_TASKS);","lastModifiedDate":"2022-10-19"},{"lineNumber":163,"author":{"gitId":"jetlfj"},"content":"        invalidTasks.add(new JsonAdaptedTask(INVALID_TASK, \"\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"jetlfj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(VALID_NAME, VALID_POSITION, VALID_STATUS, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":166,"author":{"gitId":"jetlfj"},"content":"                        VALID_ADDRESS, invalidTasks, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":167,"author":{"gitId":"jetlfj"},"content":"        assertThrows(IllegalValueException.class, internship::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"johnrhimawan"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"jetlfj"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"jetlfj"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"jetlfj"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-10-19"},{"lineNumber":174,"author":{"gitId":"johnrhimawan"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"jetlfj"},"content":"                new JsonAdaptedInternship(VALID_NAME, VALID_POSITION, VALID_STATUS, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-19"},{"lineNumber":176,"author":{"gitId":"jetlfj"},"content":"                        VALID_ADDRESS, VALID_TASKS, invalidTags, VALID_REMARK);","lastModifiedDate":"2022-10-19"},{"lineNumber":177,"author":{"gitId":"johnrhimawan"},"content":"        assertThrows(IllegalValueException.class, internship::toModelType);","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jetlfj":71,"bigcrushes":16,"johnrhimawan":13,"chantellyu":11,"kangqiao322":1,"-":67}},{"path":"src/test/java/seedu/intrack/storage/JsonInTrackStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.HOON;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.IDA;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"public class JsonInTrackStorageTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonInTrackStorageTest\");","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"    @TempDir","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"    public void readInTrack_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"        assertThrows(NullPointerException.class, () -\u003e readInTrack(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"    private java.util.Optional\u003cReadOnlyInTrack\u003e readInTrack(String filePath) throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"chantellyu"},"content":"        return new JsonInTrackStorage(Paths.get(filePath)).readInTrack(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"                : null;","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"chantellyu"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"        assertFalse(readInTrack(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"chantellyu"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"chantellyu"},"content":"        assertThrows(DataConversionException.class, () -\u003e readInTrack(\"notJsonFormatInTrack.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"chantellyu"},"content":"    public void readInTrack_invalidInternshipInTrack_throwDataConversionException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"chantellyu"},"content":"        assertThrows(DataConversionException.class, () -\u003e readInTrack(\"invalidInternshipInTrack.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"chantellyu"},"content":"    public void readInTrack_invalidAndValidInternshipInTrack_throwDataConversionException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"chantellyu"},"content":"        assertThrows(DataConversionException.class, () -\u003e readInTrack(\"invalidAndValidInternshipInTrack.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"chantellyu"},"content":"    public void readAndSaveInTrack_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"chantellyu"},"content":"        Path filePath \u003d testFolder.resolve(\"TempInTrack.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"chantellyu"},"content":"        InTrack original \u003d getTypicalInTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"chantellyu"},"content":"        JsonInTrackStorage jsonInTrackStorage \u003d new JsonInTrackStorage(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"chantellyu"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"chantellyu"},"content":"        jsonInTrackStorage.saveInTrack(original, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"chantellyu"},"content":"        ReadOnlyInTrack readBack \u003d jsonInTrackStorage.readInTrack(filePath).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"chantellyu"},"content":"        assertEquals(original, new InTrack(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"chantellyu"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"chantellyu"},"content":"        original.addInternship(HOON);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"chantellyu"},"content":"        original.removeInternship(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"chantellyu"},"content":"        jsonInTrackStorage.saveInTrack(original, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"chantellyu"},"content":"        readBack \u003d jsonInTrackStorage.readInTrack(filePath).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"chantellyu"},"content":"        assertEquals(original, new InTrack(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"chantellyu"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"chantellyu"},"content":"        original.addInternship(IDA);","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"chantellyu"},"content":"        jsonInTrackStorage.saveInTrack(original); // file path not specified","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"chantellyu"},"content":"        readBack \u003d jsonInTrackStorage.readInTrack().get(); // file path not specified","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"chantellyu"},"content":"        assertEquals(original, new InTrack(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"chantellyu"},"content":"    public void saveInTrack_nullInTrack_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"chantellyu"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveInTrack(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"chantellyu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"chantellyu"},"content":"     * Saves {@code inTrack} at the specified {@code filePath}.","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"chantellyu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"chantellyu"},"content":"    private void saveInTrack(ReadOnlyInTrack inTrack, String filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"chantellyu"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"chantellyu"},"content":"            new JsonInTrackStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"chantellyu"},"content":"                    .saveInTrack(inTrack, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"chantellyu"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"chantellyu"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"chantellyu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"chantellyu"},"content":"    public void saveInTrack_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"chantellyu"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveInTrack(new InTrack(), null));","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"chantellyu":110}},{"path":"src/test/java/seedu/intrack/storage/JsonSerializableInTrackTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.util.JsonUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.testutil.TypicalInternships;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"public class JsonSerializableInTrackTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableInTrackTest\");","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"    private static final Path TYPICAL_INTERNSHIPS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalInternshipsInTrack.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"    private static final Path INVALID_INTERNSHIP_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidInternshipInTrack.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"    private static final Path DUPLICATE_INTERNSHIP_FILE \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateInternshipInTrack.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"    public void toModelType_typicalInternshipsFile_success() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"        JsonSerializableInTrack dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_INTERNSHIPS_FILE,","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"                JsonSerializableInTrack.class).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"        InTrack inTrackFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"        InTrack typicalInternshipsInTrack \u003d TypicalInternships.getTypicalInTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"        assertEquals(inTrackFromFile, typicalInternshipsInTrack);","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"chantellyu"},"content":"    public void toModelType_invalidInternshipFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"chantellyu"},"content":"        JsonSerializableInTrack dataFromFile \u003d JsonUtil.readJsonFile(INVALID_INTERNSHIP_FILE,","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"chantellyu"},"content":"                JsonSerializableInTrack.class).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"chantellyu"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"chantellyu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"chantellyu"},"content":"    public void toModelType_duplicateInternships_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"chantellyu"},"content":"        JsonSerializableInTrack dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_INTERNSHIP_FILE,","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"chantellyu"},"content":"                JsonSerializableInTrack.class).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"chantellyu"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableInTrack.MESSAGE_DUPLICATE_INTERNSHIP,","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"chantellyu"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"chantellyu":49}},{"path":"src/test/java/seedu/intrack/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"chantellyu"},"content":"        userPrefs.setInTrackFilePath(Paths.get(\"intrack.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chantellyu":6,"-":117}},{"path":"src/test/java/seedu/intrack/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.TypicalInternships.getTypicalInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.ReadOnlyInTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"        JsonInTrackStorage inTrackStorage \u003d new JsonInTrackStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"        storageManager \u003d new StorageManager(inTrackStorage, userPrefsStorage);","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"chantellyu"},"content":"    public void inTrackReadSave() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"chantellyu"},"content":"         * {@link JsonInTrackStorage} class.","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"chantellyu"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonInTrackStorageTest} class.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"chantellyu"},"content":"        InTrack original \u003d getTypicalInTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"chantellyu"},"content":"        storageManager.saveInTrack(original);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"chantellyu"},"content":"        ReadOnlyInTrack retrieved \u003d storageManager.readInTrack().get();","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"chantellyu"},"content":"        assertEquals(original, new InTrack(retrieved));","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"chantellyu"},"content":"    public void getInTrackFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"chantellyu"},"content":"        assertNotNull(storageManager.getInTrackFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":17,"-":51}},{"path":"src/test/java/seedu/intrack/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"chantellyu":1,"-":33}},{"path":"src/test/java/seedu/intrack/testutil/EditInternshipDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"jetlfj"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"jetlfj"},"content":" * A utility class to help with building EditInternshipDescriptor objects.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"jetlfj"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"jetlfj"},"content":"public class EditInternshipDescriptorBuilder {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"    private EditInternshipDescriptor descriptor;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"    public EditInternshipDescriptorBuilder() {","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":"        descriptor \u003d new EditInternshipDescriptor();","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"    public EditInternshipDescriptorBuilder(EditInternshipDescriptor descriptor) {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":"        this.descriptor \u003d new EditInternshipDescriptor(descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"     * Returns an {@code EditInternshipDescriptor} with fields containing {@code internship}\u0027s details","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"    public EditInternshipDescriptorBuilder(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":"        descriptor \u003d new EditInternshipDescriptor();","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"        descriptor.setName(internship.getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"bigcrushes"},"content":"        descriptor.setPosition(internship.getPosition());","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"        descriptor.setPhone(internship.getPhone());","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"        descriptor.setEmail(internship.getEmail());","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"        descriptor.setAddress(internship.getAddress());","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"        descriptor.setTags(internship.getTags());","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"     * Sets the {@code Name} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"    public EditInternshipDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"jetlfj"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"bigcrushes"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"bigcrushes"},"content":"     * Sets the {@code Position} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"bigcrushes"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"bigcrushes"},"content":"    public EditInternshipDescriptorBuilder withPosition(String position) {","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"bigcrushes"},"content":"        descriptor.setPosition(new Position(position));","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"bigcrushes"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"     * Sets the {@code Phone} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"    public EditInternshipDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"jetlfj"},"content":"     * Sets the {@code Email} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"jetlfj"},"content":"    public EditInternshipDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"jetlfj"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"jetlfj"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"jetlfj"},"content":"     * Sets the {@code Address} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"jetlfj"},"content":"    public EditInternshipDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"jetlfj"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"jetlfj"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"jetlfj"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditInternshipDescriptor}","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"jetlfj"},"content":"     * that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"jetlfj"},"content":"    public EditInternshipDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"jetlfj"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"jetlfj"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"jetlfj"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"jetlfj"},"content":"    public EditInternshipDescriptor build() {","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"jetlfj"},"content":"        return descriptor;","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"jetlfj"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jetlfj":79,"bigcrushes":9,"chantellyu":9}},{"path":"src/test/java/seedu/intrack/testutil/InTrackBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":" * A utility class to help with building InTrack objects.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":" *     {@code InTrack ab \u003d new InTrackBuilder().withInternship(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"public class InTrackBuilder {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"    private InTrack inTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"    public InTrackBuilder() {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"chantellyu"},"content":"        inTrack \u003d new InTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"    public InTrackBuilder(InTrack inTrack) {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"        this.inTrack \u003d inTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"chantellyu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"     * Adds a new {@code Internship} to the {@code InTrack} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chantellyu"},"content":"    public InTrackBuilder withInternship(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"chantellyu"},"content":"        inTrack.addInternship(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"chantellyu"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"chantellyu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"chantellyu"},"content":"    public InTrack build() {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"chantellyu"},"content":"        return inTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"chantellyu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"chantellyu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"chantellyu":34}},{"path":"src/test/java/seedu/intrack/testutil/InternshipBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"johnrhimawan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"johnrhimawan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"johnrhimawan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"johnrhimawan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"kangqiao322"},"content":"import seedu.intrack.model.internship.Remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Status;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"johnrhimawan"},"content":"import seedu.intrack.model.internship.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"jetlfj"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":" * A utility class to help with building Internship objects.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"jetlfj"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"public class InternshipBuilder {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"jetlfj"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"bigcrushes"},"content":"    public static final String DEFAULT_POSITION \u003d \"Software Engineer\";","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"jetlfj"},"content":"    public static final String DEFAULT_STATUS \u003d \"Progress\";","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"jetlfj"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"johnrhimawan"},"content":"    public static final Task DEFAULT_TASK \u003d new Task(\"Application submitted\",","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"johnrhimawan"},"content":"            LocalDateTime.now().truncatedTo(ChronoUnit.MINUTES).format(Task.FORMATTER));","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"kangqiao322"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"    private Name name;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"bigcrushes"},"content":"    private Position position;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"    private Status status;","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"    private Email email;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"    private Address address;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"johnrhimawan"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"kangqiao322"},"content":"    private Remark remark;","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"jetlfj"},"content":"     * Creates a {@code InternshipBuilder} with the default details.","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"    public InternshipBuilder() {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"bigcrushes"},"content":"        position \u003d new Position(DEFAULT_POSITION);","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"jetlfj"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"johnrhimawan"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"johnrhimawan"},"content":"        tasks.add(DEFAULT_TASK);","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"kangqiao322"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"     * Initializes the InternshipBuilder with the data of {@code internshipToCopy}.","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"    public InternshipBuilder(Internship internshipToCopy) {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"jetlfj"},"content":"        name \u003d internshipToCopy.getName();","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"bigcrushes"},"content":"        position \u003d internshipToCopy.getPosition();","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"jetlfj"},"content":"        status \u003d internshipToCopy.getStatus();","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"jetlfj"},"content":"        phone \u003d internshipToCopy.getPhone();","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"jetlfj"},"content":"        email \u003d internshipToCopy.getEmail();","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"jetlfj"},"content":"        address \u003d internshipToCopy.getAddress();","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"johnrhimawan"},"content":"        tasks \u003d new ArrayList\u003c\u003e(internshipToCopy.getTasks());","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"jetlfj"},"content":"        tags \u003d new HashSet\u003c\u003e(internshipToCopy.getTags());","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"kangqiao322"},"content":"        remark \u003d internshipToCopy.getRemark();","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"jetlfj"},"content":"     * Sets the {@code Name} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"jetlfj"},"content":"    public InternshipBuilder withName(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"jetlfj"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"jetlfj"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"jetlfj"},"content":"     * Sets the {@code Position} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"jetlfj"},"content":"    public InternshipBuilder withPosition(String position) {","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"jetlfj"},"content":"        this.position \u003d new Position(position);","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"jetlfj"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"jetlfj"},"content":"     * Sets the {@code Status} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"jetlfj"},"content":"    public InternshipBuilder withStatus(String status) {","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"jetlfj"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"johnrhimawan"},"content":"        return this;","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"jetlfj"},"content":"     * Sets the {@code Phone} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"jetlfj"},"content":"    public InternshipBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"jetlfj"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"jetlfj"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"jetlfj"},"content":"     * Sets the {@code Email} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"jetlfj"},"content":"    public InternshipBuilder withEmail(String email) {","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"jetlfj"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"jetlfj"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"bigcrushes"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"jetlfj"},"content":"     * Sets the {@code Address} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"bigcrushes"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"jetlfj"},"content":"    public InternshipBuilder withAddress(String address) {","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"jetlfj"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"bigcrushes"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"bigcrushes"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"bigcrushes"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"jetlfj"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"jetlfj"},"content":"     * Parses the {@code tasks} into a {@code List\u003cTask\u003e} and set it to the {@code Internship} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"jetlfj"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"jetlfj"},"content":"    public InternshipBuilder withTasks(String ... tasks) {","lastModifiedDate":"2022-10-19"},{"lineNumber":130,"author":{"gitId":"jetlfj"},"content":"        this.tasks \u003d SampleDataUtil.getTaskList(tasks);","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"jetlfj"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"johnrhimawan"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"jetlfj"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Internship} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"johnrhimawan"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"jetlfj"},"content":"    public InternshipBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-19"},{"lineNumber":138,"author":{"gitId":"jetlfj"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-19"},{"lineNumber":139,"author":{"gitId":"johnrhimawan"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"johnrhimawan"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"johnrhimawan"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"kangqiao322"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"kangqiao322"},"content":"     * Sets the {@code Remark} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"kangqiao322"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"kangqiao322"},"content":"    public InternshipBuilder withRemark(String remark) {","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"kangqiao322"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"kangqiao322"},"content":"        return this;","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"kangqiao322"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"kangqiao322"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"jetlfj"},"content":"    public Internship build() {","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"jetlfj"},"content":"        return new Internship(name, position, status, phone, email, address, tasks, tags, remark);","lastModifiedDate":"2022-10-19"},{"lineNumber":152,"author":{"gitId":"jetlfj"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"jetlfj"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"jetlfj"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jetlfj":101,"johnrhimawan":21,"bigcrushes":9,"chantellyu":10,"kangqiao322":13}},{"path":"src/test/java/seedu/intrack/testutil/InternshipUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"jetlfj"},"content":" * A utility class for Internship.","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"jetlfj"},"content":"public class InternshipUtil {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"jetlfj"},"content":"     * Returns an add command string for adding the {@code internship}.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"jetlfj"},"content":"    public static String getAddCommand(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"jetlfj"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getInternshipDetails(internship);","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"     * Returns the part of command string for the given {@code internship}\u0027s details.","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"    public static String getInternshipDetails(Internship internship) {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"        sb.append(PREFIX_NAME + internship.getName().fullName + \" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"bigcrushes"},"content":"        sb.append(PREFIX_POSITION + internship.getPosition().positionName + \" \");","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"        sb.append(PREFIX_PHONE + internship.getPhone().value + \" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"        sb.append(PREFIX_EMAIL + internship.getEmail().value + \" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"        sb.append(PREFIX_ADDRESS + internship.getAddress().value + \" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"        internship.getTags().stream().forEach(","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"     * Returns the part of command string for the given {@code EditInternshipDescriptor}\u0027s details.","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"jetlfj"},"content":"    public static String getEditInternshipDescriptorDetails(EditInternshipDescriptor descriptor) {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"bigcrushes"},"content":"        descriptor.getPosition().ifPresent(position -\u003e sb.append(PREFIX_POSITION)","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"bigcrushes"},"content":"                .append(position.positionName).append(\" \"));","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"jetlfj":14,"bigcrushes":3,"chantellyu":11,"-":38}},{"path":"src/test/java/seedu/intrack/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chantellyu":1,"-":71}},{"path":"src/test/java/seedu/intrack/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"     * Returns the middle index of the internship in the {@code model}\u0027s internship list.","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"        return Index.fromOneBased(model.getFilteredInternshipList().size() / 2);","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"     * Returns the last index of the internship in the {@code model}\u0027s internship list.","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"        return Index.fromOneBased(model.getFilteredInternshipList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"     * Returns the internship in the {@code model}\u0027s internship list at {@code index}.","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"jetlfj"},"content":"    public static Internship getInternship(Model model, Index index) {","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"jetlfj"},"content":"        return model.getFilteredInternshipList().get(index.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jetlfj":7,"chantellyu":4,"-":44}},{"path":"src/test/java/seedu/intrack/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"    public static final Index INDEX_FIRST_INTERNSHIP \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"    public static final Index INDEX_SECOND_INTERNSHIP \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"    public static final Index INDEX_THIRD_INTERNSHIP \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jetlfj":3,"chantellyu":2,"-":7}},{"path":"src/test/java/seedu/intrack/testutil/TypicalInternships.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_ADDRESS_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_ADDRESS_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_EMAIL_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_EMAIL_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_NAME_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_NAME_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_PHONE_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_PHONE_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_POSITION_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_POSITION_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_STATUS_AAPL;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_STATUS_MSFT;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TAG_REMOTE;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"jetlfj"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TAG_URGENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"johnrhimawan"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TASK_AAPL;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"johnrhimawan"},"content":"import static seedu.intrack.logic.commands.CommandTestUtil.VALID_TASK_MSFT;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.InTrack;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"jetlfj"},"content":" * A utility class containing a list of {@code Internship} objects to be used in tests.","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"jetlfj"},"content":"public class TypicalInternships {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"jetlfj"},"content":"    public static final Internship ALICE \u003d new InternshipBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"jetlfj"},"content":"            .withPosition(\"Software Engineer\").withStatus(\"Progress\").withPhone(\"94351253\")","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"jetlfj"},"content":"            .withEmail(\"alice@example.com\").withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"jetlfj"},"content":"            .withTasks(\"Application submitted /at 19-10-2022 11:38\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"jetlfj"},"content":"    public static final Internship BENSON \u003d new InternshipBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"jetlfj"},"content":"            .withPosition(\"Data Analyst\").withStatus(\"Progress\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"jetlfj"},"content":"            .withEmail(\"johnd@example.com\").withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"jetlfj"},"content":"            .withTasks(\"Application submitted /at 20-10-2022 12:00\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"jetlfj"},"content":"    public static final Internship CARL \u003d new InternshipBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"jetlfj"},"content":"            .withPosition(\"Frontend Engineer\").withStatus(\"Progress\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"jetlfj"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"jetlfj"},"content":"            .withTasks(\"Application submitted /at 19-10-2022 11:38\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"jetlfj"},"content":"    public static final Internship DANIEL \u003d new InternshipBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"jetlfj"},"content":"            .withPosition(\"Backend Engineer\").withStatus(\"Progress\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"jetlfj"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"johnrhimawan"},"content":"            .withTasks(\"Application submitted /at 19-10-2022 11:38\", \"HR Interview /at 30-10-2022 09:00\")","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"jetlfj"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"jetlfj"},"content":"    public static final Internship ELLE \u003d new InternshipBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"jetlfj"},"content":"            .withPosition(\"Full Stack Engineer\").withStatus(\"Progress\").withPhone(\"9482224\")","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"jetlfj"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"johnrhimawan"},"content":"            .withTasks(\"Application submitted /at 25-10-2022 08:30\", \"Technical Interview /at 30-10-2022 09:00\")","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"johnrhimawan"},"content":"            .build();","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"jetlfj"},"content":"    public static final Internship FIONA \u003d new InternshipBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"jetlfj"},"content":"            .withPosition(\"Cyber Security Analyst\").withStatus(\"Progress\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"jetlfj"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"jetlfj"},"content":"            .withTasks(\"Application submitted /at 19-10-2022 11:38\", \"HR Interview /at 30-10-2022 09:00\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"jetlfj"},"content":"    public static final Internship GEORGE \u003d new InternshipBuilder().withName(\"George Best\")","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"jetlfj"},"content":"            .withPosition(\"Algorithm Engineer\").withStatus(\"Progress\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"jetlfj"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"jetlfj"},"content":"            .withTasks(\"Application submitted /at 19-10-2022 11:38\", \"HR Interview /at 30-10-2022 09:00\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"jetlfj"},"content":"    public static final Internship HOON \u003d new InternshipBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"jetlfj"},"content":"            .withPosition(\"Product Designer\").withStatus(\"Progress\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"jetlfj"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"jetlfj"},"content":"    public static final Internship IDA \u003d new InternshipBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"jetlfj"},"content":"            .withPosition(\"Data Engineer\").withStatus(\"Progress\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jetlfj"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":71,"author":{"gitId":"jetlfj"},"content":"    // Manually added - Internship\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"jetlfj"},"content":"    public static final Internship AAPL \u003d new InternshipBuilder().withName(VALID_NAME_AAPL)","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"jetlfj"},"content":"            .withPosition(VALID_POSITION_AAPL).withStatus(VALID_STATUS_AAPL).withPhone(VALID_PHONE_AAPL)","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"jetlfj"},"content":"            .withEmail(VALID_EMAIL_AAPL).withAddress(VALID_ADDRESS_AAPL)","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"johnrhimawan"},"content":"            .withTasks(VALID_TASK_AAPL).withTags(VALID_TAG_REMOTE).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"jetlfj"},"content":"    public static final Internship MSFT \u003d new InternshipBuilder().withName(VALID_NAME_MSFT)","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"jetlfj"},"content":"            .withPosition(VALID_POSITION_MSFT).withStatus(VALID_STATUS_MSFT).withPhone(VALID_PHONE_MSFT)","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"jetlfj"},"content":"            .withEmail(VALID_EMAIL_MSFT).withAddress(VALID_ADDRESS_MSFT)","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"johnrhimawan"},"content":"            .withTasks(VALID_TASK_MSFT).withTags(VALID_TAG_REMOTE, VALID_TAG_URGENT).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"jetlfj"},"content":"    private TypicalInternships() {} // prevents instantiation","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"chantellyu"},"content":"     * Returns an {@code InTrack} with all the typical internships.","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"chantellyu"},"content":"    public static InTrack getTypicalInTrack() {","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"chantellyu"},"content":"        InTrack it \u003d new InTrack();","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"jetlfj"},"content":"        for (Internship internship : getTypicalInternships()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"chantellyu"},"content":"            it.addInternship(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":93,"author":{"gitId":"chantellyu"},"content":"        return it;","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":96,"author":{"gitId":"jetlfj"},"content":"    public static List\u003cInternship\u003e getTypicalInternships() {","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jetlfj":59,"johnrhimawan":7,"chantellyu":8,"-":25}},{"path":"src/test/java/seedu/intrack/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"chantellyu":1,"-":34}},{"path":"src/test/java/seedu/intrack/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chantellyu"},"content":"package seedu.intrack.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chantellyu"},"content":"import static seedu.intrack.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"chantellyu"},"content":"import seedu.intrack.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"chantellyu":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"\u003c?import seedu.intrack.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"chantellyu":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"chantellyu"},"content":"\u003cfx:root type\u003d\"seedu.intrack.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"chantellyu":1,"-":5}}]
