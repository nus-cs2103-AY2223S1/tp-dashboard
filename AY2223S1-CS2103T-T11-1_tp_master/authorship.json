[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T11-1/tp/actions)","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"# Contactmation","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"Contactmation is a **desktop, contact management application** that is **optimized for team management and delegation of tasks through the Command Line Interface** (CLI). Contactmation efficiently tracks progress of your team projects.","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"* For the detailed documentation of this project, see the **[Contactmation Product Website](https://ay2223s1-cs2103t-t11-1.github.io/tp/)**.","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"jasonchristopher21":7,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":"    setToolVersion(\u002710.2\u0027)","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"Eclipse-Dominator"},"content":"    String javaFxVersion \u003d \u002718.0.2\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Eclipse-Dominator":2,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"### Li Zhaoqi","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003cimg src\u003d\"images/eclipse-dominator.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"[[github](https://github.com/Eclipse-Dominator)]","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"[[portfolio](team/eclipse-dominator.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"- Role: Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":"- Responsibilities: Something","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"autumn-sonata"},"content":"### Eric Lee Ying Yao","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"autumn-sonata"},"content":"\u003cimg src\u003d\"images/autumn-sonata.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"autumn-sonata"},"content":"[[github](http://github.com/autumn-sonata)]","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"autumn-sonata"},"content":"[[portfolio](team/autumn-sonata.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Eclipse-Dominator"},"content":"- Role: Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"- Responsibilities: Something","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"### Jason Christopher","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"\u003cimg src\u003d\"images/jasonchristopher21.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"autumn-sonata"},"content":"[[github](http://github.com/jasonchristopher21)]","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"autumn-sonata"},"content":"[[portfolio](team/jasonchristopher21.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"* Responsibilities: TBA","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"connlim"},"content":"### Connor Lim","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"connlim"},"content":"\u003cimg src\u003d\"images/connlim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"autumn-sonata"},"content":"[[github](https://github.com/connlim)]","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"autumn-sonata"},"content":"[[portfolio](team/connlim.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"connlim"},"content":"* Responsibilities: In charge of Tasks, Quality Assurance","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"mohamedsaf1"},"content":"### Mohamed Safwan","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"mohamedsaf1"},"content":"\u003cimg src\u003d\"images/mohamedsaf1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"mohamedsaf1"},"content":"[[github](http://github.com/mohamedsaf1)]","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"mohamedsaf1"},"content":"[[portfolio](team/mohamedsaf1.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"mohamedsaf1"},"content":"* Responsibilities: Basic Functions","lastModifiedDate":"2022-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Eclipse-Dominator":8,"connlim":3,"jasonchristopher21":3,"autumn-sonata":8,"mohamedsaf1":5,"-":34}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"connlim"},"content":"- They are tech-savvy","lastModifiedDate":"2022-09-27"},{"lineNumber":261,"author":{"gitId":"connlim"},"content":"- Organised and consistent in using the app","lastModifiedDate":"2022-09-27"},{"lineNumber":262,"author":{"gitId":"connlim"},"content":"- Have a need to effectively manage their team, through work progress and employee involvement","lastModifiedDate":"2022-09-27"},{"lineNumber":263,"author":{"gitId":"connlim"},"content":"- Doesn’t mind putting extra time to make their life easier in the future","lastModifiedDate":"2022-09-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"connlim"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-27"},{"lineNumber":266,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":267,"author":{"gitId":"connlim"},"content":"- Manage employees","lastModifiedDate":"2022-09-27"},{"lineNumber":268,"author":{"gitId":"connlim"},"content":"- Manage multiple projects and their progress + contributions from employees","lastModifiedDate":"2022-09-27"},{"lineNumber":269,"author":{"gitId":"connlim"},"content":"- More effective under the hand of a tech-savvy user","lastModifiedDate":"2022-09-27"},{"lineNumber":270,"author":{"gitId":"connlim"},"content":"- Meeting/time management","lastModifiedDate":"2022-09-27"},{"lineNumber":271,"author":{"gitId":"connlim"},"content":"- Easily **personalizable**","lastModifiedDate":"2022-09-27"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| Priority | As a …​             | I want to …​                                                                                                   | So that I can…​                                                                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"connlim"},"content":"| -------- | ------------------- | -------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------ |","lastModifiedDate":"2022-09-27"},{"lineNumber":280,"author":{"gitId":"connlim"},"content":"| `* * *`  | basic user          | add new contacts                                                                                               | add new contacts for use later                                                                                           |","lastModifiedDate":"2022-09-27"},{"lineNumber":281,"author":{"gitId":"connlim"},"content":"| `* * *`  | basic user          | delete contacts                                                                                                | remove old unused contacts                                                                                               |","lastModifiedDate":"2022-09-27"},{"lineNumber":282,"author":{"gitId":"connlim"},"content":"| `* * *`  | basic user          | view my current contacts                                                                                       | see all the contacts I have saved                                                                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":283,"author":{"gitId":"connlim"},"content":"| `* * *`  | basic user          | group contacts into group                                                                                      | categorise my contacts                                                                                                   |","lastModifiedDate":"2022-09-27"},{"lineNumber":284,"author":{"gitId":"connlim"},"content":"| `* * *`  | basic user          | add additional info for each contact via a custom field                                                        | record extra information that i need to take note of regarding the contact                                               |","lastModifiedDate":"2022-09-27"},{"lineNumber":285,"author":{"gitId":"connlim"},"content":"| `*`      | regular user        | customise the colors of the user interface to my liking                                                        | be more comfortable using the app                                                                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":286,"author":{"gitId":"connlim"},"content":"| `* *`    | regular user        | add custom commands acting as macros to the app                                                                | be more efficient with controls specific to my use.                                                                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":287,"author":{"gitId":"connlim"},"content":"| `* *`    | user                | export my contacts as to csv or vcard                                                                          | transfer general contact information to be used elsewhere or for sharing.                                                |","lastModifiedDate":"2022-09-27"},{"lineNumber":288,"author":{"gitId":"connlim"},"content":"| `* *`    | user                | add aliases to my contacts                                                                                     | search the contacts up faster                                                                                            |","lastModifiedDate":"2022-09-27"},{"lineNumber":289,"author":{"gitId":"connlim"},"content":"| `* * *`  | user                | edit group information and group user information                                                              | edit and update team information should such details change                                                              |","lastModifiedDate":"2022-09-27"},{"lineNumber":290,"author":{"gitId":"connlim"},"content":"| `* * *`  | user                | have an advertisement free experience                                                                          | be more focused and not get distracted by ads                                                                            |","lastModifiedDate":"2022-09-27"},{"lineNumber":291,"author":{"gitId":"connlim"},"content":"| `* *`    | user                | transfer app data                                                                                              | keep my current data should i change devices or have multiple devices using the app                                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":292,"author":{"gitId":"connlim"},"content":"| `* * *`  | user                | edit contact information                                                                                       | update my contacts with the most recent update                                                                           |","lastModifiedDate":"2022-09-27"},{"lineNumber":293,"author":{"gitId":"connlim"},"content":"| `* *`    | user                | have an responsive and snappy user experience                                                                  | have a more enjoyable experience while using the app as well as increased efficiency                                     |","lastModifiedDate":"2022-09-27"},{"lineNumber":294,"author":{"gitId":"connlim"},"content":"| `* *`    | user                | undo a command                                                                                                 | easily revert incorrect changes                                                                                          |","lastModifiedDate":"2022-09-27"},{"lineNumber":295,"author":{"gitId":"connlim"},"content":"| `* *`    | user                | automatically save the data                                                                                    | be assured that i won’t lose data in the event the app exits improperly due to rare circumstances (e.g. computer crash)  |","lastModifiedDate":"2022-09-27"},{"lineNumber":296,"author":{"gitId":"connlim"},"content":"| `* *`    | user                | enjoy a simple and accessible user interface                                                                   | easily understand and use the basic features without the need to extensively refer to a user guide                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":297,"author":{"gitId":"connlim"},"content":"| `* *`    | user                | enjoy a clean and zen-style gui                                                                                | be more focused and not easily distracted.                                                                               |","lastModifiedDate":"2022-09-27"},{"lineNumber":298,"author":{"gitId":"connlim"},"content":"| `* * *`  | developer           | use the app solely using the keyboard (cli like input controls)                                                | be fast and efficient since pressing a key is faster than reaching for the mouse                                         |","lastModifiedDate":"2022-09-27"},{"lineNumber":299,"author":{"gitId":"connlim"},"content":"| `*`      | busy, working adult | have a clear separation between work contacts and other contacts                                               | have a clear work-life balance                                                                                           |","lastModifiedDate":"2022-09-27"},{"lineNumber":300,"author":{"gitId":"connlim"},"content":"| `* * *`  | project manager     | add extra information to each group of contacts                                                                | keep extra information regarding my team                                                                                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":301,"author":{"gitId":"connlim"},"content":"| `* * *`  | project manager     | add task to a group                                                                                            | record tasks to be done by my team                                                                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":302,"author":{"gitId":"connlim"},"content":"| `* * *`  | project manager     | assign specific task to single or multiple users within a group                                                | delegate tasks assignment when working in a team                                                                         |","lastModifiedDate":"2022-09-27"},{"lineNumber":303,"author":{"gitId":"connlim"},"content":"| `* *`    | project manager     | view the timeline of task completion within a group                                                            | track progress within the group                                                                                          |","lastModifiedDate":"2022-09-27"},{"lineNumber":304,"author":{"gitId":"connlim"},"content":"| `* * *`  | project manager     | add additional information to a contact within a team                                                          | track bonus details and information regarding a member                                                                   |","lastModifiedDate":"2022-09-27"},{"lineNumber":305,"author":{"gitId":"connlim"},"content":"| `* * *`  | project manager     | add completion dates to some tasks assigned in the group                                                       | set deadlines to group specific tasks                                                                                    |","lastModifiedDate":"2022-09-27"},{"lineNumber":306,"author":{"gitId":"connlim"},"content":"| `* * *`  | project manager     | add ability to add custom fields when adding contacts to a group                                               | tailor fit the group to my project needs                                                                                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":307,"author":{"gitId":"connlim"},"content":"| `*`      | project manager     | add custom color palette to each group                                                                         | feel more personalised to each team as well as better differentiate between different teams                              |","lastModifiedDate":"2022-09-27"},{"lineNumber":308,"author":{"gitId":"connlim"},"content":"| `* * *`  | project manager     | change the completion status of tasks in a group                                                               | to indicate the if an assigned task has been completed by a member                                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":309,"author":{"gitId":"connlim"},"content":"| `* *`    | project manager     | generate a progress report of the group progress (i.e. show task done at what time, how many percent done etc) | easily access and present those information to others (e.g. higher ups) as well as tracking the progress of the project. |","lastModifiedDate":"2022-09-27"},{"lineNumber":310,"author":{"gitId":"connlim"},"content":"| `* * *`  | project manager     | have the ability to broadcast messages to my team members                                                      | disseminate information in a short time.                                                                                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":311,"author":{"gitId":"connlim"},"content":"| `* * *`  | project manager     | delegate work to each group efficiently via commands                                                           | cut down on time spent doing admin work                                                                                  |","lastModifiedDate":"2022-09-27"},{"lineNumber":312,"author":{"gitId":"connlim"},"content":"| `* * *`  | project manager     | access and view the contacts of my team members                                                                | track progress of the team on an individual level                                                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":313,"author":{"gitId":"connlim"},"content":"| `* *`    | project manager     | organise my project team tasks with efficiency                                                                 | spend less time doing admin work                                                                                         |","lastModifiedDate":"2022-09-27"},{"lineNumber":314,"author":{"gitId":"connlim"},"content":"| `* *`    | project manager     | switch context easily between multiple groups                                                                  | manage multiple teams                                                                                                    |","lastModifiedDate":"2022-09-27"},{"lineNumber":315,"author":{"gitId":"connlim"},"content":"| `* * *`  | project manager     | issue commands specific to the team                                                                            | be more efficient and type fewer group related details                                                                   |","lastModifiedDate":"2022-09-27"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"connlim"},"content":"(For all use cases below, the **System** is `ContactMation` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-27"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"connlim"},"content":"2.  ContactMation shows a list of persons","lastModifiedDate":"2022-09-27"},{"lineNumber":327,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"connlim"},"content":"4.  ContactMation deletes the person","lastModifiedDate":"2022-09-27"},{"lineNumber":329,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":330,"author":{"gitId":"connlim"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":331,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":332,"author":{"gitId":"connlim"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":333,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":334,"author":{"gitId":"connlim"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":335,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":336,"author":{"gitId":"connlim"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":337,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":338,"author":{"gitId":"connlim"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":339,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":340,"author":{"gitId":"connlim"},"content":"    * 3a1. ContactMation shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":341,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":342,"author":{"gitId":"connlim"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":343,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":344,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":345,"author":{"gitId":"connlim"},"content":"**Use case: Edit a person**","lastModifiedDate":"2022-09-27"},{"lineNumber":346,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":347,"author":{"gitId":"connlim"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":348,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":349,"author":{"gitId":"connlim"},"content":"1.  User requests to list persons","lastModifiedDate":"2022-09-27"},{"lineNumber":350,"author":{"gitId":"connlim"},"content":"2.  ContactMation shows a list of persons","lastModifiedDate":"2022-09-27"},{"lineNumber":351,"author":{"gitId":"connlim"},"content":"3.  User requests to edit a specific person in the list","lastModifiedDate":"2022-09-27"},{"lineNumber":352,"author":{"gitId":"connlim"},"content":"4.  ContactMation shows a screen with the properties of the person","lastModifiedDate":"2022-09-27"},{"lineNumber":353,"author":{"gitId":"connlim"},"content":"5.  User edits the properties to their liking and saves","lastModifiedDate":"2022-09-27"},{"lineNumber":354,"author":{"gitId":"connlim"},"content":"6.  Contactmation saves the data","lastModifiedDate":"2022-09-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":358,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":366,"author":{"gitId":"connlim"},"content":"    * 3a1. ContactMation shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":370,"author":{"gitId":"connlim"},"content":"**Use case: Add a Task**","lastModifiedDate":"2022-09-27"},{"lineNumber":371,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":372,"author":{"gitId":"connlim"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":373,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":374,"author":{"gitId":"connlim"},"content":"1.  User requests to list groups","lastModifiedDate":"2022-09-27"},{"lineNumber":375,"author":{"gitId":"connlim"},"content":"2.  ContactMation shows a list of groups","lastModifiedDate":"2022-09-27"},{"lineNumber":376,"author":{"gitId":"connlim"},"content":"3.  User requests to add a task to a group in the list","lastModifiedDate":"2022-09-27"},{"lineNumber":377,"author":{"gitId":"connlim"},"content":"4.  ContactMation adds the task","lastModifiedDate":"2022-09-27"},{"lineNumber":378,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":379,"author":{"gitId":"connlim"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":380,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":381,"author":{"gitId":"connlim"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":382,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":383,"author":{"gitId":"connlim"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":384,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":385,"author":{"gitId":"connlim"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":386,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":387,"author":{"gitId":"connlim"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":388,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":389,"author":{"gitId":"connlim"},"content":"    * 3a1. ContactMation shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":390,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":391,"author":{"gitId":"connlim"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":392,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":393,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":394,"author":{"gitId":"connlim"},"content":"**Use case: Set a Task completion status**","lastModifiedDate":"2022-09-27"},{"lineNumber":395,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":396,"author":{"gitId":"connlim"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":397,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":398,"author":{"gitId":"connlim"},"content":"1.  User requests to list tasks for a group","lastModifiedDate":"2022-09-27"},{"lineNumber":399,"author":{"gitId":"connlim"},"content":"2.  ContactMation shows a list of tasks","lastModifiedDate":"2022-09-27"},{"lineNumber":400,"author":{"gitId":"connlim"},"content":"3.  User requests to set the task completion status","lastModifiedDate":"2022-09-27"},{"lineNumber":401,"author":{"gitId":"connlim"},"content":"4.  ContactMation sets the task completion status","lastModifiedDate":"2022-09-27"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"connlim"},"content":"    * 3a1. ContactMation shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"connlim"},"content":"* 4a. The given status is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":418,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":419,"author":{"gitId":"connlim"},"content":"  * 4a1. ContactMation sets the task to `Done`","lastModifiedDate":"2022-09-27"},{"lineNumber":420,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":421,"author":{"gitId":"connlim"},"content":"      Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"connlim"},"content":"4.  Should be usable with only a _command-line interface_.","lastModifiedDate":"2022-09-27"},{"lineNumber":429,"author":{"gitId":"connlim"},"content":"5.  Data should persist between app launches.","lastModifiedDate":"2022-09-27"},{"lineNumber":430,"author":{"gitId":"connlim"},"content":"6.  Should work with both 32-bit and 64-bit operating systems.","lastModifiedDate":"2022-09-27"},{"lineNumber":431,"author":{"gitId":"connlim"},"content":"7.  The system is not required to do any communication with the Internet (e.g. sending emails).","lastModifiedDate":"2022-09-27"},{"lineNumber":432,"author":{"gitId":"connlim"},"content":"8.  Should not use any images or terms that could be deemed as offensive.","lastModifiedDate":"2022-09-27"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"connlim"},"content":"* **Mainstream OS**: Windows, Linux, Unix-like, MacOS","lastModifiedDate":"2022-09-27"},{"lineNumber":437,"author":{"gitId":"connlim"},"content":"* **Command-line Interface**: A system that received user input in the form of lines of text","lastModifiedDate":"2022-09-27"},{"lineNumber":438,"author":{"gitId":"connlim"},"content":"* **Task**: A piece of work that has to be done, that can be assigned to people and that may have a deadline","lastModifiedDate":"2022-09-27"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"connlim":124,"-":367}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"autumn-sonata"},"content":"# Contactmation User Guide","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"autumn-sonata"},"content":"Contactmation is a **desktop, contact management application** that is **optimized for team management and","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"autumn-sonata"},"content":"delegation of tasks through the Command Line Interface** (CLI). Contactmation efficiently tracks progress of your","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"autumn-sonata"},"content":"team projects.","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"autumn-sonata"},"content":"## Table of contents","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"autumn-sonata"},"content":"- [Prerequisites](#prerequisites)","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"autumn-sonata"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"autumn-sonata"},"content":"- [Features](#features)","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"autumn-sonata"},"content":"    - [Definitions](#definitions)","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"autumn-sonata"},"content":"    - [Scoping](#scoping)","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"autumn-sonata"},"content":"    - [Basic features](#basic-features)","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"autumn-sonata"},"content":"        - [Add a contact](#add-a-contact-add)","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"autumn-sonata"},"content":"        - [Delete a contact](#delete-a-contact-delete)","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"autumn-sonata"},"content":"        - [Edit a contact](#edit-a-contact-edit)","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"autumn-sonata"},"content":"        - [Searching for a contact](#searching-for-a-contact-find)","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"autumn-sonata"},"content":"        - [Listing all contacts](#listing-all-contacts-list)","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"autumn-sonata"},"content":"        - [Exits the program](#exits-the-program-exit)","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"autumn-sonata"},"content":"    - [Teams](#teams)","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"autumn-sonata"},"content":"        - [Creating a team](#creating-a-team-newteam)","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"autumn-sonata"},"content":"        - [Deleting a team](#deleting-a-team-rmteam)","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"autumn-sonata"},"content":"        - [Adding people to a team](#adding-people-to-a-team-add-or-team-team-id-add)","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"autumn-sonata"},"content":"        - [Removing people from team](#removing-people-from-team-delete-or-delete-gteam-id)","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"autumn-sonata"},"content":"        - [Adding team wide tasks](#adding-team-wide-tasks-task-add)","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"autumn-sonata"},"content":"    - [Tasks](#tasks)","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"autumn-sonata"},"content":"        - [Adding a task to a team](#adding-a-task-to-a-team-task-add)","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"autumn-sonata"},"content":"        - [Deleting a task from team](#deleting-a-task-from-team-task-delete)","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"autumn-sonata"},"content":"        - [Change task completion status](#change-task-completion-status-task-set-status)","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"autumn-sonata"},"content":"        - [Set task completion time](#set-task-completion-time-task-set-completed_time)","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"autumn-sonata"},"content":"- [FAQ](#faq)","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"autumn-sonata"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"autumn-sonata"},"content":"## Prerequisites","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"autumn-sonata"},"content":"- Ensure that `Java 11` and above is installed on your device.","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"autumn-sonata"},"content":"1. Download the latest `contactmation.jar` from [here](https://github.com/AY2223S1-CS2103T-T11-1/tp/releases).","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"autumn-sonata"},"content":"2. Save `contactmation.jar` into a folder that you want to use as your home folder on your desktop.","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"autumn-sonata"},"content":"3. Double-click the file `contactmation.jar` to start up the application.","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"autumn-sonata"},"content":"4. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"autumn-sonata"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"autumn-sonata"},"content":"## Features","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"autumn-sonata"},"content":"## Definitions","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"autumn-sonata"},"content":"In this user guide, we define any parameters within **square brackets** e.g. `[g/TEAMID]` as","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"autumn-sonata"},"content":"**optional parameters**, and commands within **angled brackets** e.g. `\u003ccommand\u003e` are **placeholder parameters**.","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"autumn-sonata"},"content":"**Ellipses** `...` indicate that more than 1 argument of a certain type can be given to a single command.","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"autumn-sonata"},"content":"For example, `[USER ID...]` means that an optional number (0 or more) of `USER IDs` can be added to a single","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"autumn-sonata"},"content":"user command, but `USER ID...` means that 1 or more `USER IDs` can be given to a single user command.","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"autumn-sonata"},"content":"**Team ID** refers to a specific ID automatically given by the application during the creation of a team.","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"autumn-sonata"},"content":"Any user commands involving `g/\u003cTEAM ID\u003e` will reference that particular team.","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"autumn-sonata"},"content":"**User ID** refers to a specific ID automatically given by the application during the creation of a contact.","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"autumn-sonata"},"content":"Any user commands involving `u/\u003cUSER ID\u003e` will reference that particular contact.","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"autumn-sonata"},"content":"## Scoping","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"autumn-sonata"},"content":"Since Contactmation is a multi team management contact application, the app supports scoping.","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"autumn-sonata"},"content":"- General Scope","lastModifiedDate":"2022-09-26"},{"lineNumber":76,"author":{"gitId":"autumn-sonata"},"content":"    - Commands used within the main menu scope:","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"autumn-sonata"},"content":"        - `\u003ccommand\u003e [parameters]` regular general scope command.","lastModifiedDate":"2022-09-26"},{"lineNumber":78,"author":{"gitId":"autumn-sonata"},"content":"        - `\u003ccommand\u003e u/\u003cUSER ID\u003e` command targeting a user of UID.","lastModifiedDate":"2022-09-26"},{"lineNumber":79,"author":{"gitId":"autumn-sonata"},"content":"    - Team scope commands from general scope:","lastModifiedDate":"2022-09-26"},{"lineNumber":80,"author":{"gitId":"autumn-sonata"},"content":"        - `\u003ccommand\u003e [parameters] g/\u003cTEAM ID\u003e`","lastModifiedDate":"2022-09-26"},{"lineNumber":81,"author":{"gitId":"autumn-sonata"},"content":"        - `\u003ccommand\u003e [parameters] g/\u003cTEAM ID\u003e u/\u003cUSER ID\u003e`","lastModifiedDate":"2022-09-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"autumn-sonata"},"content":"- Team Scope","lastModifiedDate":"2022-09-26"},{"lineNumber":85,"author":{"gitId":"autumn-sonata"},"content":"    - Commands used within a team scope:","lastModifiedDate":"2022-09-26"},{"lineNumber":86,"author":{"gitId":"autumn-sonata"},"content":"        - `\u003cTEAM ID\u003e \u003ccommand\u003e [parameters]`","lastModifiedDate":"2022-09-26"},{"lineNumber":87,"author":{"gitId":"autumn-sonata"},"content":"    - Commands used to target individuals within a team:","lastModifiedDate":"2022-09-26"},{"lineNumber":88,"author":{"gitId":"autumn-sonata"},"content":"        - `\u003cTEAM ID\u003e/\u003cUSER ID\u003e \u003ccommand\u003e [parameters]`","lastModifiedDate":"2022-09-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"autumn-sonata"},"content":"## Basic features","lastModifiedDate":"2022-09-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"autumn-sonata"},"content":"### Add a contact: `add`","lastModifiedDate":"2022-09-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"autumn-sonata"},"content":"Adds a new contact with a name, phone number, email, address and optional tags.","lastModifiedDate":"2022-09-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":97,"author":{"gitId":"autumn-sonata"},"content":"Format: `add n/\u003cNAME\u003e [p/\u003cPHONE_NUMBER\u003e] [e/\u003cEMAIL\u003e] [a/\u003cADDRESS\u003e] [t/TAG]`","lastModifiedDate":"2022-09-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"autumn-sonata"},"content":"### Delete a contact: `delete`","lastModifiedDate":"2022-09-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"autumn-sonata"},"content":"Delete a contact from the contact list by its `USER ID`.","lastModifiedDate":"2022-09-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"autumn-sonata"},"content":"- `delete \u003cUSER ID\u003e`","lastModifiedDate":"2022-09-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"autumn-sonata"},"content":"### Edit a contact: `edit`","lastModifiedDate":"2022-09-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"autumn-sonata"},"content":"Edits a contact based on its `USER ID`.","lastModifiedDate":"2022-09-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"autumn-sonata"},"content":"Format: `edit \u003cUSER ID\u003e [n/name] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]`","lastModifiedDate":"2022-09-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"autumn-sonata"},"content":"### Searching for a contact: `find`","lastModifiedDate":"2022-09-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"autumn-sonata"},"content":"Searches for a contact that matches the given keyword.","lastModifiedDate":"2022-09-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"autumn-sonata"},"content":"Format: `find \u003cKEYWORD\u003e [MORE_KEYWORDS]`","lastModifiedDate":"2022-09-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"autumn-sonata"},"content":"- `find John Doe`","lastModifiedDate":"2022-09-26"},{"lineNumber":120,"author":{"gitId":"autumn-sonata"},"content":"- `find 8881 2345`","lastModifiedDate":"2022-09-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"autumn-sonata"},"content":"### Listing all contacts: `list`","lastModifiedDate":"2022-09-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"autumn-sonata"},"content":"Lists all current contacts in your contact list, based on alphabetical order of contact names.","lastModifiedDate":"2022-09-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"autumn-sonata"},"content":"### Exits the program: `exit`","lastModifiedDate":"2022-09-26"},{"lineNumber":129,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":130,"author":{"gitId":"autumn-sonata"},"content":"Exits the current session.","lastModifiedDate":"2022-09-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"autumn-sonata"},"content":"Format: `exit`","lastModifiedDate":"2022-09-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"autumn-sonata"},"content":"## Teams","lastModifiedDate":"2022-09-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"autumn-sonata"},"content":"### Creating a team: `newteam`","lastModifiedDate":"2022-09-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"autumn-sonata"},"content":"Creates a new team with the specified team name along with optional parameters. These optional parameters are","lastModifiedDate":"2022-09-26"},{"lineNumber":139,"author":{"gitId":"autumn-sonata"},"content":"`USER IDs` that are to be added to the team.","lastModifiedDate":"2022-09-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"autumn-sonata"},"content":"- Format: `newteam n/\u003cteam name\u003e [USER ID...]`","lastModifiedDate":"2022-09-26"},{"lineNumber":142,"author":{"gitId":"autumn-sonata"},"content":"    - `\u003cteam name\u003e` is the name of the team to be created.","lastModifiedDate":"2022-09-26"},{"lineNumber":143,"author":{"gitId":"autumn-sonata"},"content":"    - `[USER ID]` are optional parameters to add people with corresponding User ID to the team.","lastModifiedDate":"2022-09-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"autumn-sonata"},"content":"### Deleting a team: `rmteam`","lastModifiedDate":"2022-09-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"autumn-sonata"},"content":"Removes an existing team.","lastModifiedDate":"2022-09-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"autumn-sonata"},"content":"- Format: `rmteam \u003cTEAM ID\u003e`","lastModifiedDate":"2022-09-26"},{"lineNumber":150,"author":{"gitId":"autumn-sonata"},"content":"    - `\u003cTEAM ID\u003e` is the ID of the team to be deleted.","lastModifiedDate":"2022-09-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"autumn-sonata"},"content":"### Adding people to a team: `add OR team \u003cTEAM ID\u003e add`","lastModifiedDate":"2022-09-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"autumn-sonata"},"content":"Adding members to an existing team.","lastModifiedDate":"2022-09-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"autumn-sonata"},"content":"- Adding a user under team scope:","lastModifiedDate":"2022-09-26"},{"lineNumber":157,"author":{"gitId":"autumn-sonata"},"content":"    - `team \u003cTEAM ID\u003e add \u003cUSER ID\u003e...`","lastModifiedDate":"2022-09-26"},{"lineNumber":158,"author":{"gitId":"autumn-sonata"},"content":"- Adding a user under global scope:","lastModifiedDate":"2022-09-26"},{"lineNumber":159,"author":{"gitId":"autumn-sonata"},"content":"    - `add g/\u003cTEAM ID\u003e \u003cUSER ID\u003e...`","lastModifiedDate":"2022-09-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"autumn-sonata"},"content":"### Removing people from team: `delete OR delete g/\u003cTEAM ID\u003e`","lastModifiedDate":"2022-09-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"autumn-sonata"},"content":"- Delete user from team under team scope:","lastModifiedDate":"2022-09-26"},{"lineNumber":164,"author":{"gitId":"autumn-sonata"},"content":"    - `team \u003cTEAM ID\u003e delete \u003cUSER ID\u003e...`","lastModifiedDate":"2022-09-26"},{"lineNumber":165,"author":{"gitId":"autumn-sonata"},"content":"- Delete user from team under global scope","lastModifiedDate":"2022-09-26"},{"lineNumber":166,"author":{"gitId":"autumn-sonata"},"content":"    - `delete g/\u003cTEAM ID\u003e \u003cUSER ID\u003e...`","lastModifiedDate":"2022-09-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"autumn-sonata"},"content":"### Adding team wide tasks: `task add`","lastModifiedDate":"2022-09-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"autumn-sonata"},"content":"- Adding task to team under team scope:","lastModifiedDate":"2022-09-26"},{"lineNumber":171,"author":{"gitId":"autumn-sonata"},"content":"    - `team \u003cTEAM ID\u003e task add t/\u003ctitle\u003e [i/INFO]`","lastModifiedDate":"2022-09-26"},{"lineNumber":172,"author":{"gitId":"autumn-sonata"},"content":"- Adding task to team under global scope:","lastModifiedDate":"2022-09-26"},{"lineNumber":173,"author":{"gitId":"autumn-sonata"},"content":"    - `task add g/\u003cTEAM ID\u003e t/\u003ctitle\u003e [i/INFO]`","lastModifiedDate":"2022-09-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"autumn-sonata"},"content":"See more task related commands under [tasks](#tasks).","lastModifiedDate":"2022-09-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"autumn-sonata"},"content":"## Tasks","lastModifiedDate":"2022-09-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"autumn-sonata"},"content":"You can avoid typing `g/\u003cTEAM ID\u003e` by accessing the task via team scoping!","lastModifiedDate":"2022-09-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"autumn-sonata"},"content":"i.e. `team TEAMID task \u003crelated command\u003e [task related details]`","lastModifiedDate":"2022-09-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"autumn-sonata"},"content":"### Adding a task to a team: `task add`","lastModifiedDate":"2022-09-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"autumn-sonata"},"content":"Adds a new task to an existing team.","lastModifiedDate":"2022-09-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"autumn-sonata"},"content":"Format: `task add t/\u003cTITLE\u003e g/\u003cTEAM ID\u003e [s/STATUS]`","lastModifiedDate":"2022-09-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"autumn-sonata"},"content":"- Adds a new task with the specified `TITLE` to the specified `TEAM ID`.","lastModifiedDate":"2022-09-26"},{"lineNumber":190,"author":{"gitId":"autumn-sonata"},"content":"- The status of the new task can be optionally specified with `STATUS`.","lastModifiedDate":"2022-09-26"},{"lineNumber":191,"author":{"gitId":"autumn-sonata"},"content":"- If a task with the same title already exists in the group, no changes will be made.","lastModifiedDate":"2022-09-26"},{"lineNumber":192,"author":{"gitId":"autumn-sonata"},"content":"- The specified group must already exist.","lastModifiedDate":"2022-09-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":194,"author":{"gitId":"autumn-sonata"},"content":"Example:","lastModifiedDate":"2022-09-26"},{"lineNumber":195,"author":{"gitId":"autumn-sonata"},"content":"- `task add t/Complete all CS2103T homework g/Students`","lastModifiedDate":"2022-09-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":197,"author":{"gitId":"autumn-sonata"},"content":"This creates a new task in the team `Students` with the title `Complete all CS2103T homework`.","lastModifiedDate":"2022-09-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":199,"author":{"gitId":"autumn-sonata"},"content":"### Deleting a task from team: `task delete`","lastModifiedDate":"2022-09-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"autumn-sonata"},"content":"Deletes an existing task from a team.","lastModifiedDate":"2022-09-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"autumn-sonata"},"content":"Format: `task delete t/\u003cTITLE\u003e g/\u003cTEAM ID\u003e`","lastModifiedDate":"2022-09-26"},{"lineNumber":204,"author":{"gitId":"autumn-sonata"},"content":"- Delete an existing task with the specified `TITLE` to from specified `TEAM ID`.","lastModifiedDate":"2022-09-26"},{"lineNumber":205,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":206,"author":{"gitId":"autumn-sonata"},"content":"Example:","lastModifiedDate":"2022-09-26"},{"lineNumber":207,"author":{"gitId":"autumn-sonata"},"content":"- `task delete t/Complete all CS2103T homework g/Students`","lastModifiedDate":"2022-09-26"},{"lineNumber":208,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":209,"author":{"gitId":"autumn-sonata"},"content":"This deletes a task in the team `Students` with the title `Complete all CS2103T homework`.","lastModifiedDate":"2022-09-26"},{"lineNumber":210,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":211,"author":{"gitId":"autumn-sonata"},"content":"### Change task completion status: `task set status`","lastModifiedDate":"2022-09-26"},{"lineNumber":212,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":213,"author":{"gitId":"autumn-sonata"},"content":"Sets the status of an existing task in a team.","lastModifiedDate":"2022-09-26"},{"lineNumber":214,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":215,"author":{"gitId":"autumn-sonata"},"content":"Format: `task set status t/\u003cTITLE\u003e g/\u003cTEAM ID\u003e v/\u003cSTATUS\u003e`","lastModifiedDate":"2022-09-26"},{"lineNumber":216,"author":{"gitId":"autumn-sonata"},"content":"- Sets the status of the task with the specified `TITLE` and `TEAM ID` to `STATUS`.","lastModifiedDate":"2022-09-26"},{"lineNumber":217,"author":{"gitId":"autumn-sonata"},"content":"- The existing status of the task will be overwritten by the new status.","lastModifiedDate":"2022-09-26"},{"lineNumber":218,"author":{"gitId":"autumn-sonata"},"content":"- The specified task must already exist in the group.","lastModifiedDate":"2022-09-26"},{"lineNumber":219,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":220,"author":{"gitId":"autumn-sonata"},"content":"Example:","lastModifiedDate":"2022-09-26"},{"lineNumber":221,"author":{"gitId":"autumn-sonata"},"content":"- `task set status t/Clean beakers g/Lab v/Done`","lastModifiedDate":"2022-09-26"},{"lineNumber":222,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":223,"author":{"gitId":"autumn-sonata"},"content":"This sets the status of the `Clean beakers` task in the `Lab` team to `Done`.","lastModifiedDate":"2022-09-26"},{"lineNumber":224,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":225,"author":{"gitId":"autumn-sonata"},"content":"### Set task completion time: `task set completed_time`","lastModifiedDate":"2022-09-26"},{"lineNumber":226,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":227,"author":{"gitId":"autumn-sonata"},"content":"Sets the time that a task has been completed.","lastModifiedDate":"2022-09-26"},{"lineNumber":228,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":229,"author":{"gitId":"autumn-sonata"},"content":"Format: `task set completed_time t/\u003cTITLE\u003e g/\u003cTEAM ID\u003e v/\u003cVALUE\u003e`","lastModifiedDate":"2022-09-26"},{"lineNumber":230,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":231,"author":{"gitId":"autumn-sonata"},"content":"- Sets the completed time of the task with the specified `TITLE` in `TEAM ID` to `VALUE`.","lastModifiedDate":"2022-09-26"},{"lineNumber":232,"author":{"gitId":"autumn-sonata"},"content":"- The `VALUE` for the time should be in UTC format with a precision in minutes: `yyyy-MM-ddThh:mmZ`.","lastModifiedDate":"2022-09-26"},{"lineNumber":233,"author":{"gitId":"autumn-sonata"},"content":"- The existing completed time of the task will be overwritten.","lastModifiedDate":"2022-09-26"},{"lineNumber":234,"author":{"gitId":"autumn-sonata"},"content":"- The specified task must already exist in the group.","lastModifiedDate":"2022-09-26"},{"lineNumber":235,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":236,"author":{"gitId":"autumn-sonata"},"content":"Example:","lastModifiedDate":"2022-09-26"},{"lineNumber":237,"author":{"gitId":"autumn-sonata"},"content":"- `task set completed_time t/Generate report g/Accountants v/2022-09-13T10:20Z`","lastModifiedDate":"2022-09-26"},{"lineNumber":238,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":239,"author":{"gitId":"autumn-sonata"},"content":"This sets the status of the `Generate report` task in the `Accountants` team to Sep 13, 2022 at 10:20am UTC time.","lastModifiedDate":"2022-09-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"autumn-sonata"},"content":"\u003e How can I install `Java 11`?","lastModifiedDate":"2022-09-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"autumn-sonata"},"content":"Follow the guide for installing `Java 11` [here](https://www.codejava.net/java-se/download-and-install-java-11-openjdk-and-oracle-jdk).","lastModifiedDate":"2022-09-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"autumn-sonata"},"content":"[Back to top](#contactmation-user-guide)","lastModifiedDate":"2022-09-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"autumn-sonata":170,"-":78}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"title: Contactmation","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T11-1/tp/actions)","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T11-1/tp/branch/master/graph/badge.svg?token\u003dPUKESWS2WM)](https://codecov.io/gh/AY2223S1-CS2103T-T11-1/tp)","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"Contactmation is a **desktop, contact management application** that is **optimized for team management and delegation of tasks through the Command Line Interface** (CLI). Contactmation efficiently tracks progress of your team projects.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"- If you are interested in using Contactmation, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"- If you are interested about developing Contactmation, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"Eclipse-Dominator":2,"jasonchristopher21":5,"-":11}},{"path":"docs/team/autumn-sonata.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"autumn-sonata"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"autumn-sonata"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"autumn-sonata"},"content":"title: Eric Lee\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"autumn-sonata"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"autumn-sonata"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"autumn-sonata"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"autumn-sonata"},"content":"To be added soon.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"autumn-sonata":11}},{"path":"docs/team/connlim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"connlim"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"connlim"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"connlim"},"content":"title: Connor Lim\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"connlim"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"connlim"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"connlim"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"connlim"},"content":"To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"connlim":11}},{"path":"docs/team/eclipse-dominator.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"title: Zhaoqi\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"To be added soon.","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"Eclipse-Dominator":10}},{"path":"docs/team/jasonchristopher21.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"title: Jason Christopher\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"To be added soon.","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jasonchristopher21":10}},{"path":"docs/team/mohamedsaf1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"title: Mohamed Safwan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"mohamedsaf1"},"content":"To be added soon.","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"mohamedsaf1":10}},{"path":"src/main/java/seedu/address/logic/commands/AddGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"autumn-sonata"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"autumn-sonata"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.model.item.AbstractContainerItem;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"autumn-sonata"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"autumn-sonata"},"content":" * Add a group to the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"autumn-sonata"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"autumn-sonata"},"content":"public class AddGroupCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"autumn-sonata"},"content":"    public static final String COMMAND_WORD \u003d \"mkgroup\";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"autumn-sonata"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a new group in the current \"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"autumn-sonata"},"content":"            + \"group scope if the group name does not currently exist. The group name should only \"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"autumn-sonata"},"content":"            + \"be alphanumeric and have hyphens and/or underscores only.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"autumn-sonata"},"content":"            + \"Parameters: group_name/group_within_group_name\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"autumn-sonata"},"content":"            + \"Example: \" + COMMAND_WORD + \" group_1/group_a\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"autumn-sonata"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New group added: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"autumn-sonata"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"This group already exists in the address book\";","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"autumn-sonata"},"content":"    private final Group toAdd;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"autumn-sonata"},"content":"     * Creates a AddGroupCommand to add the specified {@Code group}","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"autumn-sonata"},"content":"     * @param group that is being added to the AddressBook.","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"autumn-sonata"},"content":"    public AddGroupCommand(Group group) {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"autumn-sonata"},"content":"        requireNonNull(group);","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"autumn-sonata"},"content":"        toAdd \u003d group;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"autumn-sonata"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"autumn-sonata"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"autumn-sonata"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"autumn-sonata"},"content":"        if (model.hasTeam(toAdd)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"autumn-sonata"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"autumn-sonata"},"content":"        AbstractContainerItem currentContext \u003d model.getCurrentContext();","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"autumn-sonata"},"content":"        if (currentContext !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"autumn-sonata"},"content":"            toAdd.setParent(currentContext);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"autumn-sonata"},"content":"        model.addTeam(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"autumn-sonata"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"autumn-sonata"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"autumn-sonata":54}},{"path":"src/main/java/seedu/address/logic/commands/ChangeGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"autumn-sonata"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"autumn-sonata"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.model.group.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"autumn-sonata"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"autumn-sonata"},"content":" * Change the scope of the group to a different group.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"autumn-sonata"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"autumn-sonata"},"content":"public class ChangeGroupCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"autumn-sonata"},"content":"    public static final String COMMAND_WORD \u003d \"cg\"; // \"cg\" stands for change group","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"autumn-sonata"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Change to a currently \"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"autumn-sonata"},"content":"            + \"existing group. Group names should be alphanumeric and may contain hyphens and \"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"autumn-sonata"},"content":"            + \"underscores.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"autumn-sonata"},"content":"            + \"Parameters: group_name/group_within_group_name\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"autumn-sonata"},"content":"            + \"Example: \" + COMMAND_WORD + \" group_1/group_a\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"autumn-sonata"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Changed group to: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"autumn-sonata"},"content":"    public static final String MESSAGE_NO_GROUP_FOUND \u003d \"This group scope does not currently \"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"autumn-sonata"},"content":"            + \"exist in the address book\";","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"autumn-sonata"},"content":"    public static final String MESSAGE_IN_CURRENT_GROUP \u003d \"You are currently in the group \"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"autumn-sonata"},"content":"            + \"scope specified.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"autumn-sonata"},"content":"    private final Path path;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"autumn-sonata"},"content":"     * Creates a ChangeGroupCommand to change scope of group to the specified {@Code Group}","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"autumn-sonata"},"content":"    public ChangeGroupCommand(Path path) {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"autumn-sonata"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"autumn-sonata"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"autumn-sonata"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"autumn-sonata"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"autumn-sonata"},"content":"        String newPath \u003d path.getPath();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"autumn-sonata"},"content":"        if (model.isInSamePath(newPath)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"autumn-sonata"},"content":"            throw new CommandException(MESSAGE_IN_CURRENT_GROUP);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"autumn-sonata"},"content":"        if (!model.canChangeContext(newPath)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"autumn-sonata"},"content":"            throw new CommandException(MESSAGE_NO_GROUP_FOUND);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"autumn-sonata"},"content":"        model.changeContext(newPath);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"autumn-sonata"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newPath));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"autumn-sonata"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"autumn-sonata":54}},{"path":"src/main/java/seedu/address/logic/parser/AddGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"autumn-sonata"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"autumn-sonata"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"autumn-sonata"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"autumn-sonata"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"autumn-sonata"},"content":" * Parses input arguments and creates a new AddGroupCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"autumn-sonata"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"autumn-sonata"},"content":"public class AddGroupCommandParser implements Parser\u003cAddGroupCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"autumn-sonata"},"content":"     * Parses the given {@code String} of arguments in the context of the AddGroupCommand.","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"autumn-sonata"},"content":"     * @param args refer to the subsequent arguments after the initial command word.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"autumn-sonata"},"content":"     * @return an AddGroupCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"autumn-sonata"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"autumn-sonata"},"content":"    public AddGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"autumn-sonata"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"autumn-sonata"},"content":"            requireNonNull(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"autumn-sonata"},"content":"            String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"autumn-sonata"},"content":"            Group newGroup \u003d ParserUtil.parseGroup(trimmedArgs);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"autumn-sonata"},"content":"            return new AddGroupCommand(newGroup);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"autumn-sonata"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"autumn-sonata"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"autumn-sonata"},"content":"                    String.format(","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"autumn-sonata"},"content":"                            MESSAGE_INVALID_COMMAND_FORMAT, AddGroupCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"autumn-sonata"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"autumn-sonata":35}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.logic.commands.ChangeGroupCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":73,"author":{"gitId":"autumn-sonata"},"content":"        case AddGroupCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"autumn-sonata"},"content":"            return new AddGroupCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"autumn-sonata"},"content":"        case ChangeGroupCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"autumn-sonata"},"content":"            return new ChangeGroupCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"autumn-sonata":8,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/ChangeGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"autumn-sonata"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"autumn-sonata"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"autumn-sonata"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.logic.commands.ChangeGroupCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.model.group.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"autumn-sonata"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"autumn-sonata"},"content":" * Parses input arguments and creates a new ChangeGroupCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"autumn-sonata"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"autumn-sonata"},"content":"public class ChangeGroupCommandParser {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"autumn-sonata"},"content":"     * Parses the given {@code String} of arguments in the context of the ChangeGroupCommand.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"autumn-sonata"},"content":"     * @param args refer to the subsequent arguments after the initial command word.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"autumn-sonata"},"content":"     * @return a ChangeGroupCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"autumn-sonata"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"autumn-sonata"},"content":"    public ChangeGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"autumn-sonata"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"autumn-sonata"},"content":"            requireNonNull(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"autumn-sonata"},"content":"            Path path \u003d ParserUtil.parsePath(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"autumn-sonata"},"content":"            return new ChangeGroupCommand(path);","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"autumn-sonata"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"autumn-sonata"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"autumn-sonata"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"autumn-sonata"},"content":"                            ChangeGroupCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"autumn-sonata"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"autumn-sonata":33}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.model.group.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.model.item.AbstractContainerItem;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"autumn-sonata"},"content":"     * Parses {@code String path} into a {@code Group}.","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"autumn-sonata"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"autumn-sonata"},"content":"     * @param path to the currently nested group.","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"autumn-sonata"},"content":"     * @return a Path object that specifies a group based on that path.","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"autumn-sonata"},"content":"     * @throws ParseException if the given {@Code path} is not valid.","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"autumn-sonata"},"content":"    public static Path parsePath(String path) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"autumn-sonata"},"content":"        requireNonNull(path);","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"autumn-sonata"},"content":"        String trimmedPath \u003d path.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"autumn-sonata"},"content":"        if (!AbstractContainerItem.isValidPath(trimmedPath)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"autumn-sonata"},"content":"            throw new ParseException(Path.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"autumn-sonata"},"content":"        return new Path(trimmedPath);","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"autumn-sonata"},"content":"     * Parses {@code String group} into a {@code Group}.","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"autumn-sonata"},"content":"     * @param group name of group that is currently being accessed.","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"autumn-sonata"},"content":"     * @return a Group object that refers to a specified team.","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"autumn-sonata"},"content":"     * @throws ParseException if the given {@Code Group} is not valid.","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"autumn-sonata"},"content":"    public static Group parseGroup(String group) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"autumn-sonata"},"content":"        requireNonNull(group);","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"autumn-sonata"},"content":"        if (!Group.isValidGroupName(group)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"autumn-sonata"},"content":"            throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"autumn-sonata"},"content":"        return new Group(group);","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"autumn-sonata":36,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.group.UniqueGroupList;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"connlim"},"content":"import seedu.address.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"connlim"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"connlim"},"content":" * Wraps all data at the address-book level Duplicates are not allowed (by .weakEquality comparison)","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"    private final UniqueGroupList teams;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block,","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":"     * sometimes used to avoid duplication","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Eclipse-Dominator"},"content":"     * between constructors. See","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Eclipse-Dominator"},"content":"     * https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Note that non-static init blocks are not recommended to use. There are other","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"     * ways to avoid duplication","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":35,"author":{"gitId":"Eclipse-Dominator"},"content":"        teams \u003d new UniqueGroupList();","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"Eclipse-Dominator"},"content":"    public AddressBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"connlim"},"content":"     * Replaces the contents of the person list with {@code persons}. {@code persons} must not contain duplicate","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"connlim"},"content":"     * persons.","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"connlim"},"content":"     * Replaces the contents of the group list with {@code groups}. {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Eclipse-Dominator"},"content":"        this.teams.setItems(groups);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"Eclipse-Dominator"},"content":"        setGroups(newData.getTeamsList());","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"connlim"},"content":"     * Adds a person to the address book. The person must not already exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"connlim"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}. {@code target} must exist in the","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"connlim"},"content":"     * address book. The person identity of {@code editedPerson} must not be the same as another existing person in the","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"connlim"},"content":"     * address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"connlim"},"content":"     * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"Eclipse-Dominator"},"content":"    //// person-level operations","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"connlim"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"Eclipse-Dominator"},"content":"    public boolean hasGroup(Group team) {","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireNonNull(team);","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"Eclipse-Dominator"},"content":"        return teams.contains(team);","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"connlim"},"content":"     * Adds a person to the address book. The person must not already exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void addGroup(Group g) {","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"Eclipse-Dominator"},"content":"        teams.add(g);","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"connlim"},"content":"     * Removes {@code grp} from this {@code AddressBook}. {@code grp} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void removeTeam(Group grp) {","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"Eclipse-Dominator"},"content":"        teams.remove(grp);","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"connlim"},"content":"     * Returns true if a task with the same identity as {@code task} exists.","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"connlim"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"connlim"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"connlim"},"content":"        Group parent \u003d task.getParentGroup();","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"connlim"},"content":"        return hasGroup(parent) \u0026\u0026 parent.hasTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"connlim"},"content":"     * Adds a task to the team in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"connlim"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"connlim"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"connlim"},"content":"        Group parent \u003d task.getParentGroup();","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"connlim"},"content":"        if (hasGroup(parent)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"connlim"},"content":"            Group myGroup \u003d teams.get(parent);","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"connlim"},"content":"            task.setParent(myGroup);","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"connlim"},"content":"            myGroup.addTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"connlim"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"connlim"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"connlim"},"content":"     * Removes {@code task} from its group. Task must exist in address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"connlim"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"connlim"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"connlim"},"content":"        Group parent \u003d task.getParentGroup();","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"connlim"},"content":"        if (hasGroup(parent)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"connlim"},"content":"            Group myGroup \u003d teams.get(parent);","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"connlim"},"content":"            myGroup.removeTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"connlim"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"connlim"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"connlim"},"content":"        return String.format(\"%d persons, %d task\", persons.asUnmodifiableObservableList().size(),","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"Eclipse-Dominator"},"content":"                teams.asUnmodifiableObservableList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"connlim"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons) \u0026\u0026 teams.equals(((AddressBook) other).teams));","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"Eclipse-Dominator"},"content":"        return persons.hashCode() ^ teams.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"Eclipse-Dominator"},"content":"    public ObservableList\u003cGroup\u003e getTeamsList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"Eclipse-Dominator"},"content":"        return teams.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Eclipse-Dominator":46,"connlim":54,"-":100}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.AbstractContainerItem;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"connlim"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Eclipse-Dominator"},"content":"     * the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"Eclipse-Dominator"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"Eclipse-Dominator"},"content":"     * existing person in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"connlim"},"content":"     * Returns true if the task with the same identity as {@code task} exists in","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"connlim"},"content":"     * the address book","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"connlim"},"content":"     * @param task The task to check identity against","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"connlim"},"content":"     * @return true if the task exists, false otherwise","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"connlim"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"connlim"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"connlim"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"connlim"},"content":"     * @param task The task to delete.","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"connlim"},"content":"    void deleteTask(Task task);","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"connlim"},"content":"     * Adds the given task.","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"connlim"},"content":"     * {@code task} must not already exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"connlim"},"content":"     * @param task The task to add.","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"connlim"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Updates the filter of the filtered person list to filter by the given","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"Eclipse-Dominator"},"content":"     * {@code predicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"Eclipse-Dominator"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Updates the filter of the filtered person list to filter by the given","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"Eclipse-Dominator"},"content":"     * {@code predicates}.","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"Eclipse-Dominator"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"Eclipse-Dominator"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"Eclipse-Dominator"},"content":"    void updateFilteredPersonList(List\u003cPredicate\u003cPerson\u003e\u003e predicates);","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Updates the current scope to a new container","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"Eclipse-Dominator"},"content":"    void updateContextContainer(AbstractContainerItem container);","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"Eclipse-Dominator"},"content":"    boolean hasTeam(Group grp);","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"Eclipse-Dominator"},"content":"    void deleteTeam(Group grp);","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"Eclipse-Dominator"},"content":"    void addTeam(Group grp);","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"Eclipse-Dominator"},"content":"    void updateFilteredTeamList(Predicate\u003cGroup\u003e predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"Eclipse-Dominator"},"content":"    void updateFilteredTeamList(List\u003cPredicate\u003cGroup\u003e\u003e predicates);","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"autumn-sonata"},"content":"     * Checks if context can be changed from the current context to another group.","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"autumn-sonata"},"content":"     * @param path the path to be switched to.","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"autumn-sonata"},"content":"     * @return true if context can be changed to path, false otherwise.","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"autumn-sonata"},"content":"    boolean canChangeContext(String path);","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"autumn-sonata"},"content":"     * Changes current context to the specified path","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"autumn-sonata"},"content":"     * @param path that will be the new current context.","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"autumn-sonata"},"content":"    void changeContext(String path);","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"autumn-sonata"},"content":"    boolean isInSamePath(String path);","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"autumn-sonata"},"content":"    AbstractContainerItem getCurrentContext();","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"Eclipse-Dominator"},"content":"    ObservableList\u003cGroup\u003e getFilteredTeamList();","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Eclipse-Dominator":35,"connlim":23,"autumn-sonata":19,"-":84}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.AbstractContainerItem;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"connlim"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"    private final FilteredList\u003cGroup\u003e filteredTeams;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Eclipse-Dominator"},"content":"    private Optional\u003cAbstractContainerItem\u003e currentContext \u003d Optional.empty();","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"Eclipse-Dominator"},"content":"        filteredTeams \u003d new FilteredList\u003c\u003e(this.addressBook.getTeamsList());","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Eclipse-Dominator"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Eclipse-Dominator"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"Eclipse-Dominator"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"Eclipse-Dominator"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"Eclipse-Dominator"},"content":"    //// person level methods and accessors","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"Eclipse-Dominator"},"content":"    //// group level methods and accessors","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"Eclipse-Dominator"},"content":"    public boolean hasTeam(Group grp) {","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireNonNull(grp);","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"Eclipse-Dominator"},"content":"        return addressBook.hasGroup(grp);","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void deleteTeam(Group grp) {","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"Eclipse-Dominator"},"content":"        addressBook.removeTeam(grp);","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void addTeam(Group grp) {","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"Eclipse-Dominator"},"content":"        addressBook.addGroup(grp);","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"Eclipse-Dominator"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"connlim"},"content":"    //// task level methods and accessors","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"connlim"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"connlim"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"connlim"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"connlim"},"content":"        return addressBook.hasTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"connlim"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"connlim"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"connlim"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"connlim"},"content":"        addressBook.removeTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"connlim"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"connlim"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"connlim"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"connlim"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"Eclipse-Dominator"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"Eclipse-Dominator"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":169,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"Eclipse-Dominator"},"content":"     * internal list of","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":181,"author":{"gitId":"Eclipse-Dominator"},"content":"        updateFilteredPersonList(List.of(predicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void updateFilteredPersonList(List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireNonNull(predicates);","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"Eclipse-Dominator"},"content":"        Predicate\u003cPerson\u003e predicate \u003d p -\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"Eclipse-Dominator"},"content":"            return currentContext.map(cxt -\u003e p.isPartOfContext(cxt)).orElse(true)","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"Eclipse-Dominator"},"content":"                    \u0026\u0026 predicates.stream().map(pred -\u003e pred.test(p)).allMatch(res -\u003e res \u003d\u003d true);","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"Eclipse-Dominator"},"content":"        };","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":195,"author":{"gitId":"Eclipse-Dominator"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Teams List Accessors","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"Eclipse-Dominator"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"Eclipse-Dominator"},"content":"     * internal list of","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"Eclipse-Dominator"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"Eclipse-Dominator"},"content":"    public ObservableList\u003cGroup\u003e getFilteredTeamList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"Eclipse-Dominator"},"content":"        return filteredTeams;","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void updateFilteredTeamList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"Eclipse-Dominator"},"content":"        updateFilteredTeamList(List.of(predicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void updateFilteredTeamList(List\u003cPredicate\u003cGroup\u003e\u003e predicates) {","lastModifiedDate":"2022-10-10"},{"lineNumber":216,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireNonNull(predicates);","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"Eclipse-Dominator"},"content":"        Predicate\u003cGroup\u003e predicate \u003d g -\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"Eclipse-Dominator"},"content":"            return currentContext.map(cxt -\u003e g.isPartOfContext(cxt)).orElse(true)","lastModifiedDate":"2022-10-10"},{"lineNumber":219,"author":{"gitId":"Eclipse-Dominator"},"content":"                    \u0026\u0026 predicates.stream().map(pred -\u003e pred.test(g)).allMatch(res -\u003e res \u003d\u003d true);","lastModifiedDate":"2022-10-10"},{"lineNumber":220,"author":{"gitId":"Eclipse-Dominator"},"content":"        };","lastModifiedDate":"2022-10-10"},{"lineNumber":221,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"Eclipse-Dominator"},"content":"        filteredTeams.setPredicate(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":224,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":241,"author":{"gitId":"Eclipse-Dominator"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-10"},{"lineNumber":242,"author":{"gitId":"Eclipse-Dominator"},"content":"                \u0026\u0026 filteredTeams.equals(other.filteredTeams);","lastModifiedDate":"2022-10-10"},{"lineNumber":243,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":244,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":245,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":246,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void updateContextContainer(AbstractContainerItem container) {","lastModifiedDate":"2022-10-10"},{"lineNumber":247,"author":{"gitId":"Eclipse-Dominator"},"content":"        currentContext \u003d Optional.ofNullable(container);","lastModifiedDate":"2022-10-10"},{"lineNumber":248,"author":{"gitId":"Eclipse-Dominator"},"content":"        updateFilteredPersonList(List.of());","lastModifiedDate":"2022-10-10"},{"lineNumber":249,"author":{"gitId":"Eclipse-Dominator"},"content":"        updateFilteredTeamList(List.of());","lastModifiedDate":"2022-10-10"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":252,"author":{"gitId":"autumn-sonata"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"autumn-sonata"},"content":"    public boolean isInSamePath(String path) {","lastModifiedDate":"2022-10-12"},{"lineNumber":254,"author":{"gitId":"autumn-sonata"},"content":"        AbstractContainerItem currContext \u003d currentContext.orElse(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":255,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":256,"author":{"gitId":"autumn-sonata"},"content":"        if (currContext !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"autumn-sonata"},"content":"            return path \u003d\u003d currContext.getFullPathName();","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":259,"author":{"gitId":"autumn-sonata"},"content":"        return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":260,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":261,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":262,"author":{"gitId":"autumn-sonata"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":263,"author":{"gitId":"autumn-sonata"},"content":"    public boolean canChangeContext(String path) {","lastModifiedDate":"2022-10-12"},{"lineNumber":264,"author":{"gitId":"autumn-sonata"},"content":"        ObservableList\u003cGroup\u003e groupList \u003d addressBook.getTeamsList();","lastModifiedDate":"2022-10-12"},{"lineNumber":265,"author":{"gitId":"autumn-sonata"},"content":"        for (Group group : groupList) {","lastModifiedDate":"2022-10-12"},{"lineNumber":266,"author":{"gitId":"autumn-sonata"},"content":"            if (path.equals(group.getFullPathNameInclusive())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":267,"author":{"gitId":"autumn-sonata"},"content":"                return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":268,"author":{"gitId":"autumn-sonata"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":269,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":270,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":271,"author":{"gitId":"autumn-sonata"},"content":"        return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":272,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":273,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":274,"author":{"gitId":"autumn-sonata"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":275,"author":{"gitId":"autumn-sonata"},"content":"    public void changeContext(String path) {","lastModifiedDate":"2022-10-12"},{"lineNumber":276,"author":{"gitId":"autumn-sonata"},"content":"        ObservableList\u003cGroup\u003e groupList \u003d addressBook.getTeamsList();","lastModifiedDate":"2022-10-12"},{"lineNumber":277,"author":{"gitId":"autumn-sonata"},"content":"        for (Group group : groupList) {","lastModifiedDate":"2022-10-12"},{"lineNumber":278,"author":{"gitId":"autumn-sonata"},"content":"            if (path.equals(group.getFullPathNameInclusive())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":279,"author":{"gitId":"autumn-sonata"},"content":"                updateContextContainer(group);","lastModifiedDate":"2022-10-12"},{"lineNumber":280,"author":{"gitId":"autumn-sonata"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":281,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":282,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":283,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":284,"author":{"gitId":"autumn-sonata"},"content":"    public AbstractContainerItem getCurrentContext() {","lastModifiedDate":"2022-10-12"},{"lineNumber":285,"author":{"gitId":"autumn-sonata"},"content":"        return currentContext.orElse(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":286,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Eclipse-Dominator":86,"connlim":21,"autumn-sonata":35,"-":145}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Returns an unmodifiable view of the teams list.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":"     * This list will not contain any duplicate teams but may contains subteams.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Eclipse-Dominator"},"content":"    ObservableList\u003cGroup\u003e getTeamsList();","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":"    // /**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":"    // * Returns an unmodifiable view of all the tasks.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Eclipse-Dominator"},"content":"    // * This list will not contain any duplicate tasks.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Eclipse-Dominator"},"content":"    // */","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Eclipse-Dominator"},"content":"    // ObservableList\u003cPerson\u003e getTaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Eclipse-Dominator":13,"-":17}},{"path":"src/main/java/seedu/address/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"package seedu.address.model.group;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.AbstractContainerItem;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.DisplayItem;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.EntryType;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"connlim"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"connlim"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":" * Represents a Group in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"public class Group extends AbstractContainerItem {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"autumn-sonata"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"A group name should only consist \"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"autumn-sonata"},"content":"            + \"of alphanumeric characters, underscores and hyphens only.\\n\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"autumn-sonata"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9_-]+\";","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"    private final String groupName;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"connlim"},"content":"    private final UniqueTaskList taskList;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"autumn-sonata"},"content":"     * Constructs a group.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"autumn-sonata"},"content":"     * @param groupName that will be displayed for this group.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"autumn-sonata"},"content":"    public Group(String groupName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"autumn-sonata"},"content":"        this(groupName, null, null);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"autumn-sonata"},"content":"     * Constructs a group.","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"autumn-sonata"},"content":"     * @param groupName that will be displayed for this group.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"autumn-sonata"},"content":"     * @param parent that this group will be nested under.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"autumn-sonata"},"content":"     * @param fullPath that leads to this group through the nesting of parent groups.","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"autumn-sonata"},"content":"    public Group(String groupName, Group parent, String fullPath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"autumn-sonata"},"content":"        super(parent, fullPath);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Eclipse-Dominator"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"connlim"},"content":"        taskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"autumn-sonata"},"content":"     * Checks if the group name is valid. A group name is valid","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"autumn-sonata"},"content":"     * if the group name is fully alphanumeric.","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"autumn-sonata"},"content":"     * @param groupName for a specific team.","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"autumn-sonata"},"content":"     * @return true if the group name is valid, false otherwise.","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"autumn-sonata"},"content":"    public static boolean isValidGroupName(String groupName) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"autumn-sonata"},"content":"        return groupName.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"autumn-sonata"},"content":"     * Gets the full path to the group inclusive of the group itself.","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"autumn-sonata"},"content":"     * @return a string indicating the full path of the group, inclusive of the group name.","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"autumn-sonata"},"content":"    public String getFullPathNameInclusive() {","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"autumn-sonata"},"content":"        String fullPathExclusive \u003d getFullPathName();","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"autumn-sonata"},"content":"        if (fullPathExclusive \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"autumn-sonata"},"content":"            return groupName;","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"autumn-sonata"},"content":"        return String.format(\"%s/%s\", fullPathExclusive, groupName);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"connlim"},"content":"     * Checks if a task exists in this group","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"connlim"},"content":"     * @param task The task to check if exists","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"connlim"},"content":"     * @return true if it exists in this Group, false otherwise","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"connlim"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"connlim"},"content":"        return taskList.contains(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"connlim"},"content":"     * Adds a task to this group. The task must not already exist in this group.","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"connlim"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"connlim"},"content":"     * @param task The task to add","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"connlim"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"connlim"},"content":"        taskList.add(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"connlim"},"content":"     * Removes a task from this group. The task must already exist in this group","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"connlim"},"content":"     * @param task The task to remove","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"connlim"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"connlim"},"content":"        taskList.remove(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"Eclipse-Dominator"},"content":"    public EntryType getEntryType() {","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"Eclipse-Dominator"},"content":"        return EntryType.TEAM;","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"Eclipse-Dominator"},"content":"    public boolean stronglyEqual(DisplayItem o) {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (!weaklyEqual(o)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"Eclipse-Dominator"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"Eclipse-Dominator"},"content":"        Group g \u003d (Group) o;","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (parent !\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"Eclipse-Dominator"},"content":"            return parent.equals(o);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"Eclipse-Dominator"},"content":"        return g.parent \u003d\u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"Eclipse-Dominator"},"content":"    public boolean weaklyEqual(DisplayItem o) {","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (!(o instanceof Group)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"Eclipse-Dominator"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"Eclipse-Dominator"},"content":"        return ((Group) o).groupName.equals(groupName);","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"Eclipse-Dominator"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (!(obj instanceof Group)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"Eclipse-Dominator"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"Eclipse-Dominator"},"content":"        return stronglyEqual((Group) obj);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"Eclipse-Dominator"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"Eclipse-Dominator"},"content":"        return groupName;","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"Eclipse-Dominator"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Eclipse-Dominator":58,"connlim":28,"autumn-sonata":46}},{"path":"src/main/java/seedu/address/model/group/Path.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"autumn-sonata"},"content":"package seedu.address.model.group;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"autumn-sonata"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"autumn-sonata"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"autumn-sonata"},"content":" * Represents a Path to the nested group in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"autumn-sonata"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"autumn-sonata"},"content":"public class Path {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"autumn-sonata"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"A path to a  should be in \"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"autumn-sonata"},"content":"            + \"the format of group[/nested-group/...], where [...] refers to optional \"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"autumn-sonata"},"content":"            + \"arguments in the path. The path should adhere to the following \"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"autumn-sonata"},"content":"            + \"constraints:\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"autumn-sonata"},"content":"            + \"1. Both group and nested-groups can contain all alphanumeric characters, \"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"autumn-sonata"},"content":"            + \"hyphens and underscores only.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"autumn-sonata"},"content":"            + \"2. Each of the group or nested groups are being split by a slash (/).\\n\";","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"autumn-sonata"},"content":"    private final String path;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"autumn-sonata"},"content":"     * Constructs a path. Takes in a full path, typically denoted by","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"autumn-sonata"},"content":"     * the form group[/nested-group/...].","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"autumn-sonata"},"content":"     * @param path that leads to an existing group.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"autumn-sonata"},"content":"    public Path(String path) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"autumn-sonata"},"content":"        requireNonNull(path);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"autumn-sonata"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"autumn-sonata"},"content":"     * Gets the path, denoted by the form group[/nested-group/...].","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"autumn-sonata"},"content":"     * @return a String that stores the path to a group.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"autumn-sonata"},"content":"    public String getPath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"autumn-sonata"},"content":"        return path;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"autumn-sonata"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"autumn-sonata"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"autumn-sonata"},"content":"        return path;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"autumn-sonata"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"autumn-sonata":44}},{"path":"src/main/java/seedu/address/model/group/UniqueGroupList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"package seedu.address.model.group;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.DisplayItemList;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":" * A list of groups that enforces uniqueness between its elements and does not","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":" * allow nulls.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":" * A group is considered unique by comparing using","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":" * {@code DisplayItem#weakEqual(displayItem))}. As such, adding and updating of","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":" *","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":" *","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"public class UniqueGroupList extends DisplayItemList\u003cGroup\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Eclipse-Dominator":18}},{"path":"src/main/java/seedu/address/model/item/AbstractContainerItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.exceptions.ItemCannotBeParentException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":" * Abstract class to represent an item that can contain other items.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"public abstract class AbstractContainerItem extends DisplayItemList\u003cDisplayItem\u003e implements DisplayItem {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"autumn-sonata"},"content":"    private static final String PATH_VALIDATION_REGEX \u003d \"([a-zA-Z0-9_-]+\\\\/?)+([a-zA-Z0-9_-]+)\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"autumn-sonata"},"content":"    protected AbstractContainerItem parent;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"autumn-sonata"},"content":"    protected String fullPath;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"autumn-sonata"},"content":"    public AbstractContainerItem(AbstractContainerItem parent) {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"autumn-sonata"},"content":"        this(parent, null);","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"autumn-sonata"},"content":"     * Constructs an AbstractContainerItem.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"autumn-sonata"},"content":"     * @param parent reference that will be containing this current AbstractContainerItem.","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"autumn-sonata"},"content":"     * @param fullPath that includes all parents from root to this AbstractContainerItem.","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"autumn-sonata"},"content":"    public AbstractContainerItem(AbstractContainerItem parent, String fullPath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"autumn-sonata"},"content":"        this.parent \u003d parent;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"autumn-sonata"},"content":"        this.fullPath \u003d fullPath;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"autumn-sonata"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"autumn-sonata"},"content":"     * Checks if the path is valid. Only alphanumeric, hyphen, underscore and slash are allowed.","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"autumn-sonata"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"autumn-sonata"},"content":"     * @param path to reach the current AbstractContainerItem.","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"autumn-sonata"},"content":"     * @return true if path is valid, false otherwise.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"autumn-sonata"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"autumn-sonata"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"autumn-sonata"},"content":"        return path.matches(PATH_VALIDATION_REGEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void add(DisplayItem toAdd) {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Eclipse-Dominator"},"content":"        toAdd.setParent(this);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Eclipse-Dominator"},"content":"        super.add(toAdd);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Eclipse-Dominator"},"content":"    public \u003cT extends DisplayItem\u003e void setItems(List\u003cT\u003e items) {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"Eclipse-Dominator"},"content":"        // guards","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Eclipse-Dominator"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Eclipse-Dominator"},"content":"            if (items.get(i).equals(this)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Eclipse-Dominator"},"content":"                throw new ItemCannotBeParentException(this);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Eclipse-Dominator"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Eclipse-Dominator"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Eclipse-Dominator"},"content":"            items.get(i).setParent(this);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Eclipse-Dominator"},"content":"        super.setItems(items);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Eclipse-Dominator"},"content":"    public \u003cT extends DisplayItem\u003e void setItems(DisplayItemList\u003cT\u003e replacement) {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireAllNonNull(replacement);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Eclipse-Dominator"},"content":"        setItems(replacement.internalList);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Eclipse-Dominator"},"content":"    private String getTitle(List\u003cString\u003e sb) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Eclipse-Dominator"},"content":"        sb.add(toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (parent \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"Eclipse-Dominator"},"content":"            Collections.reverse(sb);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"Eclipse-Dominator"},"content":"            return sb.stream().collect(Collectors.joining(\"/\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Eclipse-Dominator"},"content":"        return parent.getTitle(sb);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"Eclipse-Dominator"},"content":"    protected void regenerateFullPathName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"Eclipse-Dominator"},"content":"        fullPath \u003d getTitle(new ArrayList\u003cString\u003e());","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"Eclipse-Dominator"},"content":"    public String getFullPathName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (fullPath !\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"Eclipse-Dominator"},"content":"            regenerateFullPathName();","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"Eclipse-Dominator"},"content":"        return fullPath;","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void setParent(DisplayItem o) {","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (!(o instanceof AbstractContainerItem)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new ItemCannotBeParentException(o);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"Eclipse-Dominator"},"content":"        parent \u003d (AbstractContainerItem) o;","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"autumn-sonata"},"content":"    public AbstractContainerItem getParent() {","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"autumn-sonata"},"content":"        return parent;","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"autumn-sonata"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"autumn-sonata"},"content":"    public boolean isPartOfContext(DisplayItem o) {","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"autumn-sonata"},"content":"        AbstractContainerItem temp \u003d parent;","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"autumn-sonata"},"content":"        while (parent !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"autumn-sonata"},"content":"            if (parent.equals(o)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"autumn-sonata"},"content":"                return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"autumn-sonata"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"autumn-sonata"},"content":"            temp \u003d temp.getParent();","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"autumn-sonata"},"content":"        return o \u003d\u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"Eclipse-Dominator"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Eclipse-Dominator":76,"autumn-sonata":47}},{"path":"src/main/java/seedu/address/model/item/DisplayItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":" * Represents a unique item in the addressbook, it can be either a accessable","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":" * team or an entry","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"public interface DisplayItem {","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Returns the entry type of the displayable item to determine which fxml layout","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"     * card will be used to display this item.","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"    EntryType getEntryType();","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Defines a stronger notions of equality between display items.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"    boolean stronglyEqual(DisplayItem o);","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Defines a weaker notion of equality between display items.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Eclipse-Dominator"},"content":"    boolean weaklyEqual(DisplayItem o);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Make the current item to belong under {@code DisplayItem o}","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Eclipse-Dominator"},"content":"    void setParent(DisplayItem o);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Returns true if {@code DisplayItem o} is a parent of this item","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Eclipse-Dominator"},"content":"    boolean isPartOfContext(DisplayItem o);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Eclipse-Dominator"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Eclipse-Dominator":33}},{"path":"src/main/java/seedu/address/model/item/DisplayItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"connlim"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":" * A list of persons that enforces uniqueness between its elements and does not","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":" * allow nulls.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":" * A person is considered unique by comparing using","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":" * {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":" * the person being added or updated is","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Eclipse-Dominator"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":" * a person uses Person#equals(Object) so","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":" *","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Eclipse-Dominator"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Eclipse-Dominator"},"content":" *","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Eclipse-Dominator"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Eclipse-Dominator"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"public class DisplayItemList\u003cT extends DisplayItem\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Eclipse-Dominator"},"content":"    protected ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Eclipse-Dominator"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Eclipse-Dominator"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Eclipse-Dominator"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Eclipse-Dominator"},"content":"        return internalList.stream().anyMatch(toCheck::weaklyEqual);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"connlim"},"content":"     * Returns the item in the list that is equal (but no necessarily the same object) as the given item.","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"connlim"},"content":"     * @param item The item to compare equality against.","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"connlim"},"content":"     * @return The item in the list which is equal to the given item","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"connlim"},"content":"    public T get(T item) throws ItemNotFoundException {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"connlim"},"content":"        requireNonNull(item);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"connlim"},"content":"        List\u003cT\u003e matchingItems \u003d internalList.stream().filter(item::weaklyEqual).collect(Collectors.toList());","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"connlim"},"content":"        if (matchingItems.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"connlim"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"connlim"},"content":"        return matchingItems.get(0);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Adds a person to the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Eclipse-Dominator"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"Eclipse-Dominator"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Eclipse-Dominator"},"content":"    public \u003cU extends T\u003e void setItems(List\u003cU\u003e items) {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Eclipse-Dominator"},"content":"        internalList.setAll(items);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Eclipse-Dominator"},"content":"    public \u003cU extends T\u003e void setItems(DisplayItemList\u003cU\u003e replacement) {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"Eclipse-Dominator"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Removes the equivalent item from the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"Eclipse-Dominator"},"content":"     * The item must exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"Eclipse-Dominator"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"Eclipse-Dominator"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"Eclipse-Dominator"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"Eclipse-Dominator"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"Eclipse-Dominator"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"Eclipse-Dominator"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"Eclipse-Dominator"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"Eclipse-Dominator"},"content":"                || (other instanceof DisplayItemList // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"Eclipse-Dominator"},"content":"                        \u0026\u0026 internalList.equals(((DisplayItemList\u003c?\u003e) other).internalList));","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"Eclipse-Dominator"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"Eclipse-Dominator"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"Eclipse-Dominator"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"Eclipse-Dominator"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"Eclipse-Dominator"},"content":"    private \u003cU extends T\u003e boolean itemsAreUnique(List\u003cU\u003e items) {","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"Eclipse-Dominator"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"Eclipse-Dominator"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"Eclipse-Dominator"},"content":"                if (items.get(i).weaklyEqual(items.get(j))) {","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"Eclipse-Dominator"},"content":"                    return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"Eclipse-Dominator"},"content":"                }","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"Eclipse-Dominator"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"Eclipse-Dominator"},"content":"        return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"Eclipse-Dominator"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Eclipse-Dominator":117,"connlim":15}},{"path":"src/main/java/seedu/address/model/item/EntryType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":" * Enum to represent the which kind of fxml card to use to represent the item.","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"public enum EntryType {","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"    USER(false),","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"    TEAM(true),","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"    TASK(true);","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"    private boolean isOpenable;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"    EntryType(boolean isOpenable) {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":"        this.isOpenable \u003d isOpenable;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"    public boolean getIsOpenable() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":"        return this.isOpenable;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Eclipse-Dominator":20}},{"path":"src/main/java/seedu/address/model/item/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"package seedu.address.model.item.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":" * Signals that the operation will result in duplicate Persons (Persons are","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":" * considered duplicates if they have the same","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":" * identity).","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"connlim"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Eclipse-Dominator":11,"connlim":1}},{"path":"src/main/java/seedu/address/model/item/exceptions/ItemCannotBeParentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"package seedu.address.model.item.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.DisplayItem;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":" * Signals that the operation cannot be done as the displayitem cannot be a","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":" * parent.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"public class ItemCannotBeParentException extends RuntimeException {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"    public ItemCannotBeParentException(DisplayItem item) {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"        super(String.format(\"Cannot be added to %s\", item.toString()));","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Eclipse-Dominator":13}},{"path":"src/main/java/seedu/address/model/item/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"package seedu.address.model.item.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"public class ItemNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Eclipse-Dominator":7}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.AbstractContainerItem;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.DisplayItem;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.EntryType;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.exceptions.ItemCannotBeParentException;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":" * immutable.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"public class Person implements DisplayItem {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Eclipse-Dominator"},"content":"    private Set\u003cAbstractContainerItem\u003e parents \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"Eclipse-Dominator"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Eclipse-Dominator"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"Eclipse-Dominator"},"content":"    public EntryType getEntryType() {","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"Eclipse-Dominator"},"content":"        return EntryType.USER;","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"Eclipse-Dominator"},"content":"    public boolean stronglyEqual(DisplayItem o) {","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"Eclipse-Dominator"},"content":"        return equals(o);","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"Eclipse-Dominator"},"content":"    public boolean weaklyEqual(DisplayItem o) {","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (!(o instanceof Person)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"Eclipse-Dominator"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"Eclipse-Dominator"},"content":"        return isSamePerson((Person) o);","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"Eclipse-Dominator"},"content":"    public void setParent(DisplayItem o) throws ItemCannotBeParentException {","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (!(o instanceof AbstractContainerItem) || parents.contains(o)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new ItemCannotBeParentException(o);","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"Eclipse-Dominator"},"content":"        parents.add((AbstractContainerItem) o);","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"Eclipse-Dominator"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"Eclipse-Dominator"},"content":"    public boolean isPartOfContext(DisplayItem o) {","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"autumn-sonata"},"content":"        if (parents.contains(o)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"autumn-sonata"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"autumn-sonata"},"content":"        for (AbstractContainerItem item : parents) {","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"autumn-sonata"},"content":"            if (item.isPartOfContext(o)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"autumn-sonata"},"content":"                return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"autumn-sonata"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"autumn-sonata"},"content":"        return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"Eclipse-Dominator"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eclipse-Dominator":41,"autumn-sonata":12,"-":120}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.DisplayItemList;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":" * A list of persons that enforces uniqueness between its elements and does not","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":" * allow nulls.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":" * A person is considered unique by comparing using","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":" * {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":" * the person being added or updated is","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":" * a person uses Person#equals(Object) so","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Eclipse-Dominator"},"content":"public class UniquePersonList extends DisplayItemList\u003cPerson\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"Eclipse-Dominator"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"Eclipse-Dominator"},"content":"     * existing person in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eclipse-Dominator":12,"-":118}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":" * Signals that the operation will result in duplicate Persons (Persons are","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":" * considered duplicates if they have the same","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Eclipse-Dominator":2,"-":10}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"connlim"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"connlim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"connlim"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"connlim"},"content":"import seedu.address.model.item.DisplayItem;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"connlim"},"content":"import seedu.address.model.item.EntryType;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"connlim"},"content":"import seedu.address.model.item.exceptions.ItemCannotBeParentException;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"connlim"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"connlim"},"content":" * Stores task details.","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"connlim"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"connlim"},"content":"public class Task implements DisplayItem {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"connlim"},"content":"    private final String title;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"connlim"},"content":"    private final String status;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"connlim"},"content":"    private final LocalDateTime completedTime;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"connlim"},"content":"    private Group parent;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"connlim"},"content":"     * Create a new task with no completed_time","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"connlim"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"connlim"},"content":"     * @param title The title of the task.","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"connlim"},"content":"     * @param status The status of the task.","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"connlim"},"content":"    public Task(String title, String status) {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"connlim"},"content":"        this(title, status, null);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"connlim"},"content":"     * Create a new task with a completed_time.","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"connlim"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"connlim"},"content":"     * @param title The title of the task.","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"connlim"},"content":"     * @param status The status of the task.","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"connlim"},"content":"     * @param completedTime The completed_time of the task.","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"connlim"},"content":"    public Task(String title, String status, LocalDateTime completedTime) {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"connlim"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"connlim"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"connlim"},"content":"        this.completedTime \u003d completedTime;","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"connlim"},"content":"     * Returns the parent {@code Group} of this Task.","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"connlim"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"connlim"},"content":"     * @return The parent Group.","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"connlim"},"content":"    public Group getParentGroup() {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"connlim"},"content":"        return parent;","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"connlim"},"content":"     * Returns true if both tasks have the same name and group. This defines a weaker notion of equality between two","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"connlim"},"content":"     * tasks.","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"connlim"},"content":"    public boolean isSameTask(Task t) {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"connlim"},"content":"        return title.equals(t.title) \u0026\u0026 status.equals(t.status) \u0026\u0026 completedTime.equals(t.completedTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"connlim"},"content":"     * Returns the entry type of the displayable item to determine which fxml layout card will be used to display this","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"connlim"},"content":"     * item.","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"connlim"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"connlim"},"content":"    public EntryType getEntryType() {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"connlim"},"content":"        return EntryType.TASK;","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"connlim"},"content":"     * Defines a stronger notions of equality between display items.","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"connlim"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"connlim"},"content":"     * @param o The other item to compare equality to","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"connlim"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"connlim"},"content":"    public boolean stronglyEqual(DisplayItem o) {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"connlim"},"content":"        return equals(o);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"connlim"},"content":"     * Defines a weaker notion of equality between display items.","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"connlim"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"connlim"},"content":"     * @param o The other item to compare equality to","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"connlim"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"connlim"},"content":"    public boolean weaklyEqual(DisplayItem o) {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"connlim"},"content":"        if (o instanceof Task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"connlim"},"content":"            return isSameTask((Task) o);","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"connlim"},"content":"        return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"connlim"},"content":"     * Make the current item to belong under {@code DisplayItem o}","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"connlim"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"connlim"},"content":"     * @param o The new parent for the Task","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"connlim"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"connlim"},"content":"    public void setParent(DisplayItem o) throws ItemCannotBeParentException {","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"connlim"},"content":"        if (!(o instanceof Group)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"connlim"},"content":"            throw new ItemCannotBeParentException(o);","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"connlim"},"content":"        parent \u003d (Group) o;","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"connlim"},"content":"     * Returns true if {@code DisplayItem o} is a parent of this item","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"connlim"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"connlim"},"content":"     * @param o The item that may be a parent of this Task","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"connlim"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"connlim"},"content":"    public boolean isPartOfContext(DisplayItem o) {","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"connlim"},"content":"        return parent.equals(o);","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"connlim"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"connlim":115}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"connlim"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"connlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"connlim"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"connlim"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"connlim"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"connlim"},"content":"import seedu.address.model.item.DisplayItemList;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"connlim"},"content":"import seedu.address.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"connlim"},"content":"import seedu.address.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"connlim"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"connlim"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls. A task is considered unique","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"connlim"},"content":" * by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of tasks uses Task#isSameTask(Task)","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"connlim"},"content":" * for equality so as to ensure that the task being added or updated is unique in terms of identity in the","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"connlim"},"content":" * UniqueTaskList. However, the removal of a task uses Task#equals(Object) so as to ensure that the task with exactly","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"connlim"},"content":" * the same fields will be removed.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"connlim"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"connlim"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"connlim"},"content":" *","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"connlim"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"connlim"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"connlim"},"content":"public class UniqueTaskList extends DisplayItemList\u003cTask\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"connlim"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"connlim"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"connlim"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"connlim"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"connlim"},"content":"     * Adds a task to the list. The task must not already exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"connlim"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"connlim"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"connlim"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"connlim"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"connlim"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"connlim"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}. {@code target} must exist in the list. The","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"connlim"},"content":"     * task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"connlim"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"connlim"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"connlim"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"connlim"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"connlim"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"connlim"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"connlim"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"connlim"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"connlim"},"content":"     * Removes the equivalent task from the list. The task must exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"connlim"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"connlim"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"connlim"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"connlim"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"connlim"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"connlim"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"connlim"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"connlim"},"content":"     * Replaces the contents of this list with {@code tasks}. {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"connlim"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"connlim"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"connlim"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"connlim"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"connlim"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"connlim"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"connlim"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"connlim"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"connlim"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"connlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"connlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"connlim"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"connlim"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"connlim"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"connlim"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"connlim"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"connlim"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"connlim"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"connlim"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"connlim"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"connlim"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"connlim"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"connlim"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"connlim"},"content":"                    return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"connlim"},"content":"                }","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"connlim"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"connlim"},"content":"        return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"connlim"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"connlim"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"connlim":122}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.item.AbstractContainerItem;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"connlim"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"connlim"},"content":"        public boolean hasTask(seedu.address.model.task.Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"connlim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"connlim"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"connlim"},"content":"        public void deleteTask(seedu.address.model.task.Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"connlim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"connlim"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"connlim"},"content":"        public void addTask(seedu.address.model.task.Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"connlim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"connlim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"connlim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"Eclipse-Dominator"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"Eclipse-Dominator"},"content":"        public void updateFilteredPersonList(List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"Eclipse-Dominator"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"Eclipse-Dominator"},"content":"        public void updateContextContainer(AbstractContainerItem container) {","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"Eclipse-Dominator"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"Eclipse-Dominator"},"content":"        public boolean hasTeam(Group grp) {","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"Eclipse-Dominator"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"Eclipse-Dominator"},"content":"        public void deleteTeam(Group grp) {","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"Eclipse-Dominator"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"Eclipse-Dominator"},"content":"        public void addTeam(Group grp) {","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"Eclipse-Dominator"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"Eclipse-Dominator"},"content":"        public void updateFilteredTeamList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"Eclipse-Dominator"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"Eclipse-Dominator"},"content":"        public void updateFilteredTeamList(List\u003cPredicate\u003cGroup\u003e\u003e predicates) {","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"autumn-sonata"},"content":"        /**","lastModifiedDate":"2022-10-12"},{"lineNumber":211,"author":{"gitId":"autumn-sonata"},"content":"         * Checks if context can be changed from the current context to another group.","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"autumn-sonata"},"content":"         *","lastModifiedDate":"2022-10-12"},{"lineNumber":213,"author":{"gitId":"autumn-sonata"},"content":"         * @param path the path to be switched to.","lastModifiedDate":"2022-10-12"},{"lineNumber":214,"author":{"gitId":"autumn-sonata"},"content":"         * @return true if context can be changed to path, false otherwise.","lastModifiedDate":"2022-10-12"},{"lineNumber":215,"author":{"gitId":"autumn-sonata"},"content":"         */","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"autumn-sonata"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"autumn-sonata"},"content":"        public boolean canChangeContext(String path) {","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"autumn-sonata"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"autumn-sonata"},"content":"        /**","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"autumn-sonata"},"content":"         * Changes current context to the specified path","lastModifiedDate":"2022-10-12"},{"lineNumber":223,"author":{"gitId":"autumn-sonata"},"content":"         *","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"autumn-sonata"},"content":"         * @param path that will be the new current context.","lastModifiedDate":"2022-10-12"},{"lineNumber":225,"author":{"gitId":"autumn-sonata"},"content":"         */","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"autumn-sonata"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"autumn-sonata"},"content":"        public void changeContext(String path) {","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"autumn-sonata"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":229,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":230,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":231,"author":{"gitId":"autumn-sonata"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"autumn-sonata"},"content":"        public boolean isInSamePath(String path) {","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"autumn-sonata"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"autumn-sonata"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"autumn-sonata"},"content":"        public AbstractContainerItem getCurrentContext() {","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"autumn-sonata"},"content":"            return null;","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"autumn-sonata"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":241,"author":{"gitId":"Eclipse-Dominator"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":242,"author":{"gitId":"Eclipse-Dominator"},"content":"        public ObservableList\u003cGroup\u003e getFilteredTeamList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":243,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":244,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Eclipse-Dominator":49,"connlim":15,"autumn-sonata":31,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/AddGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"autumn-sonata"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"autumn-sonata"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"autumn-sonata"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"autumn-sonata"},"content":"public class AddGroupCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"autumn-sonata"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"autumn-sonata"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"autumn-sonata"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddGroupCommand(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"autumn-sonata"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"autumn-sonata":13}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"autumn-sonata"},"content":"    public static final String VALID_GROUP_NAME \u003d \"group1\";","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"autumn-sonata"},"content":"    public static final String VALID_PATH \u003d \"group1/group2/group3\";","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"autumn-sonata"},"content":"    public static final String INVALID_GROUP_NAME \u003d \"group 1\";","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"autumn-sonata"},"content":"    public static final String INVALID_PATH \u003d \"invalid \\\\ path\";","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"autumn-sonata":4,"-":128}},{"path":"src/test/java/seedu/address/logic/parser/AddGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"autumn-sonata"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"autumn-sonata"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"autumn-sonata"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_NAME;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"autumn-sonata"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"autumn-sonata"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"autumn-sonata"},"content":"public class AddGroupCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"autumn-sonata"},"content":"    private AddGroupCommandParser parser \u003d new AddGroupCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"autumn-sonata"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"autumn-sonata"},"content":"    public void parse_groupFormat_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"autumn-sonata"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGroupCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"autumn-sonata"},"content":"        assertParseFailure(parser, INVALID_GROUP_NAME, expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"autumn-sonata"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"autumn-sonata":19}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"autumn-sonata"},"content":"import seedu.address.model.group.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"autumn-sonata"},"content":"    private static final String INVALID_TEAM_NAME \u003d \"invalid team\";","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"autumn-sonata"},"content":"    private static final String INVALID_PATH_NAME \u003d \"invalid team\\\\\";","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"autumn-sonata"},"content":"    private static final String VALID_TEAM_NAME \u003d \"validTeamName\";","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"autumn-sonata"},"content":"    private static final String VALID_PATH \u003d \"team/team1/team2\";","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"autumn-sonata"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"autumn-sonata"},"content":"    public void parsePath_validPath_returnsPath() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"autumn-sonata"},"content":"        Path actualPath \u003d ParserUtil.parsePath(VALID_PATH);","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"autumn-sonata"},"content":"        Path expectedPath \u003d new Path(VALID_PATH);","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"autumn-sonata"},"content":"        assertEquals(actualPath.toString(), expectedPath.toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":209,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"autumn-sonata"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"autumn-sonata"},"content":"    public void parsePath_invalidPathTrailing_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"autumn-sonata"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePath(INVALID_PATH_NAME));","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":216,"author":{"gitId":"autumn-sonata"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"autumn-sonata"},"content":"    public void parseTeam_validTeamName_returnsGroup() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"autumn-sonata"},"content":"        Group actualGroup \u003d ParserUtil.parseGroup(VALID_TEAM_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"autumn-sonata"},"content":"        Group expectedGroup \u003d new Group(VALID_TEAM_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":221,"author":{"gitId":"autumn-sonata"},"content":"        assertEquals(actualGroup, expectedGroup);","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"autumn-sonata"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":224,"author":{"gitId":"autumn-sonata"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":225,"author":{"gitId":"autumn-sonata"},"content":"    public void parseGroup_invalidTeamNameHasWhitespace_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"autumn-sonata"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroup(INVALID_TEAM_NAME));","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"autumn-sonata"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"autumn-sonata":32,"-":196}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"Eclipse-Dominator"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"Eclipse-Dominator"},"content":"     * constraints.","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"Eclipse-Dominator"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"Eclipse-Dominator"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"Eclipse-Dominator"},"content":"        public ObservableList\u003cGroup\u003e getTeamsList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"Eclipse-Dominator"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"Eclipse-Dominator"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Eclipse-Dominator":8,"-":101}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"Eclipse-Dominator"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"Eclipse-Dominator"},"content":"            uniquePersonList.asUnmodifiableObservableList().remove(0);","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"Eclipse-Dominator"},"content":"        });","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Eclipse-Dominator":3,"-":168}}]
