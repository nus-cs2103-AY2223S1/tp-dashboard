[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"# TruthTable","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W13-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W13-4/tp/actions)","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"## Overview","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"Are you","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"- a university student leading software engineering teams in your modules?","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"- having trouble keeping track of your team’s progress and delegating tasks effectively?","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"- someone who prefers CLI to GUI?","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"- desperate for a single source of truth on who’s doing what and by when?","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"Then, **TruthTable** is _perfect_ for you.","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"## Features","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"**TruthTable** allows you to","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"1. collate different project-related information (e.g. GitHub project PRs, issues, links to Zoom meetings, and Google","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"   Docs)","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"2. visualise your teams’ progress easily","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"3. delegate tasks to your team members conveniently","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"4. use CLI interface to manage your project tasks _blazingly_ fast.","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"# Acknowledgements","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"This project is based on the `AddressBook-Level3` project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"-":3,"marcuspang":28}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":"### Devansh Shah","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":"\u003cimg src\u003d\"images/devanshshah1309.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":"[homepage](https://www.linkedin.com/in/devansh-shah-305a59201/)","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":"[github](https://github.com/devanshshah1309)","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"[portfolio](team/devanshshah1309.md)","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"### Marcus Pang","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"\u003cimg src\u003d\"images/marcuspang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"[homepage](https://www.linkedin.com/in/marcus-pang-yu-yang/)","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"[github](http://github.com/marcuspang)","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"[portfolio](team/marcuspang.md)","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"ling-ui"},"content":"### Gui Ling Ling","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"ling-ui"},"content":"\u003cimg src\u003d\"images/ling-ui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"ling-ui"},"content":"[github](http://github.com/ling-ui)","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"ling-ui"},"content":"[portfolio](team/ling-ui.md)","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"### Chang Jing Yan","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"\u003cimg src\u003d\"images/changjy44.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"[homepage](https://www.linkedin.com/in/chang-jing-yan-079928146/)","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"changjy44"},"content":"[github](http://github.com/changjy44)","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"changjy44"},"content":"[portfolio](team/changjy44.md)","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"changjy44"},"content":"### Gui Ming Jiang","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"changjy44"},"content":"\u003cimg src\u003d\"images/mjgui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"changjy44"},"content":"[[github](http://github.com/mjgui)]","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"changjy44"},"content":"[[portfolio](team/mjgui.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ling-ui":4,"changjy44":13,"-":39,"DevanshShah1309":6,"marcuspang":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"DevanshShah1309"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"DevanshShah1309"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic`.","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"ling-ui"},"content":"* Tech-savvy university student leading teams in software engineering modules to build software projects","lastModifiedDate":"2022-10-04"},{"lineNumber":261,"author":{"gitId":"ling-ui"},"content":"* Having trouble keeping track of the team’s progress and delegating tasks effectively","lastModifiedDate":"2022-10-04"},{"lineNumber":262,"author":{"gitId":"ling-ui"},"content":"* Student who prefers CLI to GUI for productivity’s sake","lastModifiedDate":"2022-10-04"},{"lineNumber":263,"author":{"gitId":"ling-ui"},"content":"* Desperate for a single source of truth on who is doing what and by when","lastModifiedDate":"2022-10-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"ling-ui"},"content":"**Value proposition**:","lastModifiedDate":"2022-10-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"ling-ui"},"content":"* Users can collate different project-related information (e.g. Github project PRs, issues, links to Zoom meetings, and Google Docs)","lastModifiedDate":"2022-10-04"},{"lineNumber":268,"author":{"gitId":"ling-ui"},"content":"* Users can visualise teams’ progress easily","lastModifiedDate":"2022-10-04"},{"lineNumber":269,"author":{"gitId":"ling-ui"},"content":"* Users can delegate tasks to their teammates conveniently","lastModifiedDate":"2022-10-04"},{"lineNumber":270,"author":{"gitId":"ling-ui"},"content":"* CLI interface to manage project tasks much more quickly than GUI based products","lastModifiedDate":"2022-10-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"DevanshShah1309"},"content":"| Priority | As a ...              | I want to ...                                                                            | So that I can...                                                                                     |","lastModifiedDate":"2022-09-28"},{"lineNumber":277,"author":{"gitId":"DevanshShah1309"},"content":"|----------|-----------------------|------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-28"},{"lineNumber":278,"author":{"gitId":"DevanshShah1309"},"content":"| `* * *`  | New User              | See usage instructions                                                                   | Refer to instructions when I forget how to use the App                                               |","lastModifiedDate":"2022-09-30"},{"lineNumber":279,"author":{"gitId":"DevanshShah1309"},"content":"| `* * *`  | Team Leader           | View completed tasks                                                                     | Track the status of the project                                                                      |","lastModifiedDate":"2022-09-28"},{"lineNumber":280,"author":{"gitId":"DevanshShah1309"},"content":"| `* * *`  | Team Leader           | Add new tasks                                                                            | Track things my team needs to do                                                                     |","lastModifiedDate":"2022-09-30"},{"lineNumber":281,"author":{"gitId":"DevanshShah1309"},"content":"| `* * *`  | Team Leader           | Add team members with their contact information                                          | Keep track of my team members and contact them with their preferred mode of communication            |","lastModifiedDate":"2022-09-28"},{"lineNumber":282,"author":{"gitId":"DevanshShah1309"},"content":"| `* * *`  | Team Leader           | View tasks based on contact’s name/email                                                 | Keep track of each person’s tasks                                                                    |","lastModifiedDate":"2022-09-28"},{"lineNumber":283,"author":{"gitId":"DevanshShah1309"},"content":"| `* * *`  | Team Leader           | Assign deadlines to tasks                                                                | Track whether we are meeting deadlines for all tasks or not                                          |","lastModifiedDate":"2022-09-28"},{"lineNumber":284,"author":{"gitId":"DevanshShah1309"},"content":"| `* * *`  | Team Leader           | Create multiple stages of completion for a task (e.g. in progress, in code review, done) | See the progress of each task at a glance                                                            |","lastModifiedDate":"2022-09-28"},{"lineNumber":285,"author":{"gitId":"DevanshShah1309"},"content":"| `* * *`  | Team Leader           | Delete tasks                                                                             | Remove tasks that are no longer required to be completed or have been added on mistake               |","lastModifiedDate":"2022-09-28"},{"lineNumber":286,"author":{"gitId":"DevanshShah1309"},"content":"| `* * *`  | Team Leader           | Delete members                                                                           | Remove information of members who are no longer working on my project                                |","lastModifiedDate":"2022-09-28"},{"lineNumber":287,"author":{"gitId":"DevanshShah1309"},"content":"| `* *`    | Team Leader           | Modify existing tasks                                                                    | Update project requirements and track things to do                                                   |","lastModifiedDate":"2022-09-28"},{"lineNumber":288,"author":{"gitId":"DevanshShah1309"},"content":"| `* *`    | Team Leader           | Assign tasks to team members                                                             | Distribute workload evenly and keep everyone accountable                                             |","lastModifiedDate":"2022-09-28"},{"lineNumber":289,"author":{"gitId":"DevanshShah1309"},"content":"| `* *`    | Team Leader           | Edit the contact information of my team members                                          | Correct it if I accidentally added the wrong number/email                                            |","lastModifiedDate":"2022-09-28"},{"lineNumber":290,"author":{"gitId":"DevanshShah1309"},"content":"| `* *`    | Team Leader           | Give priority to tasks                                                                   | Better plan which tasks are to be assigned to whom and when                                          |","lastModifiedDate":"2022-09-28"},{"lineNumber":291,"author":{"gitId":"DevanshShah1309"},"content":"| `* *`    | Engineering Team Lead | Store links that lead me to an issue on the repo                                         | Easily view the diff, progress, etc.                                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"DevanshShah1309"},"content":"| `* *`    | Team Leader           | View links to future Zoom meetings                                                       | Avoid opening Zoom separately and can directly join the meeting from the application                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":293,"author":{"gitId":"DevanshShah1309"},"content":"| `* *`    | Team Leader           | Add subtasks                                                                             | Break down tasks into manageable parts                                                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":294,"author":{"gitId":"DevanshShah1309"},"content":"| `* *`    | Team Leader           | View a summary of how many tasks each member has been assigned                           | Assign tasks to the members more equally, based on how occupied they might be                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":295,"author":{"gitId":"DevanshShah1309"},"content":"| `* *`    | Team Leader           | Add recurring tasks such as weekly meetings                                              | Assign a recurring tasks once instead of having to schedule it every occurrence                      |","lastModifiedDate":"2022-09-28"},{"lineNumber":296,"author":{"gitId":"DevanshShah1309"},"content":"| `*`      | Team Leader           | View past meeting minutes                                                                | Refer to what has been discussed before                                                              |","lastModifiedDate":"2022-09-28"},{"lineNumber":297,"author":{"gitId":"DevanshShah1309"},"content":"| `*`      | Team Leader           | View past meetings                                                                       | Remember which date we completed each meeting                                                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":298,"author":{"gitId":"DevanshShah1309"},"content":"| `*`      | Team Leader           | View upcoming meetings                                                                   | Plan for upcoming meetings                                                                           |","lastModifiedDate":"2022-09-28"},{"lineNumber":299,"author":{"gitId":"DevanshShah1309"},"content":"| `*`      | Team Leader           | Modify upcoming meetings                                                                 | Reschedule future meetings when the need arises                                                      |","lastModifiedDate":"2022-09-28"},{"lineNumber":300,"author":{"gitId":"DevanshShah1309"},"content":"| `*`      | Team Leader           | Copy team member’s email                                                                 | Easily send an email to remind him/her to do their task                                              |","lastModifiedDate":"2022-09-28"},{"lineNumber":301,"author":{"gitId":"DevanshShah1309"},"content":"| `*`      | Team Leader           | Have 2 kinds of deadlines - soft and hard                                                | Let my team members finish the task by the soft deadline and I can review/merge by the hard deadline |","lastModifiedDate":"2022-09-28"},{"lineNumber":302,"author":{"gitId":"DevanshShah1309"},"content":"| `*`      | Team Leader           | Receive reminders when a deadline is due                                                 | Ensure tasks are completed on time                                                                   |","lastModifiedDate":"2022-09-28"},{"lineNumber":303,"author":{"gitId":"DevanshShah1309"},"content":"| `*`      | Team Leader           | Randomly assign a task to any team member                                                | Assign tasks easily if nobody has any preference                                                     |","lastModifiedDate":"2022-09-28"},{"lineNumber":304,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":305,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":306,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":307,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"ling-ui"},"content":"(For all use cases below, the **System** is the `TruthTable` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-30"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"ling-ui"},"content":"**Use case: UC01 - Add a member to a team**","lastModifiedDate":"2022-10-01"},{"lineNumber":315,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":316,"author":{"gitId":"ling-ui"},"content":"Preconditions: The current working team is set to the team that the member should be added to.","lastModifiedDate":"2022-09-30"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"ling-ui"},"content":"1. User requests to add member and provides member name","lastModifiedDate":"2022-09-30"},{"lineNumber":321,"author":{"gitId":"ling-ui"},"content":"2. TruthTable adds the member","lastModifiedDate":"2022-09-30"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":323,"author":{"gitId":"ling-ui"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":324,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":325,"author":{"gitId":"ling-ui"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":326,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":327,"author":{"gitId":"ling-ui"},"content":"* 1a. There is no name provided.","lastModifiedDate":"2022-09-30"},{"lineNumber":328,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":329,"author":{"gitId":"ling-ui"},"content":"    * 1a1. TruthTable shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":330,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":331,"author":{"gitId":"ling-ui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-09-30"},{"lineNumber":332,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":333,"author":{"gitId":"ling-ui"},"content":"**Use case: UC02 - Delete a member from a team**","lastModifiedDate":"2022-10-01"},{"lineNumber":334,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":335,"author":{"gitId":"ling-ui"},"content":"Preconditions: The current working team is set to the team that the member should be deleted from.","lastModifiedDate":"2022-09-30"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":337,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":339,"author":{"gitId":"ling-ui"},"content":"1.  User requests to list members","lastModifiedDate":"2022-09-30"},{"lineNumber":340,"author":{"gitId":"ling-ui"},"content":"2.  TruthTable shows a list of members","lastModifiedDate":"2022-09-30"},{"lineNumber":341,"author":{"gitId":"ling-ui"},"content":"3.  User requests to delete a specific member in the list","lastModifiedDate":"2022-09-30"},{"lineNumber":342,"author":{"gitId":"ling-ui"},"content":"4.  TruthTable deletes the member","lastModifiedDate":"2022-09-30"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"ling-ui"},"content":"    * 3a1. TruthTable shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"ling-ui"},"content":"**Use case: UC03 - List all members of a team**","lastModifiedDate":"2022-10-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":360,"author":{"gitId":"ling-ui"},"content":"Preconditions: The current working team is set to the team that the member should be deleted from.","lastModifiedDate":"2022-09-30"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":362,"author":{"gitId":"ling-ui"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":364,"author":{"gitId":"ling-ui"},"content":"1.  User requests to list members","lastModifiedDate":"2022-09-30"},{"lineNumber":365,"author":{"gitId":"ling-ui"},"content":"2.  TruthTable shows a list of members belonging to the team","lastModifiedDate":"2022-09-30"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":367,"author":{"gitId":"ling-ui"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":368,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":369,"author":{"gitId":"ling-ui"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":370,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":371,"author":{"gitId":"ling-ui"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":372,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":373,"author":{"gitId":"ling-ui"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":374,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":375,"author":{"gitId":"ling-ui"},"content":"**Use case: UC04 - Add a task to a team**","lastModifiedDate":"2022-10-01"},{"lineNumber":376,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":377,"author":{"gitId":"ling-ui"},"content":"Preconditions: The current working team is set to the team that the task should be added to.","lastModifiedDate":"2022-09-30"},{"lineNumber":378,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":379,"author":{"gitId":"ling-ui"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":380,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":381,"author":{"gitId":"ling-ui"},"content":"1.  User requests to add task member and provides task name and task deadline","lastModifiedDate":"2022-09-30"},{"lineNumber":382,"author":{"gitId":"ling-ui"},"content":"2.  TruthTable adds the task to the list of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":383,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":384,"author":{"gitId":"ling-ui"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":385,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":386,"author":{"gitId":"ling-ui"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":387,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":388,"author":{"gitId":"ling-ui"},"content":"* 1a. There is no task name provided.","lastModifiedDate":"2022-09-30"},{"lineNumber":389,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":390,"author":{"gitId":"ling-ui"},"content":"    * 1a1. TruthTable shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":391,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":392,"author":{"gitId":"ling-ui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-09-30"},{"lineNumber":393,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":394,"author":{"gitId":"ling-ui"},"content":"* 1b. There is no task deadline provided.","lastModifiedDate":"2022-09-30"},{"lineNumber":395,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":396,"author":{"gitId":"ling-ui"},"content":"    * 1b1. TruthTable shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":397,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":398,"author":{"gitId":"ling-ui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-09-30"},{"lineNumber":399,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":400,"author":{"gitId":"ling-ui"},"content":"* 1c. The task deadline is badly formatted.","lastModifiedDate":"2022-09-30"},{"lineNumber":401,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":402,"author":{"gitId":"ling-ui"},"content":"    * 1c1. TruthTable shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":403,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":404,"author":{"gitId":"ling-ui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-09-30"},{"lineNumber":405,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":406,"author":{"gitId":"ling-ui"},"content":"**Use case: UC05 - Delete a task from a team**","lastModifiedDate":"2022-10-01"},{"lineNumber":407,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":408,"author":{"gitId":"ling-ui"},"content":"Preconditions: The current working team is set to the team that the task should be deleted from.","lastModifiedDate":"2022-09-30"},{"lineNumber":409,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":410,"author":{"gitId":"ling-ui"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":411,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":412,"author":{"gitId":"ling-ui"},"content":"1.  User requests to list tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":413,"author":{"gitId":"ling-ui"},"content":"2.  TruthTable shows a list of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":414,"author":{"gitId":"ling-ui"},"content":"3.  User requests to delete a specific task in the list","lastModifiedDate":"2022-09-30"},{"lineNumber":415,"author":{"gitId":"ling-ui"},"content":"4.  TruthTable deletes the task","lastModifiedDate":"2022-09-30"},{"lineNumber":416,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":417,"author":{"gitId":"ling-ui"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":418,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":419,"author":{"gitId":"ling-ui"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":420,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":421,"author":{"gitId":"ling-ui"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":422,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":423,"author":{"gitId":"ling-ui"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":424,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":425,"author":{"gitId":"ling-ui"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":426,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":427,"author":{"gitId":"ling-ui"},"content":"    * 3a1. TruthTable shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":428,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":429,"author":{"gitId":"ling-ui"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":430,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":431,"author":{"gitId":"ling-ui"},"content":"**Use case: UC06 - List all tasks of a team**","lastModifiedDate":"2022-10-01"},{"lineNumber":432,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":433,"author":{"gitId":"ling-ui"},"content":"Preconditions: The current working team is set to the team that the member should be deleted from.","lastModifiedDate":"2022-09-30"},{"lineNumber":434,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":435,"author":{"gitId":"ling-ui"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":436,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":437,"author":{"gitId":"ling-ui"},"content":"1.  User requests to list tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":438,"author":{"gitId":"ling-ui"},"content":"2.  TruthTable shows a list of tasks belonging to the team","lastModifiedDate":"2022-09-30"},{"lineNumber":439,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":440,"author":{"gitId":"ling-ui"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":442,"author":{"gitId":"ling-ui"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":443,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":444,"author":{"gitId":"ling-ui"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":445,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":446,"author":{"gitId":"ling-ui"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":447,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":448,"author":{"gitId":"ling-ui"},"content":"**Use case: UC07 - Add deadline to existing task**","lastModifiedDate":"2022-10-01"},{"lineNumber":449,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":450,"author":{"gitId":"ling-ui"},"content":"Preconditions: The current working team is set to the team that has the existing task.","lastModifiedDate":"2022-09-30"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"ling-ui"},"content":"1.  User requests to list tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":455,"author":{"gitId":"ling-ui"},"content":"2.  TruthTable shows a list of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":456,"author":{"gitId":"ling-ui"},"content":"3.  User requests to add deadline to specific task in the list","lastModifiedDate":"2022-09-30"},{"lineNumber":457,"author":{"gitId":"ling-ui"},"content":"4.  TruthTable adds deadline to task","lastModifiedDate":"2022-09-30"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"ling-ui"},"content":"    * 3a1. TruthTable shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"ling-ui"},"content":"* 3b. The given deadline is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":474,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":475,"author":{"gitId":"ling-ui"},"content":"    * 3b1. TruthTable shows an error message. ","lastModifiedDate":"2022-09-30"},{"lineNumber":476,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":477,"author":{"gitId":"ling-ui"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":478,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":479,"author":{"gitId":"ling-ui"},"content":"**Use case: UC08 - Create new team**","lastModifiedDate":"2022-10-01"},{"lineNumber":480,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":481,"author":{"gitId":"ling-ui"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":482,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":483,"author":{"gitId":"ling-ui"},"content":"1.  User requests create new team and provides new team name","lastModifiedDate":"2022-09-30"},{"lineNumber":484,"author":{"gitId":"ling-ui"},"content":"2.  TruthTable creates a new team and sets current working team to new team","lastModifiedDate":"2022-09-30"},{"lineNumber":485,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":486,"author":{"gitId":"ling-ui"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":487,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":488,"author":{"gitId":"ling-ui"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":489,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":490,"author":{"gitId":"ling-ui"},"content":"* 1a. The given team name is used for an existing team already.","lastModifiedDate":"2022-09-30"},{"lineNumber":491,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":492,"author":{"gitId":"ling-ui"},"content":"    * 1a1. TruthTable shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":493,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":494,"author":{"gitId":"ling-ui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-09-30"},{"lineNumber":495,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":496,"author":{"gitId":"ling-ui"},"content":"* 1b. There is no team name given.","lastModifiedDate":"2022-09-30"},{"lineNumber":497,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":498,"author":{"gitId":"ling-ui"},"content":"    * 1b1. TruthTable shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":499,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":500,"author":{"gitId":"ling-ui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-09-30"},{"lineNumber":501,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":502,"author":{"gitId":"ling-ui"},"content":"**Use case: UC09 - Change current working team**","lastModifiedDate":"2022-10-01"},{"lineNumber":503,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":504,"author":{"gitId":"ling-ui"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":505,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":506,"author":{"gitId":"ling-ui"},"content":"1.  User requests to change current working team","lastModifiedDate":"2022-09-30"},{"lineNumber":507,"author":{"gitId":"ling-ui"},"content":"2.  TruthTable sets current working team to specified team","lastModifiedDate":"2022-09-30"},{"lineNumber":508,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":509,"author":{"gitId":"ling-ui"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":510,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":511,"author":{"gitId":"ling-ui"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":512,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":513,"author":{"gitId":"ling-ui"},"content":"* 1a. There is no team name given.","lastModifiedDate":"2022-09-30"},{"lineNumber":514,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":515,"author":{"gitId":"ling-ui"},"content":"    * 1a1. TruthTable shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":516,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":517,"author":{"gitId":"ling-ui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-09-30"},{"lineNumber":518,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":519,"author":{"gitId":"ling-ui"},"content":"**Use case: UC10 - List all teams**","lastModifiedDate":"2022-10-01"},{"lineNumber":520,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":521,"author":{"gitId":"ling-ui"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":522,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":523,"author":{"gitId":"ling-ui"},"content":"1. User requests to list all teams managed by user","lastModifiedDate":"2022-09-30"},{"lineNumber":524,"author":{"gitId":"ling-ui"},"content":"2. TruthTable shows a list of teams","lastModifiedDate":"2022-09-30"},{"lineNumber":525,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":526,"author":{"gitId":"ling-ui"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":527,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":528,"author":{"gitId":"ling-ui"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":529,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":530,"author":{"gitId":"ling-ui"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":531,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":532,"author":{"gitId":"ling-ui"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"ling-ui"},"content":"4. Does not require internet connection.","lastModifiedDate":"2022-09-30"},{"lineNumber":540,"author":{"gitId":"ling-ui"},"content":"5. Any changes to the data should be saved permanently and automatically.","lastModifiedDate":"2022-09-30"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"DevanshShah1309"},"content":"* **Issue**: Generally refers to an issue created on GitHub that is used to track the progress of a software development project.","lastModifiedDate":"2022-09-28"},{"lineNumber":544,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"DevanshShah1309"},"content":"* **Member**: A person in the team, working on a project.","lastModifiedDate":"2022-09-28"},{"lineNumber":546,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"DevanshShah1309"},"content":"* **Repo**: A short-form for \"repository\" (usually on a platform such as GitHub or GitLab)","lastModifiedDate":"2022-09-30"},{"lineNumber":548,"author":{"gitId":"DevanshShah1309"},"content":"* **Task**: Anything that needs to be completed for the project to move forward.","lastModifiedDate":"2022-09-28"},{"lineNumber":549,"author":{"gitId":"DevanshShah1309"},"content":"* **Team Leader**: The person in-charge of a project, typically a software engineering project.","lastModifiedDate":"2022-09-28"},{"lineNumber":550,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":551,"author":{"gitId":"DevanshShah1309"},"content":"*{More to be added along the way}*","lastModifiedDate":"2022-09-28"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ling-ui":188,"-":375,"DevanshShah1309":41}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"TruthTable is a **desktop app for managing software engineering teams, optimized for use via a Command Line Interface** ","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"(CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TruthTable can get your","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"2. Download the latest `truthtable.jar` from [here](https://github.com/AY2223S1-CS2103T-W13-4/tp).","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your TruthTable.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the ","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will ","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"open the help window.\u003cbr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"    * \u003cTO_BE_IMPLEMENTED\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"*  Quotes optional for string arguments (i.e. `add member \"egg\"` and `add_member egg` are equivalent)","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"* Double Tab to autocomplete string values","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"* Arguments are delimited with flags (`add member \"egg\" --email\u003d\"asd@a.com\"`)","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"[Coming Soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"### Adding a new member to the team `add_member`","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"changjy44"},"content":"Add a new team member to the user’s team. Will throw an error if the member already exists in the team.","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"changjy44"},"content":"Format: ","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"* `add_member INDEX`","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"changjy44"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"* `add_member 1`","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"changjy44"},"content":"### Delete a member from team `delete member`","lastModifiedDate":"2022-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"Delete a team member from the user’s team. Will throw an error if no member with that name is found. Take note that ","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"names are case-sensitive.","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"changjy44"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"changjy44"},"content":"* `delete member “MEMBER_NAME”`","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"changjy44"},"content":"* `delete member --index\u003dINDEX`","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"changjy44"},"content":"* `delete member -i INDEX`","lastModifiedDate":"2022-09-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"changjy44"},"content":"* `delete member “potato”`","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"changjy44"},"content":"* `delete member --index\u003d2`","lastModifiedDate":"2022-10-01"},{"lineNumber":76,"author":{"gitId":"changjy44"},"content":"* `delete member -i 2`","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"marcuspang"},"content":"### Listing all members of the team : `list_members`","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"changjy44"},"content":"View all the members currently in the team, in the form of a list.","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"marcuspang"},"content":"Format: `list_members`","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"DevanshShah1309"},"content":"### Add task to team : `add_task`","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"DevanshShah1309"},"content":"Add a new task to the current team.","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"DevanshShah1309"},"content":"Format: `add_task “TASK_NAME”`","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"changjy44"},"content":"*  `add task “bake with butter”`","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"changjy44"},"content":"*  `add task fry`","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"changjy44"},"content":"### Assign task to team member: `assign task`","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"marcuspang"},"content":"Assign an existing task to a team member in the user’s team. Will display an error message if either the team member or","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"marcuspang"},"content":"the task is not found in the user’s team.","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"changjy44"},"content":"Format: `assign task “TASK_NAME” “TEAM_MEMBER”`","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"changjy44"},"content":"* `assign task fry potato` assigns the task \"fry\" to \"potato\"","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"changjy44"},"content":"* `assign task “bake with butter” “potato”` assigns the task \"bake with butter\" to \"potato\"","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"changjy44"},"content":"### Delete task from team : `delete task`","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"changjy44"},"content":"Delete an existing task from the team. Will display an error message if the task is not found in the user’s team.","lastModifiedDate":"2022-10-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"changjy44"},"content":"Format: `delete task “TASK_NAME”`","lastModifiedDate":"2022-09-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"changjy44"},"content":"* `delete task fry`","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"changjy44"},"content":"* `delete task “bake with butter”`","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"DevanshShah1309"},"content":"### List tasks in team: `list_tasks`","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"changjy44"},"content":"View all the tasks currently in the user’s team in the form of a list.","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"DevanshShah1309"},"content":"Format: `list_tasks`","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"ling-ui"},"content":"Clears all entries from the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"marcuspang"},"content":"TruthTable data are saved in the hard disk automatically after any command that changes the data. There is no need to ","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"marcuspang"},"content":"save manually.","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":141,"author":{"gitId":"marcuspang"},"content":"TruthTable data are saved as a JSON file `[JAR file location]/data/truthtable.json`. Advanced users are welcome to ","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"marcuspang"},"content":"update data directly by editing that data file.","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":145,"author":{"gitId":"marcuspang"},"content":"If your changes to the data file makes its format invalid, TruthTable will discard all data and start with an empty ","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"marcuspang"},"content":"data file at the next run.","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"marcuspang"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains ","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"marcuspang"},"content":"the data of your previous TruthTable home folder.","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":166,"author":{"gitId":"changjy44"},"content":"| Action | Format, Examples |","lastModifiedDate":"2022-09-29"},{"lineNumber":167,"author":{"gitId":"changjy44"},"content":"|--------|------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":168,"author":{"gitId":"changjy44"},"content":"| TBC    | TBC              |","lastModifiedDate":"2022-09-29"},{"lineNumber":169,"author":{"gitId":"changjy44"},"content":"| TBC    | TBC              |","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ling-ui":1,"changjy44":38,"-":98,"DevanshShah1309":5,"marcuspang":27}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"marcuspang"},"content":"    content: \"TruthTable\";","lastModifiedDate":"2022-09-27"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":283,"marcuspang":5}},{"path":"docs/team/changjy44.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"title: Chang Jing Yan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"### Project: TruthTable","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"TruthTable is a task-management software specially targeted towards tech-savy university students leading teams in","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"software engineering modules to build projects. It helps track the team\u0027s progress and delegate tasks effectively.","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"* **Code contributed**: Link to be added soon. [RepoSense link]()","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"    * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"        * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"    * PRs reviewed (with non-trivial review comments): To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"    * Contributed to forum discussions (examples: To be added soon).","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: To be added soon).","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"  To be added soon.","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"changjy44":38}},{"path":"docs/team/devanshshah1309.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"title: Devansh Shah\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"### Project: TruthTable","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"TruthTable is a task-management software specially targeted towards tech-savy university students leading teams in","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"software engineering modules to build projects. It helps track the team\u0027s progress and delegate tasks effectively.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":"* **Code contributed**: Link to be added soon. [RepoSense link]()","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"DevanshShah1309"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"    * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"        * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"DevanshShah1309"},"content":"        * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"DevanshShah1309"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"DevanshShah1309"},"content":"    * PRs reviewed (with non-trivial review comments): To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"    * Contributed to forum discussions (examples: To be added soon).","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: To be added soon).","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"DevanshShah1309"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"DevanshShah1309"},"content":"  To be added soon.","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"DevanshShah1309":32,"marcuspang":6}},{"path":"docs/team/ling-ui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ling-ui"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ling-ui"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ling-ui"},"content":"title: Ling Ling\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ling-ui"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ling-ui"},"content":"### Project: TruthTable","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ling-ui"},"content":"TruthTable is a task-management software specially targeted towards tech-savy university students leading","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ling-ui"},"content":"teams in software engineering modules to build projects. It helps track the team\u0027s progress and delegate tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ling-ui"},"content":"effectively.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ling-ui"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ling-ui"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ling-ui"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"ling-ui"},"content":"* **Code contributed**: Link to be added soon. [RepoSense link]()","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"ling-ui"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"ling-ui"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"ling-ui"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ling-ui"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ling-ui"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ling-ui"},"content":"    * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ling-ui"},"content":"        * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"ling-ui"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"ling-ui"},"content":"        * To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"ling-ui"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"ling-ui"},"content":"    * PRs reviewed (with non-trivial review comments): To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"ling-ui"},"content":"    * Contributed to forum discussions (examples: To be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"ling-ui"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: To be added soon.)","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"ling-ui"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"ling-ui"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"ling-ui"},"content":"  To be added soon.","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ling-ui":38}},{"path":"docs/team/marcuspang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"title: Marcus Pang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"### Project: TruthTable","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"TruthTable is a task-management software specially targeted towards tech-savy university students leading teams in","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"software engineering modules to build projects. It helps track the team\u0027s progress and delegate tasks effectively.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"* **Code contributed**: Link to be added soon. [RepoSense link]()","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"        * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        * To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"    * PRs reviewed (with non-trivial review comments): To be added soon.","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"    * Contributed to forum discussions (examples: To be added soon).","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: To be added soon).","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"  To be added soon.","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"marcuspang":38}},{"path":"docs/team/mjgui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mjgui"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"mjgui"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"mjgui"},"content":"title: Ming Jiang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"mjgui"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"mjgui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"mjgui"},"content":"### Project: TruthTable","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"mjgui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"mjgui"},"content":"TruthTable is a task-management software specially targeted towards tech-savy university students leading","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"mjgui"},"content":"teams in software engineering modules to build projects. It helps track the team\u0027s progress and delegate tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"mjgui"},"content":"effectively.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"mjgui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"mjgui"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"mjgui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"mjgui"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"mjgui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"mjgui"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"mjgui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"mjgui"},"content":"* **Code contributed**: Link to be added soon. [RepoSense link]()","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"mjgui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"mjgui"},"content":"* **Project management**:","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"mjgui"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"mjgui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"mjgui"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"mjgui"},"content":"    * To be added soon.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"mjgui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"mjgui"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"mjgui"},"content":"    * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"mjgui"},"content":"        * To be added soon.","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"mjgui"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"mjgui"},"content":"        * To be added soon.","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"mjgui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"mjgui"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"mjgui"},"content":"    * PRs reviewed (with non-trivial review comments): To be added soon.","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"mjgui"},"content":"    * Contributed to forum discussions (examples: To be added soon.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"mjgui"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: To be added soon.)","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"mjgui"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"mjgui"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"mjgui"},"content":"  To be added soon.","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"mjgui":38}},{"path":"src/main/java/seedu/address/logic/commands/AddMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":" * Adds a person identified using it\u0027s displayed index to the current team.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"public class AddMemberCommand extends Command {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    public static final String COMMAND_WORD \u003d \"add_member\";","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"            + \": Adds a person identified using it\u0027s displayed index to the current team.\\n\"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    public static final String MESSAGE_ADD_MEMBER_SUCCESS \u003d \"Added Member: %1$s\";","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the team\";","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    public AddMemberCommand(Index targetIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        Person toAdd \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        if (model.getTeam().hasMember(toAdd)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"        model.getTeam().addMember(toAdd);","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_MEMBER_SUCCESS, toAdd));","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"                || (other instanceof AddMemberCommand // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"                \u0026\u0026 targetIndex.equals(((AddMemberCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"marcuspang":57}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.team.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":" * Adds a task to the current team.","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":"    public static final String COMMAND_WORD \u003d \"add_task\";","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":"        + \": Adds a task to the current team.\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"DevanshShah1309"},"content":"        + \"Parameters: name of task (cannot be empty and cannot begin with a sapce) \\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"        + \"Example: \" + COMMAND_WORD + \" merge PR#12\";","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"    public static final String MESSAGE_ADD_TASK_SUCCESS \u003d \"Added Task: %1$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the team\";","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"    public static final String MESSAGE_TASK_NAME_FORMAT_ERROR \u003d \"Task name cannot be empty\";","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"    private final Task task;","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"     * Returns a command that adds a task to the current team.","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"DevanshShah1309"},"content":"     * @param taskName the name of the task to be added.","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"DevanshShah1309"},"content":"     * @throws ParseException when the task name does not follow the format specified.","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"DevanshShah1309"},"content":"    public AddTaskCommand(String taskName) {","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"DevanshShah1309"},"content":"        this.task \u003d new Task(taskName);","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"DevanshShah1309"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"DevanshShah1309"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"DevanshShah1309"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"DevanshShah1309"},"content":"        if (model.getTeam().hasTask(task)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"DevanshShah1309"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"DevanshShah1309"},"content":"        model.getTeam().addTask(task);","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"DevanshShah1309"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TASK_SUCCESS, task));","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"DevanshShah1309"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"DevanshShah1309"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"DevanshShah1309"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"DevanshShah1309"},"content":"            || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"DevanshShah1309"},"content":"            \u0026\u0026 task.equals(((AddTaskCommand) other).task)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"DevanshShah1309":53}},{"path":"src/main/java/seedu/address/logic/commands/AddTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":" * Adds a new team to the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"public class AddTeamCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"    public static final String COMMAND_WORD \u003d \"add_team\";","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"            + \": Adds a new team \\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"            + \"Parameters: TEAM_NAME\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"            + \"Example: \" + COMMAND_WORD + \" project\";","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    public static final String MESSAGE_ADD_TEAM_SUCCESS \u003d \"Added team: %1$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"    public static final String MESSAGE_TEAM_EXISTS \u003d \"There is already an existing team with the same name!\";","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"    private final Team targetTeam;","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"    public AddTeamCommand(Team targetTeam) {","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"        this.targetTeam \u003d targetTeam;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"        List\u003cTeam\u003e teamList \u003d model.getTeamList();","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"        if (teamList.contains(targetTeam)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"            throw new CommandException(MESSAGE_TEAM_EXISTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"        model.addTeam(targetTeam);","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TEAM_SUCCESS, targetTeam));","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"                || (other instanceof AddTeamCommand // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"                \u0026\u0026 targetTeam.equals(((AddTeamCommand) other).targetTeam)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"changjy44":49}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":" * Deletes a member identified using it\u0027s displayed index from the member list.","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"public class DeleteMemberCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    public static final String COMMAND_WORD \u003d \"delete_member\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"            + \": Deletes the person identified by the index number used in the members list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"            + \": Run `list_members` to see members in your current team.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Member: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    public DeleteMemberCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        List\u003cPerson\u003e teamMembers \u003d model.getTeam().getTeamMembers();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d teamMembers.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        Person personToDelete \u003d teamMembers.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"        model.getTeam().removeMember(personToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"                || (other instanceof DeleteMemberCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteMemberCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"marcuspang":54}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":" * Deletes a team from the addressbook.","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"public class DeleteTeamCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"    public static final String COMMAND_WORD \u003d \"delete_team\";","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"            + \": Delete an existing team \\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"            + \"Parameters: TEAM_NAME\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"            + \"Example: \" + COMMAND_WORD + \" project\";","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    public static final String MESSAGE_DELETE_TEAM_SUCCESS \u003d \"Deleted team: %1$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    public static final String MESSAGE_AT_LEAST_ONE_TEAM \u003d \"You must have at least one team!\";","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"    public static final String MESSAGE_TEAM_NOT_EXISTS \u003d \"This team you are trying to delete does not exist!\";","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"    private final Team targetTeam;","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"    public DeleteTeamCommand(Team targetTeam) {","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"        this.targetTeam \u003d targetTeam;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"        List\u003cTeam\u003e teamList \u003d model.getTeamList();","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"        Team currentTeam \u003d model.getTeam();","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"        int teamIndex \u003d teamList.indexOf(targetTeam);","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"        if (teamIndex \u003d\u003d -1) {","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"            throw new CommandException(MESSAGE_TEAM_NOT_EXISTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"        if (teamList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"            throw new CommandException(MESSAGE_AT_LEAST_ONE_TEAM);","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"        model.deleteTeam(teamList.get(teamIndex));","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"        if (currentTeam.equals(targetTeam)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"            model.setTeam(model.getTeamList().get(0));","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TEAM_SUCCESS, targetTeam));","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"changjy44"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"changjy44"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"changjy44"},"content":"                || (other instanceof DeleteTeamCommand // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"changjy44"},"content":"                \u0026\u0026 targetTeam.equals(((DeleteTeamCommand) other).targetTeam)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"changjy44":57}},{"path":"src/main/java/seedu/address/logic/commands/ListMembersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.person.TeamPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":" * Lists all members of the current team.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"public class ListMembersCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    public static final String COMMAND_WORD \u003d \"list_members\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        + \": Lists all the members of the current team.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"        + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"        List\u003cTeam\u003e teams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        teams.add(model.getTeam());","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        TeamPredicate predicate \u003d new TeamPredicate(teams);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"            String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"            || (other instanceof ListMembersCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"marcuspang":43}},{"path":"src/main/java/seedu/address/logic/commands/ListTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.model.team.TaskList.NO_TASKS;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":" * Lists all tasks of the current team.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":"    public static final String COMMAND_WORD \u003d \"list_tasks\";","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":"        + \": Lists all the tasks of the current team.\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"DevanshShah1309"},"content":"        + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"    public static final String MESSAGE_ADD_TASK_SUCCESS \u003d \"Tasks: \\n%1$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"    public ListTasksCommand() {","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"        String tasks \u003d model.getTeam().getTasksAsString();","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"DevanshShah1309"},"content":"        if (tasks.equals(NO_TASKS)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"DevanshShah1309"},"content":"            return new CommandResult(NO_TASKS);","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"DevanshShah1309"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TASK_SUCCESS, tasks));","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"DevanshShah1309"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"DevanshShah1309"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"DevanshShah1309"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"DevanshShah1309"},"content":"            || (other instanceof ListTasksCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"DevanshShah1309":41}},{"path":"src/main/java/seedu/address/logic/commands/SetTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":" * Sets the current team to an existing team.","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"public class SetTeamCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"    public static final String COMMAND_WORD \u003d \"set_team\";","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"            + \": Sets the current team to an existing team. \\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"            + \"Parameters: TEAM_NAME\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"            + \"Example: \" + COMMAND_WORD + \" project\";","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    public static final String MESSAGE_SET_TEAM_SUCCESS \u003d \"Set current team: %1$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    public static final String MESSAGE_TEAM_ALREADY_SET \u003d \"You are already on this team!\";","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"    public static final String MESSAGE_TEAM_NOT_EXISTS \u003d \"This team you are trying to set does not exist!\";","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"    private final Team targetTeam;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"    public SetTeamCommand(Team targetTeam) {","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"        this.targetTeam \u003d targetTeam;","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"        List\u003cTeam\u003e teamList \u003d model.getTeamList();","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"        Team currentTeam \u003d model.getTeam();","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"        int teamIndex \u003d teamList.indexOf(targetTeam);","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"        if (teamIndex \u003d\u003d -1) {","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"            throw new CommandException(MESSAGE_TEAM_NOT_EXISTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"        if (currentTeam.equals(targetTeam)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"            throw new CommandException(MESSAGE_TEAM_ALREADY_SET);","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"        model.setTeam(teamList.get(teamIndex));","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"        return new CommandResult(String.format(MESSAGE_SET_TEAM_SUCCESS, targetTeam));","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"changjy44"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"changjy44"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"changjy44"},"content":"                || (other instanceof SetTeamCommand // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"changjy44"},"content":"                \u0026\u0026 targetTeam.equals(((SetTeamCommand) other).targetTeam)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"changjy44":58}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"changjy44":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":59,"marcuspang":1}},{"path":"src/main/java/seedu/address/logic/parser/AddMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" * Parses input arguments and creates a new AddMemberCommand object","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class AddMemberCommandParser implements Parser\u003cAddMemberCommand\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMemberCommand","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * and returns a AddMemberCommand object for execution.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    public AddMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"            return new AddMemberCommand(index);","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMemberCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"marcuspang":29}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.team.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":"     * and returns a AddTaskCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"        String name \u003d args.trim();","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"        if (!Task.isValidName(name)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"                AddTaskCommand.MESSAGE_TASK_NAME_FORMAT_ERROR));","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"        return new AddTaskCommand(name);","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"DevanshShah1309":28,"marcuspang":1}},{"path":"src/main/java/seedu/address/logic/parser/AddTeamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.commands.AddTeamCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":" * Parses input arguments and creates a new AddTeamCommand object.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"public class AddTeamCommandParser implements Parser\u003cAddTeamCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTeamCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"     * and returns a AddTeamCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * @throws ParseException if user input does not conform to the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"    public AddTeamCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"        return new AddTeamCommand(new Team(args.trim(), new ArrayList\u003c\u003e()));","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"changjy44":21,"marcuspang":1}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.commands.AddTeamCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.commands.DeleteTeamCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.ListMembersCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.logic.commands.ListTasksCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.commands.SetTeamCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"marcuspang"},"content":"        case AddMemberCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"marcuspang"},"content":"            return new AddMemberCommandParser().parse(arguments);","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"marcuspang"},"content":"        case DeleteMemberCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"marcuspang"},"content":"            return new DeleteMemberCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"changjy44"},"content":"        case SetTeamCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"changjy44"},"content":"            return new SetTeamCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"changjy44"},"content":"        case AddTeamCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"changjy44"},"content":"            return new AddTeamCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"changjy44"},"content":"        case DeleteTeamCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"changjy44"},"content":"            return new DeleteTeamCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"DevanshShah1309"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"DevanshShah1309"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"DevanshShah1309"},"content":"        case ListTasksCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"DevanshShah1309"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"marcuspang"},"content":"        case ListMembersCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"marcuspang"},"content":"            return new ListMembersCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"changjy44":12,"-":76,"DevanshShah1309":8,"marcuspang":12}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":28,"marcuspang":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" * Parses input arguments and creates a new DeleteMemberCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class DeleteMemberCommandParser implements Parser\u003cDeleteMemberCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMemberCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * and returns a DeleteMemberCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * @throws ParseException if the user input does not conform to to the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    public DeleteMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"            return new DeleteMemberCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMemberCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"marcuspang":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTeamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.commands.DeleteTeamCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":" * Parses input arguments and creates a new DeleteTeamCommand object.","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"public class DeleteTeamCommandParser implements Parser\u003cDeleteTeamCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTeamCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"     * and returns a DeleteTeamCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * @throws ParseException if user input does not conform to the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"    public DeleteTeamCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"        return new DeleteTeamCommand(new Team(args.trim(), new ArrayList\u003c\u003e()));","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"changjy44":22,"marcuspang":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":81,"marcuspang":1}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":32,"marcuspang":1}},{"path":"src/main/java/seedu/address/logic/parser/SetTeamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.commands.SetTeamCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":" * Parses input arguments and creates a new SetTeamCommand object.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"public class SetTeamCommandParser implements Parser\u003cSetTeamCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"     * Parses the given {@code String} of arguments in the context of the SetTeamCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"     * and returns a SetTeamCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * @throws ParseException if user input does not conform to the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"    public SetTeamCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"        return new SetTeamCommand(new Team(args.trim(), new ArrayList\u003c\u003e()));","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"changjy44":21,"marcuspang":1}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.UniqueTeamList;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"    private final UniqueTeamList teams;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    private Team currentTeam;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"        teams \u003d new UniqueTeamList();","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"DevanshShah1309"},"content":"    public AddressBook() {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"changjy44"},"content":"        setTeams(newData.getTeamList());","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"        setTeam(newData.getTeam());","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"marcuspang"},"content":"    //// team-level operations","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"marcuspang"},"content":"    public Team getTeam() {","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"changjy44"},"content":"        return currentTeam;","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"marcuspang"},"content":"    public void setTeam(Team team) {","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"changjy44"},"content":"        this.currentTeam \u003d team;","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":113,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"changjy44"},"content":"    public void addTeam(Team teamToAdd) {","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"changjy44"},"content":"        teams.add(teamToAdd);","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"changjy44"},"content":"    public void deleteTeam(Team teamToDelete) {","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"changjy44"},"content":"        teams.remove(teamToDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":122,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"changjy44"},"content":"     * Replaces the contents of the team list with {@code teams}.","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"changjy44"},"content":"     * {@code teams} must not contain duplicate persons.","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"changjy44"},"content":"    public void setTeams(List\u003cTeam\u003e teams) {","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"changjy44"},"content":"        this.teams.setTeams(teams);","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":143,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":145,"author":{"gitId":"changjy44"},"content":"    public ObservableList\u003cTeam\u003e getTeamList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":146,"author":{"gitId":"changjy44"},"content":"        return teams.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-08"},{"lineNumber":147,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":148,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"DevanshShah1309"},"content":"            \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"DevanshShah1309"},"content":"            );","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"changjy44":28,"-":117,"DevanshShah1309":6,"marcuspang":10}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"marcuspang"},"content":"    /** Returns the current team */","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"marcuspang"},"content":"    Team getTeam();","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"changjy44"},"content":"    /** Sets the current team to an existing team */","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"changjy44"},"content":"    void setTeam(Team teamToSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"changjy44"},"content":"    /** Adds a new team */","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"changjy44"},"content":"    void addTeam(Team teamToAdd);","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"changjy44"},"content":"    /** Deletes an existing team */","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"changjy44"},"content":"    void deleteTeam(Team teamToDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"changjy44"},"content":"    /** Returns the list of teams */","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"changjy44"},"content":"    ObservableList\u003cTeam\u003e getTeamList();","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"changjy44":12,"-":87,"marcuspang":4}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"changjy44"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Team Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":117,"author":{"gitId":"marcuspang"},"content":"    public Team getTeam() {","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"marcuspang"},"content":"        return addressBook.getTeam();","lastModifiedDate":"2022-10-07"},{"lineNumber":119,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":121,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":122,"author":{"gitId":"changjy44"},"content":"    public void setTeam(Team teamToSet) {","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"changjy44"},"content":"        addressBook.setTeam(teamToSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"changjy44"},"content":"    public void addTeam(Team teamToAdd) {","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"changjy44"},"content":"        addressBook.addTeam(teamToAdd);","lastModifiedDate":"2022-10-08"},{"lineNumber":129,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":131,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":132,"author":{"gitId":"changjy44"},"content":"    public void deleteTeam(Team teamToDelete) {","lastModifiedDate":"2022-10-08"},{"lineNumber":133,"author":{"gitId":"changjy44"},"content":"        addressBook.deleteTeam(teamToDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":134,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":135,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":136,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":137,"author":{"gitId":"changjy44"},"content":"    public ObservableList\u003cTeam\u003e getTeamList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":138,"author":{"gitId":"changjy44"},"content":"        return addressBook.getTeamList();","lastModifiedDate":"2022-10-08"},{"lineNumber":139,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":140,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"changjy44":21,"-":150,"marcuspang":6}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * Returns the team.","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     * The team will not contain any duplicate members.","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    Team getTeam();","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"     * Returns the list of all existing teams.","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"     * The list will not contain any duplicate teams.","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    ObservableList\u003cTeam\u003e getTeamList();","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"changjy44":7,"-":17,"marcuspang":6}},{"path":"src/main/java/seedu/address/model/person/TeamPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":" * Tests that a {@code Person} belongs to any of the {@code Team} specified.","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"public class TeamPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    private final List\u003cTeam\u003e teams;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    public TeamPredicate(List\u003cTeam\u003e teams) {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"        this.teams \u003d teams;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        return teams.stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"                .anyMatch(team -\u003e team.hasMember(person));","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"                || (other instanceof TeamPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"                \u0026\u0026 teams.equals(((TeamPredicate) other).teams)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"marcuspang":31}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":" * Signals that the operation will result in duplicate tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":" * identity).","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"DevanshShah1309":11}},{"path":"src/main/java/seedu/address/model/person/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"public class TaskNotFoundException extends RuntimeException{ }","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"DevanshShah1309":6}},{"path":"src/main/java/seedu/address/model/team/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":" * Tasks are used to track the progress of a team.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"public class Task {","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":"        \"Task names should not be blank and cannot begin with a whitespace\";","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":"    /*","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":"     * The first character of the task name must not be a whitespace,","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"     * Name of the task.","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"    private String name;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"     * @param name A valid task name.","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"DevanshShah1309"},"content":"    public Task(String name) {","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"DevanshShah1309"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"DevanshShah1309"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"DevanshShah1309"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"DevanshShah1309"},"content":"     * Returns true if a given string is a valid name for a task.","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"DevanshShah1309"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"DevanshShah1309"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"DevanshShah1309"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"DevanshShah1309"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"DevanshShah1309"},"content":"        return name;","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"DevanshShah1309"},"content":"    public String getName() {","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"DevanshShah1309"},"content":"        return name;","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"DevanshShah1309"},"content":"     * Returns true if two tasks have the same name.","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"DevanshShah1309"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"DevanshShah1309"},"content":"     * TODO: Check equality of deadline or other attributes when added.","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"DevanshShah1309"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"DevanshShah1309"},"content":"     * @param other the other task to be compared with.","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"DevanshShah1309"},"content":"     * @return true if the tasks are considered equal, false otherwise.","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"DevanshShah1309"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"DevanshShah1309"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"DevanshShah1309"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"DevanshShah1309"},"content":"            || (other instanceof Task // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"DevanshShah1309"},"content":"            \u0026\u0026 name.equals(((Task) other).name)); // state check","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"DevanshShah1309"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"DevanshShah1309"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"DevanshShah1309"},"content":"        return name.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"DevanshShah1309":72}},{"path":"src/main/java/seedu/address/model/team/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.person.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.person.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":" * A list of tasks to be completed by the team.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"DevanshShah1309"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"    public static final String NO_TASKS \u003d \"No Tasks Available\";","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"DevanshShah1309"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"DevanshShah1309"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"DevanshShah1309"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"DevanshShah1309"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"DevanshShah1309"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"DevanshShah1309"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"DevanshShah1309"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"DevanshShah1309"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"DevanshShah1309"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"DevanshShah1309"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"DevanshShah1309"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"DevanshShah1309"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"DevanshShah1309"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"DevanshShah1309"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"DevanshShah1309"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"DevanshShah1309"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"DevanshShah1309"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"DevanshShah1309"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"DevanshShah1309"},"content":"        if (!target.equals(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"DevanshShah1309"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"DevanshShah1309"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"DevanshShah1309"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"DevanshShah1309"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"DevanshShah1309"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"DevanshShah1309"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"DevanshShah1309"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"DevanshShah1309"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"DevanshShah1309"},"content":"    public void setTasks(List\u003cTask\u003e replacement) {","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"DevanshShah1309"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"DevanshShah1309"},"content":"        internalList.setAll(replacement);","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"DevanshShah1309"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"DevanshShah1309"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"DevanshShah1309"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"DevanshShah1309"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"DevanshShah1309"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"DevanshShah1309"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"DevanshShah1309"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"DevanshShah1309"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"DevanshShah1309"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"DevanshShah1309"},"content":"            || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"DevanshShah1309"},"content":"            \u0026\u0026 internalList.equals(((TaskList) other).internalList));","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"DevanshShah1309"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"DevanshShah1309"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"DevanshShah1309"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"DevanshShah1309"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"DevanshShah1309"},"content":"    public String toString() {","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"DevanshShah1309"},"content":"        if (internalList.isEmpty()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"changjy44"},"content":"            //Set it to an empty string for now so that the team commands will only show the name of the team.","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"changjy44"},"content":"            return \"\"; //return NO_TASKS;","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"DevanshShah1309"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"DevanshShah1309"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"DevanshShah1309"},"content":"        for (Task task : internalList) {","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"DevanshShah1309"},"content":"            sb.append(String.format(\"\\t%d. %s\\n\", i, task));","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"DevanshShah1309"},"content":"            i++;","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"DevanshShah1309"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"changjy44":2,"DevanshShah1309":121}},{"path":"src/main/java/seedu/address/model/team/Team.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":" * Represents a Team in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTeamName(String)}","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"public class Team {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Team names should be alphanumeric\";","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    private final String teamName;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    private final UniquePersonList teamMembers \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * Constructs a {@code Team}.","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     * @param teamName A valid team name.","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"     * @param teamMembers A list of persons to be added as members.","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    public Team(String teamName, List\u003cPerson\u003e teamMembers) {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"        checkArgument(isValidTeamName(teamName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"        this.teamMembers.setPersons(teamMembers);","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"DevanshShah1309"},"content":"     * Constructs a {@code Team}","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"DevanshShah1309"},"content":"     * @param teamName A valid team name","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"DevanshShah1309"},"content":"     * @param teamMembers A list of persons to be added as members","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"DevanshShah1309"},"content":"     * @param tasks A list of tasks for the team to do","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"DevanshShah1309"},"content":"    public Team(String teamName, List\u003cPerson\u003e teamMembers, List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"DevanshShah1309"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"DevanshShah1309"},"content":"        checkArgument(isValidTeamName(teamName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"DevanshShah1309"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"DevanshShah1309"},"content":"        this.teamMembers.setPersons(teamMembers);","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"DevanshShah1309"},"content":"        this.taskList.setTasks(tasks);","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"    public String getTeamName() {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"        return teamName;","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"     * Returns an immutable team set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"    public List\u003cPerson\u003e getTeamMembers() {","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"        return teamMembers.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the team.","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"    public boolean hasMember(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"        return teamMembers.contains(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"marcuspang"},"content":"     * Adds a person to the team.","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"marcuspang"},"content":"     * The person must not already exist in the team.","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"marcuspang"},"content":"    public void addMember(Person person) {","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"marcuspang"},"content":"        teamMembers.add(person);","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"marcuspang"},"content":"     * Removes {@code Person} from this {@code Team}.","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"marcuspang"},"content":"     * {@code person} must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"marcuspang"},"content":"    public void removeMember(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"marcuspang"},"content":"        teamMembers.remove(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"DevanshShah1309"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"DevanshShah1309"},"content":"        return taskList.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"DevanshShah1309"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"DevanshShah1309"},"content":"        taskList.add(task);","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"DevanshShah1309"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"DevanshShah1309"},"content":"        return taskList.contains(task);","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"marcuspang"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"marcuspang"},"content":"    public static boolean isValidTeamName(String test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"marcuspang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"changjy44"},"content":"     * Returns true if both teams have the same name.","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"changjy44"},"content":"    public boolean isSameTeam(Team otherTeam) {","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"changjy44"},"content":"        if (otherTeam \u003d\u003d this) {","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"changjy44"},"content":"            return true;","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"changjy44"},"content":"        } else {","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"changjy44"},"content":"            return otherTeam !\u003d null","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"changjy44"},"content":"                    \u0026\u0026 otherTeam.getTeamName().equals(this.getTeamName());","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"marcuspang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"marcuspang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"marcuspang"},"content":"            return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"marcuspang"},"content":"        if (!(other instanceof Team)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"marcuspang"},"content":"            return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"marcuspang"},"content":"        Team otherTeam \u003d (Team) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"changjy44"},"content":"        return otherTeam.getTeamName().equals(getTeamName());","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"marcuspang"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"DevanshShah1309"},"content":"        return Objects.hash(teamName, teamMembers, taskList);","lastModifiedDate":"2022-10-08"},{"lineNumber":135,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":136,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":137,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":138,"author":{"gitId":"DevanshShah1309"},"content":"     * Returns a string representation of the task list.","lastModifiedDate":"2022-10-08"},{"lineNumber":139,"author":{"gitId":"DevanshShah1309"},"content":"     * @return string representation of task list.","lastModifiedDate":"2022-10-08"},{"lineNumber":140,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":141,"author":{"gitId":"DevanshShah1309"},"content":"    public String getTasksAsString() {","lastModifiedDate":"2022-10-08"},{"lineNumber":142,"author":{"gitId":"DevanshShah1309"},"content":"        return taskList.toString();","lastModifiedDate":"2022-10-08"},{"lineNumber":143,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"marcuspang"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"marcuspang"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"marcuspang"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"marcuspang"},"content":"        builder.append(getTeamName());","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"marcuspang"},"content":"        List\u003cPerson\u003e members \u003d getTeamMembers();","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"marcuspang"},"content":"        if (!members.isEmpty()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"marcuspang"},"content":"            builder.append(\"; Members: \");","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"marcuspang"},"content":"            members.forEach(builder::append);","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"DevanshShah1309"},"content":"        builder.append(getTasksAsString());","lastModifiedDate":"2022-10-08"},{"lineNumber":158,"author":{"gitId":"marcuspang"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"changjy44":13,"DevanshShah1309":37,"marcuspang":111}},{"path":"src/main/java/seedu/address/model/team/UniqueTeamList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":" * A list of teams that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":" * A team is considered unique solely based on the name of the team.","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":" *","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":" **/","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"public class UniqueTeamList implements Iterable\u003cTeam\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    private final ObservableList\u003cTeam\u003e internalTeams \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"     * Returns true if the list contains a team with the same name as the given argument.","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    public boolean contains(Team teamToCheck) {","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        requireNonNull(teamToCheck);","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"        return internalTeams.stream().anyMatch(teamToCheck::isSameTeam);","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"     * Adds a team to the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"     * That team must not already exist in the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"    public void add(Team teamToAdd) {","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"        requireNonNull(teamToAdd);","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"        if (contains(teamToAdd)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"            throw new DuplicateTeamException();","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"        internalTeams.add(teamToAdd);","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"     * Removes the equivalent team from the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"    public void remove(Team teamToRemove) {","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"        requireNonNull(teamToRemove);","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"        if (!internalTeams.remove(teamToRemove)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"changjy44"},"content":"            throw new TeamNotFoundException();","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"changjy44"},"content":"     * Replaces the contents of this list with {@code teams}.","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"changjy44"},"content":"    public void setTeams(List\u003cTeam\u003e teams) {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"changjy44"},"content":"        requireAllNonNull(teams);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"changjy44"},"content":"        if (!teamsAreUnique(teams)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"changjy44"},"content":"            throw new DuplicateTeamException();","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"changjy44"},"content":"        internalTeams.setAll(teams);","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"changjy44"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"changjy44"},"content":"    public ObservableList\u003cTeam\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"changjy44"},"content":"        return this.internalTeams;","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"changjy44"},"content":"     * Returns an iterator over elements of type {@code T}.","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"changjy44"},"content":"     * @return an Iterator.","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"changjy44"},"content":"    public Iterator\u003cTeam\u003e iterator() {","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"changjy44"},"content":"        return internalTeams.iterator();","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"changjy44"},"content":"     * Returns true if {@code team} contains only unique teams.","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"changjy44"},"content":"    private boolean teamsAreUnique(List\u003cTeam\u003e teams) {","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"changjy44"},"content":"        for (int i \u003d 0; i \u003c teams.size() - 1; i++) {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"changjy44"},"content":"            for (int j \u003d i + 1; j \u003c teams.size(); j++) {","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"changjy44"},"content":"                if (teams.get(i).isSameTeam(teams.get(j))) {","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"changjy44"},"content":"                    return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"changjy44"},"content":"                }","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"changjy44"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"changjy44"},"content":"        return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"changjy44":97}},{"path":"src/main/java/seedu/address/model/team/exceptions/DuplicateTeamException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.model.team.exceptions;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":" * Signals that the operation will result in duplicate teams","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"public class DuplicateTeamException extends RuntimeException {","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"    public DuplicateTeamException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"        super(\"Operation would result in duplicate teams\");","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"changjy44":10}},{"path":"src/main/java/seedu/address/model/team/exceptions/TeamNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.model.team.exceptions;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":" * Signals that the the team does not exist in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"public class TeamNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"changjy44":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"        Team defaultTeam \u003d new Team(\"default\", new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"        sampleAb.addTeam(defaultTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"changjy44"},"content":"        sampleAb.setTeam(defaultTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"changjy44":5,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTeam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":" * Jackson-friendly version of {@link Team}","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"public class JsonAdaptedTeam {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Team\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"    private final String teamName;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"     * Constructs a {@code JsonAdaptedTeam} with the given person details.","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"    public JsonAdaptedTeam(@JsonProperty(\"teamName\") String teamName) {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"     * Converts a given {@code Team} into this class for Jackson use.","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"    public JsonAdaptedTeam(Team source) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"        teamName \u003d source.getTeamName();","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Team} object.","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"    public Team toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"        if (teamName \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Team.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"        return new Team(teamName, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"changjy44":49}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    public static final String MESSAGE_DUPLICATE_TEAMS \u003d \"Team list contains duplicate team(s).\";","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"    private final List\u003cJsonAdaptedTeam\u003e teams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"                                       @JsonProperty(\"teams\") List\u003cJsonAdaptedTeam\u003e teams) {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"        this.teams.addAll(teams);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"        teams.addAll(source.getTeamList().stream().map(JsonAdaptedTeam::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"changjy44"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"changjy44"},"content":"        for (JsonAdaptedTeam jsonAdaptedTeam : teams) {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"changjy44"},"content":"            Team team \u003d jsonAdaptedTeam.toModelType();","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"changjy44"},"content":"            if (addressBook.getTeamList().contains(team)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"changjy44"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TEAMS);","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"changjy44"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"changjy44"},"content":"            addressBook.addTeam(team);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"changjy44"},"content":"            if (counter \u003d\u003d 0) {","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"changjy44"},"content":"                addressBook.setTeam(team);","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"changjy44"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"changjy44"},"content":"            counter++;","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"changjy44"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"changjy44"},"content":"            Team team \u003d new Team(\"default\", new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"changjy44"},"content":"            addressBook.addTeam(team);","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"changjy44"},"content":"            addressBook.setTeam(team);","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"changjy44":27,"-":58}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.team.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"DevanshShah1309"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"DevanshShah1309"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"DevanshShah1309"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"DevanshShah1309"},"content":"        ObservableList\u003cTask\u003e tasks \u003d logic.getAddressBook().getTeam().getTaskList();","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"DevanshShah1309"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"DevanshShah1309"},"content":"            taskListPanel \u003d new TaskListPanel(tasks);","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"DevanshShah1309"},"content":"            taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":196,"DevanshShah1309":13}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":76,"DevanshShah1309":1}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.team.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":" * A UI component that displays information of a {@code Task}.","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":"    private static final String FXML \u003d \"TaskCard.fxml\";","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"DevanshShah1309"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"    public final Task task;","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"DevanshShah1309"},"content":"    private Label name;","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"DevanshShah1309"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"DevanshShah1309"},"content":"    private Label id;","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"DevanshShah1309"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"DevanshShah1309"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"DevanshShah1309"},"content":"        super(FXML);","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"DevanshShah1309"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"DevanshShah1309"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"DevanshShah1309"},"content":"        name.setText(task.getName());","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"DevanshShah1309"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"DevanshShah1309"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"DevanshShah1309"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"DevanshShah1309"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"DevanshShah1309"},"content":"            return true;","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"DevanshShah1309"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"DevanshShah1309"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"DevanshShah1309"},"content":"            return false;","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"DevanshShah1309"},"content":"        // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"DevanshShah1309"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"DevanshShah1309"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"DevanshShah1309"},"content":"            \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"DevanshShah1309":61}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.team.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"        super(FXML);","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"DevanshShah1309"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"DevanshShah1309"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"DevanshShah1309"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"DevanshShah1309"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"DevanshShah1309"},"content":"        @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"DevanshShah1309"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"DevanshShah1309"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"DevanshShah1309"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"DevanshShah1309"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"DevanshShah1309"},"content":"                setText(null);","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"DevanshShah1309"},"content":"            } else {","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"DevanshShah1309"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"DevanshShah1309"},"content":"            }","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"DevanshShah1309"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"DevanshShah1309":49}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"DevanshShah1309"},"content":"     * @return","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":88,"DevanshShah1309":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"DevanshShah1309"},"content":"        \u003cVBox fx:id\u003d\"taskList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"DevanshShah1309"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"DevanshShah1309"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"DevanshShah1309"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"DevanshShah1309"},"content":"          \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"DevanshShah1309"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":59,"DevanshShah1309":7}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"DevanshShah1309"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"DevanshShah1309"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"DevanshShah1309"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"DevanshShah1309"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"DevanshShah1309":32}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"DevanshShah1309":8}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"marcuspang"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":143,"author":{"gitId":"marcuspang"},"content":"        public Team getTeam() {","lastModifiedDate":"2022-10-07"},{"lineNumber":144,"author":{"gitId":"marcuspang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":146,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":147,"author":{"gitId":"changjy44"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"changjy44"},"content":"        public void setTeam(Team teamToSet) {","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"changjy44"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"changjy44"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"changjy44"},"content":"        public void addTeam(Team teamToAdd) {","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"changjy44"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"changjy44"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"changjy44"},"content":"        public void deleteTeam(Team teamToDelete) {","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"changjy44"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"changjy44"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"changjy44"},"content":"        public ObservableList\u003cTeam\u003e getTeamList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"changjy44"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"changjy44":21,"-":194,"marcuspang":6}},{"path":"src/test/java/seedu/address/logic/commands/AddMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":" * {@code AddMemberCommand}.","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"public class AddMemberCommandTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getAddressBook().getPersonList().size() + 1);","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"        AddMemberCommand addMemberCommand \u003d new AddMemberCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        assertCommandFailure(addMemberCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"    public void equals() {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"        AddMemberCommand addMemberFirstCommand \u003d new AddMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        AddMemberCommand addMemberSecondCommand \u003d new AddMemberCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        assertTrue(addMemberFirstCommand.equals(addMemberFirstCommand));","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        AddMemberCommand addMemberFirstCommandCopy \u003d new AddMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"        assertTrue(addMemberFirstCommand.equals(addMemberFirstCommandCopy));","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"        assertFalse(addMemberFirstCommand.equals(1));","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"        assertFalse(addMemberFirstCommand.equals(null));","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"        assertFalse(addMemberFirstCommand.equals(addMemberSecondCommand));","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"marcuspang":55}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":"class AddTaskCommandTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":"    private static final String PLACEHOLDER_TASK_NAME \u003d \"Test Task\";","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"DevanshShah1309"},"content":"    public void equals() {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"        AddTaskCommand addTaskFirstCommand \u003d new AddTaskCommand(PLACEHOLDER_TASK_NAME);","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"        AddTaskCommand addTaskSecondCommand \u003d new AddTaskCommand(PLACEHOLDER_TASK_NAME);","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"        // Same Add Task Commands should be equal.","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"        assertTrue(addTaskFirstCommand.equals(addTaskFirstCommand));","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"        // Add Task commands with same task should be considered equal.","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"        assertTrue(addTaskFirstCommand.equals(addTaskSecondCommand));","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"        // Add Task commands with wrong type should return false","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"DevanshShah1309"},"content":"        assertFalse(addTaskFirstCommand.equals(2));","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"DevanshShah1309"},"content":"        // Add Task command and null are not considered equal.","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"DevanshShah1309"},"content":"        assertFalse(addTaskFirstCommand.equals(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"DevanshShah1309":35}},{"path":"src/test/java/seedu/address/logic/commands/AddTeamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"class AddTeamCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    void execute_teamAlreadyExist_throwsCommandException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"        Team exitingTeam \u003d model.getTeam();","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"        AddTeamCommand addTeamCommand \u003d new AddTeamCommand(exitingTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"        assertCommandFailure(addTeamCommand, model, AddTeamCommand.MESSAGE_TEAM_EXISTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    void testEquals() {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        Team exitingTeam \u003d model.getTeam();","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"        Team anotherTeam \u003d new Team(\"first\", new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"        AddTeamCommand addTeamCommand \u003d new AddTeamCommand(exitingTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"        AddTeamCommand addTeamCommandDuplicate \u003d new AddTeamCommand(exitingTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"        AddTeamCommand addTeamCommandAnotherTeam \u003d new AddTeamCommand(anotherTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"        //Same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"        assertTrue(addTeamCommand.equals(addTeamCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"        //Same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"        assertTrue(addTeamCommand.equals(addTeamCommandDuplicate));","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"        //Different values -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"        assertFalse(addTeamCommand.equals(addTeamCommandAnotherTeam));","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"        //null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"        assertFalse(addTeamCommand.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"        //different type -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"        assertFalse(addTeamCommand.equals(5));","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"changjy44":51}},{"path":"src/test/java/seedu/address/logic/commands/DeleteMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":" * {@code DeleteMemberCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"public class DeleteMemberCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"        model.getTeam().addMember(personToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        String expectedMessage \u003d String.format(DeleteMemberCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        assertCommandSuccess(deleteMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getTeam().getTeamMembers().size() + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"        assertCommandFailure(deleteMemberCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"        DeleteMemberCommand deleteFirstCommand \u003d new DeleteMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"        DeleteMemberCommand deleteSecondCommand \u003d new DeleteMemberCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"        DeleteMemberCommand deleteFirstCommandCopy \u003d new DeleteMemberCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"marcuspang"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"marcuspang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"marcuspang"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"marcuspang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"marcuspang"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"marcuspang":77}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTeamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"class DeleteTeamCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    void execute_deleteTeamNotExist_throwsCommandException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"        Team newTeam \u003d new Team(\"newTeam\" , new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"        assertTrue(!model.getTeamList().contains(newTeam));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"        DeleteTeamCommand deleteTeamCommand \u003d new DeleteTeamCommand(newTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"        assertCommandFailure(deleteTeamCommand, model, DeleteTeamCommand.MESSAGE_TEAM_NOT_EXISTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"    void testEquals() {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"        Team exitingTeam \u003d model.getTeam();","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"        Team anotherTeam \u003d new Team(\"first\", new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"        DeleteTeamCommand deleteTeamCommand \u003d new DeleteTeamCommand(exitingTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"        DeleteTeamCommand deleteTeamCommandDuplicate \u003d new DeleteTeamCommand(exitingTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"        DeleteTeamCommand deleteTeamCommandAnotherTeam \u003d new DeleteTeamCommand(anotherTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"        //Same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"        assertTrue(deleteTeamCommand.equals(deleteTeamCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"        //Same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"        assertTrue(deleteTeamCommand.equals(deleteTeamCommandDuplicate));","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"        //Different values -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"        assertFalse(deleteTeamCommand.equals(deleteTeamCommandAnotherTeam));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"        //null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"        assertFalse(deleteTeamCommand.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"        //different type -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"        assertFalse(deleteTeamCommand.equals(5));","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"changjy44":53}},{"path":"src/test/java/seedu/address/logic/commands/ListMembersCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.person.TeamPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListMembersCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"public class ListMembersCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    private Model model;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"    public void execute_listMembers_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"        List\u003cTeam\u003e teams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"        teams.add(expectedModel.getTeam());","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        expectedModel.updateFilteredPersonList(new TeamPredicate(teams));","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"            model.getTeam().getTeamMembers().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        assertCommandSuccess(new ListMembersCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"marcuspang":45}},{"path":"src/test/java/seedu/address/logic/commands/SetTeamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"class SetTeamCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    void execute_setTeamAlreadySet_throwsCommandException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"        Team exitingTeam \u003d model.getTeam();","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"        SetTeamCommand setTeamCommand \u003d new SetTeamCommand(exitingTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"        assertCommandFailure(setTeamCommand, model, SetTeamCommand.MESSAGE_TEAM_ALREADY_SET);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"    void testEquals() {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"        Team exitingTeam \u003d model.getTeam();","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        Team anotherTeam \u003d new Team(\"first\", new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"        SetTeamCommand setTeamCommand \u003d new SetTeamCommand(exitingTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"        SetTeamCommand setTeamCommandDuplicate \u003d new SetTeamCommand(exitingTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"        SetTeamCommand setTeamCommandAnotherTeam \u003d new SetTeamCommand(anotherTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"        //Same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"        assertTrue(setTeamCommand.equals(setTeamCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"        //Same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"        assertTrue(setTeamCommand.equals(setTeamCommandDuplicate));","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"        //Different values -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"        assertFalse(setTeamCommand.equals(setTeamCommandAnotherTeam));","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"        //null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"        assertFalse(setTeamCommand.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"        //different type -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"        assertFalse(setTeamCommand.equals(5));","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"changjy44":50}},{"path":"src/test/java/seedu/address/logic/parser/AddMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":" * outside of the AddMemberCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"public class AddMemberCommandParserTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    private AddMemberCommandParser parser \u003d new AddMemberCommandParser();","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    public void parse_validArgs_returnsAddMemberCommand() {","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"        assertParseSuccess(parser, \"1\", new AddMemberCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"            AddMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"marcuspang":33}},{"path":"src/test/java/seedu/address/logic/parser/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":" * outside of the AddMemberCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"DevanshShah1309"},"content":"public class AddTaskCommandParserTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"    private static final String PLACEHOLDER_TASK_NAME \u003d \"Test task\";","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"    private AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"    public void parse_validArgs_returnsAddTaskCommand() {","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"        assertParseSuccess(parser, PLACEHOLDER_TASK_NAME, new AddTaskCommand(PLACEHOLDER_TASK_NAME));","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"DevanshShah1309"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"DevanshShah1309"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"DevanshShah1309"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"DevanshShah1309"},"content":"            AddTaskCommand.MESSAGE_TASK_NAME_FORMAT_ERROR));","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"DevanshShah1309":35}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.ListMembersCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"marcuspang"},"content":"    public void parseCommand_addMember() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"marcuspang"},"content":"        AddMemberCommand command \u003d (AddMemberCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"marcuspang"},"content":"            AddMemberCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"marcuspang"},"content":"        assertEquals(new AddMemberCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"marcuspang"},"content":"    public void parseCommand_listMembers() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"marcuspang"},"content":"        assertTrue(parser.parseCommand(ListMembersCommand.COMMAND_WORD) instanceof ListMembersCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"marcuspang"},"content":"        assertTrue(parser.parseCommand(ListMembersCommand.COMMAND_WORD + \" 3\") instanceof ListMembersCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"marcuspang"},"content":"    public void parseCommand_deleteMember() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"marcuspang"},"content":"        DeleteMemberCommand command \u003d (DeleteMemberCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"marcuspang"},"content":"            DeleteMemberCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"marcuspang"},"content":"        assertEquals(new DeleteMemberCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":101,"marcuspang":23}},{"path":"src/test/java/seedu/address/logic/parser/DeleteMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":" * outside of the DeleteMemberCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":" * same path through the DeleteMemberCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"public class DeleteMemberCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    private DeleteMemberCommandParser parser \u003d new DeleteMemberCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    public void parse_validArgs_returnsDeleteMemberCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"        assertParseSuccess(parser, \"1\", new DeleteMemberCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"            DeleteMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"marcuspang":33}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"changjy44"},"content":"        private final ObservableList\u003cTeam\u003e teams \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"marcuspang"},"content":"        private final Team team \u003d new Team(\"default\", new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"marcuspang"},"content":"        public Team getTeam() {","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"marcuspang"},"content":"            return team;","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"changjy44"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"changjy44"},"content":"        public ObservableList\u003cTeam\u003e getTeamList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"changjy44"},"content":"            return teams;","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"changjy44":6,"-":102,"DevanshShah1309":2,"marcuspang":5}},{"path":"src/test/java/seedu/address/model/team/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_1;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_1_DUPLICATED;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_2;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.person.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.person.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":"class TaskListTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"DevanshShah1309"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"    void contains() {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"        taskList.add(TASK_1);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"        assertTrue(taskList.contains(TASK_1));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"        assertTrue(taskList.contains(TASK_1_DUPLICATED));","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"        assertFalse(taskList.contains(TASK_2));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"    void add() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"DevanshShah1309"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"DevanshShah1309"},"content":"        assertDoesNotThrow(() -\u003e taskList.add(TASK_1));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"DevanshShah1309"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskList.add(TASK_1_DUPLICATED));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"DevanshShah1309"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"DevanshShah1309"},"content":"    void remove() {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"DevanshShah1309"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"DevanshShah1309"},"content":"        assertDoesNotThrow(() -\u003e taskList.add(TASK_1));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"DevanshShah1309"},"content":"        assertDoesNotThrow(() -\u003e taskList.remove(TASK_1));","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"DevanshShah1309"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e taskList.remove(TASK_1));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"DevanshShah1309"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"DevanshShah1309"},"content":"    void testEquals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"DevanshShah1309"},"content":"        TaskList taskList1 \u003d new TaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"DevanshShah1309"},"content":"        TaskList taskList2 \u003d new TaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"DevanshShah1309"},"content":"        taskList1.add(TASK_1);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"DevanshShah1309"},"content":"        taskList2.add(TASK_1);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"DevanshShah1309"},"content":"        assertTrue(taskList1.equals(taskList2));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"DevanshShah1309"},"content":"        taskList1.add(TASK_2);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"DevanshShah1309"},"content":"        assertFalse(taskList1.equals(taskList2));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"DevanshShah1309":53}},{"path":"src/test/java/seedu/address/model/team/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_1;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_1_DUPLICATED;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"DevanshShah1309"},"content":"public class TaskTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"DevanshShah1309"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"DevanshShah1309"},"content":"    public void null_constructor_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"DevanshShah1309"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Task(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"DevanshShah1309"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"DevanshShah1309"},"content":"    public void invalidName_constructor_throwsInvalidArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"DevanshShah1309"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Task(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"DevanshShah1309"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"DevanshShah1309"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"DevanshShah1309"},"content":"        assertTrue(Task.isValidName(\"task\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"DevanshShah1309"},"content":"        assertTrue(Task.isValidName(\"123\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"DevanshShah1309"},"content":"        assertTrue(Task.isValidName(\"task 123\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"DevanshShah1309"},"content":"        assertFalse(Task.isValidName(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"DevanshShah1309"},"content":"        assertFalse(Task.isValidName(\" task\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"DevanshShah1309"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"DevanshShah1309"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"DevanshShah1309"},"content":"        assertTrue(TASK_1.equals(TASK_1_DUPLICATED));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"DevanshShah1309"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"DevanshShah1309"},"content":"    public void valid_toString_equalNames() {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"DevanshShah1309"},"content":"        assertEquals(\"task\", TASK_1.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"DevanshShah1309"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"DevanshShah1309":43}},{"path":"src/test/java/seedu/address/model/team/TeamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import static seedu.address.testutil.TypicalTeams.FIRST;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import static seedu.address.testutil.TypicalTeams.FIRST_DUPLICATE;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import static seedu.address.testutil.TypicalTeams.SECOND;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"class TeamTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"    void isSameTeam() {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"        //Teams are equal to itself","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"        assertTrue(FIRST.isSameTeam(FIRST));","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"        //Teams are equal to other teams with identical names","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"        assertTrue(FIRST.isSameTeam(FIRST_DUPLICATE));","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"        //Teams are not equal to other teams with different names","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"        assertFalse(FIRST.isSameTeam(SECOND));","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"        //Teams are not equal to null","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"        assertFalse(FIRST.isSameTeam(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    void testEquals() {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        //Teams are equal to itself","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"        assertTrue(FIRST.equals(FIRST));","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"        //Teams are equal to other teams with identical names","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"        assertTrue(FIRST.equals(FIRST_DUPLICATE));","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"        //Teams are not equal to other teams with different names","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"        assertFalse(FIRST.equals(SECOND));","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"        //Teams are not equal to null","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"        assertFalse(FIRST.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"        //Different Type","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"        assertFalse(FIRST.equals(5));","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"changjy44":45}},{"path":"src/test/java/seedu/address/model/team/UniqueTeamListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import static seedu.address.testutil.TypicalTeams.FIRST;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"class UniqueTeamListTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"    private final UniqueTeamList uniqueTeamList \u003d new UniqueTeamList();","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    public void contains_teamNotInList_returnsFalse() {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"        assertFalse(uniqueTeamList.contains(FIRST));","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"    public void contains_teamInList_returnsTrue() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"        uniqueTeamList.add(FIRST);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"        assertTrue(uniqueTeamList.contains(FIRST));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        uniqueTeamList.add(FIRST);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"        assertThrows(DuplicateTeamException.class, () -\u003e uniqueTeamList.add(FIRST));","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"changjy44":33}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"changjy44"},"content":"        Team defaultTeam \u003d new Team(\"default\", new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"changjy44"},"content":"        ab.addTeam(defaultTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"changjy44"},"content":"        ab.setTeam(defaultTeam);","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"changjy44":4,"-":76}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DevanshShah1309"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"DevanshShah1309"},"content":"import seedu.address.model.team.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"DevanshShah1309"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"DevanshShah1309"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"DevanshShah1309"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"DevanshShah1309"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"DevanshShah1309"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"DevanshShah1309"},"content":"    public static final Task TASK_1 \u003d new Task(\"task\");","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"DevanshShah1309"},"content":"    public static final Task TASK_1_DUPLICATED \u003d new Task(\"task\");","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"DevanshShah1309"},"content":"    public static final Task TASK_2 \u003d new Task(\"task 123\");","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"DevanshShah1309"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"DevanshShah1309":12}},{"path":"src/test/java/seedu/address/testutil/TypicalTeams.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":" * A utility class containing a list of {@code Team} objects to be used in tests.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"public class TypicalTeams {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"    public static final Team FIRST \u003d new Team(\"first\", new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"    public static final Team FIRST_DUPLICATE \u003d new Team(\"first\" , new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"    public static final Team SECOND \u003d new Team(\"second\", new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"changjy44":15}}]
