[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"loyhongshenggg"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W13-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W13-2/tp/actions)","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"loyhongshenggg"},"content":"* **Long Time No See (LTNS)** is a desktop task tracking app made for student financial advisors to manage their contact base and stay connected with their clients. Made simpler with an intuitive and minimalistic graphical user interface (GUI) and customised functionalities to pinpoint your needs, LTNS will enable you to stay close to your dearest clients!\u003cbr\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"loyhongshenggg"},"content":"* as a tool for Student Financial Advisor who wants to upgrade their networking capacities","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"loyhongshenggg"},"content":"* as a tracker tool that helps them manage their time spent on clients alongside their studies","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"loyhongshenggg"},"content":"* The project is a software engineering project for a desktop application (callsed LongTimeNoSee) used for managing an individual financial advisor’s services.","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"loyhongshenggg"},"content":"* It is **written in OOP fashion**. It provides a **reasonably well-written** code base.","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"loyhongshenggg"},"content":"* It is named `LongTimeNoSee` (`LTNS` for short) as a play on how financial advisors often use the infamous line to start a conversation with someone they haven’t spoken to for a long while.","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"loyhongshenggg"},"content":"* For the detailed documentation of this project, see the **[LongTimeNoSee Product Website](https://nus-cs2103-ay2223s1.github.io/tp/)**.","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"loyhongshenggg"},"content":"  This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"loyhongshenggg":11,"-":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"loyhongshenggg"},"content":"### Hong Sheng","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"loyhongshenggg"},"content":"\u003cimg src\u003d\"images/loyhongshenggg.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"loyhongshenggg"},"content":"[[github](http://github.com/loyhongshenggg)]","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"loyhongshenggg"},"content":"[[portfolio](team/loyhongshenggg.md)]","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"loyhongshenggg"},"content":"* Role: Team Lead and Developer","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"loyhongshenggg"},"content":"* Responsibilities: UI/UX of LTNS, Wireframing/Figma diagram, Main reviewer for Damien","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"loyhongshenggg"},"content":"* In-charge of features: Ui, LTNS main UI/UX, pin function","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Ssatu"},"content":"### Damien Koh","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Ssatu"},"content":"\u003cimg src\u003d\"images/ssatu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Ssatu"},"content":"[[github](http://github.com/ssatu)]","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"Ssatu"},"content":"[[portfolio](team/ssatu.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Ssatu"},"content":"* Responsibilities: Documentation, Testing, Deliverables and deadlines, Main reviewer for Colin","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"Ssatu"},"content":"* In-charge of features: Policy management","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"loyhongshenggg"},"content":"### Reuben Chay","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"loyhongshenggg"},"content":"\u003cimg src\u003d\"images/reubenchay.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"loyhongshenggg"},"content":"[[github](https://github.com/ReubenChay)]","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"loyhongshenggg"},"content":"[[portfolio](team/reubenchay.md)]","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"Ssatu"},"content":"* Responsibilities: Scheduling and tracking, code quality, Main reviewer for Hong Sheng","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"Ssatu"},"content":"* In-charge of features: sort","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"loyhongshenggg"},"content":"### Colin Toh ","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"loyhongshenggg"},"content":"\u003cimg src\u003d\"images/cowlinn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"loyhongshenggg"},"content":"[[github](http://github.com/cowlinn)]","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"loyhongshenggg"},"content":"[[portfolio](team/cowlinn.md)]","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"cowlinn"},"content":"* Responsibilities:Integration, Testing, Main Reviewer for Marcus","lastModifiedDate":"2022-09-23"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"* In-Charge of Features: Client Class Management ","lastModifiedDate":"2022-09-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"### Marcus Chua","lastModifiedDate":"2022-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"\u003cimg src\u003d\"images/marcusczh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"[[github](https://github.com/marcusczh)]","lastModifiedDate":"2022-09-22"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"[[portfolio](team/marcusczh.md)]","lastModifiedDate":"2022-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-22"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"* Responsibilities: Code quality, integration, Main reviewer for Reuben","lastModifiedDate":"2022-09-23"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"* In-charge of features: find","lastModifiedDate":"2022-09-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"loyhongshenggg":15,"Ssatu":8,"cowlinn":2,"-":35,"marcusczh":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"loyhongshenggg"},"content":"* has a need to manage a significant number of clients","lastModifiedDate":"2022-09-23"},{"lineNumber":261,"author":{"gitId":"loyhongshenggg"},"content":"* Is a student financial advisor","lastModifiedDate":"2022-09-23"},{"lineNumber":262,"author":{"gitId":"loyhongshenggg"},"content":"* Has a  need to store additional client-related information","lastModifiedDate":"2022-09-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                      | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"cowlinn"},"content":"|----------|--------------------------------------------|-----------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-09-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions            | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person                  |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                   | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name             | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details      | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name              | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"cowlinn"},"content":"| `**`     | new user                                   | see sample data                   | Have a better understanding of the app\u0027s default layout                |     ","lastModifiedDate":"2022-09-23"},{"lineNumber":284,"author":{"gitId":"cowlinn"},"content":"| `**`     | user                                       | filter my contacts by keywords    | Locate my contacts easily, based on a particular critera               |  ","lastModifiedDate":"2022-09-23"},{"lineNumber":285,"author":{"gitId":"cowlinn"},"content":"| `**`     | user                                       | update my contacts list           | Edit their contact details                                             | ","lastModifiedDate":"2022-09-23"},{"lineNumber":286,"author":{"gitId":"cowlinn"},"content":"| `*`      | user                                       | have a reliable method            | store contact information without losing data                          | ","lastModifiedDate":"2022-09-23"},{"lineNumber":287,"author":{"gitId":"cowlinn"},"content":" | `*`      | user                                       | view individual client\u0027s profiles | keep track of multiple, unique clients                                 | ","lastModifiedDate":"2022-09-23"},{"lineNumber":288,"author":{"gitId":"cowlinn"},"content":" | `*`      | user                                       | pin important contacts            | be reminded of users which are of higher priority                      | ","lastModifiedDate":"2022-09-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"*{More to be added}* ","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"marcusczh"},"content":"(For all use cases below, the **System** is `LongTimeNoSee (LTNS)` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"marcusczh"},"content":"**Use case 1: Help**","lastModifiedDate":"2022-09-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"marcusczh"},"content":"1. User is not sure what commands there are","lastModifiedDate":"2022-09-23"},{"lineNumber":300,"author":{"gitId":"marcusczh"},"content":"2. User inputs the command to request help","lastModifiedDate":"2022-09-23"},{"lineNumber":301,"author":{"gitId":"marcusczh"},"content":"3. LTNS displays a help message","lastModifiedDate":"2022-09-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":303,"author":{"gitId":"marcusczh"},"content":"   Use case ends","lastModifiedDate":"2022-09-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"marcusczh"},"content":"**Use Case 2: Add client**","lastModifiedDate":"2022-09-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"marcusczh"},"content":"1. User loads the application","lastModifiedDate":"2022-09-23"},{"lineNumber":310,"author":{"gitId":"marcusczh"},"content":"2. User inputs the command to add a client","lastModifiedDate":"2022-09-23"},{"lineNumber":311,"author":{"gitId":"marcusczh"},"content":"3. User tags on the details he would like to specify","lastModifiedDate":"2022-09-23"},{"lineNumber":312,"author":{"gitId":"marcusczh"},"content":"4. LTNS switches to the default view automatically","lastModifiedDate":"2022-09-23"},{"lineNumber":313,"author":{"gitId":"marcusczh"},"content":"5. LTNS adds the latest client to the list view","lastModifiedDate":"2022-09-23"},{"lineNumber":314,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":315,"author":{"gitId":"marcusczh"},"content":"   Use case ends","lastModifiedDate":"2022-09-23"},{"lineNumber":316,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":317,"author":{"gitId":"marcusczh"},"content":"**Use case 3: List clients**","lastModifiedDate":"2022-09-23"},{"lineNumber":318,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":319,"author":{"gitId":"marcusczh"},"content":"**MSS**","lastModifiedDate":"2022-09-23"},{"lineNumber":320,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":321,"author":{"gitId":"marcusczh"},"content":"1. User requests to list all contacts","lastModifiedDate":"2022-09-23"},{"lineNumber":322,"author":{"gitId":"marcusczh"},"content":"2. LTNS displays a list of all contacts","lastModifiedDate":"2022-09-23"},{"lineNumber":323,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":324,"author":{"gitId":"marcusczh"},"content":"   Use case ends","lastModifiedDate":"2022-09-23"},{"lineNumber":325,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":326,"author":{"gitId":"marcusczh"},"content":"**Use case 4: View clients**","lastModifiedDate":"2022-09-23"},{"lineNumber":327,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":328,"author":{"gitId":"marcusczh"},"content":"**MSS**","lastModifiedDate":"2022-09-23"},{"lineNumber":329,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":330,"author":{"gitId":"marcusczh"},"content":"1. User loads the application","lastModifiedDate":"2022-09-23"},{"lineNumber":331,"author":{"gitId":"marcusczh"},"content":"2. User clicks on a specific client from the list view","lastModifiedDate":"2022-09-23"},{"lineNumber":332,"author":{"gitId":"marcusczh"},"content":"3. User can update information specific to his client (i.e: Birthday / Events/ Notes etc.)","lastModifiedDate":"2022-09-23"},{"lineNumber":333,"author":{"gitId":"marcusczh"},"content":"4. User switches to his default view","lastModifiedDate":"2022-09-23"},{"lineNumber":334,"author":{"gitId":"marcusczh"},"content":"5. LTNS shows a list of clients stored in the database","lastModifiedDate":"2022-09-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"marcusczh"},"content":"**Use case 6: Delete a person**","lastModifiedDate":"2022-09-23"},{"lineNumber":339,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":340,"author":{"gitId":"marcusczh"},"content":"**MSS**","lastModifiedDate":"2022-09-23"},{"lineNumber":341,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":342,"author":{"gitId":"Ssatu"},"content":"1. User requests to \u003cu\u003elist clients(UC3)\u003c/u\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":343,"author":{"gitId":"marcusczh"},"content":"2. User requests to delete a specific person in the list","lastModifiedDate":"2022-09-23"},{"lineNumber":344,"author":{"gitId":"marcusczh"},"content":"3. LTNS deletes the person","lastModifiedDate":"2022-09-23"},{"lineNumber":345,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":346,"author":{"gitId":"marcusczh"},"content":"   Use case ends","lastModifiedDate":"2022-09-23"},{"lineNumber":347,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"marcusczh"},"content":"    * 3a1. LTNS shows an error message.","lastModifiedDate":"2022-09-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"Ssatu"},"content":"**Use case 7: Sort a list**","lastModifiedDate":"2022-09-27"},{"lineNumber":361,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":362,"author":{"gitId":"Ssatu"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":363,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":364,"author":{"gitId":"Ssatu"},"content":"1. User requests to \u003cu\u003elist clients(UC3)\u003c/u\u003e, which will be shown based on date added (default sort)","lastModifiedDate":"2022-09-27"},{"lineNumber":365,"author":{"gitId":"Ssatu"},"content":"2. User requests to sort the list based on name (or any other metric)","lastModifiedDate":"2022-09-27"},{"lineNumber":366,"author":{"gitId":"Ssatu"},"content":"3. LTNS shows the list of clients, sorted in alphabetical order based on client\u0027s name. (or based on how the metric is compared)","lastModifiedDate":"2022-09-27"},{"lineNumber":367,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":368,"author":{"gitId":"Ssatu"},"content":"   Use case ends","lastModifiedDate":"2022-09-27"},{"lineNumber":369,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":370,"author":{"gitId":"Ssatu"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":371,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":372,"author":{"gitId":"Ssatu"},"content":"* 2a. Given sorting metric does not exist.","lastModifiedDate":"2022-09-27"},{"lineNumber":373,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":374,"author":{"gitId":"Ssatu"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":375,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":376,"author":{"gitId":"Ssatu"},"content":"**Use case 8: Delete a person**","lastModifiedDate":"2022-09-27"},{"lineNumber":377,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":378,"author":{"gitId":"Ssatu"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":379,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":380,"author":{"gitId":"Ssatu"},"content":"1. User requests to \u003cu\u003elist clients(UC3)\u003c/u\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":381,"author":{"gitId":"Ssatu"},"content":"2. User requests to delete a specific person in the list","lastModifiedDate":"2022-09-27"},{"lineNumber":382,"author":{"gitId":"Ssatu"},"content":"3. LTNS deletes the person","lastModifiedDate":"2022-09-27"},{"lineNumber":383,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":384,"author":{"gitId":"Ssatu"},"content":"   Use case ends","lastModifiedDate":"2022-09-27"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":386,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":388,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":390,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":392,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":394,"author":{"gitId":"Ssatu"},"content":"    * 3a1. LTNS shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":396,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":398,"author":{"gitId":"Ssatu"},"content":"**Use case 8: Pin a client**","lastModifiedDate":"2022-09-27"},{"lineNumber":399,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":400,"author":{"gitId":"Ssatu"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":401,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":402,"author":{"gitId":"Ssatu"},"content":"1. User requests to pin a client by name","lastModifiedDate":"2022-09-27"},{"lineNumber":403,"author":{"gitId":"Ssatu"},"content":"2. LTNS will display the pinned clients","lastModifiedDate":"2022-09-27"},{"lineNumber":404,"author":{"gitId":"Ssatu"},"content":"3. User will be able to see all pinned clients in all pages.","lastModifiedDate":"2022-09-27"},{"lineNumber":405,"author":{"gitId":"Ssatu"},"content":"    ","lastModifiedDate":"2022-09-27"},{"lineNumber":406,"author":{"gitId":"Ssatu"},"content":"   Use case ends","lastModifiedDate":"2022-09-27"},{"lineNumber":407,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":408,"author":{"gitId":"Ssatu"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":409,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":410,"author":{"gitId":"Ssatu"},"content":"* 2a. LTNS displays a highlighted box on pinned clients when using the list command.","lastModifiedDate":"2022-09-27"},{"lineNumber":411,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":412,"author":{"gitId":"Ssatu"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":413,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":414,"author":{"gitId":"Ssatu"},"content":"**Use case 9: Find a contact**","lastModifiedDate":"2022-09-27"},{"lineNumber":415,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":416,"author":{"gitId":"Ssatu"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":417,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":418,"author":{"gitId":"Ssatu"},"content":"1. User requests to search by a certain metric.","lastModifiedDate":"2022-09-27"},{"lineNumber":419,"author":{"gitId":"Ssatu"},"content":"2. LTNS shows a list of contacts with matching metrics.","lastModifiedDate":"2022-09-27"},{"lineNumber":420,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":421,"author":{"gitId":"Ssatu"},"content":"   Use case ends","lastModifiedDate":"2022-09-27"},{"lineNumber":422,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":423,"author":{"gitId":"Ssatu"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":424,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":425,"author":{"gitId":"Ssatu"},"content":"* 2a. User requests another search.","lastModifiedDate":"2022-09-27"},{"lineNumber":426,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":427,"author":{"gitId":"Ssatu"},"content":"  * 2a1. LTNS displays a new list of contacts with matching metrics.","lastModifiedDate":"2022-09-27"},{"lineNumber":428,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":429,"author":{"gitId":"Ssatu"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":430,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":431,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"ReubenChay"},"content":"2.  _mainstream OS_ includes Windows, MacOS, Linux systems with 64-bit machines","lastModifiedDate":"2022-09-24"},{"lineNumber":437,"author":{"gitId":"ReubenChay"},"content":"3.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-24"},{"lineNumber":438,"author":{"gitId":"ReubenChay"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-09-24"},{"lineNumber":439,"author":{"gitId":"ReubenChay"},"content":"5.  Size of windows should be scalable to full screen for maximum screen utilisation","lastModifiedDate":"2022-09-24"},{"lineNumber":440,"author":{"gitId":"ReubenChay"},"content":"6. Performance requirements: Should be able to serve its features right now","lastModifiedDate":"2022-09-24"},{"lineNumber":441,"author":{"gitId":"ReubenChay"},"content":"8. Extremely intuitive and minimalistic design to avoid confusion. ","lastModifiedDate":"2022-09-24"},{"lineNumber":442,"author":{"gitId":"ReubenChay"},"content":"9. The product is not required to handle the direct contacting of users.","lastModifiedDate":"2022-09-24"},{"lineNumber":443,"author":{"gitId":"ReubenChay"},"content":"10. For added personality, user should be able to have some customizability.(e.g: Change UI’s theme based on system-defined presets)","lastModifiedDate":"2022-09-24"},{"lineNumber":444,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"loyhongshenggg"},"content":"* **Client**: A client is a person being served by the financial advisor.","lastModifiedDate":"2022-09-23"},{"lineNumber":452,"author":{"gitId":"loyhongshenggg"},"content":"*  **Policy**: An investment or insurance policy that is being sold by an insurance company, through the financial advisor.","lastModifiedDate":"2022-09-23"},{"lineNumber":453,"author":{"gitId":"loyhongshenggg"},"content":"*  **Financial advisor**: A professional paid to offer financial advice to clients","lastModifiedDate":"2022-09-23"},{"lineNumber":454,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ReubenChay":9,"loyhongshenggg":7,"Ssatu":60,"cowlinn":7,"-":381,"marcusczh":43}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"loyhongshenggg"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"loyhongshenggg"},"content":"    \u003cimg src\u003d\"images/LTNS_logo.png\" width\u003d\"200\" height\u003d\"200\"\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"loyhongshenggg"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"loyhongshenggg"},"content":"Long Time No See (LTNS) is a  **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of an **intuitive and minimalistic Graphical User Interface (GUI)**. Made simpler with an intuitive and minimalistic graphical user interface (GUI) and customised functionalities to pinpoint your needs, LTNS will enable you to stay close to your dearest clients!","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"loyhongshenggg"},"content":"# Table of Contents","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"loyhongshenggg"},"content":"1. [Quickstart](#quick-start)","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"loyhongshenggg"},"content":"2. [Pre-Existing Features](#pre-existing-features)","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"loyhongshenggg"},"content":"3. [New Features](#new-features)","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"loyhongshenggg"},"content":"4. [Frequently Asked Questions](#faq)","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"loyhongshenggg"},"content":"5. [Command Summary](#command-summary)","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"loyhongshenggg"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"loyhongshenggg"},"content":"## Quick start ","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"1. Download the latest `LTNS.jar` from [here](https://github.com/AY2223S1-CS2103T-W13-2/tp/releases).","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your LTNS.","lastModifiedDate":"2022-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e ","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"loyhongshenggg"},"content":"##  Pre Existing Features","lastModifiedDate":"2022-09-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"* Words in round brackets and separated by a `/` are options for parameters to be supplied by the user. \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"Only one parameter can be specified. \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"e.g `(n/NAME)/(p/PHONE)` can be used as `n/John Doe` or as `p/12341234`","lastModifiedDate":"2022-09-22"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"marcusczh"},"content":"### Search for contacts: `find`","lastModifiedDate":"2022-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"marcusczh"},"content":"Search for contacts based on certain metrics ","lastModifiedDate":"2022-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"marcusczh"},"content":"Format: `find (n/NAME)/(p/PHONE)/(e/EMAIL)/(a/ADDRESS)/(t/TAG)…​ `","lastModifiedDate":"2022-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"marcusczh"},"content":"For `NAME`:","lastModifiedDate":"2022-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"marcusczh"},"content":"For `TAG`:","lastModifiedDate":"2022-09-22"},{"lineNumber":142,"author":{"gitId":"marcusczh"},"content":"* The search is case-insensitive. e.g `friends` will match `Friends`","lastModifiedDate":"2022-09-22"},{"lineNumber":143,"author":{"gitId":"marcusczh"},"content":"* Only full words will be matched e.g. `colleagues` will not match `colleague`","lastModifiedDate":"2022-09-22"},{"lineNumber":144,"author":{"gitId":"marcusczh"},"content":"* Note: Only one tag can be specified","lastModifiedDate":"2022-09-22"},{"lineNumber":145,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":146,"author":{"gitId":"marcusczh"},"content":"For non-textual information i.e `PHONE`, `EMAIL`, `ADDRESS`:","lastModifiedDate":"2022-09-22"},{"lineNumber":147,"author":{"gitId":"marcusczh"},"content":"* The search is case-sensitive. e.g `hans@email.com` will not match `Hans@email.com`","lastModifiedDate":"2022-09-22"},{"lineNumber":148,"author":{"gitId":"marcusczh"},"content":"* Only full searches will be matched e.g `12341234` will not match `1234`","lastModifiedDate":"2022-09-22"},{"lineNumber":149,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":152,"author":{"gitId":"marcusczh"},"content":"* `find n/John` returns `john` and `John Doe`","lastModifiedDate":"2022-09-22"},{"lineNumber":153,"author":{"gitId":"marcusczh"},"content":"* `find n/alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"marcusczh"},"content":"* `find p/12341234` returns contacts with `12341234` as their phone number","lastModifiedDate":"2022-09-22"},{"lineNumber":156,"author":{"gitId":"marcusczh"},"content":"* `find t/friends` returns contacts with a `friends` tag","lastModifiedDate":"2022-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"loyhongshenggg"},"content":"# New Features","lastModifiedDate":"2022-09-23"},{"lineNumber":199,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":200,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":201,"author":{"gitId":"loyhongshenggg"},"content":"### Sorting all Clients : `sort`","lastModifiedDate":"2022-09-23"},{"lineNumber":202,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":203,"author":{"gitId":"loyhongshenggg"},"content":"Sorts clients in the address book based on a specified metric. ","lastModifiedDate":"2022-09-23"},{"lineNumber":204,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":205,"author":{"gitId":"loyhongshenggg"},"content":"Format: `sort KEYWORD [MORE_KEYWORDS]` ","lastModifiedDate":"2022-09-23"},{"lineNumber":206,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":207,"author":{"gitId":"loyhongshenggg"},"content":"* Sorts the list of clients based on specified keyword ","lastModifiedDate":"2022-09-23"},{"lineNumber":208,"author":{"gitId":"loyhongshenggg"},"content":"* Keyword must be from client details","lastModifiedDate":"2022-09-23"},{"lineNumber":209,"author":{"gitId":"loyhongshenggg"},"content":"* (v1.2) current supported sort metrics include `name, phone number, address`","lastModifiedDate":"2022-09-23"},{"lineNumber":210,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":211,"author":{"gitId":"loyhongshenggg"},"content":"Examples: ","lastModifiedDate":"2022-09-23"},{"lineNumber":212,"author":{"gitId":"loyhongshenggg"},"content":"* `sort name` will display your address book in alphabetical order based on their name ","lastModifiedDate":"2022-09-23"},{"lineNumber":213,"author":{"gitId":"loyhongshenggg"},"content":"* `sort phone` will display your addresss book in numerical order based on their phone numbers","lastModifiedDate":"2022-09-23"},{"lineNumber":214,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":215,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":216,"author":{"gitId":"loyhongshenggg"},"content":"### Pin a user by name: `pin`","lastModifiedDate":"2022-09-23"},{"lineNumber":217,"author":{"gitId":"loyhongshenggg"},"content":"* Format: `pin [CLIENT_NAME]` ","lastModifiedDate":"2022-09-23"},{"lineNumber":218,"author":{"gitId":"loyhongshenggg"},"content":"* Description:","lastModifiedDate":"2022-09-23"},{"lineNumber":219,"author":{"gitId":"loyhongshenggg"},"content":"* Example Usage: ","lastModifiedDate":"2022-09-23"},{"lineNumber":220,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":221,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":222,"author":{"gitId":"loyhongshenggg"},"content":"### Search for Contacts based on user\u0027s metrics: `find`","lastModifiedDate":"2022-09-23"},{"lineNumber":223,"author":{"gitId":"loyhongshenggg"},"content":"* Format: `find [*KEYWORDS]` ","lastModifiedDate":"2022-09-23"},{"lineNumber":224,"author":{"gitId":"loyhongshenggg"},"content":"* Description: ","lastModifiedDate":"2022-09-23"},{"lineNumber":225,"author":{"gitId":"loyhongshenggg"},"content":"* Example Usage: `find n/Jim a/53`","lastModifiedDate":"2022-09-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"Ssatu"},"content":"### View all policies: `policies` [Coming soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":228,"author":{"gitId":"Ssatu"},"content":"* Format: `policies`","lastModifiedDate":"2022-09-27"},{"lineNumber":229,"author":{"gitId":"Ssatu"},"content":"* Description: In v1.2, we will allow the user to view all available policies in a list format.","lastModifiedDate":"2022-09-27"},{"lineNumber":230,"author":{"gitId":"Ssatu"},"content":"* Example Usage: `policies`","lastModifiedDate":"2022-09-27"},{"lineNumber":231,"author":{"gitId":"Ssatu"},"content":"* Example Result: Shows a list of all policies stored on the page","lastModifiedDate":"2022-09-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"loyhongshenggg"},"content":"**Find** | `find [n/NAME] [p/PHONE] [e/EMAIL]...` \u003cbr\u003e e.g: ` find n/Jim p/98765432` ","lastModifiedDate":"2022-09-23"},{"lineNumber":253,"author":{"gitId":"loyhongshenggg"},"content":"**Sort** | `sort [COMPARABLE_METRIC]` \u003cbr\u003e `e.g: sort AGE`","lastModifiedDate":"2022-09-23"},{"lineNumber":254,"author":{"gitId":"loyhongshenggg"},"content":"**Pin** | `pin [n/Name]` \u003cbr\u003e e.g: `pin n/Jim`","lastModifiedDate":"2022-09-23"},{"lineNumber":255,"author":{"gitId":"Ssatu"},"content":"**policies** | `policies`","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"ReubenChay":2,"loyhongshenggg":44,"Ssatu":6,"-":180,"marcusczh":23}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"loyhongshenggg"},"content":"    content: \"LTNS\";","lastModifiedDate":"2022-09-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"loyhongshenggg":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Long Time No See","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"loyhongshenggg"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W13-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W13-2/tp/actions)","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W13-2/tp/branch/master/graph/badge.svg?token\u003dCXJL1N6BQP)](https://codecov.io/gh/AY2223S1-CS2103T-W13-2/tp)","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"loyhongshenggg"},"content":"**Long Time No See (LTNS)** is a desktop task tracking app made for student financial advisors to manage their contact base and stay connected with their clients. Made simpler with an intuitive and minimalistic graphical user interface (GUI) and customised functionalities to pinpoint your needs, LTNS will enable you to stay close to your dearest clients!\u003cbr\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"loyhongshenggg"},"content":"* If you are interested in using LongTimeNoSee, head over to the [**User Guide**](UserGuide.html).","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"loyhongshenggg"},"content":"* If you are interested about developing LongTimeNoSee, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"loyhongshenggg":4,"-":15}},{"path":"docs/team/cowlinn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cowlinn"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"layout: page","lastModifiedDate":"2022-09-22"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"title: Colin\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":"### Project: LongTimeNoSee(LTNS)","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"Long Time No See (LTNS) is a desktop task tracking app made for student financial advisors to manage their contact base and stay connected with their clients. Made simpler with an intuitive and minimalistic graphical user interface (GUI) and customised functionalities to pinpoint your needs, LTNS will enable you to stay close to your dearest clients!","lastModifiedDate":"2022-09-22"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-22"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":12,"author":{"gitId":"Ssatu"},"content":"* **New Feature**: Added the main representation of our user\u0027s patrons, i.e: The `client` class.","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"  * Justification: This feature is required to use our code","lastModifiedDate":"2022-09-22"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"  * Highlights:  It encapsulates extensions from the original AB3\u0027s person model. You can store birthdays, add notes, tag people etc.","lastModifiedDate":"2022-09-22"},{"lineNumber":15,"author":{"gitId":"cowlinn"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-22"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-22"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":19,"author":{"gitId":"Ssatu"},"content":"* **Code contributed**: [https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dcowlinn\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other]()","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":"* **Project management**:","lastModifiedDate":"2022-09-22"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"  * TODO","lastModifiedDate":"2022-09-22"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-22"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":"  * TODO","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"  * User Guide:","lastModifiedDate":"2022-09-22"},{"lineNumber":29,"author":{"gitId":"cowlinn"},"content":"    * Ported over original UG from Google Docs to Markdown, including cosmetic tweaks ","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":"    * TODO","lastModifiedDate":"2022-09-22"},{"lineNumber":31,"author":{"gitId":"cowlinn"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-22"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"    * TODO","lastModifiedDate":"2022-09-22"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"* **Community**:","lastModifiedDate":"2022-09-22"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"  * PRs reviewed (with non-trivial review comments): TODO","lastModifiedDate":"2022-09-22"},{"lineNumber":36,"author":{"gitId":"cowlinn"},"content":"  * Contributed to forum discussions:  TODO","lastModifiedDate":"2022-09-22"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"  * Reported bugs and suggestions for other teams in the class: TODO","lastModifiedDate":"2022-09-22"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"* **Tools**:","lastModifiedDate":"2022-09-22"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"  * TODO","lastModifiedDate":"2022-09-22"},{"lineNumber":41,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":42,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"Ssatu":2,"cowlinn":40}},{"path":"docs/team/loyhongshenggg.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"loyhongshenggg"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"loyhongshenggg"},"content":"layout: page","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"loyhongshenggg"},"content":"title: Hong Sheng\u0027s Project Portfolio Page 😁","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"loyhongshenggg"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"loyhongshenggg"},"content":"### Project: LongTimeNoSee(LTNS)","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"loyhongshenggg"},"content":"Long Time No See (LTNS) is a desktop task tracking app made for student financial advisors to manage their contact base and stay connected with their clients. Made simpler with an intuitive and minimalistic graphical user interface (GUI) and customised functionalities to pinpoint your needs, LTNS will enable you to stay close to your dearest clients!","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"loyhongshenggg"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"loyhongshenggg"},"content":"* **New Feature**: Figma mockup for the project.","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"loyhongshenggg"},"content":"    * Justification: This feature is to revamp the current AB3 to give our project GUI uniqueness","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"loyhongshenggg"},"content":"    * Highlights:  It provides a general flow for various functionalities and how they piece together into one application","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"loyhongshenggg"},"content":"    * Weblink: https://www.figma.com/file/KloccQRiEV5ow9oQta9jhy/LTNS?node-id\u003d0%3A1","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"loyhongshenggg"},"content":"    * Credits: *NIL*","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"loyhongshenggg"},"content":"* **New Feature**: Major Ui changes (upcoming)","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"loyhongshenggg"},"content":"* **New Feature**: Added pin feature (upcoming)","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"loyhongshenggg"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"loyhongshenggg"},"content":"* **Project management**:","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"loyhongshenggg"},"content":"    * TODO","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"loyhongshenggg"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"loyhongshenggg"},"content":"    * TODO","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"loyhongshenggg"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"loyhongshenggg"},"content":"    * User Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"loyhongshenggg"},"content":"        * Inserted the Ui components and figma link to the docs","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"loyhongshenggg"},"content":"        * Designed and inserted project logo","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"loyhongshenggg"},"content":"        * TODO","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"loyhongshenggg"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"loyhongshenggg"},"content":"        * Focused on writing the MSS for pin feature","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"loyhongshenggg"},"content":"* **Community**:","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"loyhongshenggg"},"content":"    * PRs reviewed (with non-trivial review comments): Mainly Damien\u0027s PR (following the Circle review principle)","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"loyhongshenggg"},"content":"    * Contributed to forum discussions:  TODO","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"loyhongshenggg"},"content":"    * Reported bugs and suggestions for other teams in the class: TODO","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"loyhongshenggg"},"content":"* **Tools**:","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"loyhongshenggg"},"content":"    * Figma (for mockup creation)","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"loyhongshenggg"},"content":"    * Javafx (for altering Ui changes)","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"loyhongshenggg"},"content":"    * Canva (for icon and logo design)","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"loyhongshenggg"},"content":"","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"loyhongshenggg":47}},{"path":"docs/team/marcusczh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"layout: page","lastModifiedDate":"2022-09-22"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"title: Marcus\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"# Project: Long Time No See (LTNS)","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"Long Time No See (LTNS) is a desktop task tracking app made for student financial advisors to manage their contact base","lastModifiedDate":"2022-09-22"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"and stay connected with their clients. Made simpler with an intuitive and minimalistic graphical user interface (GUI)","lastModifiedDate":"2022-09-22"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"and customised functionalities to pinpoint your needs, LTNS will enable you to stay close to your dearest clients!","lastModifiedDate":"2022-09-22"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"## Summary of Contributions:","lastModifiedDate":"2022-09-22"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"### Code contributed:","lastModifiedDate":"2022-09-22"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"To be added soon","lastModifiedDate":"2022-09-22"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"### Enhancements implemented:","lastModifiedDate":"2022-09-22"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"To be added soon","lastModifiedDate":"2022-09-22"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"### Contributions to the UG:","lastModifiedDate":"2022-09-22"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"To be added soon","lastModifiedDate":"2022-09-22"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"### Contributions to the DG:","lastModifiedDate":"2022-09-22"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"To be added soon","lastModifiedDate":"2022-09-22"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2022-09-22"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"To be added soon","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"To be added soon","lastModifiedDate":"2022-09-22"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-09-22"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"To be added soon","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"marcusczh":33}},{"path":"docs/team/reubenchay.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ReubenChay"},"content":"## Overview ","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"ReubenChay"},"content":"Long Time No See (LTNS) is a desktop task tracking app made for student financial advisors to manage their contact base and stay connected with their clients. Made simpler with an intuitive and minimalistic graphical user interface (GUI) and customised functionalities to pinpoint your needs, LTNS will enable you to stay close to your dearest clients!","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"ReubenChay"},"content":"## Code contributions ","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"ReubenChay"},"content":"to be added soon ","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"ReubenChay"},"content":"## Enhancements implemented ","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"ReubenChay"},"content":"to be added soon ","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"ReubenChay"},"content":"## Contributions to UG ","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"ReubenChay"},"content":"to be added soon ","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"ReubenChay"},"content":"## Contributions to DG ","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"ReubenChay"},"content":"to be added soon ","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"ReubenChay"},"content":"## Contributions to team-based tasks ","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"ReubenChay"},"content":"to be added soon ","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"ReubenChay"},"content":"## Review/Mentoring Contributions ","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"ReubenChay"},"content":"to be added soon ","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"ReubenChay"},"content":"## Other contributions beyond the team ","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"ReubenChay"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"ReubenChay"},"content":"to be added soon ","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"ReubenChay":30}},{"path":"docs/team/ssatu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ssatu"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"Ssatu"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"Ssatu"},"content":"title: Damien\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"Ssatu"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"Ssatu"},"content":"### Project: LongTimeNoSee(LTNS)","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"Ssatu"},"content":"Long Time No See (LTNS) is a desktop task tracking app made for student financial advisors to manage their contact base and stay connected with their clients. Made simpler with an intuitive and minimalistic graphical user interface (GUI) and customised functionalities to pinpoint your needs, LTNS will enable you to stay close to your dearest clients!","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"Ssatu"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"Ssatu"},"content":"* **New Feature**: Added the main representation of our users\u0027 available policies, i.e: The `policy` class.","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"Ssatu"},"content":"  * Justification: This feature allows us to store policies sold by the user.","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"Ssatu"},"content":"  * Highlights:  It stores information about a given policy, like policy duration, premium and coverage type.","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"Ssatu"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"Ssatu"},"content":"* **New Feature**: ","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"Ssatu"},"content":"  * *TODO","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"Ssatu"},"content":"* **Code contributed**: [https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dssatu\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other]()","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"Ssatu"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"Ssatu"},"content":"  * TODO","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"Ssatu"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"Ssatu"},"content":"  * TODO","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"Ssatu"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"Ssatu"},"content":"  * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"Ssatu"},"content":"    * TODO","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"Ssatu"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"Ssatu"},"content":"    * TODO","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"Ssatu"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"Ssatu"},"content":"  * PRs reviewed (with non-trivial review comments): TODO","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"Ssatu"},"content":"  * Contributed to forum discussions:  TODO","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"Ssatu"},"content":"  * Reported bugs and suggestions for other teams in the class: TODO","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"Ssatu"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"Ssatu"},"content":"  * TODO","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"Ssatu"},"content":"","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"Ssatu":42}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"    /** Returns an unmodifiable view of the filtered list of Clients */","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"cowlinn"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cowlinn":6,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":83,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":84,"author":{"gitId":"cowlinn"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-09-26"},{"lineNumber":85,"author":{"gitId":"cowlinn"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2022-09-26"},{"lineNumber":86,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cowlinn":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cowlinn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISK_APPETITE;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":" * Adds a client to the address book.","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"public class AddClientCommand extends Command {","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"    public static final String COMMAND_WORD \u003d \"client\"; //TODO: This will eventually replace add","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Client to the address book. \"","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] (multiple)... \"","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_BIRTHDAY + \"BIRTHDAY \"","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_INCOME + \"INCOME \"","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_RISK_APPETITE + \"RA.. \\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"cowlinn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_TAG + \"owesMoney\"","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_BIRTHDAY + \"2021-03-03 \"","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_INCOME + \"21.0 \"","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"cowlinn"},"content":"            + PREFIX_RISK_APPETITE + \"m \";","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"cowlinn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Client added: %1$s\";","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"cowlinn"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the address book\";","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"cowlinn"},"content":"    private final Client toAdd;","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"     * Main constructor for AddClient","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"cowlinn"},"content":"     * @param client","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"cowlinn"},"content":"    public AddClientCommand(Client client) {","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"cowlinn"},"content":"        toAdd \u003d client;","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"cowlinn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"cowlinn"},"content":"        if (model.hasClient(toAdd)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"cowlinn"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"cowlinn"},"content":"        model.addClient(toAdd);","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"cowlinn"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":76,"author":{"gitId":"cowlinn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"cowlinn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-26"},{"lineNumber":78,"author":{"gitId":"cowlinn"},"content":"                || (other instanceof AddClientCommand // instanceof handles nulls","lastModifiedDate":"2022-09-26"},{"lineNumber":79,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 toAdd.equals(((AddClientCommand) other).toAdd));","lastModifiedDate":"2022-09-26"},{"lineNumber":80,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":81,"author":{"gitId":"cowlinn"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"cowlinn":81}},{"path":"src/main/java/seedu/address/logic/parser/AddClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cowlinn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISK_APPETITE;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Birthday;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Income;","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.RiskAppetite;","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"cowlinn"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"cowlinn"},"content":"public class AddClientCommandParser implements Parser\u003cAddClientCommand\u003e {","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"     * Parses the given {@code String} of arguments in the context of the AddClientCommand","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"     * and returns an AddClientCommand object for execution.","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"cowlinn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"    public AddClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"cowlinn"},"content":"                PREFIX_BIRTHDAY, PREFIX_INCOME, PREFIX_RISK_APPETITE);","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_BIRTHDAY,","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"cowlinn"},"content":"                PREFIX_INCOME, PREFIX_RISK_APPETITE)","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"cowlinn"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"cowlinn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"cowlinn"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"cowlinn"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"cowlinn"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"cowlinn"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"        Birthday birthday \u003d ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get());","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"cowlinn"},"content":"        Income income \u003d ParserUtil.parseIncome(argMultimap.getValue(PREFIX_INCOME).get());","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"cowlinn"},"content":"        RiskAppetite ra \u003d ParserUtil.parseRA(argMultimap.getValue(PREFIX_RISK_APPETITE).get());","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"cowlinn"},"content":"        Client client \u003d new Client(name, phone, email, address, tagList, birthday, income, ra);","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"cowlinn"},"content":"        return new AddClientCommand(client);","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"cowlinn"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"cowlinn"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"cowlinn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"cowlinn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"cowlinn"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"cowlinn":71}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"cowlinn"},"content":"        case AddClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"cowlinn"},"content":"            return new AddClientCommandParser().parse(arguments);","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cowlinn":5,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"b/\");","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"    public static final Prefix PREFIX_INCOME \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":"    public static final Prefix PREFIX_RISK_APPETITE \u003d new Prefix(\"ra/\");","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"cowlinn":8,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Birthday;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Income;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.RiskAppetite;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":129,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":130,"author":{"gitId":"cowlinn"},"content":"     * Parses {@code String birthday} into a {@code Birthday}.","lastModifiedDate":"2022-09-26"},{"lineNumber":131,"author":{"gitId":"cowlinn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-26"},{"lineNumber":132,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":133,"author":{"gitId":"cowlinn"},"content":"    public static Birthday parseBirthday(String birthday) throws ParseException {","lastModifiedDate":"2022-09-28"},{"lineNumber":134,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2022-09-26"},{"lineNumber":135,"author":{"gitId":"cowlinn"},"content":"        String trimmedBirthday \u003d birthday.trim();","lastModifiedDate":"2022-09-26"},{"lineNumber":136,"author":{"gitId":"cowlinn"},"content":"        if (!Birthday.isValidFormat(trimmedBirthday)) {","lastModifiedDate":"2022-09-28"},{"lineNumber":137,"author":{"gitId":"cowlinn"},"content":"            throw new ParseException(Birthday.MESSAGE_FORMAT_CONSTRAINTS);","lastModifiedDate":"2022-09-28"},{"lineNumber":138,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":139,"author":{"gitId":"cowlinn"},"content":"        if (!Birthday.isValidBirthday(trimmedBirthday)) {","lastModifiedDate":"2022-09-28"},{"lineNumber":140,"author":{"gitId":"cowlinn"},"content":"            throw new ParseException(Birthday.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2022-09-28"},{"lineNumber":141,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":142,"author":{"gitId":"cowlinn"},"content":"        return new Birthday(birthday);","lastModifiedDate":"2022-09-28"},{"lineNumber":143,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":144,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":145,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":146,"author":{"gitId":"cowlinn"},"content":"     * Parses {@code String income} into a {@code income}.","lastModifiedDate":"2022-09-26"},{"lineNumber":147,"author":{"gitId":"cowlinn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-26"},{"lineNumber":148,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":149,"author":{"gitId":"cowlinn"},"content":"    public static Income parseIncome(String income) throws ParseException {","lastModifiedDate":"2022-09-28"},{"lineNumber":150,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(income);","lastModifiedDate":"2022-09-26"},{"lineNumber":151,"author":{"gitId":"cowlinn"},"content":"        String trimmedIncome \u003d income.trim();","lastModifiedDate":"2022-09-26"},{"lineNumber":152,"author":{"gitId":"cowlinn"},"content":"        if (!Income.isValidFormat(trimmedIncome)) {","lastModifiedDate":"2022-09-28"},{"lineNumber":153,"author":{"gitId":"cowlinn"},"content":"            throw new ParseException(Income.MESSAGE_FORMAT_CONSTRAINTS);","lastModifiedDate":"2022-09-28"},{"lineNumber":154,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":155,"author":{"gitId":"cowlinn"},"content":"        return new Income(income);","lastModifiedDate":"2022-09-28"},{"lineNumber":156,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":157,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":158,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":159,"author":{"gitId":"cowlinn"},"content":"     * Parses {@code String RA} into a {@code RiskAppetite}.","lastModifiedDate":"2022-09-26"},{"lineNumber":160,"author":{"gitId":"cowlinn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-26"},{"lineNumber":161,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":162,"author":{"gitId":"cowlinn"},"content":"    public static RiskAppetite parseRA(String ra) throws ParseException {","lastModifiedDate":"2022-09-28"},{"lineNumber":163,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(ra);","lastModifiedDate":"2022-09-26"},{"lineNumber":164,"author":{"gitId":"cowlinn"},"content":"        String trimmedRiskAppetiteTag \u003d ra.trim();","lastModifiedDate":"2022-09-26"},{"lineNumber":165,"author":{"gitId":"cowlinn"},"content":"        if (!RiskAppetite.isValidFormat(trimmedRiskAppetiteTag)) {","lastModifiedDate":"2022-09-29"},{"lineNumber":166,"author":{"gitId":"cowlinn"},"content":"            throw new ParseException(RiskAppetite.MESSAGE_FORMAT_CONSTRAINTS);","lastModifiedDate":"2022-09-28"},{"lineNumber":167,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":168,"author":{"gitId":"cowlinn"},"content":"        return new RiskAppetite(ra);","lastModifiedDate":"2022-09-28"},{"lineNumber":169,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"cowlinn":45,"-":125}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.UniqueClientList;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":"    private final UniqueClientList clients; //TODO: implement Unique Client list","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"cowlinn"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"cowlinn"},"content":"        this.clients.setClients(clients);","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"cowlinn"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":120,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":121,"author":{"gitId":"cowlinn"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-09-26"},{"lineNumber":122,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":123,"author":{"gitId":"cowlinn"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-09-26"},{"lineNumber":124,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-09-26"},{"lineNumber":125,"author":{"gitId":"cowlinn"},"content":"        return clients.contains(client);","lastModifiedDate":"2022-09-26"},{"lineNumber":126,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":127,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":128,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":129,"author":{"gitId":"cowlinn"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2022-09-26"},{"lineNumber":130,"author":{"gitId":"cowlinn"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2022-09-26"},{"lineNumber":131,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":132,"author":{"gitId":"cowlinn"},"content":"    public void addClient(Client c) {","lastModifiedDate":"2022-09-26"},{"lineNumber":133,"author":{"gitId":"cowlinn"},"content":"        clients.add(c);","lastModifiedDate":"2022-09-26"},{"lineNumber":134,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":135,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":136,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":137,"author":{"gitId":"cowlinn"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-09-26"},{"lineNumber":138,"author":{"gitId":"cowlinn"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2022-09-26"},{"lineNumber":139,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2022-09-28"},{"lineNumber":145,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 clients.equals(((AddressBook) other).clients));","lastModifiedDate":"2022-09-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"cowlinn"},"content":"        return persons.hashCode() + clients.hashCode();","lastModifiedDate":"2022-09-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":153,"author":{"gitId":"cowlinn"},"content":"    public void removeClient(Client client) {","lastModifiedDate":"2022-09-26"},{"lineNumber":154,"author":{"gitId":"cowlinn"},"content":"        clients.remove(client);","lastModifiedDate":"2022-09-26"},{"lineNumber":155,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":156,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":158,"author":{"gitId":"cowlinn"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2022-09-29"},{"lineNumber":159,"author":{"gitId":"cowlinn"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-09-29"},{"lineNumber":160,"author":{"gitId":"cowlinn"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2022-09-29"},{"lineNumber":161,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":162,"author":{"gitId":"cowlinn"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-09-29"},{"lineNumber":163,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cowlinn":45,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":91,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":92,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":93,"author":{"gitId":"cowlinn"},"content":"    // Colin\u0027s versions","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":95,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":96,"author":{"gitId":"cowlinn"},"content":"     * Returns true if a person with the same identity as {@code Client} exists in the address book.","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":98,"author":{"gitId":"cowlinn"},"content":"    boolean hasClient(Client toAdd);","lastModifiedDate":"2022-09-26"},{"lineNumber":99,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":100,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"cowlinn"},"content":"     * Adds the client specified.","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":103,"author":{"gitId":"cowlinn"},"content":"    void addClient(Client toAdd);","lastModifiedDate":"2022-09-26"},{"lineNumber":104,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":105,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"cowlinn"},"content":"     * Deletes the given Client.","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"cowlinn"},"content":"     * The client must exist in the address book.","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":109,"author":{"gitId":"cowlinn"},"content":"    void deleteClient(Client toDelete);","lastModifiedDate":"2022-09-26"},{"lineNumber":110,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":111,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"cowlinn"},"content":"     * Replaces the given Client {@code target} with {@code editedClient}.","lastModifiedDate":"2022-09-29"},{"lineNumber":113,"author":{"gitId":"cowlinn"},"content":"     * {@code client} must exist in the address book.","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"cowlinn"},"content":"     * The person identity of {@code editedClient} must not be the same as another existing cleint in the address book.","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"cowlinn"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2022-09-29"},{"lineNumber":117,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"cowlinn"},"content":"    /** Returns an unmodifiable view of the filtered client list */","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"cowlinn"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-09-26"},{"lineNumber":120,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":121,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"cowlinn"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"cowlinn"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"cowlinn"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2022-09-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cowlinn":39,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.addressBook.getClientList());","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"cowlinn"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Client stuff \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-09-26"},{"lineNumber":117,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"cowlinn"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-09-26"},{"lineNumber":119,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-09-26"},{"lineNumber":120,"author":{"gitId":"cowlinn"},"content":"        return addressBook.hasClient(client);","lastModifiedDate":"2022-09-26"},{"lineNumber":121,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":122,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"cowlinn"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2022-09-26"},{"lineNumber":124,"author":{"gitId":"cowlinn"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2022-09-26"},{"lineNumber":125,"author":{"gitId":"cowlinn"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-09-26"},{"lineNumber":126,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":127,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":128,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"cowlinn"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-09-29"},{"lineNumber":130,"author":{"gitId":"cowlinn"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-09-29"},{"lineNumber":131,"author":{"gitId":"cowlinn"},"content":"        addressBook.setClient(target, editedClient);","lastModifiedDate":"2022-09-29"},{"lineNumber":132,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":133,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"cowlinn"},"content":"    public void deleteClient(Client client) {","lastModifiedDate":"2022-09-26"},{"lineNumber":135,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-09-26"},{"lineNumber":136,"author":{"gitId":"cowlinn"},"content":"        addressBook.removeClient(client);","lastModifiedDate":"2022-09-26"},{"lineNumber":137,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":138,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":139,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":140,"author":{"gitId":"cowlinn"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-09-26"},{"lineNumber":141,"author":{"gitId":"cowlinn"},"content":"        return filteredClients;","lastModifiedDate":"2022-09-26"},{"lineNumber":142,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":143,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":144,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":145,"author":{"gitId":"cowlinn"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-09-26"},{"lineNumber":146,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-09-26"},{"lineNumber":147,"author":{"gitId":"cowlinn"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2022-09-26"},{"lineNumber":148,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":149,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-09-28"},{"lineNumber":185,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 filteredClients.equals(other.filteredClients);","lastModifiedDate":"2022-09-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cowlinn":40,"-":148}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cowlinn":2,"-":17}},{"path":"src/main/java/seedu/address/model/client/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cowlinn"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":"import java.time.chrono.ChronoLocalDate;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":" * Encapsulation for a client\u0027s birthday","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"public class Birthday {","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"    public static final String MESSAGE_DATE_CONSTRAINTS \u003d \"Date of birth cannot be in the future or invalid\";","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"cowlinn"},"content":"    public static final String STANDARD_DATE \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":"    public static final String MESSAGE_FORMAT_CONSTRAINTS \u003d \"Date of Birth must follow Format: \" + STANDARD_DATE;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"    private static final String BIRTHDAY_VALIDATION_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":"    public final String value;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"    private LocalDate birthday;","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":"    private boolean celebrated;","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"     * Main constructor for Birthday","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"cowlinn"},"content":"     * @param value","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"cowlinn"},"content":"    public Birthday(String value) {","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"        this.birthday \u003d parseBirthday(value);","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"        this.celebrated \u003d false;","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"    public Birthday unspecified() {","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"        return new Birthday(null);","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"cowlinn"},"content":"    public boolean checkCelebrated() {","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"cowlinn"},"content":"        return this.celebrated;","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"cowlinn"},"content":"    public void celebrateBirthday() {","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"cowlinn"},"content":"        this.celebrated \u003d true;","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"cowlinn"},"content":"    public LocalDate getBirthday() {","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"cowlinn"},"content":"        return this.birthday;","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"     * Utility function to check if a birthday is valid","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"cowlinn"},"content":"    public static boolean isValidBirthday(String date) {","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"cowlinn"},"content":"        try {","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"cowlinn"},"content":"            LocalDate verifiedDate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"cowlinn"},"content":"        } catch (DateTimeParseException dte) {","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"cowlinn"},"content":"            return false;","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"cowlinn"},"content":"        LocalDate verifiedDate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"cowlinn"},"content":"        return LocalDate.now().isEqual(verifiedDate) || LocalDate.now().isAfter(ChronoLocalDate.from(verifiedDate));","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"cowlinn"},"content":"     * Credits to: https://stackoverflow.com/questions/2149680/regex-date-format-validation-on-java","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"cowlinn"},"content":"     * For regex example for YYYY-MM-DD","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"cowlinn"},"content":"    public static boolean isValidFormat(String date) {","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"cowlinn"},"content":"        return date.matches(BIRTHDAY_VALIDATION_REGEX);","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"cowlinn"},"content":"     * Parses a birthday in string form and checks for validity","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"cowlinn"},"content":"     * @param  s","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"cowlinn"},"content":"     * @return LocalDate","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":80,"author":{"gitId":"cowlinn"},"content":"    public static LocalDate parseBirthday(String s) {","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"cowlinn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(STANDARD_DATE);","lastModifiedDate":"2022-09-26"},{"lineNumber":82,"author":{"gitId":"cowlinn"},"content":"        try {","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"cowlinn"},"content":"            LocalDate dateTime \u003d LocalDate.parse(s);","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"cowlinn"},"content":"        } catch (DateTimeParseException f) {","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"cowlinn"},"content":"            return LocalDate.parse(\"2020-05-05\"); //TODO: Change to a better default value","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"cowlinn"},"content":"        LocalDate dateTime \u003d LocalDate.parse(s);","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"cowlinn"},"content":"        return dateTime;","lastModifiedDate":"2022-09-26"},{"lineNumber":89,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":90,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":91,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":92,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"cowlinn"},"content":"     * Calculates a client\u0027s age based on his birthday input","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"cowlinn"},"content":"     * @return age","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"cowlinn"},"content":"    public int calculateAge() {","lastModifiedDate":"2022-09-26"},{"lineNumber":97,"author":{"gitId":"cowlinn"},"content":"        int currentYear \u003d LocalDate.now().getYear();","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"cowlinn"},"content":"        return currentYear - birthday.getYear();","lastModifiedDate":"2022-09-26"},{"lineNumber":99,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":100,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":101,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":102,"author":{"gitId":"cowlinn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-26"},{"lineNumber":103,"author":{"gitId":"cowlinn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-26"},{"lineNumber":104,"author":{"gitId":"cowlinn"},"content":"            return true;","lastModifiedDate":"2022-09-26"},{"lineNumber":105,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":106,"author":{"gitId":"cowlinn"},"content":"        if (!(other instanceof Birthday)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":107,"author":{"gitId":"cowlinn"},"content":"            return false;","lastModifiedDate":"2022-09-26"},{"lineNumber":108,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":109,"author":{"gitId":"cowlinn"},"content":"        Birthday otherBirthday \u003d (Birthday) other;","lastModifiedDate":"2022-09-26"},{"lineNumber":110,"author":{"gitId":"cowlinn"},"content":"        boolean sameCelebrate \u003d this.checkCelebrated() \u003d\u003d otherBirthday.checkCelebrated();","lastModifiedDate":"2022-09-26"},{"lineNumber":111,"author":{"gitId":"cowlinn"},"content":"        if (this.getBirthday() \u003d\u003d null || otherBirthday.getBirthday() \u003d\u003d null) {","lastModifiedDate":"2022-09-26"},{"lineNumber":112,"author":{"gitId":"cowlinn"},"content":"            return sameCelebrate \u0026\u0026 this.getBirthday() \u003d\u003d otherBirthday.getBirthday();","lastModifiedDate":"2022-09-26"},{"lineNumber":113,"author":{"gitId":"cowlinn"},"content":"        } else {","lastModifiedDate":"2022-09-26"},{"lineNumber":114,"author":{"gitId":"cowlinn"},"content":"            return sameCelebrate \u0026\u0026 this.getBirthday().equals(otherBirthday.getBirthday());","lastModifiedDate":"2022-09-26"},{"lineNumber":115,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":116,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":117,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":118,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"cowlinn"},"content":"    public String toString() {","lastModifiedDate":"2022-09-28"},{"lineNumber":120,"author":{"gitId":"cowlinn"},"content":"        return birthday.format(DateTimeFormatter","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"cowlinn"},"content":"                .ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2022-09-28"},{"lineNumber":122,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":123,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":124,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":125,"author":{"gitId":"cowlinn"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-28"},{"lineNumber":126,"author":{"gitId":"cowlinn"},"content":"        return birthday.hashCode();","lastModifiedDate":"2022-09-28"},{"lineNumber":127,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":128,"author":{"gitId":"cowlinn"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"cowlinn":128}},{"path":"src/main/java/seedu/address/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cowlinn"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"//import statement for policies?","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":" * Main client class handled by person","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":"public class Client extends Person {","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":"    //private ArrayList\u003cPolicy\u003e policies;","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"    private Birthday birthday; //TODO: Birthday class","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":"    //private ArrayList\u003cEvent\u003e events; // TODO: EventList class","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":"    //private PersonNotes notes; //TODO: Just a string","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"    private Income income; //TODO: Just a float","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"    private RiskAppetite ra; //TODO Enum","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"cowlinn"},"content":"    //The age is obtained from birthday","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"     * Encapsulation of a Client class","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"     * @param name","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"     * @param phone","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"cowlinn"},"content":"     * @param email","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"     * @param address","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"     * @param tag","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"     * @param birthday","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"     * @param income","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"cowlinn"},"content":"     * @param ra","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"    public Client(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tag,","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"cowlinn"},"content":"                  Birthday birthday, Income income, RiskAppetite ra) {","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"cowlinn"},"content":"        super(name, phone, email, address, tag);","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"cowlinn"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"cowlinn"},"content":"        this.income \u003d income;","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"cowlinn"},"content":"        this.ra \u003d ra;","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"cowlinn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"cowlinn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"cowlinn"},"content":"            return true;","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"cowlinn"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"cowlinn"},"content":"            return false;","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"cowlinn"},"content":"        Client otherclient \u003d (Client) other;","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"cowlinn"},"content":"        return otherclient.getName().equals(getName())","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 otherclient.getPhone().equals(getPhone())","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 otherclient.getEmail().equals(getEmail())","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 otherclient.getAddress().equals(getAddress())","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 otherclient.getTags().equals(getTags())","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 otherclient.getBirthday().equals(getBirthday())","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 otherclient.getRiskAppetite().equals(getRiskAppetite())","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 otherclient.getIncome().equals(getIncome());","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"cowlinn"},"content":"        //TODO: Add the remaining equals!","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":76,"author":{"gitId":"cowlinn"},"content":"    public Birthday getBirthday() {","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"cowlinn"},"content":"        return this.birthday;","lastModifiedDate":"2022-09-26"},{"lineNumber":78,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":79,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":80,"author":{"gitId":"cowlinn"},"content":"    public RiskAppetite getRiskAppetite() {","lastModifiedDate":"2022-09-26"},{"lineNumber":81,"author":{"gitId":"cowlinn"},"content":"        return this.ra;","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":83,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":84,"author":{"gitId":"cowlinn"},"content":"    public Income getIncome() {","lastModifiedDate":"2022-09-26"},{"lineNumber":85,"author":{"gitId":"cowlinn"},"content":"        return this.income;","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":87,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":88,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":89,"author":{"gitId":"cowlinn"},"content":"    public String toString() {","lastModifiedDate":"2022-09-26"},{"lineNumber":90,"author":{"gitId":"cowlinn"},"content":"        final StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-26"},{"lineNumber":91,"author":{"gitId":"cowlinn"},"content":"        sb.append(super.toString()) //tag on previous stuff","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"cowlinn"},"content":"                .append(\", Birthday: \")","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"cowlinn"},"content":"                .append(getBirthday())","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"cowlinn"},"content":"                .append(\", Income: \")","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"cowlinn"},"content":"                .append(getIncome())","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"cowlinn"},"content":"                .append(\", RiskLevel: \")","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"cowlinn"},"content":"                .append(getRiskAppetite());","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"cowlinn"},"content":"        return sb.toString();","lastModifiedDate":"2022-09-26"},{"lineNumber":99,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":100,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":101,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":102,"author":{"gitId":"cowlinn"},"content":"     * Returns true if both clients have the same name.","lastModifiedDate":"2022-09-26"},{"lineNumber":103,"author":{"gitId":"cowlinn"},"content":"     * This defines a weaker notion of equality between two clients.","lastModifiedDate":"2022-09-26"},{"lineNumber":104,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":105,"author":{"gitId":"cowlinn"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2022-09-26"},{"lineNumber":106,"author":{"gitId":"cowlinn"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2022-09-26"},{"lineNumber":107,"author":{"gitId":"cowlinn"},"content":"            return true;","lastModifiedDate":"2022-09-26"},{"lineNumber":108,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":109,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":110,"author":{"gitId":"cowlinn"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2022-09-26"},{"lineNumber":111,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 otherClient.getName().equals(getName());","lastModifiedDate":"2022-09-26"},{"lineNumber":112,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":113,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"cowlinn"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"cowlinn"},"content":"        return Objects.hash(this.getName(), this.getPhone(), this.getEmail(), this.getAddress(), this.getTags(),","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"cowlinn"},"content":"                this.getBirthday(), this.getIncome(), this.getRiskAppetite());","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"cowlinn"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"cowlinn":119}},{"path":"src/main/java/seedu/address/model/client/Income.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cowlinn"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":" * Immutable representation of a Client\u0027s income","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":"public class Income {","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"    public static final String MESSAGE_FORMAT_CONSTRAINTS \u003d \"Error: Please enter a double value for income\";","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"    public final String value;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":"    private double income;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"cowlinn"},"content":"     * Constructs an {@code Income}.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"     * @param income A valid email address.","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":"    public Income(String income) {","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":"        value \u003d income;","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":"        this.income \u003d Double.valueOf(income);","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"    public double getIncome() {","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":"        return income;","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"cowlinn"},"content":"     * Checks if income format is valid","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":"     * @param income","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"cowlinn"},"content":"     * @return","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"    public static boolean isValidFormat(String income) {","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"        try {","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"            double testIncome \u003d Double.valueOf(income);","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"cowlinn"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"            return false;","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"        return true;","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"cowlinn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"cowlinn"},"content":"            return true;","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"cowlinn"},"content":"        if (!(other instanceof Income)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"cowlinn"},"content":"            return false;","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"cowlinn"},"content":"        Income otherIncome \u003d (Income) other;","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"cowlinn"},"content":"        return this.getIncome() \u003d\u003d (otherIncome.getIncome());","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"    public String toString() {","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"cowlinn"},"content":"        return value;","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"cowlinn"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"cowlinn":59}},{"path":"src/main/java/seedu/address/model/client/RiskAppetite.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cowlinn"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":" *  Encapsulation for a client\u0027s RiskAppetite","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"public class RiskAppetite {","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":"    public static final String MESSAGE_FORMAT_CONSTRAINTS \u003d \"Error: RiskAppetite must be one \"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":"            + \"of the following indicators: \"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"            + \"{H, M, L}\";","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"    public final String value;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":"    private final RiskLevel rl;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":"     * Enumerator representing RiskLevel.","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":"     * Encapsulates 3 different categories, High, Medium and Low risk.","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":"     * Tagged with messages to be represented in String format.","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"    public enum RiskLevel {","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":"        HIGH(\"High\"), MEDIUM(\"Medium\"), LOW(\"Low\");","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"        private String message;","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"cowlinn"},"content":"        RiskLevel(String message) {","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":"            this.message \u003d message;","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"        @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"        public String toString() {","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"            return message;","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"     * Default constructor.","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"     * @param riskLevel","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"cowlinn"},"content":"    public RiskAppetite(String riskLevel) {","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"cowlinn"},"content":"        value \u003d riskLevel;","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"        rl \u003d parseRiskLevel(riskLevel);","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"cowlinn"},"content":"    public RiskLevel getRiskLevel() {","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"cowlinn"},"content":"        return this.rl;","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"cowlinn"},"content":"    public static boolean isValidFormat(String ra) {","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"cowlinn"},"content":"        return MESSAGE_FORMAT_CONSTRAINTS.contains(ra);","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"cowlinn"},"content":"     * Utility function to parse risklevel from string","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"cowlinn"},"content":"     * @param indicator to parseRiskLevel from Json","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"cowlinn"},"content":"     * @return the appropriate risklevel wrapped in an enum","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"cowlinn"},"content":"    public static RiskLevel parseRiskLevel(String indicator) {","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"cowlinn"},"content":"        switch (indicator) {","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"cowlinn"},"content":"        case \"H\":","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"cowlinn"},"content":"            return RiskLevel.HIGH;","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"cowlinn"},"content":"        case \"M\":","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"cowlinn"},"content":"            return RiskLevel.MEDIUM;","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"cowlinn"},"content":"        case \"L\":","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"cowlinn"},"content":"            return RiskLevel.LOW;","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"cowlinn"},"content":"        default:","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"cowlinn"},"content":"            return RiskLevel.MEDIUM;","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"cowlinn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-26"},{"lineNumber":76,"author":{"gitId":"cowlinn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"cowlinn"},"content":"            return true;","lastModifiedDate":"2022-09-26"},{"lineNumber":78,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":79,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":80,"author":{"gitId":"cowlinn"},"content":"        if (!(other instanceof RiskAppetite)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":81,"author":{"gitId":"cowlinn"},"content":"            return false;","lastModifiedDate":"2022-09-26"},{"lineNumber":82,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":83,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":84,"author":{"gitId":"cowlinn"},"content":"        RiskAppetite otherRA \u003d (RiskAppetite) other;","lastModifiedDate":"2022-09-26"},{"lineNumber":85,"author":{"gitId":"cowlinn"},"content":"        boolean isSameRA \u003d this.getRiskLevel() \u003d\u003d otherRA.getRiskLevel();","lastModifiedDate":"2022-09-26"},{"lineNumber":86,"author":{"gitId":"cowlinn"},"content":"        return isSameRA;","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":88,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":89,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"cowlinn"},"content":"    public String toString() {","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"cowlinn"},"content":"        return rl.toString();","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"cowlinn"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"cowlinn":94}},{"path":"src/main/java/seedu/address/model/client/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cowlinn"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"import java.util.List;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":" * A client is considered unique by comparing using {@code client#isSameclient(client)}. As such, adding and updating of","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":" * clients uses client#isSameclient(client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":" * unique in terms of identity in the UniqueclientList. However, the removal of a client uses client#equals(Object) so","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":" *","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":" *","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":" *","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"cowlinn"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClient);","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"cowlinn"},"content":"     * Adds a client to the list.","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"cowlinn"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"cowlinn"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"cowlinn"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"cowlinn"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"cowlinn"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"cowlinn"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"cowlinn"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the list.","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"cowlinn"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"cowlinn"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"cowlinn"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"cowlinn"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"cowlinn"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"cowlinn"},"content":"        if (!target.isSameClient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"cowlinn"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"cowlinn"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"cowlinn"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"cowlinn"},"content":"     * The client must exist in the list.","lastModifiedDate":"2022-09-26"},{"lineNumber":76,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"cowlinn"},"content":"    public void remove(Client toRemove) {","lastModifiedDate":"2022-09-26"},{"lineNumber":78,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-09-26"},{"lineNumber":79,"author":{"gitId":"cowlinn"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":80,"author":{"gitId":"cowlinn"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-09-26"},{"lineNumber":81,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":82,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":83,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":84,"author":{"gitId":"cowlinn"},"content":"    public void setClients(UniqueClientList replacement) {","lastModifiedDate":"2022-09-26"},{"lineNumber":85,"author":{"gitId":"cowlinn"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-09-26"},{"lineNumber":86,"author":{"gitId":"cowlinn"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-09-26"},{"lineNumber":87,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":88,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":89,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":90,"author":{"gitId":"cowlinn"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2022-09-26"},{"lineNumber":91,"author":{"gitId":"cowlinn"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-09-26"},{"lineNumber":92,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":93,"author":{"gitId":"cowlinn"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-09-26"},{"lineNumber":94,"author":{"gitId":"cowlinn"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2022-09-26"},{"lineNumber":95,"author":{"gitId":"cowlinn"},"content":"        if (!clientsAreUnique(clients)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":96,"author":{"gitId":"cowlinn"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-09-26"},{"lineNumber":97,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":98,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":99,"author":{"gitId":"cowlinn"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2022-09-26"},{"lineNumber":100,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":101,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":102,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":103,"author":{"gitId":"cowlinn"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-09-26"},{"lineNumber":104,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":105,"author":{"gitId":"cowlinn"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-09-26"},{"lineNumber":106,"author":{"gitId":"cowlinn"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-09-26"},{"lineNumber":107,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":108,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":109,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":110,"author":{"gitId":"cowlinn"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2022-09-26"},{"lineNumber":111,"author":{"gitId":"cowlinn"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-09-26"},{"lineNumber":112,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":113,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":114,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":115,"author":{"gitId":"cowlinn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-26"},{"lineNumber":116,"author":{"gitId":"cowlinn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-26"},{"lineNumber":117,"author":{"gitId":"cowlinn"},"content":"                || (other instanceof UniqueClientList // instanceof handles nulls","lastModifiedDate":"2022-09-26"},{"lineNumber":118,"author":{"gitId":"cowlinn"},"content":"                \u0026\u0026 internalList.equals(((UniqueClientList) other).internalList));","lastModifiedDate":"2022-09-26"},{"lineNumber":119,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":120,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":121,"author":{"gitId":"cowlinn"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":122,"author":{"gitId":"cowlinn"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-26"},{"lineNumber":123,"author":{"gitId":"cowlinn"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-09-26"},{"lineNumber":124,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":125,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":126,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":127,"author":{"gitId":"cowlinn"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2022-09-26"},{"lineNumber":128,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":129,"author":{"gitId":"cowlinn"},"content":"    private boolean clientsAreUnique(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-09-26"},{"lineNumber":130,"author":{"gitId":"cowlinn"},"content":"        for (int i \u003d 0; i \u003c clients.size() - 1; i++) {","lastModifiedDate":"2022-09-26"},{"lineNumber":131,"author":{"gitId":"cowlinn"},"content":"            for (int j \u003d i + 1; j \u003c clients.size(); j++) {","lastModifiedDate":"2022-09-26"},{"lineNumber":132,"author":{"gitId":"cowlinn"},"content":"                if (clients.get(i).isSameClient(clients.get(j))) {","lastModifiedDate":"2022-09-26"},{"lineNumber":133,"author":{"gitId":"cowlinn"},"content":"                    return false;","lastModifiedDate":"2022-09-26"},{"lineNumber":134,"author":{"gitId":"cowlinn"},"content":"                }","lastModifiedDate":"2022-09-26"},{"lineNumber":135,"author":{"gitId":"cowlinn"},"content":"            }","lastModifiedDate":"2022-09-26"},{"lineNumber":136,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":137,"author":{"gitId":"cowlinn"},"content":"        return true;","lastModifiedDate":"2022-09-26"},{"lineNumber":138,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":139,"author":{"gitId":"cowlinn"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"cowlinn":139}},{"path":"src/main/java/seedu/address/model/client/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cowlinn"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":"public class ClientNotFoundException extends RuntimeException {","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"cowlinn":8}},{"path":"src/main/java/seedu/address/model/client/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cowlinn"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":" * identity).","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"cowlinn":11}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cowlinn"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":"import java.util.List;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Birthday;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Income;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.RiskAppetite;","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":" * Jackson-friendly version of {@link Client}.","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"public class JsonAdaptedClient {","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":"    private final String name;","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"cowlinn"},"content":"    private final String phone;","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"    private final String email;","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"    private final String address;","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"    //Add on for Managing Clients;","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"    private final String birthday; //TODO: JsonAdapted Birthday","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"    private final String income;","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"cowlinn"},"content":"    private final String riskAppetite;","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"cowlinn"},"content":"    // TODO: JsonAdaptedNotes (To be implemented)","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"cowlinn"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given participant details.","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"cowlinn"},"content":"    @JsonCreator","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"cowlinn"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"cowlinn"},"content":"                                  @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"cowlinn"},"content":"                                  @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"                                  @JsonProperty(\"birthday\") String birthday,","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"                                  @JsonProperty(\"income\") String income,","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"cowlinn"},"content":"                                  @JsonProperty (\"riskAppetite\") String riskAppetite","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"cowlinn"},"content":"                             ) {","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"cowlinn"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"cowlinn"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"cowlinn"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"cowlinn"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"cowlinn"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"cowlinn"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"cowlinn"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"cowlinn"},"content":"        this.income \u003d income;","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"cowlinn"},"content":"        this.riskAppetite \u003d riskAppetite;","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"cowlinn"},"content":"        // TODO: PersonNotes","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"cowlinn"},"content":"     * Converts a given {@code Client} into this class for Json use.","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"cowlinn"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"cowlinn"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-09-26"},{"lineNumber":76,"author":{"gitId":"cowlinn"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"cowlinn"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2022-09-26"},{"lineNumber":78,"author":{"gitId":"cowlinn"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-09-26"},{"lineNumber":79,"author":{"gitId":"cowlinn"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-09-26"},{"lineNumber":80,"author":{"gitId":"cowlinn"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-09-26"},{"lineNumber":81,"author":{"gitId":"cowlinn"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-09-26"},{"lineNumber":82,"author":{"gitId":"cowlinn"},"content":"        birthday \u003d source.getBirthday().value;","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"cowlinn"},"content":"        income \u003d source.getIncome().value;","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"cowlinn"},"content":"        riskAppetite \u003d source.getRiskAppetite().value;","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"cowlinn"},"content":"        // TODO: Notes to be implemented","lastModifiedDate":"2022-09-26"},{"lineNumber":86,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":87,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":88,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":89,"author":{"gitId":"cowlinn"},"content":"     * Converts this Jackson-friendly adapted participant object into the model\u0027s {@code Client} object.","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"cowlinn"},"content":"     *","lastModifiedDate":"2022-09-26"},{"lineNumber":91,"author":{"gitId":"cowlinn"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted participant.","lastModifiedDate":"2022-09-26"},{"lineNumber":92,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":93,"author":{"gitId":"cowlinn"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2022-09-26"},{"lineNumber":94,"author":{"gitId":"cowlinn"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-26"},{"lineNumber":95,"author":{"gitId":"cowlinn"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-09-26"},{"lineNumber":96,"author":{"gitId":"cowlinn"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2022-09-26"},{"lineNumber":97,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":98,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":99,"author":{"gitId":"cowlinn"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-09-26"},{"lineNumber":100,"author":{"gitId":"cowlinn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-09-26"},{"lineNumber":101,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":102,"author":{"gitId":"cowlinn"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":103,"author":{"gitId":"cowlinn"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-26"},{"lineNumber":104,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":105,"author":{"gitId":"cowlinn"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-09-26"},{"lineNumber":106,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":107,"author":{"gitId":"cowlinn"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-09-26"},{"lineNumber":108,"author":{"gitId":"cowlinn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-09-26"},{"lineNumber":109,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":110,"author":{"gitId":"cowlinn"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":111,"author":{"gitId":"cowlinn"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-26"},{"lineNumber":112,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":113,"author":{"gitId":"cowlinn"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-09-26"},{"lineNumber":114,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":115,"author":{"gitId":"cowlinn"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-09-26"},{"lineNumber":116,"author":{"gitId":"cowlinn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-09-26"},{"lineNumber":117,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":118,"author":{"gitId":"cowlinn"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":119,"author":{"gitId":"cowlinn"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-26"},{"lineNumber":120,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":121,"author":{"gitId":"cowlinn"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2022-09-26"},{"lineNumber":122,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":123,"author":{"gitId":"cowlinn"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-09-26"},{"lineNumber":124,"author":{"gitId":"cowlinn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2022-09-26"},{"lineNumber":125,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":126,"author":{"gitId":"cowlinn"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":127,"author":{"gitId":"cowlinn"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-26"},{"lineNumber":128,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":129,"author":{"gitId":"cowlinn"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-09-26"},{"lineNumber":130,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":131,"author":{"gitId":"cowlinn"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2022-09-26"},{"lineNumber":132,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":133,"author":{"gitId":"cowlinn"},"content":"        //TODO: Some level of input validation (null / unsupported values) Current code alr does this","lastModifiedDate":"2022-09-26"},{"lineNumber":134,"author":{"gitId":"cowlinn"},"content":"        //TODO: IllegalClientException","lastModifiedDate":"2022-09-26"},{"lineNumber":135,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":136,"author":{"gitId":"cowlinn"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2022-09-28"},{"lineNumber":137,"author":{"gitId":"cowlinn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"cowlinn"},"content":"                    Birthday.class.getSimpleName()));","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":140,"author":{"gitId":"cowlinn"},"content":"        final Birthday modelBirthday \u003d new Birthday(birthday);","lastModifiedDate":"2022-09-28"},{"lineNumber":141,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":142,"author":{"gitId":"cowlinn"},"content":"        if (income \u003d\u003d null) {","lastModifiedDate":"2022-09-28"},{"lineNumber":143,"author":{"gitId":"cowlinn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Income.class.getSimpleName()));","lastModifiedDate":"2022-09-28"},{"lineNumber":144,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":145,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":146,"author":{"gitId":"cowlinn"},"content":"        final Income modelIncome \u003d new Income(income);","lastModifiedDate":"2022-09-28"},{"lineNumber":147,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":148,"author":{"gitId":"cowlinn"},"content":"        if (riskAppetite \u003d\u003d null) {","lastModifiedDate":"2022-09-28"},{"lineNumber":149,"author":{"gitId":"cowlinn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"cowlinn"},"content":"                    RiskAppetite.class.getSimpleName()));","lastModifiedDate":"2022-09-29"},{"lineNumber":151,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":152,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":153,"author":{"gitId":"cowlinn"},"content":"        final RiskAppetite modelRiskAppetite \u003d new RiskAppetite(riskAppetite);","lastModifiedDate":"2022-09-28"},{"lineNumber":154,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":155,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":156,"author":{"gitId":"cowlinn"},"content":"        return new Client(modelName, modelPhone, modelEmail, modelAddress, modelTags,","lastModifiedDate":"2022-09-26"},{"lineNumber":157,"author":{"gitId":"cowlinn"},"content":"                modelBirthday, modelIncome, modelRiskAppetite);","lastModifiedDate":"2022-09-28"},{"lineNumber":158,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":159,"author":{"gitId":"cowlinn"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"cowlinn":159}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"Clients list contains duplicate clients(s).\";","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"cowlinn"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"cowlinn"},"content":"        for (JsonAdaptedClient jsonAdaptedClient : clients) {","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"cowlinn"},"content":"            Client client \u003d jsonAdaptedClient.toModelType();","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"cowlinn"},"content":"            if (addressBook.hasClient(client)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"cowlinn"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"cowlinn"},"content":"            }","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"cowlinn"},"content":"            addressBook.addClient(client);","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cowlinn":13,"-":60}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"loyhongshenggg"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/LTNSlogo.png\";","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"loyhongshenggg":1,"-":87}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"loyhongshenggg"},"content":"         title\u003d\"Long Time No See (LTNS)\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"loyhongshenggg"},"content":"    \u003cImage url\u003d\"@/images/LTNSlogo.png\" /\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"loyhongshenggg":2,"-":58}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"loyhongshenggg"},"content":"        assertNotNull(AppUtil.getImage(\"/images/LTNSlogo.png\"));","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"loyhongshenggg":1,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"cowlinn"},"content":"        @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"cowlinn"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"cowlinn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"cowlinn"},"content":"        @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"cowlinn"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"cowlinn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"cowlinn"},"content":"        @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"cowlinn"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"cowlinn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"cowlinn"},"content":"        @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"cowlinn"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"cowlinn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"cowlinn"},"content":"        @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"cowlinn"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-09-30"},{"lineNumber":166,"author":{"gitId":"cowlinn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":167,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"cowlinn"},"content":"        @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"cowlinn"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":173,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"cowlinn":29,"-":193}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"        List\u003cClient\u003e newClients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"cowlinn"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newClients);","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"cowlinn"},"content":"        private final ObservableList\u003cClient\u003e clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"cowlinn"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cClient\u003e clients) {","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"cowlinn"},"content":"            this.clients.setAll(clients);","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"cowlinn"},"content":"        @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"cowlinn"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"cowlinn"},"content":"            return clients;","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"cowlinn":13,"-":100}}]
