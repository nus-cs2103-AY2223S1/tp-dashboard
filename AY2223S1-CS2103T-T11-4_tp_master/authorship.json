[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T11-4/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"* Mass Linkers is a powerful Desktop application tool that enables CS2103T students in a tutorial group to search for their classmates, view their teammates’ repos and view each other’s code reviews.\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"  Example usage:","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"  * as a helper tool to view classmates\u0027 repos and code reviews for self-learning","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"* It is optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"* _This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)._","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"ElijahS67":6,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"### Chin Hong Ming","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"\u003cimg src\u003d\"images/chm252.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"[[github](http://github.com/chm252)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"chm252"},"content":"[[portfolio](team/chm252.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"chm252"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"* Responsibilities: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"### Sheryl-Lynn Tan","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"\u003cimg src\u003d\"images/sltsheryl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"[[github](https://github.com/sltsheryl)] [[portfolio](team/sltsheryl.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"* Responsibilities: to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"### Zheng Jiarui","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"\u003cimg src\u003d\"images/carriezhengjr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"[[github](https://github.com/carriezhengjr)] [[portfolio](team/carriezhengjr.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"* Responsibilities: to be added soon","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"### Elijah Seah","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"\u003cimg src\u003d\"images/elijahs67.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"[[github](https://github.com/elijahs67)]","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"[[portfolio](team/elijahs67.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"chm252"},"content":"* Responsibilities: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"### Jonas Goh","lastModifiedDate":"2022-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"\u003cimg src\u003d\"images/jonasgwt.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"[[github](http://github.com/jonasgwt)]","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"[[portfolio](team/jonasgwt.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"* Responsibilities: to be added soon","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"ElijahS67":4,"sltsheryl":5,"jonasgwt":5,"chm252":7,"carriezhengjr":4,"-":34}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"### Mod mark feature","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"carriezhengjr"},"content":"#### Implementation","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"carriezhengjr"},"content":"The `ModCommandParser` implements the operation `ModCommandParser#parseMarkCommand(String args)` to read inputs entered by the student for execution in `ModMarkCommand`. `ModMarkCommand` extends `ModCommand` to execute the `mod mark` command.","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"carriezhengjr"},"content":"During execution, all modules specified by the student are marked in the `Person` class with the operation `Person#markMods(ObservableList\u003cMod\u003e mods)`. This is because the list of modules is stored and associated with a `Person`, hence any updates on the module status in the current list of modules will be handled in `Person`. Each individual module is then marked in the `Mod` class with the operation `Mod#markMod()`.","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"carriezhengjr"},"content":"The following (partial) class diagram shows how the different classes involved in the mod mark operation interacts with one another:","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"carriezhengjr"},"content":"![ModMarkClassDiagram](images/ModMarkClassDiagram.png)","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"carriezhengjr"},"content":"The following activity diagram summarises what happens when a student enters a `mod mark` command, assuming the command is valid and no error occurs:","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"carriezhengjr"},"content":"![ModMarkWithLoopActivityDiagram](images/ModMarkWithLoopActivityDiagram.png)","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"carriezhengjr"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"carriezhengjr"},"content":"**Aspect: How mod mark executes:**","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"carriezhengjr"},"content":"* **Alternative 1 (current choice):** Marks mods of a batchmate whose index is specified.","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"carriezhengjr"},"content":"    * Pros: Easier to implement. Shorter command to enter.","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"carriezhengjr"},"content":"    * Cons: May be hard to find and locate the index of the batchmate especially when the list of batchmates is long.","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"carriezhengjr"},"content":"* **Alternative 2:** Marks mods of a batchmate whose name is specified.","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"carriezhengjr"},"content":"    * Pros: Easier to find the batchmate by directly entering the name.","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"carriezhengjr"},"content":"    * Cons: Full name of the batchmate has to be specified. It may take more time to enter the name especially for long and complicated names.","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"jonasgwt"},"content":"* CS2103T students in a tutorial group \u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":289,"author":{"gitId":"jonasgwt"},"content":"Students can search for their teammates, view their repos and view each other’s code reviews (with their information such as GitHub repos etc).","lastModifiedDate":"2022-09-28"},{"lineNumber":290,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":291,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"jonasgwt"},"content":"**Value proposition**: All your contacts and projects in one place.","lastModifiedDate":"2022-09-28"},{"lineNumber":293,"author":{"gitId":"jonasgwt"},"content":"* Provides more convenience for both instructors and students.","lastModifiedDate":"2022-09-28"},{"lineNumber":294,"author":{"gitId":"jonasgwt"},"content":"* Promotes peer interaction and review as students can find each other’s work and leave constructive feedback with greater ease.","lastModifiedDate":"2022-09-28"},{"lineNumber":295,"author":{"gitId":"jonasgwt"},"content":"* Promotes self-learning as students can see how others write their code.","lastModifiedDate":"2022-09-28"},{"lineNumber":296,"author":{"gitId":"jonasgwt"},"content":"* Easier for instructors to keep track of students’ progress.","lastModifiedDate":"2022-09-28"},{"lineNumber":297,"author":{"gitId":"jonasgwt"},"content":"* Saves time.","lastModifiedDate":"2022-09-28"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                             | So that I can…​                                                            |","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"ElijahS67"},"content":"|----------|------------------|------------------------------------------|----------------------------------------------------------------------------|","lastModifiedDate":"2022-09-27"},{"lineNumber":307,"author":{"gitId":"ElijahS67"},"content":"| `* * *`  | new user         | see usage instructions and FAQ           | understand how to use the App                                              |","lastModifiedDate":"2022-09-27"},{"lineNumber":308,"author":{"gitId":"sltsheryl"},"content":"| `* * *`  | student          | add a batchmate to the addressbook       | conveniently refer to their contact details all in one place               |","lastModifiedDate":"2022-10-14"},{"lineNumber":309,"author":{"gitId":"sltsheryl"},"content":"| `* * *`  | student          | list all batchmates                      | see a list of all batchmates in my class                                   |","lastModifiedDate":"2022-10-14"},{"lineNumber":310,"author":{"gitId":"sltsheryl"},"content":"| `* * *`  | student          | edit a batchmate                         | change their details without deleting them                                 |","lastModifiedDate":"2022-10-14"},{"lineNumber":311,"author":{"gitId":"sltsheryl"},"content":"| `* * *`  | student          | delete a batchmate                       | remove unneeded entries                                                    |","lastModifiedDate":"2022-10-14"},{"lineNumber":312,"author":{"gitId":"sltsheryl"},"content":"| `* * *`  | student          | find a batchmate by name/Github username | locate their details to review and give feedback on their iP and tP easily |","lastModifiedDate":"2022-10-14"},{"lineNumber":313,"author":{"gitId":"sltsheryl"},"content":"| `* * *`  | student          | tag a batchmate with a tag               | find them easily                                                           |","lastModifiedDate":"2022-10-14"},{"lineNumber":314,"author":{"gitId":"sltsheryl"},"content":"| `* * *`  | student          | find batchmates using specified tags     | locate batchmates with the specified tag easily                            |","lastModifiedDate":"2022-10-14"},{"lineNumber":315,"author":{"gitId":"ElijahS67"},"content":"| `* *`    | student          | save my data to a file                   | access the data on different devices                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":316,"author":{"gitId":"ElijahS67"},"content":"| `* *`    | technical person | close the App using a command            | close the App easily                                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":321,"author":{"gitId":"sltsheryl"},"content":"(For all use cases below, the **System** is Mass Linkers and the **Actor** is the student, unless specified otherwise)","lastModifiedDate":"2022-10-14"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"sltsheryl"},"content":"**Use case 1: Add a batchmate’s information**","lastModifiedDate":"2022-10-09"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":325,"author":{"gitId":"sltsheryl"},"content":"**MSS**","lastModifiedDate":"2022-09-26"},{"lineNumber":326,"author":{"gitId":"sltsheryl"},"content":"1. Student chooses to add a batchmate\u0027s contact.","lastModifiedDate":"2022-10-09"},{"lineNumber":327,"author":{"gitId":"sltsheryl"},"content":"2. Student enters batchmate\u0027s particulars.","lastModifiedDate":"2022-10-09"},{"lineNumber":328,"author":{"gitId":"sltsheryl"},"content":"3. Mass Linkers adds batchmate to current list of batchmates. \\","lastModifiedDate":"2022-10-09"},{"lineNumber":329,"author":{"gitId":"sltsheryl"},"content":"   Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":330,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":331,"author":{"gitId":"sltsheryl"},"content":"**Extensions**","lastModifiedDate":"2022-09-26"},{"lineNumber":332,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-09"},{"lineNumber":333,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file. \\","lastModifiedDate":"2022-10-09"},{"lineNumber":334,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":336,"author":{"gitId":"sltsheryl"},"content":"**Use case 2: Remove a batchmate**","lastModifiedDate":"2022-10-09"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"sltsheryl"},"content":"1. Student requests for the list of batchmates.","lastModifiedDate":"2022-10-09"},{"lineNumber":340,"author":{"gitId":"sltsheryl"},"content":"2. Mass Linkers shows the current list of batchmates.","lastModifiedDate":"2022-10-09"},{"lineNumber":341,"author":{"gitId":"sltsheryl"},"content":"3. Student requests to delete a specific batchmate in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":342,"author":{"gitId":"sltsheryl"},"content":"4. Mass Linkers deletes the specified batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":343,"author":{"gitId":"sltsheryl"},"content":"   \\","lastModifiedDate":"2022-09-26"},{"lineNumber":344,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"sltsheryl"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":348,"author":{"gitId":"sltsheryl"},"content":"  \\","lastModifiedDate":"2022-09-27"},{"lineNumber":349,"author":{"gitId":"sltsheryl"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"sltsheryl"},"content":"* 4a. The specified batchmate is not found.","lastModifiedDate":"2022-10-14"},{"lineNumber":352,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers detects an error in specified batchmate (non valid index).","lastModifiedDate":"2022-10-14"},{"lineNumber":353,"author":{"gitId":"sltsheryl"},"content":"    * a2. Mass Linkers requests for a valid batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":354,"author":{"gitId":"sltsheryl"},"content":"    * Step a1 is repeated until a valid index is given. \\","lastModifiedDate":"2022-10-09"},{"lineNumber":355,"author":{"gitId":"sltsheryl"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-10-09"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-09"},{"lineNumber":358,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file.","lastModifiedDate":"2022-10-09"},{"lineNumber":359,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-09-26"},{"lineNumber":360,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":362,"author":{"gitId":"sltsheryl"},"content":"**Use case 3: Search batchmates via tags**","lastModifiedDate":"2022-10-14"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":364,"author":{"gitId":"sltsheryl"},"content":"**MSS**","lastModifiedDate":"2022-09-26"},{"lineNumber":365,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":366,"author":{"gitId":"sltsheryl"},"content":"1. Student requests the list of batchmates with tags.","lastModifiedDate":"2022-10-12"},{"lineNumber":367,"author":{"gitId":"sltsheryl"},"content":"2. Mass Linkers returns the list of batchmates associated with the particular tags.","lastModifiedDate":"2022-10-12"},{"lineNumber":368,"author":{"gitId":"sltsheryl"},"content":"   \\","lastModifiedDate":"2022-09-26"},{"lineNumber":369,"author":{"gitId":"sltsheryl"},"content":"   Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":371,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-26"},{"lineNumber":372,"author":{"gitId":"sltsheryl"},"content":"* 1a. Mass Linkers detects an invalid input. (No tags specified by the student)","lastModifiedDate":"2022-10-13"},{"lineNumber":373,"author":{"gitId":"sltsheryl"},"content":"* 1a1. Mass Linkers requests for at least one tag to be specified.","lastModifiedDate":"2022-10-13"},{"lineNumber":374,"author":{"gitId":"sltsheryl"},"content":"* 1a2. Student inputs new tags.","lastModifiedDate":"2022-10-12"},{"lineNumber":375,"author":{"gitId":"sltsheryl"},"content":"* Steps 1a1-1a2 are repeated until input is valid.","lastModifiedDate":"2022-10-13"},{"lineNumber":376,"author":{"gitId":"sltsheryl"},"content":"  \\","lastModifiedDate":"2022-09-26"},{"lineNumber":377,"author":{"gitId":"sltsheryl"},"content":"  Use case resumes from step 2.","lastModifiedDate":"2022-10-09"},{"lineNumber":378,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-09"},{"lineNumber":379,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file.","lastModifiedDate":"2022-10-09"},{"lineNumber":380,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-09-26"},{"lineNumber":381,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":382,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":383,"author":{"gitId":"sltsheryl"},"content":"**Use case 4: Add a tag to a batchmate**","lastModifiedDate":"2022-10-09"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":385,"author":{"gitId":"sltsheryl"},"content":"**MSS**","lastModifiedDate":"2022-09-26"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":387,"author":{"gitId":"sltsheryl"},"content":"1. Student chooses to add a tag to a batchmate.","lastModifiedDate":"2022-10-12"},{"lineNumber":388,"author":{"gitId":"sltsheryl"},"content":"2. Mass Linkers searches through the list of batchmates for the selected batchmate.","lastModifiedDate":"2022-10-09"},{"lineNumber":389,"author":{"gitId":"sltsheryl"},"content":"3. Mass Linkers adds tag to the batchmate.","lastModifiedDate":"2022-10-09"},{"lineNumber":390,"author":{"gitId":"sltsheryl"},"content":"   \\","lastModifiedDate":"2022-09-26"},{"lineNumber":391,"author":{"gitId":"sltsheryl"},"content":"   Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":392,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":393,"author":{"gitId":"sltsheryl"},"content":"**Extensions**","lastModifiedDate":"2022-10-09"},{"lineNumber":394,"author":{"gitId":"sltsheryl"},"content":"* 2a. The list of batchmates is empty.","lastModifiedDate":"2022-10-09"},{"lineNumber":395,"author":{"gitId":"sltsheryl"},"content":"* a1. Mass Linkers warns adding a tag is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":396,"author":{"gitId":"sltsheryl"},"content":"  \\","lastModifiedDate":"2022-09-26"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-10-09"},{"lineNumber":398,"author":{"gitId":"sltsheryl"},"content":"* 2b. Mass Linkers detects an error in specified batchmate (non valid index).","lastModifiedDate":"2022-10-14"},{"lineNumber":399,"author":{"gitId":"sltsheryl"},"content":"    * b1. Mass Linkers requests for new batchmate details.","lastModifiedDate":"2022-10-14"},{"lineNumber":400,"author":{"gitId":"sltsheryl"},"content":"    * Step b1 is repeated until a batchmate is found.","lastModifiedDate":"2022-10-09"},{"lineNumber":401,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-09-26"},{"lineNumber":402,"author":{"gitId":"sltsheryl"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-10-09"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":404,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-09"},{"lineNumber":405,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file.","lastModifiedDate":"2022-10-09"},{"lineNumber":406,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-09-26"},{"lineNumber":407,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":409,"author":{"gitId":"sltsheryl"},"content":"**Use case 5: Mark a module completed**","lastModifiedDate":"2022-10-12"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":411,"author":{"gitId":"sltsheryl"},"content":"**MSS**","lastModifiedDate":"2022-10-12"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":413,"author":{"gitId":"sltsheryl"},"content":"1. Student requests the list of modules for a batchmate.","lastModifiedDate":"2022-10-12"},{"lineNumber":414,"author":{"gitId":"sltsheryl"},"content":"2. Student requests to mark a module complete.","lastModifiedDate":"2022-10-12"},{"lineNumber":415,"author":{"gitId":"sltsheryl"},"content":"3. Mass Linkers marks the module completed.","lastModifiedDate":"2022-10-12"},{"lineNumber":416,"author":{"gitId":"sltsheryl"},"content":"   \\","lastModifiedDate":"2022-10-12"},{"lineNumber":417,"author":{"gitId":"sltsheryl"},"content":"   Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":418,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":419,"author":{"gitId":"sltsheryl"},"content":"**Extensions**","lastModifiedDate":"2022-10-12"},{"lineNumber":420,"author":{"gitId":"sltsheryl"},"content":"* 2a. The list of modules is empty.","lastModifiedDate":"2022-10-12"},{"lineNumber":421,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers warns marking a module is invalid.","lastModifiedDate":"2022-10-12"},{"lineNumber":422,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":423,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":424,"author":{"gitId":"sltsheryl"},"content":"* 2b. Mass Linkers detects the specified module is invalid (out of range).","lastModifiedDate":"2022-10-14"},{"lineNumber":425,"author":{"gitId":"sltsheryl"},"content":"    * b1. Mass Linkers requests for new module.","lastModifiedDate":"2022-10-14"},{"lineNumber":426,"author":{"gitId":"sltsheryl"},"content":"    * Step b1 is repeated until a module is found.","lastModifiedDate":"2022-10-12"},{"lineNumber":427,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":428,"author":{"gitId":"sltsheryl"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-10-12"},{"lineNumber":429,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":430,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-12"},{"lineNumber":431,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file.","lastModifiedDate":"2022-10-12"},{"lineNumber":432,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":433,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":434,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":435,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":436,"author":{"gitId":"sltsheryl"},"content":"**Use case 6: Edit Batchmate**","lastModifiedDate":"2022-10-12"},{"lineNumber":437,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":438,"author":{"gitId":"sltsheryl"},"content":"**MSS**","lastModifiedDate":"2022-10-12"},{"lineNumber":439,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":440,"author":{"gitId":"sltsheryl"},"content":"1. Student requests the list of batchmates.","lastModifiedDate":"2022-10-12"},{"lineNumber":441,"author":{"gitId":"sltsheryl"},"content":"2. Mass Linkers displays list of batchmates.","lastModifiedDate":"2022-10-12"},{"lineNumber":442,"author":{"gitId":"sltsheryl"},"content":"3. Student requests to edit a specific batchmate in the list with the new details.","lastModifiedDate":"2022-10-12"},{"lineNumber":443,"author":{"gitId":"sltsheryl"},"content":"4. Mass Linkers updates the details of said batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":444,"author":{"gitId":"sltsheryl"},"content":"   \\","lastModifiedDate":"2022-10-12"},{"lineNumber":445,"author":{"gitId":"sltsheryl"},"content":"   Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":446,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":447,"author":{"gitId":"sltsheryl"},"content":"**Extensions**","lastModifiedDate":"2022-10-12"},{"lineNumber":448,"author":{"gitId":"sltsheryl"},"content":"* 2a. The list of batchmates is empty.","lastModifiedDate":"2022-10-12"},{"lineNumber":449,"author":{"gitId":"sltsheryl"},"content":"  \\","lastModifiedDate":"2022-10-12"},{"lineNumber":450,"author":{"gitId":"sltsheryl"},"content":"  Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":451,"author":{"gitId":"sltsheryl"},"content":"* 3a. Mass Linkers detects an error in the entered command.","lastModifiedDate":"2022-10-14"},{"lineNumber":452,"author":{"gitId":"sltsheryl"},"content":"    * 3a1. Mass Linkers requests for the correct command.","lastModifiedDate":"2022-10-14"},{"lineNumber":453,"author":{"gitId":"sltsheryl"},"content":"    * 3a2. Student enters new command.","lastModifiedDate":"2022-10-14"},{"lineNumber":454,"author":{"gitId":"sltsheryl"},"content":"      Steps 3a1-3a2 are repeated until the command entered is correct.","lastModifiedDate":"2022-10-14"},{"lineNumber":455,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":456,"author":{"gitId":"sltsheryl"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2022-10-12"},{"lineNumber":457,"author":{"gitId":"sltsheryl"},"content":"* 3b. Mass Linkers could not find the batchmate specified.","lastModifiedDate":"2022-10-12"},{"lineNumber":458,"author":{"gitId":"sltsheryl"},"content":"    * 3b1. Mass Linkers requests the user to input a valid batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":459,"author":{"gitId":"sltsheryl"},"content":"    * 3b2. Student enters new command.","lastModifiedDate":"2022-10-14"},{"lineNumber":460,"author":{"gitId":"sltsheryl"},"content":"      Steps 3b1-3b2 are repeated until the command entered are correct.","lastModifiedDate":"2022-10-14"},{"lineNumber":461,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":462,"author":{"gitId":"sltsheryl"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2022-10-12"},{"lineNumber":463,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":464,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-12"},{"lineNumber":465,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file.","lastModifiedDate":"2022-10-12"},{"lineNumber":466,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":467,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":468,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":469,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":470,"author":{"gitId":"sltsheryl"},"content":"**Use case 7: Add module**","lastModifiedDate":"2022-10-12"},{"lineNumber":471,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":472,"author":{"gitId":"sltsheryl"},"content":"**MSS**","lastModifiedDate":"2022-10-12"},{"lineNumber":473,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":474,"author":{"gitId":"sltsheryl"},"content":"1. Student requests to add modules to a specific batchmate.","lastModifiedDate":"2022-10-12"},{"lineNumber":475,"author":{"gitId":"sltsheryl"},"content":"2. Mass Linkers add modules to said batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":476,"author":{"gitId":"sltsheryl"},"content":"   \\","lastModifiedDate":"2022-10-12"},{"lineNumber":477,"author":{"gitId":"sltsheryl"},"content":"   Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":478,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":479,"author":{"gitId":"sltsheryl"},"content":"**Extensions**","lastModifiedDate":"2022-10-12"},{"lineNumber":480,"author":{"gitId":"sltsheryl"},"content":"* 1a. The list of batchmates is empty.","lastModifiedDate":"2022-10-12"},{"lineNumber":481,"author":{"gitId":"sltsheryl"},"content":"  \\","lastModifiedDate":"2022-10-12"},{"lineNumber":482,"author":{"gitId":"sltsheryl"},"content":"  Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":483,"author":{"gitId":"sltsheryl"},"content":"* 2a. Mass Linkers detects an error in the entered command.","lastModifiedDate":"2022-10-14"},{"lineNumber":484,"author":{"gitId":"sltsheryl"},"content":"    * 2a1. Mass Linkers requests for the correct command.","lastModifiedDate":"2022-10-14"},{"lineNumber":485,"author":{"gitId":"sltsheryl"},"content":"    * 2a2. Student enters new command.","lastModifiedDate":"2022-10-14"},{"lineNumber":486,"author":{"gitId":"sltsheryl"},"content":"      Steps 2a1-2a2 are repeated until the command entered are correct.","lastModifiedDate":"2022-10-14"},{"lineNumber":487,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":488,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":489,"author":{"gitId":"sltsheryl"},"content":"* 2b. Mass Linkers could not find the batchmate specified.","lastModifiedDate":"2022-10-12"},{"lineNumber":490,"author":{"gitId":"sltsheryl"},"content":"    * 2b1. Mass Linkers requests the user to input a valid batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":491,"author":{"gitId":"sltsheryl"},"content":"    * 2b2. Student enters new command.","lastModifiedDate":"2022-10-14"},{"lineNumber":492,"author":{"gitId":"sltsheryl"},"content":"      Steps 2b1-2b2 are repeated until the command entered are correct.","lastModifiedDate":"2022-10-14"},{"lineNumber":493,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":494,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":495,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":496,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-12"},{"lineNumber":497,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file.","lastModifiedDate":"2022-10-12"},{"lineNumber":498,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":499,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"jonasgwt"},"content":"4.  The GUI should work well with standard screen resolutions 1920x1080 and higher. i.e. GUI does not appear to be cut or distorted.","lastModifiedDate":"2022-09-28"},{"lineNumber":507,"author":{"gitId":"jonasgwt"},"content":"5.  For every action by the user, the result should be visible within 5 seconds.","lastModifiedDate":"2022-09-28"},{"lineNumber":508,"author":{"gitId":"jonasgwt"},"content":"6.  The project should not depend on any remote servers.","lastModifiedDate":"2022-09-28"},{"lineNumber":509,"author":{"gitId":"jonasgwt"},"content":"7.  The software and documentation should be accessible to users with a basic command of English.","lastModifiedDate":"2022-09-28"},{"lineNumber":510,"author":{"gitId":"jonasgwt"},"content":"8.  The packaged JAR file should not exceed 100MB.","lastModifiedDate":"2022-09-28"},{"lineNumber":511,"author":{"gitId":"jonasgwt"},"content":"9.  The software should work without the need for an installer.","lastModifiedDate":"2022-09-28"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"chm252"},"content":"* **Command Line Interface (CLI)**: A text of lines input by the users to send instructions to the system.","lastModifiedDate":"2022-09-28"},{"lineNumber":520,"author":{"gitId":"chm252"},"content":"* **Graphical User Interface (GUI)**: A means, supported by visuals, for the users to send instructions to the system.","lastModifiedDate":"2022-09-28"},{"lineNumber":521,"author":{"gitId":"chm252"},"content":"* **Student**: The main user.","lastModifiedDate":"2022-09-28"},{"lineNumber":522,"author":{"gitId":"sltsheryl"},"content":"* **Batchmate**: The people whom the users need to link to and interact with.","lastModifiedDate":"2022-10-14"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ElijahS67":4,"sltsheryl":166,"jonasgwt":16,"carriezhengjr":28,"chm252":3,"-":358}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"Mass Linkers is a powerful Desktop application tool that provides a centralised platform for Computer Science (CS) students to find study support from batchmates with common modules. It allows students to save their CS batchmates’ contact details in one place, find common modules and form study groups. It is optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"2. Download the latest `masslinkers.jar` from [here](https://github.com/AY2223S1-CS2103T-T11-4/tp/releases).","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Mass Linkers.","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"4. Double-click the file to start the app. The GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"5. Type a command in the command box and press Enter to execute it. Refer to the section on [Features](#features) below for details and usage of each command.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"**:information_source: Notes about command format:**\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"  e.g `n/NAME t/TELEGRAM [tag/TAG]` can be used as `n/John Doe t/johnxyz tag/friend` or as `n/John Doe t/johnxyz`.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"* Items with `...` after them can be used multiple times.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"  e.g. `[tag/TAG]...` can be used as `tag/friend`, `tag/friend tag/family` etc.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"  e.g. `[MORE_MODULES]...` can be used as `cs2100`, `cs2103t cs2101 cs2105` etc.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"  e.g. If the command specifies `n/NAME t/TELEGRAM [g/GITHUB] [p/PHONE] [e/EMAIL] [tag/TAG]`, then `[tag/TAG] [e/EMAIL] [p/PHONE] n/NAME [g/GITHUB] t/TELEGRAM` is also acceptable.","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"**:information_source: Notes about parameters:**\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"* For all commands involving `INDEX`, `INDEX` refers to the index number shown in the currently displayed list.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"  * ___Beware!!!___ This may not be the full list of batchmates you have in Mass Linkers! For example, you may have entered the [find command](#finding-a-batchmate-by-name-find), so the currently displayed list will be the result of `find` which is not the full list.","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"  * The index __must be a positive integer__, e.g. 1, 2, 3 … and be smaller than the number of batchmates in the currently displayed list.","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"Shows a brief summary of commands with their syntax and a link to the user guide. You can also click the `Open User Guide` button which will redirect you to the user guide in your browser.","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"### Adding a batchmate: `add`","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"Adds a batchmate to the application.","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"Format: `add n/NAME t/TELEGRAM [g/GITHUB] [p/PHONE] [e/EMAIL] [tag/TAG]... [m/MODULE]...`","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"* Modules added to a batchmate will be automatically categorised according to their prefixes. e.g. `cs2103t` will be tagged as `Computer Science`.  `ma1521` will be tagged as `Mathematics`. For modules that are not identified by Mass Linkers, they will be tagged as `Others`.","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"* `add n/John Doe t/johnxyz`","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"* `add n/John Doe t/johnxyz g/john_doe p/98765432 e/johnd@example.com tag/friends tag/owesMoney`","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"* `add n/John Doe t/johnxyz m/cs2103t m/cs2101`","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"### Listing all batchmates: `list`","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"Shows a list of all batchmates.","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"### Editing a batchmate: `edit`","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"Edits the information of a specified batchmate.","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"carriezhengjr"},"content":"Format: `edit INDEX [n/NAME] [t/TELEGRAM] [g/GITHUB] [p/PHONE] [e/EMAIL] [tag/TAG]...`","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"carriezhengjr"},"content":"* Edits the batchmate at the specific `INDEX` in the __currently displayed list__. Refer to the section on _Notes about parameters_ at the start of [Features](#features) for more details.","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"carriezhengjr"},"content":"* When editing tags, the existing tags of the batchmate will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"carriezhengjr"},"content":"* You can remove all the batchmate’s tags by typing `tag/` without specifying any tags after it.","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"carriezhengjr"},"content":"*  `edit 1 g/john_doe p/91234567 e/johndoe@example.com` Edits the github username, phone number and email address of the 1st batchmate in the currently displayed list to be `john_doe`, `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"carriezhengjr"},"content":"*  `edit 2 n/Bob Tan t/` Edits the name of the 2nd batchmate in the currently displayed list to be `Bob Tan` and clears all existing tags.","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":103,"author":{"gitId":"carriezhengjr"},"content":"### Finding a batchmate: `find`","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":105,"author":{"gitId":"carriezhengjr"},"content":"Finds batchmates whose details contain __any__ of the given keywords.","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"carriezhengjr"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]...`","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":109,"author":{"gitId":"carriezhengjr"},"content":"* `NAME`, `TELEGRAM`, `GITHUB`, `PHONE` and `EMAIL` are searched.","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"carriezhengjr"},"content":"* The search is case-insensitive. e.g `Hans` will return `hans`.","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"carriezhengjr"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will return both `Hans Bo` and `Bo Hans`.","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"carriezhengjr"},"content":"* To search using `NAME`, only __full words__ will be matched. e.g. `Ha` will not return a batchmate with the name `Hans`.","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"carriezhengjr"},"content":"* To search using `TELEGRAM`, `GITHUB`, `PHONE` and `EMAIL`, partial words are accepted. E.g. `boh` will return `bohans`.","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"carriezhengjr"},"content":"* Batchmates matching at least one keyword will be returned. e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"carriezhengjr"},"content":"* When you want to search using `NAME`:","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"carriezhengjr"},"content":"  * `find John` returns `john` and `John Doe`.","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"carriezhengjr"},"content":"  * `find alex david` returns `Alex Tan`, `David Chua`.","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"carriezhengjr"},"content":"* When you want to search using `TELEGRAM`, `GITHUB` or `EMAIL`:","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"carriezhengjr"},"content":"  * `find boh` returns the batchmates with the telegram, github or email containing `boh`, e.g. `bohans`.","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"carriezhengjr"},"content":"* When you want to search using `PHONE`:","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"  * `find 999` returns the batchmates with the phone number `69998888`, `89991234` or `99912345`.","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"carriezhengjr"},"content":"### Finding batchmates by tags: `findTag`","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":127,"author":{"gitId":"carriezhengjr"},"content":"Finds batchmates whose tags match __all__ the specified tags.","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"carriezhengjr"},"content":"Format: `findTag TAG [MORE_TAGS]...`","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"carriezhengjr"},"content":"* The search is case-insensitive. e.g `friend` will match `Friend`.","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"carriezhengjr"},"content":"* Only full words will be matched e.g. `friend` will not match `friends`.","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"carriezhengjr"},"content":"* `findTag friend` returns all batchmates tagged with `friend`.","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"carriezhengjr"},"content":"* `findTag friend classmate` returns all batchmates tagged with both `friend` and `classmate`.","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"### Deleting a batchmate: `delete`","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"carriezhengjr"},"content":"Deletes a batchmate of a specific index.","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"carriezhengjr"},"content":"* Deletes the batchmate at the specific `INDEX` in the __currently displayed list__. Refer to the section on _Notes about parameters_ at the start of [Features](#features) for more details.","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"carriezhengjr"},"content":"Examples:","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"carriezhengjr"},"content":"* `list` followed by `delete 2` deletes the 2nd batchmate in the full list of batchmates you have in Mass Linkers.","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"carriezhengjr"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st batchmate in the currently displayed list of the `find` command.","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"carriezhengjr"},"content":"### Adding module to a batchmate: `mod add`","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"carriezhengjr"},"content":"Adds module(s) to a batchmate.","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"carriezhengjr"},"content":"Format: `mod add INDEX MODULE [MORE_MODULES]...`","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"carriezhengjr"},"content":"* Adds module(s) to the batchmate at the specific `INDEX` in the __currently displayed list__. Refer to the section on _Notes about parameters_ at the start of [Features](#features) for more details.","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"carriezhengjr"},"content":"Examples:","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"jonasgwt"},"content":"* `mod add 1 cs2103t` adds the module `CS2103T` to the 1st batchmate in the currently displayed list.","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"jonasgwt"},"content":"* `mod add 3 cs2100 cs2103t cs2101 cs2105` adds the modules `CS2100`, `CS2103T`, `CS2101` and `CS2105` to the 3rd batchmate in the currently displayed list.","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"carriezhengjr"},"content":"### Deleting module from a batchmate: `mod delete`","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"carriezhengjr"},"content":"Deletes module(s) from a batchmate.","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"carriezhengjr"},"content":"Format: `mod delete INDEX MODULE [MORE_MODULES]...`","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"carriezhengjr"},"content":"* Deletes module(s) from the batchmate at the specific `INDEX` in the __currently displayed list__. Refer to the section on _Notes about parameters_ at the start of [Features](#features) for more details.","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"carriezhengjr"},"content":"Examples:","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"jonasgwt"},"content":"* `mod delete 1 cs2103t` deletes the module `CS2103T` from the 1st batchmate in the currently displayed list.","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"jonasgwt"},"content":"* `mod delete 3 cs2100 cs2103t cs2101 cs2105` deletes the modules `CS2100`, `CS2103T`, `CS2101` and `CS2105` from the 3rd batchmate in the currently displayed list.","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"carriezhengjr"},"content":"### Marking module as taken: `mod mark`","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"carriezhengjr"},"content":"Marks module(s) of a batchmate as `taken`, which means the batchmate has taken the module(s) before.","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"carriezhengjr"},"content":"Format: `mod mark INDEX MODULE [MORE_MODULES]...`","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"carriezhengjr"},"content":"* Marks module(s) of the batchmate at the specific `INDEX` in the __currently displayed list__. Refer to the section on _Notes about parameters_ at the start of [Features](#features) for more details.","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"carriezhengjr"},"content":"Examples:","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"jonasgwt"},"content":"* `mod mark 1 cs2103t` marks the module `CS2103T` of the 1st batchmate in the currently displayed list as `taken`.","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"jonasgwt"},"content":"* `mod mark 3 cs2100 cs2103t cs2101 cs2105` marks the modules `CS2100`, `CS2103T`, `CS2101` and `CS2105` of the 3rd batchmate in the currently displayed list as `taken`.","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"carriezhengjr"},"content":"### Unmarking module as not taken: `mod unmark`","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"carriezhengjr"},"content":"Unmarks module(s) of a batchmate as not taken, which means the batchmate is currently taking the module(s).","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"carriezhengjr"},"content":"Format: `mod unmark INDEX MODULE [MORE_MODULES]...`","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"carriezhengjr"},"content":"* Unmarks module(s) of the batchmate at the specific `INDEX` in the __currently displayed list__. Refer to the section on _Notes about parameters_ at the start of [Features](#features) for more details.","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"jonasgwt"},"content":"* `mod unmark 1 cs2103t` unmarks the module `CS2103T` of the 1st batchmate in the currently displayed list as `not taken`.","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"jonasgwt"},"content":"* `mod unmark 3 cs2100 cs2103t cs2101 cs2105` unmarks the modules `CS2100`, `CS2103T`, `CS2101` and `CS2105` of the 3rd batchmate in the currently displayed list as `not taken`.","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"carriezhengjr"},"content":"### Find modules: `mod find`","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"carriezhengjr"},"content":"Finds batchmates with modules matching all the specified modules.","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":202,"author":{"gitId":"carriezhengjr"},"content":"Format: `mod find MODULE [MORE_MODULES]...`","lastModifiedDate":"2022-10-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"carriezhengjr"},"content":"* The search is case-insensitive. e.g `cs2100` will match `CS2100`.","lastModifiedDate":"2022-10-12"},{"lineNumber":205,"author":{"gitId":"jonasgwt"},"content":"* Partial words will be matched e.g. `cs21` will match `CS2100` and `CS2101`.","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"carriezhengjr"},"content":"Examples:","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"jonasgwt"},"content":"* `mod find cs21` returns batchmates who have taken `CS2100`, `CS2101` or `CS2103T`.","lastModifiedDate":"2022-10-16"},{"lineNumber":209,"author":{"gitId":"jonasgwt"},"content":"* `mod find cs21 cs2030s` returns batchmates who have taken `CS2100` and `CS2030`, or `CS2103T` and `CS2030`, or `CS2103T` and `CS2030S`.","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"jonasgwt"},"content":"* `mod find cs2101 cs2103t` returns batchmates who have taken `CS2101` and `CS2103T`.","lastModifiedDate":"2022-10-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"carriezhengjr"},"content":"Exits the application.","lastModifiedDate":"2022-09-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"carriezhengjr"},"content":"Data in Mass Linkers is saved in the hard disk automatically after executing any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"jonasgwt"},"content":"### Module Categorisation","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":224,"author":{"gitId":"jonasgwt"},"content":"Modules are automatically categorised upon their creation.","lastModifiedDate":"2022-10-16"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":226,"author":{"gitId":"jonasgwt"},"content":"Below is the categorisation.","lastModifiedDate":"2022-10-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":228,"author":{"gitId":"jonasgwt"},"content":"| Category                  | Module Prefix      | Colour      |","lastModifiedDate":"2022-10-16"},{"lineNumber":229,"author":{"gitId":"jonasgwt"},"content":"|---------------------------|--------------------|-------------|","lastModifiedDate":"2022-10-16"},{"lineNumber":230,"author":{"gitId":"jonasgwt"},"content":"| Computing Modules         | CS, IS, CP         | To be added |","lastModifiedDate":"2022-10-16"},{"lineNumber":231,"author":{"gitId":"jonasgwt"},"content":"| Math Modules              | ST, MA             | To be added |","lastModifiedDate":"2022-10-16"},{"lineNumber":232,"author":{"gitId":"jonasgwt"},"content":"| Science Modules           | LS, CM, PC         | To be added |","lastModifiedDate":"2022-10-16"},{"lineNumber":233,"author":{"gitId":"jonasgwt"},"content":"| General Education Modules | GE, UT             | To be added |","lastModifiedDate":"2022-10-16"},{"lineNumber":234,"author":{"gitId":"jonasgwt"},"content":"| Unrestricted Electives    | All other prefixes | To be added |","lastModifiedDate":"2022-10-16"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":236,"author":{"gitId":"jonasgwt"},"content":"Module prefix refers to the first two characters of every module name.","lastModifiedDate":"2022-10-16"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":238,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"carriezhengjr"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Mass Linkers home folder.","lastModifiedDate":"2022-09-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"carriezhengjr"},"content":"| Action            | Format, Examples                                                                                                                                                                                                  |","lastModifiedDate":"2022-09-26"},{"lineNumber":250,"author":{"gitId":"carriezhengjr"},"content":"|-------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-12"},{"lineNumber":251,"author":{"gitId":"carriezhengjr"},"content":"| **Help**          | `help`                                                                                                                                                                                                            |","lastModifiedDate":"2022-09-26"},{"lineNumber":252,"author":{"gitId":"carriezhengjr"},"content":"| **Add**           | `add n/NAME t/TELEGRAM [g/GITHUB] [p/PHONE] [e/EMAIL] [tag/TAG]... [m/MODULE]...` \u003cbr\u003e Example: `add n/John Doe t/johnxyz g/john_doe p/98765432 e/johnd@example.com tag/friends tag/owesMoney m/cs2103t m/cs2101` |","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"carriezhengjr"},"content":"| **List**          | `list`                                                                                                                                                                                                            |","lastModifiedDate":"2022-09-26"},{"lineNumber":254,"author":{"gitId":"carriezhengjr"},"content":"| **Edit**          | `edit INDEX [n/NAME] [t/TELEGRAM] [g/GITHUB] [p/PHONE] [e/EMAIL] [tag/TAG]...`\u003cbr\u003e Example: `edit 1 g/john_doe p/91234567 e/johndoe@example.com`                                                                  |","lastModifiedDate":"2022-10-12"},{"lineNumber":255,"author":{"gitId":"carriezhengjr"},"content":"| **Find**          | `find KEYWORD [MORE_KEYWORDS]...` \u003cbr\u003e Example: `find Alex david`                                                                                                                                                 |","lastModifiedDate":"2022-10-12"},{"lineNumber":256,"author":{"gitId":"carriezhengjr"},"content":"| **Find by tag**   | `findTag TAG [MORE_TAGS]...` \u003cbr\u003e Example: `findTag friend classmate`                                                                                                                                             |","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"carriezhengjr"},"content":"| **Delete**        | `delete INDEX` \u003cbr\u003e Example: `delete 2`                                                                                                                                                                           |","lastModifiedDate":"2022-09-26"},{"lineNumber":258,"author":{"gitId":"carriezhengjr"},"content":"| **Add module**    | `mod add INDEX MODULE [MORE_MODULES]...` \u003cbr\u003e Example: `mod add 3 cs2100 cs2103t cs2101 cs2105`                                                                                                                   |","lastModifiedDate":"2022-10-12"},{"lineNumber":259,"author":{"gitId":"carriezhengjr"},"content":"| **Delete module** | `mod delete INDEX MODULE [MORE_MODULES]...` \u003cbr\u003e Example: `mod delete 3 cs2100 cs2103t cs2101 cs2105`                                                                                                             |","lastModifiedDate":"2022-10-12"},{"lineNumber":260,"author":{"gitId":"carriezhengjr"},"content":"| **Mark module**   | `mod mark INDEX MODULE [MORE_MODULES]...` \u003cbr\u003e Example: `mod mark 3 cs2100 cs2103t cs2101 cs2105`                                                                                                                 |","lastModifiedDate":"2022-10-12"},{"lineNumber":261,"author":{"gitId":"carriezhengjr"},"content":"| **Unmark module** | `mod unmark INDEX MODULE [MORE_MODULES]...` \u003cbr\u003e Example: `mod unmark 3 cs2100 cs2103t cs2101 cs2105`                                                                                                             |","lastModifiedDate":"2022-10-12"},{"lineNumber":262,"author":{"gitId":"carriezhengjr"},"content":"| **Find module**   | `mod find MODULE [MORE_MODULES]...` \u003cbr\u003e Example: `mod find cs2101 cs2103t`                                                                                                                                       |","lastModifiedDate":"2022-10-12"},{"lineNumber":263,"author":{"gitId":"carriezhengjr"},"content":"| **Exit**          | `exit`                                                                                                                                                                                                            |","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"jonasgwt":23,"carriezhengjr":131,"-":109}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ElijahS67"},"content":"    content: \"Mass Linkers\";","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ElijahS67":1,"-":294}},{"path":"docs/diagrams/ModMarkActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"@startuml","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"start","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":":Student enters mod mark command;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":":Mass Linkers reads and parses command;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":":Mass Linkers searches for the","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"batchmate at specified index;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"if () then ([1 mod to mark])","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"    :Mass Linkers searches for the mod","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"    in the list of mods of batchmate;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"    :Mass Linkers marks","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"    the mod as taken;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"else ([multiple mods to mark])","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"    :Mass Linkers searches for all specified","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"    mods in the list of mods of batchmate;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"    :Mass Linkers marks all","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"    specified mods as taken;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"endif","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":":Updated mod status is saved","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"and stored in Mass Linkers;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"stop","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"@enduml","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"carriezhengjr":24}},{"path":"docs/diagrams/ModMarkClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"@startuml","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"hide circle","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"hide members","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"show ModCommandParser methods","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"show ModMarkCommand methods","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"show Person methods","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"show Mod methods","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"Class \"{abstract}\\nModCommand\" as ModCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"Class ModCommandParser {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"  -parseMarkCommand(args: String): ModMarkCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"Class ModMarkCommand {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"  +execute(model: Model): CommandResult","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"Class Person {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":" +markMods(mods: ObservableList\u003cMod\u003e)","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"Class Mod {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":" +markMod()","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"Parser \u003c|.. ModCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"ModCommand \u003c|-- ModMarkCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"ModCommandParser -right-\u003e ModMarkCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"ModMarkCommand --\u003e Person","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"Person -left-\u003e Mod","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"ModCommandParser ..\u003e Mod","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"ModMarkCommand ..\u003e Mod","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"@enduml","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"carriezhengjr":34}},{"path":"docs/diagrams/ModMarkWithLoopActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"@startuml","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"start","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":":Student enters mod mark command;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":":Mass Linkers reads and parses command;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":":Mass Linkers searches for the","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"batchmate at specified index;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"repeat","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"  :Mass Linkers searches for a specified mod","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"  in the list of mods of batchmate;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"  :Mass Linkers marks the","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"  specified mod as taken;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"repeat while (more mods?) is (yes)","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"-\u003eno;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":":Updated mod status is saved","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"and stored in Mass Linkers;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"stop","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"@enduml","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"carriezhengjr":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T11-4/tp/branch/master/graph/badge.svg?token\u003dSQHP14Y75Q)](https://codecov.io/gh/AY2223S1-CS2103T-T11-4/tp)","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jonasgwt":1,"-":18}},{"path":"docs/team/carriezhengjr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"title: Zheng Jiarui\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"### Project: Mass Linkers","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"Mass Linkers is a Desktop application tool for CS2103T students in a tutorial group. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about [to be added soon] kLoC.","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"* **New Feature**: [To be added soon]","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"  * What it does: [To be added soon]","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"  * Justification: [To be added soon]","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"  * Highlights: [To be added soon]","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"* **New Feature**: [To be added soon]","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dcarriezhengjr\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"* **Project management**:","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"  * [To be added soon]","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"  * [To be added soon]","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"  * User Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"* **Community**:","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"  * [To be added soon]","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"* **Tools**:","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"  * [To be added soon]","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"* _{placeholder contributions are added above}_","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"carriezhengjr":40}},{"path":"docs/team/chm252.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chm252"},"content":"                         ---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"chm252"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"chm252"},"content":"title: Chin Hong Ming\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"chm252"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"chm252"},"content":"### Project: Mass Linkers","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"Mass Linkers is a Desktop application tool for CS2103T students in a tutorial group. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about [to be added soon] kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"* **New Feature**: [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"chm252"},"content":"    * What it does: [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"    * Justification: [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"chm252"},"content":"    * Highlights: [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"* **New Feature**: [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dchm252\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"        * [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"        * [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"* _{placeholder contributions are added above}_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"chm252":40}},{"path":"docs/team/elijahs67.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"title: Elijah Seah\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"### Project: Mass Linkers","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"Mass Linkers is a Desktop application tool for CS2103T students in a tutorial group. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about [to be added soon] kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"* **New Feature**: [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"    * What it does: [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"    * Justification: [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"    * Highlights: [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"* **New Feature**: [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003delijahs67\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"        * [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"        * [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"* _{placeholder contributions are added above}_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"ElijahS67":40}},{"path":"docs/team/jonasgwt.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"title: Jonas Goh\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"### Project: Mass Linkers","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"Mass Linkers is a Desktop application tool for CS2103T students in a tutorial group. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about [to be added soon] kLoC.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"* **New Feature**: [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"    * What it does: [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"    * Justification: [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"    * Highlights: [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"* **New Feature**: [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djonasgwt\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"    * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"        * [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"        * [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"* _{placeholder contributions are added above}_","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"jonasgwt":40}},{"path":"docs/team/sltsheryl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"title: Sheryl-Lynn Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"### Project: Mass Linkers","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"Mass Linkers is a Desktop application tool for CS2103T students in a tutorial group. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about [to be added soon] kLoC.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"* **New Feature**: [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"    * What it does: [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"    * Justification: [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"    * Highlights: [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"* **New Feature**: [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dsltsheryl\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"        * [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"        * [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"    * [To be added soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"* _{placeholder contributions are added above}_","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"sltsheryl":40}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"     *   Ignores case, a full word match is not necessary.","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"chm252"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"     *       containsPartialWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"chm252"},"content":"     *       containsPartialWordIgnoreCase(\"ABc def\", \"DE\") \u003d\u003d true","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"     *       containsPartialWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"chm252"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"chm252"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"chm252"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"    public static boolean containsPartialWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"        requireNonNull(word);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"        if (preppedSentence.length() \u003c preppedWord.length()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"        for (int i \u003d 0; i \u003c preppedSentence.length() - preppedWord.length() + 1; i++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"            if (preppedWord.equalsIgnoreCase(preppedSentence.substring(i, i + preppedWord.length()))) {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"                return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"        } return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chm252":32,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sltsheryl":1,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"            + \"\\nParameters: \"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"            + PREFIX_TELEGRAM + \"TELEGRAM \"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"            + \"[\" + PREFIX_GITHUB + \"GITHUB] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"            + PREFIX_TELEGRAM + \"johnxyz \"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"            + PREFIX_GITHUB + \"john_doe \"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":7,"carriezhengjr":2,"-":61}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"    /** Reset mod panel. */","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"    private final boolean resetModPanel;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean resetModPanel) {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"        this.resetModPanel \u003d resetModPanel;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"    public boolean isResetModPanel() {","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"        return resetModPanel;","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":10,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete), false, false, true);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":1,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"    public static final String MODS_PASSED_TO_EDIT \u003d \"Use [mod] commands to edit mods.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"            + \"[\" + PREFIX_GITHUB + \"GITHUB] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"            + PREFIX_GITHUB + \"john_doe \"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson), false, false, true);","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"sltsheryl"},"content":"        Telegram updatedTelegram \u003d editPersonDescriptor.getTelegram().orElse(personToEdit.getTelegram());","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"sltsheryl"},"content":"        GitHub updatedGitHub \u003d editPersonDescriptor.getGitHub().orElse(personToEdit.getGitHub());","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e mods \u003d personToEdit.getMods();","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"jonasgwt"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedTelegram, updatedGitHub, updatedTags, mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"sltsheryl"},"content":"        private Telegram handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"sltsheryl"},"content":"        private GitHub username;","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"sltsheryl"},"content":"        private ObservableList\u003cMod\u003e mods;","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"sltsheryl"},"content":"            setTelegram(toCopy.handle);","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"sltsheryl"},"content":"            setGitHub(toCopy.username);","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"jonasgwt"},"content":"         * Returns true if at least one field is edited except the mods field.","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"jonasgwt"},"content":"         * Editing mods should be done on a separate command.","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"sltsheryl"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, handle, username, tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"sltsheryl"},"content":"        public void setTelegram(Telegram handle) {","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"sltsheryl"},"content":"            this.handle \u003d handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"sltsheryl"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2022-10-09"},{"lineNumber":197,"author":{"gitId":"sltsheryl"},"content":"            return Optional.ofNullable(handle);","lastModifiedDate":"2022-10-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"sltsheryl"},"content":"        public void setGitHub(GitHub username) {","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"sltsheryl"},"content":"            this.username \u003d username;","lastModifiedDate":"2022-10-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":204,"author":{"gitId":"sltsheryl"},"content":"        public Optional\u003cGitHub\u003e getGitHub() {","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"sltsheryl"},"content":"            return Optional.ofNullable(username);","lastModifiedDate":"2022-10-09"},{"lineNumber":206,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"jonasgwt"},"content":"        /**","lastModifiedDate":"2022-10-12"},{"lineNumber":225,"author":{"gitId":"jonasgwt"},"content":"         * Returns an unmodifiable mod set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"jonasgwt"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"jonasgwt"},"content":"         * Returns {@code Optional#empty()} if {@code mods} is null.","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"jonasgwt"},"content":"         */","lastModifiedDate":"2022-10-12"},{"lineNumber":229,"author":{"gitId":"sltsheryl"},"content":"        public Optional\u003cObservableList\u003cMod\u003e\u003e getMods() {","lastModifiedDate":"2022-10-13"},{"lineNumber":230,"author":{"gitId":"sltsheryl"},"content":"            return (mods !\u003d null) ? Optional.of(FXCollections.unmodifiableObservableList(mods)) : Optional.empty();","lastModifiedDate":"2022-10-13"},{"lineNumber":231,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"sltsheryl"},"content":"                    \u0026\u0026 getTelegram().equals(e.getTelegram())","lastModifiedDate":"2022-10-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"sltsheryl":30,"jonasgwt":11,"carriezhengjr":1,"-":213}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Mass Linkers as requested ...\";","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, true);","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"sltsheryl":1,"carriezhengjr":1,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"                model.getFilteredPersonList().size()), false, false, true);","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ElijahS67":1,"sltsheryl":2,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/FindTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.person.PersonContainsTagPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":" * Lists batchmates that match all tags specified by the user.","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"public class FindTagCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"    public static final String COMMAND_WORD \u003d \"findTag\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists batchmates that match all tags specified\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"            + \"Example: \" + COMMAND_WORD + \" team1\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"    private final PersonContainsTagPredicate predicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"    public FindTagCommand(PersonContainsTagPredicate predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"            String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"                model.getFilteredPersonList().size()), false, false, true);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"                || (other instanceof FindTagCommand // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"                \u0026\u0026 predicate.equals(((FindTagCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"ElijahS67":38,"sltsheryl":2}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, true);","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/ModAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":" * Appends new mods to the batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"public class ModAddCommand extends ModCommand {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully added the specified mods.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"    private final ObservableList\u003cMod\u003e mods;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"     * Constructs a command that adds a set of mods to the batchmate","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"     * with the target index.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"     * @param index The index of the batchmate to add to.","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"     * @param mods The set of mods to add to.","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"    public ModAddCommand(Index index, ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"        this.mods \u003d mods;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"        personToEdit.addMods(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToEdit), false, false, false);","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"        if (!(other instanceof ModAddCommand)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"        ModAddCommand e \u003d (ModAddCommand) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"                \u0026\u0026 mods.equals(e.mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ElijahS67":1,"sltsheryl":6,"jonasgwt":68,"carriezhengjr":3}},{"path":"src/main/java/seedu/address/logic/commands/ModCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":" * Represents a command that modifies the mod attribute of the","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":" * batchmate identified.","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"public abstract class ModCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"    public static final String COMMAND_WORD \u003d \"mod\";","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"    // TODO: Add the other mod commands","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Modifies the modules related to a batchmate. \"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"            + \"\\nParameters: INDEX (must be a positive integer) MODULE [MORE_MODULES]...\"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"            + \"\\nExamples:\"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"            + \"\\nmod add INDEX MODULE [MORE_MODULES]... : Adds the entered mods to the batchmate at the index.\"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"            + \"\\nmod delete INDEX MODULE [MORE_MODULES]... : Deletes the entered mods from the batchmate at the index.\"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"            + \"\\nmod mark INDEX MODULE [MORE_MODULES]... : Marks the entered mods of the batchmate \"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"            + \"at the index as taken.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_MODS_EMPTY \u003d \"Mods cannot be empty!\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_INDEX_EMPTY \u003d \"Index cannot be empty!\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ElijahS67":1,"jonasgwt":13,"carriezhengjr":6}},{"path":"src/main/java/seedu/address/logic/commands/ModDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":" * Deletes mods from the batchmate specified.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"public class ModDeleteCommand extends ModCommand {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully deleted the specified mods.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_INVALID_MOD \u003d \"This batchmate is not taking all of the modules specified.\"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"            + \"\\nPlease check the list of mods and try again.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"    private final ObservableList\u003cMod\u003e mods;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"     * Constructs a command that deletes all mods specified from the list of the batchmate at the target index.","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"     * @param index The index of the batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"     * @param mods The set of mods to be deleted.","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"    public ModDeleteCommand(Index index, ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"        this.mods \u003d mods;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"ElijahS67"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ElijahS67"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ElijahS67"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ElijahS67"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ElijahS67"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"        if (personToEdit.canEditMods(mods)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"ElijahS67"},"content":"            personToEdit.deleteMods(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ElijahS67"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ElijahS67"},"content":"            throw new CommandException(MESSAGE_INVALID_MOD);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToEdit), false, false, false);","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"ElijahS67"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"ElijahS67"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ElijahS67"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"ElijahS67"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ElijahS67"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"ElijahS67"},"content":"        if (!(other instanceof ModDeleteCommand)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ElijahS67"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"ElijahS67"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ElijahS67"},"content":"        ModDeleteCommand e \u003d (ModDeleteCommand) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ElijahS67"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ElijahS67"},"content":"                \u0026\u0026 mods.equals(e.mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ElijahS67":77,"sltsheryl":1,"carriezhengjr":7}},{"path":"src/main/java/seedu/address/logic/commands/ModMarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":" * Marks mods of the batchmate specified as taken.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"public class ModMarkCommand extends ModCommand {","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully marked the specified mods.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_INVALID_MOD \u003d \"This batchmate is not taking all of the modules specified.\"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"            + \"\\nPlease check the list of mods and try again.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"    private final ObservableList\u003cMod\u003e mods;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"     * Constructs a command that marks all mods specified at the target batchmate as taken.","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"     * @param index The index of the batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"     * @param mods The set of mods to be marked.","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"    public ModMarkCommand(Index index, ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"        this.mods \u003d mods;","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"        if (personToEdit.canEditMods(mods)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"            personToEdit.markMods(mods);","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"            throw new CommandException(MESSAGE_INVALID_MOD);","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToEdit), false, false, false);","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"        if (!(other instanceof ModMarkCommand)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"        // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand e \u003d (ModMarkCommand) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"                \u0026\u0026 mods.equals(e.mods);","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"sltsheryl":1,"carriezhengjr":85}},{"path":"src/main/java/seedu/address/logic/commands/ModUnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":" * Unmarks mods of the batchmate specified as not taken.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"public class ModUnmarkCommand extends ModCommand {","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully unmarked the specified mods.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_INVALID_MOD \u003d \"This batchmate is not taking all of the modules specified.\"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"            + \"\\nPlease check the list of mods and try again.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"    private final ObservableList\u003cMod\u003e mods;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"     * Constructs a command that unmarks all mods specified at the target batchmate as not taken.","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"     * @param index The index of the batchmate.","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"     * @param mods The set of mods to be unmarked.","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"    public ModUnmarkCommand(Index index, ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"        this.mods \u003d mods;","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"        if (personToEdit.canEditMods(mods)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"            personToEdit.unmarkMods(mods);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"            throw new CommandException(MESSAGE_INVALID_MOD);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"                String.format(MESSAGE_SUCCESS, personToEdit),","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"                false,","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"                false,","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"                false);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"        if (!(other instanceof ModUnmarkCommand)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"        // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand e \u003d (ModUnmarkCommand) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"                \u0026\u0026 mods.equals(e.mods);","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"carriezhengjr":89}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM, PREFIX_GITHUB, PREFIX_TAG, PREFIX_MOD);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_TELEGRAM) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"        Telegram handle \u003d ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"        GitHub gitHub \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"        Phone phone \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"        Email email \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e modList \u003d ParserUtil.parseMods(argMultimap.getAllValues(PREFIX_MOD));","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"            gitHub \u003d ParserUtil.parseGitHub(argMultimap.getValue(PREFIX_GITHUB).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"        Person person \u003d new Person(name, phone, email, handle, gitHub, tagList, modList);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"sltsheryl":14,"jonasgwt":7,"carriezhengjr":4,"-":50}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.logic.commands.FindTagCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.logic.commands.ModCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"ElijahS67"},"content":"        case FindTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"ElijahS67"},"content":"            return new FindTagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"        case ModCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"            return new ModCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ElijahS67":4,"jonasgwt":5,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"    public static final Prefix PREFIX_GITHUB \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tag/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"    public static final Prefix PREFIX_MOD \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"sltsheryl":3,"jonasgwt":1,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"                PREFIX_TELEGRAM, PREFIX_GITHUB, PREFIX_TAG, PREFIX_MOD);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"        if (!argMultimap.getAllValues(PREFIX_MOD).isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MODS_PASSED_TO_EDIT));","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"            editPersonDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"            editPersonDescriptor.setGitHub(ParserUtil.parseGitHub(argMultimap.getValue(PREFIX_GITHUB).get()));","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"sltsheryl":6,"jonasgwt":7,"-":79}},{"path":"src/main/java/seedu/address/logic/parser/FindTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.logic.commands.FindTagCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.person.PersonContainsTagPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":" * Parses input arguments and creates a new FindTagCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"public class FindTagCommandParser implements Parser\u003cFindTagCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTagCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"     * and returns a FindTagCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"    public FindTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"        String[] tagNameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"        return new FindTagCommand(new PersonContainsTagPredicate(Arrays.asList(tagNameKeywords)));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"ElijahS67":33}},{"path":"src/main/java/seedu/address/logic/parser/ModCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.logic.commands.ModAddCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.logic.commands.ModCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.logic.commands.ModDeleteCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.logic.commands.ModMarkCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.logic.commands.ModUnmarkCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":" * Parses input arguments and creates a new ModCommand object.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"public class ModCommandParser implements Parser\u003cModCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"    private static final Pattern INDEX_FORMAT \u003d Pattern.compile(\"-?\\\\d+\");","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"     * Parses the given {@code userInput} of arguments in the context of the ModCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"     * and returns a ModCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"    public ModCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(trimmedArgs);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"        // check if empty and matches format","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"        if (trimmedArgs.isEmpty() || !matcher.matches()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"        // parse","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"        // TODO: Add cases for other mod commands","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"        case ModAddCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"            return parseAddCommand(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"ElijahS67"},"content":"        case ModDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ElijahS67"},"content":"            return parseDeleteCommand(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"        case ModMarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"            return parseMarkCommand(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"        case ModUnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"            return parseUnmarkCommand(arguments);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"        default:","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"     * Parses a mod add command from user to construct a ModAddCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"     * @param args Arguments from user input.","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"     * @return A ModAddCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"     * @throws ParseException If there is a parse error.","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"    private ModAddCommand parseAddCommand(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"        Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"        String indexFromCommand \u003d getIndexFromCommand(trimmedArgs);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"        Set\u003cString\u003e modsFromCommand \u003d getModsFromCommand(trimmedArgs);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"sltsheryl"},"content":"        Optional\u003cObservableList\u003cMod\u003e\u003e mods \u003d parseMods(modsFromCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"        if (mods.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"            index \u003d ParserUtil.parseIndex(indexFromCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModAddCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"        return new ModAddCommand(index, mods.get());","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"carriezhengjr"},"content":"     * Parses a mod delete command from user to construct a ModDeleteCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"carriezhengjr"},"content":"     * @param args Arguments from user input.","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"carriezhengjr"},"content":"     * @return A ModDeleteCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"carriezhengjr"},"content":"     * @throws ParseException If there is a parse error.","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"ElijahS67"},"content":"    private ModDeleteCommand parseDeleteCommand(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"ElijahS67"},"content":"        Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"ElijahS67"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"ElijahS67"},"content":"        String indexFromCommand \u003d getIndexFromCommand(trimmedArgs);","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"ElijahS67"},"content":"        Set\u003cString\u003e modsFromCommand \u003d getModsFromCommand(trimmedArgs);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"ElijahS67"},"content":"        Optional\u003cObservableList\u003cMod\u003e\u003e mods \u003d parseMods(modsFromCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"ElijahS67"},"content":"        if (mods.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"ElijahS67"},"content":"            throw new ParseException(ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"ElijahS67"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"ElijahS67"},"content":"            index \u003d ParserUtil.parseIndex(indexFromCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"ElijahS67"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"carriezhengjr"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"ElijahS67"},"content":"        return new ModDeleteCommand(index, mods.get());","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"carriezhengjr"},"content":"     * Parses a mod mark command from user to construct a ModMarkCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"carriezhengjr"},"content":"     * @param args Arguments from user input.","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"carriezhengjr"},"content":"     * @return A ModMarkCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"carriezhengjr"},"content":"     * @throws ParseException If there is a parse error.","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"carriezhengjr"},"content":"    private ModMarkCommand parseMarkCommand(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"carriezhengjr"},"content":"        Index index;","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"carriezhengjr"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"carriezhengjr"},"content":"        String indexFromCommand \u003d getIndexFromCommand(trimmedArgs);","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"carriezhengjr"},"content":"        Set\u003cString\u003e modsFromCommand \u003d getModsFromCommand(trimmedArgs);","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"carriezhengjr"},"content":"        Optional\u003cObservableList\u003cMod\u003e\u003e mods \u003d parseMods(modsFromCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"carriezhengjr"},"content":"        if (mods.isEmpty()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"carriezhengjr"},"content":"            throw new ParseException(ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"carriezhengjr"},"content":"            index \u003d ParserUtil.parseIndex(indexFromCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"carriezhengjr"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"carriezhengjr"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModMarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"carriezhengjr"},"content":"        return new ModMarkCommand(index, mods.get());","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"carriezhengjr"},"content":"     * Parses a mod unmark command from user to construct a ModUnmarkCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"carriezhengjr"},"content":"     * @param args Arguments from user input.","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"carriezhengjr"},"content":"     * @return A ModUnmarkCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"carriezhengjr"},"content":"     * @throws ParseException If there is a parse error.","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"    private ModUnmarkCommand parseUnmarkCommand(String args) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"carriezhengjr"},"content":"        Index index;","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"carriezhengjr"},"content":"        String indexFromCommand \u003d getIndexFromCommand(trimmedArgs);","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"carriezhengjr"},"content":"        Set\u003cString\u003e modsFromCommand \u003d getModsFromCommand(trimmedArgs);","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"carriezhengjr"},"content":"        Optional\u003cObservableList\u003cMod\u003e\u003e mods \u003d parseMods(modsFromCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"carriezhengjr"},"content":"        if (mods.isEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"carriezhengjr"},"content":"            throw new ParseException(ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"carriezhengjr"},"content":"            index \u003d ParserUtil.parseIndex(indexFromCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"carriezhengjr"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"carriezhengjr"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModMarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"carriezhengjr"},"content":"        return new ModUnmarkCommand(index, mods.get());","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"jonasgwt"},"content":"     * Converts a collection of strings representing mod names to a set of mods.","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"jonasgwt"},"content":"     * @param mods A collection of mods in string.","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"jonasgwt"},"content":"     * @return A set of mods.","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"jonasgwt"},"content":"     * @throws ParseException When mod names are of incorrect format.","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"sltsheryl"},"content":"    private Optional\u003cObservableList\u003cMod\u003e\u003e parseMods(Collection\u003cString\u003e mods) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"jonasgwt"},"content":"        assert mods !\u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"jonasgwt"},"content":"        if (mods.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"jonasgwt"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"jonasgwt"},"content":"        Collection\u003cString\u003e modSet \u003d mods.size() \u003d\u003d 1 \u0026\u0026 mods.contains(\"\") ? Collections.emptySet() : mods;","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"jonasgwt"},"content":"        return Optional.of(ParserUtil.parseMods(modSet));","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"jonasgwt"},"content":"     * Extracts out the index of the person specified in the user command.","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"jonasgwt"},"content":"     * @param args The user command.","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"jonasgwt"},"content":"     * @return The index of the person in String.","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"jonasgwt"},"content":"    private String getIndexFromCommand(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"jonasgwt"},"content":"        String[] splittedArgs \u003d args.split(\" \");","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"jonasgwt"},"content":"        String index \u003d splittedArgs[0];","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"jonasgwt"},"content":"        final Matcher matcher \u003d INDEX_FORMAT.matcher(index.trim());","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"jonasgwt"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(ModCommand.MESSAGE_INDEX_EMPTY);","lastModifiedDate":"2022-10-12"},{"lineNumber":202,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":203,"author":{"gitId":"jonasgwt"},"content":"        return index;","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":205,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"jonasgwt"},"content":"     * Extracts out the mods specified in the user command.","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":209,"author":{"gitId":"jonasgwt"},"content":"     * @param args The user command.","lastModifiedDate":"2022-10-12"},{"lineNumber":210,"author":{"gitId":"jonasgwt"},"content":"     * @return A set of mods of type String.","lastModifiedDate":"2022-10-12"},{"lineNumber":211,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"jonasgwt"},"content":"    private Set\u003cString\u003e getModsFromCommand(String args) {","lastModifiedDate":"2022-10-12"},{"lineNumber":213,"author":{"gitId":"jonasgwt"},"content":"        String[] splittedArgs \u003d args.split(\" \");","lastModifiedDate":"2022-10-12"},{"lineNumber":214,"author":{"gitId":"jonasgwt"},"content":"        List\u003cString\u003e extractedMods \u003d Arrays.asList(splittedArgs).subList(1, splittedArgs.length);","lastModifiedDate":"2022-10-12"},{"lineNumber":215,"author":{"gitId":"jonasgwt"},"content":"        extractedMods \u003d extractedMods.stream().map(String::toUpperCase).collect(Collectors.toList());","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"jonasgwt"},"content":"        return new HashSet\u003c\u003e(extractedMods);","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ElijahS67":20,"sltsheryl":3,"jonasgwt":124,"carriezhengjr":71}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"     * Parses a {@code String handle} into an {@code Telegram}.","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"sltsheryl"},"content":"     * @throws ParseException if the given {@code handle} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"    public static Telegram parseTelegram(String handle) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(handle);","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"sltsheryl"},"content":"        String trimmedHandle \u003d handle.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"        if (!Telegram.isValidTelegram(trimmedHandle)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"sltsheryl"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"sltsheryl"},"content":"        return new Telegram(trimmedHandle);","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"sltsheryl"},"content":"     * Parses a {@code String username} into a {@code GitHub}.","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"sltsheryl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"sltsheryl"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"sltsheryl"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"sltsheryl"},"content":"    public static GitHub parseGitHub(String username) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"sltsheryl"},"content":"        String trimmedUsername \u003d username.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"sltsheryl"},"content":"        if (!GitHub.isValidGitHub(trimmedUsername)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"sltsheryl"},"content":"            throw new ParseException(GitHub.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"sltsheryl"},"content":"        return new GitHub(trimmedUsername);","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"jonasgwt"},"content":"     * Parses a {@code String mod} into a {@code Mod}.","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"jonasgwt"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"jonasgwt"},"content":"     * @throws ParseException if the given {@code mod} is invalid.","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"jonasgwt"},"content":"    public static Mod parseMod(String mod) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"jonasgwt"},"content":"        String trimmedMod \u003d mod.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"jonasgwt"},"content":"        if (!Mod.isValidModName(trimmedMod)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"jonasgwt"},"content":"        return new Mod(trimmedMod);","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"jonasgwt"},"content":"     * Parses {@code Collection\u003cString\u003e mods} into a {@code Set\u003cMod\u003e}.","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"sltsheryl"},"content":"    public static ObservableList\u003cMod\u003e parseMods(Collection\u003cString\u003e mods) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"sltsheryl"},"content":"        List\u003cString\u003e deDupStringList \u003d new ArrayList\u003c\u003e(new HashSet\u003c\u003e(mods));","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"sltsheryl"},"content":"        final ObservableList\u003cMod\u003e modSet \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"sltsheryl"},"content":"        for (String modName : deDupStringList) {","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"jonasgwt"},"content":"            modSet.add(parseMod(modName));","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"jonasgwt"},"content":"        return modSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"sltsheryl":30,"jonasgwt":23,"-":113}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"sltsheryl"},"content":"        return persons.asUnmodifiableObservableList().size()","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"sltsheryl"},"content":"                + \" persons\";","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":107,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"sltsheryl"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"sltsheryl"},"content":"        return persons.hashCode();","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":16,"-":103}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sltsheryl":1,"-":86}},{"path":"src/main/java/seedu/address/model/person/GitHub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":" * Represents a Person\u0027s GitHub in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGitHub(String)}","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"public class GitHub {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"    public final String username;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"    public GitHub(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"        checkArgument(isValidGitHub(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"        username \u003d name;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"    public static boolean isValidGitHub(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"        return username;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"                || (other instanceof GitHub // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 username.equals(((GitHub) other).username)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"        return username.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"sltsheryl":59}},{"path":"src/main/java/seedu/address/model/person/Mod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":" * Represents a mod in Mass Linkers.","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidModName(String)}","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"public class Mod {","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Mod names should be numbers prefixed with letters.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"    /** Categories for mods */","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"    public enum ModCategory { COMP, MATH, SCI, COMMS, GE, UE };","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Z]+\\\\d+[A-Z]?\";","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"    private final String modName;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"    private boolean hasTaken;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"    private final ModCategory modCategory;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"     * Constructs a {@code Mod}.","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"     * @param modName A valid mod name.","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"    public Mod(String modName) {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(modName);","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"        checkArgument(isValidModName(modName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"        this.modName \u003d modName.toUpperCase();","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"        this.hasTaken \u003d false;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"        this.modCategory \u003d getModCategory(modName);","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"     * Constructs a {@code Mod} with name and hasTaken status.","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"     * @param modName A valid mod name.","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"     * @param hasTaken The mod status, i.e. whether it has been taken.","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"    public Mod(String modName, boolean hasTaken) {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(modName);","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"        checkArgument(isValidModName(modName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"        this.modName \u003d modName.toUpperCase();","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"        this.hasTaken \u003d hasTaken;","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"        this.modCategory \u003d getModCategory(modName);","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"     * Returns true if a given string is a valid mod name.","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"    public static boolean isValidModName(String test) {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"     * Returns true if both mods have the same name.","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"     * This defines a weaker notion of equality between two mods.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"    public boolean isSameMod(Mod otherMod) {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"        if (otherMod \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"        return otherMod !\u003d null","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 otherMod.modName.equals((this.modName));","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"     * Marks a module as taken.","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"    public void markMod() {","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"        this.hasTaken \u003d true;","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"     * Unmarks a module as not taken.","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"    public void unmarkMod() {","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"        this.hasTaken \u003d false;","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"     * Gets the module name.","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"     * @return String representation of module name.","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"    public String getModName() {","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"        return this.modName;","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"carriezhengjr"},"content":"     * Gets the status of the module.","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"carriezhengjr"},"content":"     * @return True if the batchmate has taken the mod; false otherwise.","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"carriezhengjr"},"content":"    public boolean getModStatus() {","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"carriezhengjr"},"content":"        return this.hasTaken;","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"     * Gets the mod category.","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"     * @return The mod category.","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"    public ModCategory getModCategory() {","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"jonasgwt"},"content":"        return this.modCategory;","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"     * Gets mod category from the given mod name.","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"jonasgwt"},"content":"     * @param modName The mod name.","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"jonasgwt"},"content":"     * @return The mod category.","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"jonasgwt"},"content":"    private ModCategory getModCategory(String modName) {","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"jonasgwt"},"content":"        assert modName !\u003d null;","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"jonasgwt"},"content":"        String modPrefix \u003d modName.split(\"[0-9]\")[0].substring(0, 2);","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"jonasgwt"},"content":"        switch (modPrefix) {","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"jonasgwt"},"content":"        case \"CS\":","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"jonasgwt"},"content":"        case \"IS\":","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"jonasgwt"},"content":"        case \"CP\":","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"jonasgwt"},"content":"            return ModCategory.COMP;","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"jonasgwt"},"content":"        case \"MA\":","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"jonasgwt"},"content":"        case \"ST\":","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"jonasgwt"},"content":"            return ModCategory.MATH;","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"jonasgwt"},"content":"        case \"LS\":","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"jonasgwt"},"content":"        case \"CM\":","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"jonasgwt"},"content":"        case \"PC\":","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"jonasgwt"},"content":"            return ModCategory.SCI;","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"jonasgwt"},"content":"        case \"ES\":","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"jonasgwt"},"content":"            return ModCategory.COMMS;","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"jonasgwt"},"content":"        case \"GE\":","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"jonasgwt"},"content":"        case \"UT\":","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"jonasgwt"},"content":"            return ModCategory.GE;","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"jonasgwt"},"content":"        default:","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"jonasgwt"},"content":"            return ModCategory.UE;","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"jonasgwt"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"jonasgwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"jonasgwt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"jonasgwt"},"content":"                || (other instanceof Mod // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"jonasgwt"},"content":"                \u0026\u0026 modName.equals(((Mod) other).modName)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"jonasgwt"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"jonasgwt"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"jonasgwt"},"content":"        return modName.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"jonasgwt"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"jonasgwt"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"        return \u0027[\u0027 + modName + \": \" + hasTaken + \u0027]\u0027;","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"sltsheryl":12,"jonasgwt":95,"carriezhengjr":50}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"        boolean isPerson \u003d false;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"        if (person.getPhone() !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"            isPerson \u003d isPerson || keywords.stream().anyMatch(","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"                    keyword -\u003e StringUtil.containsPartialWordIgnoreCase(person.getPhone().toString(), keyword));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"        if (person.getEmail() !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"            isPerson \u003d isPerson || keywords.stream().anyMatch(","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"                    keyword -\u003e StringUtil.containsPartialWordIgnoreCase(person.getEmail().toString(), keyword));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"        if (person.getGitHub() !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"            isPerson \u003d isPerson || keywords.stream().anyMatch(","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"                    keyword -\u003e StringUtil.containsPartialWordIgnoreCase(person.getGitHub().username, keyword));","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"        return isPerson","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"                || keywords.stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword))","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"                || keywords.stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsPartialWordIgnoreCase(person.getTelegram().toString(), keyword)","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"                );","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chm252":24,"-":29}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"    private final GitHub gitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"    private final Telegram handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"    private final ObservableList\u003cMod\u003e mods \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"            FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"    public Person(Name name, Phone phone, Email email, Telegram handle,","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"          GitHub gitHub, Set\u003cTag\u003e tags, ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        requireAllNonNull(name, handle);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"        this.handle \u003d handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"        this.gitHub \u003d gitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"        this.mods.addAll(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"    public Telegram getTelegram() {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"        return handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"    public GitHub getGitHub() {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"        return gitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"     * Returns an immutable mods set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"sltsheryl"},"content":"    public ObservableList\u003cMod\u003e getMods() {","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"sltsheryl"},"content":"        return FXCollections.unmodifiableObservableList(mods);","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"     * Appends a set of mods to the current mods linked to this batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"     * @param mods The set of mods to add in.","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"sltsheryl"},"content":"    public void addMods(ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"ElijahS67"},"content":"        Set\u003cMod\u003e uniqueModsSet \u003d mods","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"ElijahS67"},"content":"                .stream()","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"ElijahS67"},"content":"                .filter(mod -\u003e !this.mods.contains(mod))","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"ElijahS67"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"ElijahS67"},"content":"        this.mods.addAll(uniqueModsSet);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"carriezhengjr"},"content":"     * Checks if the all mods provided can be found and edited in the set of mods linked to this batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"carriezhengjr"},"content":"     * @param mods The set of mods to be edited.","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"carriezhengjr"},"content":"    public boolean canEditMods(ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"ElijahS67"},"content":"        return this.mods.containsAll(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"carriezhengjr"},"content":"     * Removes all mods in {@code mods} from the current set of mods linked to this batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"ElijahS67"},"content":"     * @param mods The set of mods to be deleted.","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"ElijahS67"},"content":"    public void deleteMods(ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"ElijahS67"},"content":"        this.mods.removeAll(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"carriezhengjr"},"content":"     * Marks all mods in {@code mods} in the current set of mods linked to this batchmate as taken.","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"carriezhengjr"},"content":"     * @param mods The set of mods to be marked.","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"carriezhengjr"},"content":"    public void markMods(ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"carriezhengjr"},"content":"        for (int i \u003d 0; i \u003c mods.size(); i++) {","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"            for (int j \u003d 0; j \u003c this.mods.size(); j++) {","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"carriezhengjr"},"content":"                Mod currentMod \u003d this.mods.get(j);","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"jonasgwt"},"content":"                String currentModName \u003d currentMod.getModName();","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"jonasgwt"},"content":"                String targetModName \u003d mods.get(i).getModName();","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"carriezhengjr"},"content":"                if (currentModName.equals(targetModName)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"carriezhengjr"},"content":"                    currentMod.markMod();","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"carriezhengjr"},"content":"                    break;","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"carriezhengjr"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"     * Unmarks all mods in {@code mods} in the current set of mods linked to this batchmate as not taken.","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"carriezhengjr"},"content":"     * @param mods The set of mods to be unmarked.","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"carriezhengjr"},"content":"    public void unmarkMods(ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"carriezhengjr"},"content":"        for (int i \u003d 0; i \u003c mods.size(); i++) {","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"carriezhengjr"},"content":"            for (int j \u003d 0; j \u003c this.mods.size(); j++) {","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"carriezhengjr"},"content":"                Mod currentMod \u003d this.mods.get(j);","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"jonasgwt"},"content":"                String currentModName \u003d currentMod.getModName();","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"jonasgwt"},"content":"                String targetModName \u003d mods.get(i).getModName();","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"carriezhengjr"},"content":"                if (currentModName.equals(targetModName)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"carriezhengjr"},"content":"                    currentMod.unmarkMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"carriezhengjr"},"content":"                    break;","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"carriezhengjr"},"content":"                }","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":189,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 otherPerson.getTelegram().equals(getTelegram())","lastModifiedDate":"2022-10-09"},{"lineNumber":190,"author":{"gitId":"jonasgwt"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"jonasgwt"},"content":"                \u0026\u0026 otherPerson.getMods().equals(getMods());","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"jonasgwt"},"content":"        return Objects.hash(name, phone, email, handle, gitHub, tags, mods);","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":204,"author":{"gitId":"sltsheryl"},"content":"                .append(\"; Telegram: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"sltsheryl"},"content":"                .append(getTelegram())","lastModifiedDate":"2022-10-09"},{"lineNumber":206,"author":{"gitId":"sltsheryl"},"content":"                .append(\"; GitHub: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":207,"author":{"gitId":"carriezhengjr"},"content":"                .append(getGitHub())","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":211,"author":{"gitId":"carriezhengjr"},"content":"                .append(getEmail());","lastModifiedDate":"2022-10-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":218,"author":{"gitId":"jonasgwt"},"content":"        if (!mods.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"jonasgwt"},"content":"            builder.append(\"; Mods: \");","lastModifiedDate":"2022-10-11"},{"lineNumber":220,"author":{"gitId":"jonasgwt"},"content":"            mods.forEach(builder::append);","lastModifiedDate":"2022-10-11"},{"lineNumber":221,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ElijahS67":21,"sltsheryl":22,"jonasgwt":23,"carriezhengjr":46,"-":113}},{"path":"src/main/java/seedu/address/model/person/PersonContainsTagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches all the tags (case-insensitive) specified by Student.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"public class PersonContainsTagPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"    public PersonContainsTagPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"        if (keywords.isEmpty()) { //keywords \u003d trimmed user input","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"        Set\u003cString\u003e personTagNameSet \u003d person","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"                .getTags()","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"                .stream()","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"                .map(tag -\u003e tag.tagName)","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"                .map(String::toLowerCase)","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"        Set\u003cString\u003e lowerCaseKeywords \u003d keywords //to be case-insensitive","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"                .stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"                .map(String::toLowerCase)","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"        return personTagNameSet.containsAll(lowerCaseKeywords);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"                || (other instanceof PersonContainsTagPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"                \u0026\u0026 keywords.equals(((PersonContainsTagPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"ElijahS67":47}},{"path":"src/main/java/seedu/address/model/person/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegram(String)}","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"public class Telegram {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram handle can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"    public final String handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"     * Constructs an {@code Telegram}.","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"     * @param handle A valid handle.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"    public Telegram(String handle) {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(handle);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"        checkArgument(isValidTelegram(handle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"        this.handle \u003d handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"    public static boolean isValidTelegram(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"        return handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"                || (other instanceof Telegram // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 handle.equals(((Telegram) other).handle)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"        return handle.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":15,"-":42}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"                new Telegram(\"ayeoh\"), new GitHub(\"alexyeow\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"                getTagSet(\"friends\"), getModSet(\"CS2100\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"                new Telegram(\"bernieyu\"), new GitHub(\"ber_yu\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"                getTagSet(\"colleagues\", \"friends\"), getModSet(\"CS2100\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"                new Telegram(\"charl0tte0liveir0\"), new GitHub(\"charlotte123\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"                getTagSet(\"neighbours\"), getModSet(\"CS2100\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"                new Telegram(\"daveyli\"), new GitHub(\"daveli\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"                getTagSet(\"family\"), getModSet(\"CS2100\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"                new Telegram(\"irfanibrahim\"), new GitHub(\"irfanibrahim\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"                getTagSet(\"classmates\"), getModSet(\"CS2100\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"                new Telegram(\"roybala\"), new GitHub(\"bala_roy\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"                getTagSet(\"colleagues\"), getModSet(\"CS2100\"))","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"     * Returns a mod set containing the list of strings given.","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"    public static ObservableList\u003cMod\u003e getModSet(String... strings) {","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"                .map(Mod::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"                .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"sltsheryl":12,"jonasgwt":14,"-":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":" * Jackson-friendly version of {@link Mod}.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"class JsonAdaptedMod {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"    private final String modName;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"    private boolean hasTaken;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"     * Constructs a {@code JsonAdaptedMod} with the given module details.","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"    public JsonAdaptedMod(@JsonProperty(\"modName\") String modName,","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"                          @JsonProperty(\"hasTaken\") boolean hasTaken) {","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"        this.modName \u003d modName;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"        this.hasTaken \u003d hasTaken;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"     * Converts a given {@code Mod} into this class for Jackson use.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"    public JsonAdaptedMod(Mod source) {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"        modName \u003d source.getModName();","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"        hasTaken \u003d source.getModStatus();","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"     * Converts this Jackson-friendly adapted mod object into the model\u0027s {@code Mod} object.","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted mod.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"    public Mod toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"        if (!Mod.isValidModName(modName)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"            throw new IllegalValueException(Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"        return new Mod(modName, hasTaken);","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jonasgwt":38,"carriezhengjr":9}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"    private final String handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"    private final String username;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"    private final List\u003cJsonAdaptedMod\u003e mods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"handle\") String handle,","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"                             @JsonProperty(\"username\") String username,","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"                             @JsonProperty(\"mods\") List\u003cJsonAdaptedMod\u003e mods) {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"        this.handle \u003d handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"        this.username \u003d username;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"        if (mods !\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"            this.mods.addAll(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        if (source.getPhone() \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"            phone \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"        if (source.getEmail() \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"            email \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"        if (source.getGitHub() \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"            username \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"            username \u003d source.getGitHub().username;","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"        handle \u003d source.getTelegram().handle;","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"        mods.addAll(source.getMods().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"                .map(JsonAdaptedMod::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"        final List\u003cMod\u003e personMods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"        for (JsonAdaptedMod mod : mods) {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"            personMods.add(mod.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"        Phone modelPhone \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"        Email modelEmail \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"        GitHub modelGitHub \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"jonasgwt"},"content":"        // mandatory","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"sltsheryl"},"content":"        if (handle \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"sltsheryl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"sltsheryl"},"content":"                    Telegram.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"jonasgwt"},"content":"        if (!Telegram.isValidTelegram(handle)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"sltsheryl"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"sltsheryl"},"content":"        final Telegram modelHandle \u003d new Telegram(handle);","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"jonasgwt"},"content":"        // optional","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"jonasgwt"},"content":"        if (phone !\u003d null \u0026\u0026 !Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"jonasgwt"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"jonasgwt"},"content":"        if (phone !\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"jonasgwt"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"jonasgwt"},"content":"        if (email !\u003d null \u0026\u0026 !Email.isValidEmail(email)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"jonasgwt"},"content":"        if (email !\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"jonasgwt"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"jonasgwt"},"content":"        if (username !\u003d null \u0026\u0026 !GitHub.isValidGitHub(username)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"sltsheryl"},"content":"            throw new IllegalValueException(GitHub.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"jonasgwt"},"content":"        if (username !\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"jonasgwt"},"content":"            modelGitHub \u003d new GitHub(username);","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"sltsheryl"},"content":"        final ObservableList\u003cMod\u003e modelMods \u003d FXCollections.observableArrayList(personMods);","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"jonasgwt"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelHandle, modelGitHub, modelTags, modelMods);","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sltsheryl":17,"jonasgwt":48,"carriezhengjr":1,"-":88}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import java.awt.Desktop;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"import java.net.URI;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-t11-4.github.io/tp/UserGuide.html\\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"    public static final String COMMAND_SUMMARY \u003d \"\\nCOMMAND SUMMARY\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"            + \"– help\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"            + \"– add: add n/NAME g/GITHUB_REPO_LINK [p/PHONE_NUMBER] [e/EMAIL] [t/TAG]\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"            + \"– list\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"            + \"– edit: edit INDEX [n/NAME] [g/GITHUB_REPO_LINK] [p/PHONE] [e/EMAIL] [t/TAG]\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"            + \"– sort: sort TAG\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"            + \"– find: find KEYWORD\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"            + \"– delete: delete INDEX\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"            + \"– exit\\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide for more details: \"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"            + USERGUIDE_URL","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"            + COMMAND_SUMMARY;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"carriezhengjr"},"content":"     * Opens the user guide in the browser.","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"carriezhengjr"},"content":"    private void openGuide() throws URISyntaxException, IOException {","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"carriezhengjr"},"content":"        Desktop.getDesktop().browse(new URI(\"https://ay2223s1-cs2103t-t11-4.github.io/tp/UserGuide.html\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"carriezhengjr":20,"-":93}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"    private ModListPanel modListPanel;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"    private Label noSelectedText;","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"    private StackPane modListPanelPlaceholder;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"sltsheryl"},"content":"        modListPanel \u003d new ModListPanel();","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"sltsheryl"},"content":"        modListPanelPlaceholder.getChildren().add(modListPanel.getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"sltsheryl"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), modListPanel);","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"sltsheryl"},"content":"        personListPanel.handlePersonClick();","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"sltsheryl"},"content":"            if (commandResult.isResetModPanel()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":194,"author":{"gitId":"sltsheryl"},"content":"                modListPanel.clearModPanel();","lastModifiedDate":"2022-10-15"},{"lineNumber":195,"author":{"gitId":"sltsheryl"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":196,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sltsheryl":17,"-":195}},{"path":"src/main/java/seedu/address/ui/ModCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"public class ModCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"    private static final String FXML \u003d \"ModListCard.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"    public final Mod module;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    private Label id;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    private Label modName;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"     * Creates a {@code ModCode} with the given {@code Mod} and index to display.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"    public ModCard(Mod module, int displayedIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"        super(FXML);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"        modName.setText(module.getModName());","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"        if (!(other instanceof ModCard)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"        ModCard card \u003d (ModCard) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 this.module.equals(card.module);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":59,"jonasgwt":1}},{"path":"src/main/java/seedu/address/ui/ModListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"public class ModListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"    private static final String FXML \u003d \"ModListPanel.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ModListPanel.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"    private ListView\u003cMod\u003e modListView;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"     * Creates a {@code ModListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"    public ModListPanel() {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"        super(FXML);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    public void setPersonModList(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e moduleList \u003d person.getMods();","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"        modListView.setItems(moduleList);","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"        modListView.setCellFactory(listView -\u003e new ModListViewCell());","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"    class ModListViewCell extends ListCell\u003cMod\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"        protected void updateItem(Mod module, boolean isEmpty) {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"            super.updateItem(module, isEmpty);","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"            if (isEmpty || module \u003d\u003d null) {","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"                setText(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"            } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"                setGraphic(new ModCard(module, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"     * Clears the mod panel.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"    public void clearModPanel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"        modListView.setItems(null);","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":60}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"    private Label telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"    private Label github;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"        telegram.setText(\"Telegram: \" + person.getTelegram().handle);","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"        if (person.getPhone() !\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"            phone.setText(\"HP: \" + person.getPhone().value);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"            phone.setManaged(false);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"        if (person.getEmail() !\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"            email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"            email.setManaged(false);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"        if (person.getGitHub() !\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"            github.setText(\"GitHub: \" + person.getGitHub().username);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"            github.setManaged(false);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sltsheryl":14,"jonasgwt":5,"-":73}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"    private ModListPanel modListPanel;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, ModListPanel personModList) {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"        this.modListPanel \u003d personModList;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"     * Displays ListView item clicked on the ListView on the {@code testPanel}","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"    public void handlePersonClick() {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        personListView.setOnMouseClicked(event -\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"            Person person \u003d personListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"            if (person !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"                modListPanel.setPersonModList(person);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"        });","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sltsheryl":13,"-":50}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":".label-subheader {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"sltsheryl":9,"-":350}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"      \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openGuide\" text\u003d\"Open User Guide\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"                  \u003ccursor\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"                     \u003cCursor fx:constant\u003d\"HAND\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"                  \u003c/cursor\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"sltsheryl":2,"carriezhengjr":6,"-":41}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Mass Linkers\"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"        \u003c!--Search bar--\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"        \u003c!--Search result--\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"                   styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"        \u003cHBox prefWidth\u003d\"400\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"          \u003c!--People left panel--\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"        \u003cStackPane minWidth\u003d\"300\" prefWidth\u003d\"NaN\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"          \u003c!--Mods right panel--\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"          \u003cStackPane minWidth\u003d\"300\" prefWidth\u003d\"NaN\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"                     HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"            \u003cVBox fx:id\u003d\"modList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"              \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Mods Taken\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"              \u003cLabel fx:id\u003d\"noSelectedText\" styleClass\u003d\"label-subheader\"","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"                     text\u003d\"Select a student to view their module details.\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"sltsheryl"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"sltsheryl"},"content":"              \u003cStackPane fx:id\u003d\"modListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"sltsheryl"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"sltsheryl":33,"-":48}},{"path":"src/main/resources/view/ModListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"        \u003cVBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"                \u003cLabel fx:id\u003d\"modName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":32}},{"path":"src/main/resources/view/ModListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"    \u003cListView fx:id\u003d\"modListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":10}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"    \u003cVBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"      \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"      \u003cLabel fx:id\u003d\"github\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":5,"-":32}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"chm252"},"content":"    //--------------Tests for containsPartialWordIgnoreCase-------------------------","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"chm252"},"content":"    public void containsPartialWordIgnoreCase() {","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"chm252"},"content":"        //matching partial words","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"chm252"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"AlbertEinstein\", \"bertein\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"chm252"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"Naruto\", \"ru\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"chm252"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"JayChou\", \"ayc\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"chm252"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"Conan\", \" nan\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"chm252"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"32688274698979\", \"69\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"chm252"},"content":"        //not matching any partial words","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"chm252"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"Naruto\", \"ruru\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"chm252"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"Conan\", \"mingZhengTanKeNan\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"chm252"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"Australia\", \"Perth\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"chm252"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"678463421\", \"999\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chm252":19,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MOD_DESC_CS2100;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"                + TELEGRAM_DESC_AMY + GITHUB_DESC_AMY + MOD_DESC_CS2100;","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sltsheryl":2,"jonasgwt":2,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"        // different resetModel value -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, true)));","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"sltsheryl":8,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"amy123\";","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"bobby\";","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"    public static final String VALID_GITHUB_AMY \u003d \"amybee\";","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"    public static final String VALID_GITHUB_BOB \u003d \"bobby_choo\";","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_MOD_CS2100 \u003d \"CS2100\";","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_MOD_CS2103 \u003d \"CS2103\";","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"    public static final String INVALID_MOD_CS2103 \u003d \"#CS2103\";","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"    public static final String GITHUB_DESC_AMY \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"    public static final String GITHUB_DESC_BOB \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"    public static final String MOD_DESC_CS2100 \u003d \" \" + PREFIX_MOD + VALID_MOD_CS2100;","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"    public static final String MOD_DESC_CS2103 \u003d \" \" + PREFIX_MOD + VALID_MOD_CS2103;","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"    public static final String INVALID_MOD_DESC_CS2103 \u003d \" \" + PREFIX_MOD + INVALID_MOD_CS2103;","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"    public static final String INVALID_GITHUB_DESC \u003d \" \" + PREFIX_GITHUB;","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"    // empty string not allowed for GitHub usernames","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"    public static final String INVALID_TELEGRAM_DESC \u003d \" \" + PREFIX_TELEGRAM; // empty string not allowed for telegram","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"sltsheryl"},"content":"                .withGitHub(VALID_GITHUB_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"sltsheryl"},"content":"                .withGitHub(VALID_GITHUB_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"sltsheryl":17,"jonasgwt":7,"-":118}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).withEmail(VALID_EMAIL_BOB).withGitHub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"                .withPhone(VALID_PHONE_BOB).withTelegram(VALID_TELEGRAM_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"                .withGitHub(VALID_GITHUB_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jonasgwt":16,"-":169}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"sltsheryl":2,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, true);","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"sltsheryl":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.person.PersonContainsTagPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTagCommand}.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"public class FindTagCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"        PersonContainsTagPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"                new PersonContainsTagPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"        PersonContainsTagPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"                new PersonContainsTagPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"        FindTagCommand findTagFirstCommand \u003d new FindTagCommand(firstPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"        FindTagCommand findTagSecondCommand \u003d new FindTagCommand(secondPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"        assertTrue(findTagFirstCommand.equals(findTagFirstCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"        FindTagCommand findFirstCommandCopy \u003d new FindTagCommand(firstPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"        assertTrue(findTagFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"ElijahS67"},"content":"        assertFalse(findTagFirstCommand.equals(1));","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ElijahS67"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ElijahS67"},"content":"        assertFalse(findTagFirstCommand.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ElijahS67"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ElijahS67"},"content":"        assertFalse(findTagFirstCommand.equals(findTagSecondCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ElijahS67"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"ElijahS67"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ElijahS67"},"content":"        PersonContainsTagPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ElijahS67"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ElijahS67"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ElijahS67"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"ElijahS67"},"content":"    public void execute_oneKeyword_multiplePersonsFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"ElijahS67"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ElijahS67"},"content":"        PersonContainsTagPredicate predicate \u003d preparePredicate(\"friends\");","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"ElijahS67"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ElijahS67"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"ElijahS67"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ElijahS67"},"content":"    public void execute_multipleKeywords_onePersonFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"ElijahS67"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ElijahS67"},"content":"        PersonContainsTagPredicate predicate \u003d preparePredicate(\"friends owesMoney\");","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ElijahS67"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ElijahS67"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ElijahS67"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(List.of(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"ElijahS67"},"content":"    public void execute_multipleCasingKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"ElijahS67"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"ElijahS67"},"content":"        PersonContainsTagPredicate predicate \u003d preparePredicate(\"friends FRIENDS fRieNDs\");","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"ElijahS67"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"ElijahS67"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"ElijahS67"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"ElijahS67"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"ElijahS67"},"content":"    private PersonContainsTagPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"ElijahS67"},"content":"        return new PersonContainsTagPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ElijahS67":104}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, true);","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"sltsheryl":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ModAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"public class ModAddCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"    private static final Mod VALID_MOD_CS2100 \u003d new Mod(\"CS2100\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"    private static final Mod VALID_MOD_CS2101 \u003d new Mod(\"CS2101\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"    private static Model model;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"     * Test constructor to throw an exception when null index is provided.","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModAddCommand(null, FXCollections.observableArrayList()));","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"     * Test constructor to throw an exception when null mods is provided.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"    public void constructor_nullMods_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModAddCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"     * Test the {@code execute} method to add mods to a person.","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"    public void execute_saveToModels_success() throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"        // adds a test person to model","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"        Person toAdd \u003d new PersonBuilder(BOB).withMods(VALID_MOD_CS2100.getModName()).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"        // execute ModAddCommand on the test person","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ElijahS67"},"content":"        ModAddCommand commandToExecute \u003d new ModAddCommand(indexLastPerson,","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2101));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"ElijahS67"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        // get the edited person from ModAddCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"        // expected edited person","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"        Person editedPersonExpected \u003d new PersonBuilder(BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"                .withMods(VALID_MOD_CS2100.getModName(), VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"                .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(String.format(ModAddCommand.MESSAGE_SUCCESS, editedPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(editedPerson, editedPersonExpected);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"     * Test the {@code execute} method to add a pre-existing mod.","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"    public void execute_saveDuplicateMods_success() throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"        // adds a test person to model","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"        Person toAdd \u003d new PersonBuilder(BOB).withMods(VALID_MOD_CS2100.getModName()).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"        // execute ModAddCommand on the test person with existing mod","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"        ModAddCommand commandToExecute \u003d new ModAddCommand(indexLastPerson,","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"        // get the edited person from ModAddCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"        // expected edited person","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"        Person editedPersonExpected \u003d new PersonBuilder(BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"                .withMods(VALID_MOD_CS2100.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"                .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(String.format(ModAddCommand.MESSAGE_SUCCESS, editedPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(editedPerson, editedPersonExpected);","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"     * Test the {@code execute} method to throw an exception when index provided","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"     * is out of bounds.","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"jonasgwt"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"jonasgwt"},"content":"        Index indexOutOfBounds \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"sltsheryl"},"content":"        ModAddCommand invalidCommand \u003d new ModAddCommand(indexOutOfBounds,","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"sltsheryl"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"jonasgwt"},"content":"        assertCommandFailure(invalidCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ElijahS67":4,"sltsheryl":5,"jonasgwt":108}},{"path":"src/test/java/seedu/address/logic/commands/ModDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":" * Test class for ModDeleteCommand.","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"public class ModDeleteCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"    private static final Mod VALID_MOD_CS2100 \u003d new Mod(\"CS2100\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"    private static final Mod VALID_MOD_CS2101 \u003d new Mod(\"CS2101\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"    private static final Mod VALID_MOD_CS2103 \u003d new Mod(\"CS2103\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"    private static final Mod MOD_NOT_FOUND_CS2105 \u003d new Mod(\"CS2105\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"    private static Model model;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"     * Sets up the model before each test.","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when index is not entered.","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"ElijahS67"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModDeleteCommand(null, FXCollections.observableArrayList()));","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when mod is not entered.","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"ElijahS67"},"content":"    public void constructor_nullMods_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"ElijahS67"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModDeleteCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when the student wants to delete 1 existing mod","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"ElijahS67"},"content":"     * from the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"ElijahS67"},"content":"     * @throws CommandException If an error which occurs during execution of ModDeleteCommand.","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"ElijahS67"},"content":"    public void execute_deleteOneMod_success() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"ElijahS67"},"content":"        Person batchmate \u003d new PersonBuilder(BOB)","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"                .withMods(VALID_MOD_CS2100.getModName(), VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"ElijahS67"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"ElijahS67"},"content":"        model.addPerson(batchmate);","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"ElijahS67"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"ElijahS67"},"content":"        ModDeleteCommand commandToExecute \u003d new ModDeleteCommand(indexLastPerson,","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"ElijahS67"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"ElijahS67"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"ElijahS67"},"content":"        String actualModList \u003d batchmate.getMods().toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"ElijahS67"},"content":"        String expectedModList \u003d \"[[CS2101: false]]\";","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(actualModList, expectedModList);","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(ModDeleteCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when the student wants to delete 2 existing mods","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"ElijahS67"},"content":"     * from the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"ElijahS67"},"content":"     * @throws CommandException If an error which occurs during execution of ModDeleteCommand.","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"ElijahS67"},"content":"    public void execute_deleteMultipleMods_success() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"ElijahS67"},"content":"        Person batchmate \u003d new PersonBuilder(BOB).withMods(","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"                VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"                VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"                VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"ElijahS67"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"ElijahS67"},"content":"        model.addPerson(batchmate);","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"ElijahS67"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"ElijahS67"},"content":"        ModDeleteCommand commandToExecute \u003d new ModDeleteCommand(indexLastPerson,","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"ElijahS67"},"content":"                FXCollections.observableArrayList(VALID_MOD_CS2101, VALID_MOD_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"ElijahS67"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"ElijahS67"},"content":"        String actualModList \u003d batchmate.getMods().toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"ElijahS67"},"content":"        String expectedModList \u003d \"[[CS2103: false]]\";","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(actualModList, expectedModList);","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(ModDeleteCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when the student wants to delete 1 non-existing mod","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"ElijahS67"},"content":"     * from the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"ElijahS67"},"content":"    public void execute_delete1NonExistingMod_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"ElijahS67"},"content":"        Person batchmate \u003d new PersonBuilder(BOB).withMods(","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"ElijahS67"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"ElijahS67"},"content":"        model.addPerson(batchmate);","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"ElijahS67"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"ElijahS67"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"ElijahS67"},"content":"            ModDeleteCommand commandToExecute \u003d new ModDeleteCommand(indexLastPerson,","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"ElijahS67"},"content":"                    FXCollections.observableArrayList(MOD_NOT_FOUND_CS2105));","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"ElijahS67"},"content":"            commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"ElijahS67"},"content":"            fail(); // Test should not reach this line.","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"ElijahS67"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"ElijahS67"},"content":"            assertEquals(ModDeleteCommand.MESSAGE_INVALID_MOD, e.getMessage());","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when the student wants to delete multiple mods containing","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"ElijahS67"},"content":"     * a mix of existing and non-existing mods from the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"ElijahS67"},"content":"    public void execute_deleteMixExistingAndNonExistingMods_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"ElijahS67"},"content":"        Person batchmate \u003d new PersonBuilder(BOB).withMods(","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"ElijahS67"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"ElijahS67"},"content":"        model.addPerson(batchmate);","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"ElijahS67"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"ElijahS67"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"ElijahS67"},"content":"            ModDeleteCommand commandToExecute \u003d new ModDeleteCommand(indexLastPerson,","lastModifiedDate":"2022-10-15"},{"lineNumber":159,"author":{"gitId":"ElijahS67"},"content":"                    FXCollections.observableArrayList(VALID_MOD_CS2101, VALID_MOD_CS2103, MOD_NOT_FOUND_CS2105));","lastModifiedDate":"2022-10-15"},{"lineNumber":160,"author":{"gitId":"ElijahS67"},"content":"            commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"ElijahS67"},"content":"            fail(); // Test should not reach this line. Goes to Catch block.","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"ElijahS67"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"ElijahS67"},"content":"            assertEquals(ModDeleteCommand.MESSAGE_INVALID_MOD, e.getMessage());","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when index is out of range.","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"ElijahS67"},"content":"     * @throws CommandException If an error which occurs during execution of ModDeleteCommand.","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"ElijahS67"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"ElijahS67"},"content":"        Index indexOutOfBounds \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"ElijahS67"},"content":"        ModDeleteCommand invalidCommand \u003d new ModDeleteCommand(indexOutOfBounds,","lastModifiedDate":"2022-10-15"},{"lineNumber":177,"author":{"gitId":"ElijahS67"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"ElijahS67"},"content":"        assertCommandFailure(invalidCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":181,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"ElijahS67":171,"jonasgwt":10}},{"path":"src/test/java/seedu/address/logic/commands/ModMarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":" * Test class for ModMarkCommand.","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"public class ModMarkCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2100 \u003d new Mod(\"CS2100\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2101 \u003d new Mod(\"CS2101\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2103 \u003d new Mod(\"CS2103\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod MOD_NOT_FOUND_CS2105 \u003d new Mod(\"CS2105\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"    private static Model model;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"     * Sets up the model before each test.","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when index is not entered.","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModMarkCommand(null, FXCollections.observableArrayList()));","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when mod is not entered.","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"    public void constructor_nullMods_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModMarkCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when the student wants to mark 1 existing mod","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"     * in the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error which occurs during execution of ModMarkCommand.","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_markOneMod_success() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"        Person batchmate \u003d new PersonBuilder(BOB).withMods(VALID_MOD_CS2100.getModName()).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"        model.addPerson(batchmate);","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand commandToExecute \u003d new ModMarkCommand(indexLastPerson,","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"        String actualModStatus \u003d batchmate.getMods().get(0).toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"        String expectedModStatus \u003d \"[CS2100: true]\";","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(expectedModStatus, actualModStatus);","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(ModMarkCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when the student wants to mark 2 existing mods","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"     * in the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error which occurs during execution of ModMarkCommand.","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_markMultipleMod_success() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"carriezhengjr"},"content":"        Person batchmate \u003d new PersonBuilder(BOB).withMods(","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"                VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"                VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"                VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"carriezhengjr"},"content":"        model.addPerson(batchmate);","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand commandToExecute \u003d new ModMarkCommand(indexLastPerson,","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"carriezhengjr"},"content":"                FXCollections.observableArrayList(VALID_MOD_CS2101, VALID_MOD_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"carriezhengjr"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"carriezhengjr"},"content":"        String actualFirstModStatus \u003d batchmate.getMods().get(0).toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"carriezhengjr"},"content":"        String actualSecondModStatus \u003d batchmate.getMods().get(1).toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"carriezhengjr"},"content":"        String actualThirdModStatus \u003d batchmate.getMods().get(2).toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"carriezhengjr"},"content":"        String actualModStatus \u003d actualFirstModStatus + actualSecondModStatus + actualThirdModStatus;","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"carriezhengjr"},"content":"        String expectedModStatus \u003d \"[CS2100: true]\" + \"[CS2103: false]\" + \"[CS2101: true]\";","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(expectedModStatus, actualModStatus);","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(ModMarkCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when the student wants to mark 1 non-existing mod","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"carriezhengjr"},"content":"     * in the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_markNonExistingMod1_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"        Person batchmate \u003d new PersonBuilder(BOB).withMods(","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"carriezhengjr"},"content":"        model.addPerson(batchmate);","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"carriezhengjr"},"content":"            ModMarkCommand commandToExecute \u003d new ModMarkCommand(indexLastPerson,","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"carriezhengjr"},"content":"                    FXCollections.observableArrayList(MOD_NOT_FOUND_CS2105));","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"carriezhengjr"},"content":"            commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"carriezhengjr"},"content":"            fail(); // Test should not reach this line.","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"carriezhengjr"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"ElijahS67"},"content":"            assertEquals(ModMarkCommand.MESSAGE_INVALID_MOD, e.getMessage());","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when the student wants to mark multiple mods containing","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"carriezhengjr"},"content":"     * 1 non-existing mod in the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_markNonExistingMod2_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"carriezhengjr"},"content":"        Person batchmate \u003d new PersonBuilder(BOB).withMods(","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"        model.addPerson(batchmate);","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":159,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":160,"author":{"gitId":"carriezhengjr"},"content":"            ModMarkCommand commandToExecute \u003d new ModMarkCommand(indexLastPerson,","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"carriezhengjr"},"content":"                    FXCollections.observableArrayList(VALID_MOD_CS2101, VALID_MOD_CS2103, MOD_NOT_FOUND_CS2105));","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"carriezhengjr"},"content":"            commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"carriezhengjr"},"content":"            fail(); // Test should not reach this line.","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"carriezhengjr"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"ElijahS67"},"content":"            assertEquals(ModMarkCommand.MESSAGE_INVALID_MOD, e.getMessage());","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when index is out of range.","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error which occurs during execution of ModMarkCommand.","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":177,"author":{"gitId":"carriezhengjr"},"content":"        Index indexOutOfBounds \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand invalidCommand \u003d new ModMarkCommand(indexOutOfBounds,","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"carriezhengjr"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"carriezhengjr"},"content":"        assertCommandFailure(invalidCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":181,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":182,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":183,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"ElijahS67":4,"jonasgwt":10,"carriezhengjr":169}},{"path":"src/test/java/seedu/address/logic/commands/ModUnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":" * Test class for ModUnmarkCommand.","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"public class ModUnmarkCommandTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2100 \u003d new Mod(\"CS2100\", true);","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2101 \u003d new Mod(\"CS2101\", true);","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2103 \u003d new Mod(\"CS2103\", true);","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod MOD_NOT_FOUND_CS2105 \u003d new Mod(\"CS2105\", true);","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"    private static Model model;","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"     * Sets up the model before each test.","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when index is not entered.","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModUnmarkCommand(null, FXCollections.observableArrayList()));","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when mod is not entered.","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"    public void constructor_nullMods_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModUnmarkCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when the student wants to unmark 1 existing mod","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"     * in the list of taken modules of a batchmate.","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error which occurs during execution of ModUnmarkCommand.","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_unmarkOneMod_success() throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"        Person batchmate \u003d new PersonBuilder(BOB).withMods(VALID_MOD_CS2100.getModName()).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"        model.addPerson(batchmate);","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(0).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand commandToExecute \u003d new ModUnmarkCommand(indexLastPerson,","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"        String actualModStatus \u003d batchmate.getMods().get(0).toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"        String expectedModStatus \u003d \"[CS2100: false]\";","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(expectedModStatus, actualModStatus);","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(ModUnmarkCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when the student wants to unmark 2 existing mods","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"     * in the list of taken modules of a batchmate.","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error which occurs during execution of ModUnmarkCommand.","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_unmarkMultipleMod_success() throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"carriezhengjr"},"content":"        Person batchmate \u003d new PersonBuilder(BOB).withMods(","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"carriezhengjr"},"content":"        model.addPerson(batchmate);","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(0).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(1).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(2).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand commandToExecute \u003d new ModUnmarkCommand(indexLastPerson,","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"carriezhengjr"},"content":"                FXCollections.observableArrayList(VALID_MOD_CS2101, VALID_MOD_CS2100));","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"carriezhengjr"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"carriezhengjr"},"content":"        String actualFirstModStatus \u003d batchmate.getMods().get(0).toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"carriezhengjr"},"content":"        String actualSecondModStatus \u003d batchmate.getMods().get(1).toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"carriezhengjr"},"content":"        String actualThirdModStatus \u003d batchmate.getMods().get(2).toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"carriezhengjr"},"content":"        String actualModStatus \u003d actualFirstModStatus + actualSecondModStatus + actualThirdModStatus;","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"carriezhengjr"},"content":"        String expectedModStatus \u003d \"[CS2100: false]\" + \"[CS2103: true]\" + \"[CS2101: false]\";","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(expectedModStatus, actualModStatus);","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(ModUnmarkCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when the student wants to unmark 1 non-existing mod","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"carriezhengjr"},"content":"     * in the list of taken modules of a batchmate.","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_unmarkNonExistingMod1_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"carriezhengjr"},"content":"        Person batchmate \u003d new PersonBuilder(BOB).withMods(","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"carriezhengjr"},"content":"        model.addPerson(batchmate);","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(0).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(1).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(2).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"carriezhengjr"},"content":"            ModUnmarkCommand commandToExecute \u003d new ModUnmarkCommand(indexLastPerson,","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"carriezhengjr"},"content":"                    FXCollections.observableArrayList(MOD_NOT_FOUND_CS2105));","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"carriezhengjr"},"content":"            commandToExecute.execute(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"carriezhengjr"},"content":"            fail(); // Test should not reach this line.","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"carriezhengjr"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"carriezhengjr"},"content":"            assertEquals(ModUnmarkCommand.MESSAGE_INVALID_MOD, e.getMessage());","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when the student wants to unmark multiple mods containing","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"     * 1 non-existing mod in the list of taken modules of a batchmate.","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_unmarkNonExistingMod2_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"carriezhengjr"},"content":"        Person batchmate \u003d new PersonBuilder(BOB).withMods(","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-17"},{"lineNumber":162,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"jonasgwt"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"carriezhengjr"},"content":"        model.addPerson(batchmate);","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(0).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(1).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(2).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"carriezhengjr"},"content":"            ModUnmarkCommand commandToExecute \u003d new ModUnmarkCommand(indexLastPerson,","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"carriezhengjr"},"content":"                    FXCollections.observableArrayList(VALID_MOD_CS2101, VALID_MOD_CS2103, MOD_NOT_FOUND_CS2105));","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"carriezhengjr"},"content":"            commandToExecute.execute(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"carriezhengjr"},"content":"            fail(); // Test should not reach this line.","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"carriezhengjr"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"carriezhengjr"},"content":"            assertEquals(ModUnmarkCommand.MESSAGE_INVALID_MOD, e.getMessage());","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when index is out of range.","lastModifiedDate":"2022-10-16"},{"lineNumber":186,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error which occurs during execution of ModUnmarkCommand.","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"carriezhengjr"},"content":"        Index indexOutOfBounds \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand invalidCommand \u003d new ModUnmarkCommand(indexOutOfBounds,","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"carriezhengjr"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"carriezhengjr"},"content":"        assertCommandFailure(invalidCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"jonasgwt":10,"carriezhengjr":187}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MOD_DESC_CS2103;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MOD_DESC_CS2100;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MOD_DESC_CS2103;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MOD_CS2100;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MOD_CS2103;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + TAG_DESC_FRIEND + MOD_DESC_CS2100,","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + TAG_DESC_FRIEND + MOD_DESC_CS2100,","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + TAG_DESC_FRIEND + MOD_DESC_CS2100,","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + TAG_DESC_FRIEND + MOD_DESC_CS2100,","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"        // multiple telegram - last telegram accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"sltsheryl"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_AMY","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + TAG_DESC_FRIEND + MOD_DESC_CS2100,","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":87,"author":{"gitId":"sltsheryl"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"                + GITHUB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MOD_DESC_CS2100,","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"        // multiple mods - all accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"        Person expectedPersonMultipleMods \u003d new PersonBuilder(BOB).withMods(VALID_MOD_CS2100, VALID_MOD_CS2103)","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"                .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"                        + GITHUB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MOD_DESC_CS2100 + MOD_DESC_CS2103,","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"                new AddCommand(expectedPersonMultipleMods));","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"sltsheryl"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"sltsheryl"},"content":"                        + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB,","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"        // missing telegram prefix","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"sltsheryl"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"sltsheryl"},"content":"                        + VALID_TELEGRAM_BOB + GITHUB_DESC_BOB,","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"sltsheryl"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"sltsheryl"},"content":"                        + VALID_TELEGRAM_BOB + VALID_GITHUB_BOB,","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"sltsheryl"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"sltsheryl"},"content":"                + GITHUB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"sltsheryl"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"sltsheryl"},"content":"                + GITHUB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"sltsheryl"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"sltsheryl"},"content":"                + GITHUB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"sltsheryl"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"sltsheryl"},"content":"                + GITHUB_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"sltsheryl"},"content":"        // invalid gitHub","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"sltsheryl"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"sltsheryl"},"content":"                + INVALID_GITHUB_DESC + TAG_DESC_HUSBAND + VALID_TAG_FRIEND, GitHub.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"sltsheryl"},"content":"        // invalid telegram","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"sltsheryl"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_TELEGRAM_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"sltsheryl"},"content":"                + GITHUB_DESC_BOB + TAG_DESC_HUSBAND + VALID_TAG_FRIEND, Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"jonasgwt"},"content":"        // invalid mod","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"jonasgwt"},"content":"                + GITHUB_DESC_BOB + TAG_DESC_HUSBAND + VALID_TAG_FRIEND","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"jonasgwt"},"content":"                + INVALID_MOD_DESC_CS2103, Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"sltsheryl"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"sltsheryl"},"content":"                        + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"sltsheryl"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"sltsheryl":35,"jonasgwt":30,"-":94}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MOD_CS2100;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.logic.commands.ModAddCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.logic.commands.ModCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"    public void parseCommand_mod() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"                ModCommand.COMMAND_WORD + \" \" + ModAddCommand.COMMAND_WORD","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"                        + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \" + VALID_MOD_CS2100) instanceof ModAddCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"        // TODO: Update to include other mod commands","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jonasgwt":11,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"    private static final String MOD_EMPTY \u003d \" \" + PREFIX_MOD;","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"sltsheryl"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_DESC, Telegram.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"sltsheryl"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_TELEGRAM_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":114,"author":{"gitId":"sltsheryl"},"content":"                + EMAIL_DESC_AMY + TELEGRAM_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"sltsheryl"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"sltsheryl"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"sltsheryl"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"sltsheryl"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + TELEGRAM_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"sltsheryl"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + TELEGRAM_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"sltsheryl"},"content":"                + PHONE_DESC_BOB + TELEGRAM_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"sltsheryl"},"content":"                .withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":179,"author":{"gitId":"sltsheryl"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"sltsheryl"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"sltsheryl"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":215,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"jonasgwt"},"content":"    public void parse_resetMods_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"jonasgwt"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"jonasgwt"},"content":"        String userInput \u003d targetIndex.getOneBased() + MOD_EMPTY;","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"jonasgwt"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withMods().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"jonasgwt"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":223,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"jonasgwt"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MODS_PASSED_TO_EDIT));","lastModifiedDate":"2022-10-12"},{"lineNumber":225,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"sltsheryl":19,"jonasgwt":14,"-":193}},{"path":"src/test/java/seedu/address/logic/parser/ModCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.logic.commands.ModAddCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.logic.commands.ModCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.logic.commands.ModDeleteCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.logic.commands.ModMarkCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"import seedu.address.logic.commands.ModUnmarkCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"public class ModCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_MOD_COMMAND \u003d \"bad\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_MOD_STRING \u003d \"#CS2103T\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_MOD_STRING_CS2103T \u003d \"CS2103T\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_MOD_STRING_CS2101 \u003d \"CS2101\";","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_MOD_STRING_CS2100 \u003d \"CS2100\";","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"    private final ModCommandParser parser \u003d new ModCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod commands when there is an empty command input by user.","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"    public void parse_emptyArg_throwParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"                ModCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod commands when there is an unknown command input by user.","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    public void parse_unknownCommand_throwParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"                INVALID_MOD_COMMAND + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"                ModCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod add when index is absent.","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"    public void parse_noIndex_throwParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser, ModAddCommand.COMMAND_WORD + \" \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"                ModCommand.MESSAGE_INDEX_EMPTY);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod add when mod is absent.","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"    public void parse_noMods_throwParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser, ModAddCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(),","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"                ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod add when mod is invalid.","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"    public void parse_invalidMod_throwParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"                ModAddCommand.COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"                        + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"                        + \" \" + INVALID_MOD_STRING,","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"                Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod add when index is invalid.","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"    public void parse_invalidIndex_throwParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser, ModAddCommand.COMMAND_WORD + \" -1 \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of adding 1 mod.","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"    public void parse_oneMod_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"        String userInput \u003d ModAddCommand.COMMAND_WORD + \" \" + targetIndex.getOneBased()","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"                + \" \" + VALID_MOD_STRING_CS2103T;","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.singletonObservableList(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"        ModAddCommand expectedCommand \u003d new ModAddCommand(targetIndex, mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of adding multiple mods.","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"    public void parse_manyMods_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"        String userInput \u003d ModAddCommand.COMMAND_WORD + \" \" + targetIndex.getOneBased()","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"jonasgwt"},"content":"                + \" \" + VALID_MOD_STRING_CS2103T","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"jonasgwt"},"content":"                + \" \" + VALID_MOD_STRING_CS2101","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"jonasgwt"},"content":"                + \" \" + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"sltsheryl"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2100));","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"jonasgwt"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"jonasgwt"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2101));","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"jonasgwt"},"content":"        ModAddCommand expectedCommand \u003d new ModAddCommand(targetIndex, mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"jonasgwt"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod delete when index is absent.","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_noIndexModDelete_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModDeleteCommand.COMMAND_WORD + \" \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_INDEX_EMPTY);","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod delete when mod is absent.","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_noModsModDelete_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModDeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(),","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod delete when mod is invalid.","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_invalidModModDelete_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"carriezhengjr"},"content":"                ModDeleteCommand.COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"carriezhengjr"},"content":"                        + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"carriezhengjr"},"content":"                        + \" \" + INVALID_MOD_STRING,","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"carriezhengjr"},"content":"                Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod delete when index is invalid.","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_invalidIndexModDelete_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModDeleteCommand.COMMAND_WORD + \" -1 \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"carriezhengjr"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":160,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of deleting 1 mod.","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_deleteOneMod_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModDeleteCommand.COMMAND_WORD + \" \" + targetIndex.getOneBased()","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"carriezhengjr"},"content":"                + \" \" + VALID_MOD_STRING_CS2103T;","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.singletonObservableList(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"carriezhengjr"},"content":"        ModDeleteCommand expectedCommand \u003d new ModDeleteCommand(targetIndex, mods);","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":177,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of deleting multiple mods.","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_deleteMultipleMods_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":181,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":182,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModDeleteCommand.COMMAND_WORD + \" \" + targetIndex.getOneBased()","lastModifiedDate":"2022-10-15"},{"lineNumber":183,"author":{"gitId":"carriezhengjr"},"content":"                + \" \" + VALID_MOD_STRING_CS2103T","lastModifiedDate":"2022-10-15"},{"lineNumber":184,"author":{"gitId":"carriezhengjr"},"content":"                + \" \" + VALID_MOD_STRING_CS2101","lastModifiedDate":"2022-10-15"},{"lineNumber":185,"author":{"gitId":"carriezhengjr"},"content":"                + \" \" + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-15"},{"lineNumber":186,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":187,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-15"},{"lineNumber":188,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":189,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-15"},{"lineNumber":190,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2101));","lastModifiedDate":"2022-10-15"},{"lineNumber":191,"author":{"gitId":"carriezhengjr"},"content":"        ModDeleteCommand expectedCommand \u003d new ModDeleteCommand(targetIndex, mods);","lastModifiedDate":"2022-10-15"},{"lineNumber":192,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":193,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":194,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":195,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":196,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":197,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod mark when index is absent.","lastModifiedDate":"2022-10-15"},{"lineNumber":198,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":199,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":200,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_noIndexModMark_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":201,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModMarkCommand.COMMAND_WORD + \" \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-15"},{"lineNumber":202,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_INDEX_EMPTY);","lastModifiedDate":"2022-10-15"},{"lineNumber":203,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":204,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":205,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":206,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod mark when mod is absent.","lastModifiedDate":"2022-10-15"},{"lineNumber":207,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":208,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":209,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_noModsModMark_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":210,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModMarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(),","lastModifiedDate":"2022-10-15"},{"lineNumber":211,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-10-15"},{"lineNumber":212,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":213,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":214,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":215,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod mark when mod is invalid.","lastModifiedDate":"2022-10-15"},{"lineNumber":216,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":217,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":218,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_invalidModModMark_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":219,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-15"},{"lineNumber":220,"author":{"gitId":"carriezhengjr"},"content":"                ModMarkCommand.COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"carriezhengjr"},"content":"                        + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-10-16"},{"lineNumber":222,"author":{"gitId":"carriezhengjr"},"content":"                        + \" \" + INVALID_MOD_STRING,","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"carriezhengjr"},"content":"                Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":224,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":225,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":226,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":227,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod mark when index is invalid.","lastModifiedDate":"2022-10-15"},{"lineNumber":228,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":229,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":230,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_invalidIndexModMark_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":231,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModMarkCommand.COMMAND_WORD + \" -1 \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-15"},{"lineNumber":232,"author":{"gitId":"carriezhengjr"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModMarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":233,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":234,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":235,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":236,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of marking 1 mod as taken.","lastModifiedDate":"2022-10-15"},{"lineNumber":237,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":238,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":239,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_markOneMod_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":240,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":241,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModMarkCommand.COMMAND_WORD + \" \" + targetIndex.getOneBased()","lastModifiedDate":"2022-10-15"},{"lineNumber":242,"author":{"gitId":"carriezhengjr"},"content":"                + \" \" + VALID_MOD_STRING_CS2103T;","lastModifiedDate":"2022-10-15"},{"lineNumber":243,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":244,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.singletonObservableList(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-15"},{"lineNumber":245,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand expectedCommand \u003d new ModMarkCommand(targetIndex, mods);","lastModifiedDate":"2022-10-15"},{"lineNumber":246,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":247,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":248,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":249,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":250,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":251,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of marking multiple mods as taken.","lastModifiedDate":"2022-10-15"},{"lineNumber":252,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":253,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":254,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_markMultipleMods_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":255,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":256,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModMarkCommand.COMMAND_WORD + \" \" + targetIndex.getOneBased()","lastModifiedDate":"2022-10-15"},{"lineNumber":257,"author":{"gitId":"carriezhengjr"},"content":"                + \" \" + VALID_MOD_STRING_CS2103T","lastModifiedDate":"2022-10-15"},{"lineNumber":258,"author":{"gitId":"carriezhengjr"},"content":"                + \" \" + VALID_MOD_STRING_CS2101","lastModifiedDate":"2022-10-15"},{"lineNumber":259,"author":{"gitId":"carriezhengjr"},"content":"                + \" \" + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-15"},{"lineNumber":260,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":261,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-15"},{"lineNumber":262,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":263,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-15"},{"lineNumber":264,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2101));","lastModifiedDate":"2022-10-15"},{"lineNumber":265,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand expectedCommand \u003d new ModMarkCommand(targetIndex, mods);","lastModifiedDate":"2022-10-15"},{"lineNumber":266,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":267,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":268,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":269,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":270,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":271,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod unmark when index is absent.","lastModifiedDate":"2022-10-16"},{"lineNumber":272,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":273,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":274,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_noIndexModUnmark_throwParseException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":275,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModUnmarkCommand.COMMAND_WORD + \" \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-16"},{"lineNumber":276,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_INDEX_EMPTY);","lastModifiedDate":"2022-10-16"},{"lineNumber":277,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":278,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":279,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":280,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod unmark when mod is absent.","lastModifiedDate":"2022-10-16"},{"lineNumber":281,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":282,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":283,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_noModsModUnmark_throwParseException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":284,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModUnmarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(),","lastModifiedDate":"2022-10-16"},{"lineNumber":285,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-10-16"},{"lineNumber":286,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":287,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":288,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":289,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod unmark when mod is invalid.","lastModifiedDate":"2022-10-16"},{"lineNumber":290,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":291,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":292,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_invalidModModUnmark_throwParseException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":293,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-16"},{"lineNumber":294,"author":{"gitId":"carriezhengjr"},"content":"                ModUnmarkCommand.COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":295,"author":{"gitId":"carriezhengjr"},"content":"                        + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-10-16"},{"lineNumber":296,"author":{"gitId":"carriezhengjr"},"content":"                        + \" \" + INVALID_MOD_STRING,","lastModifiedDate":"2022-10-16"},{"lineNumber":297,"author":{"gitId":"carriezhengjr"},"content":"                Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":298,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":299,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":300,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":301,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod unmark when index is invalid.","lastModifiedDate":"2022-10-16"},{"lineNumber":302,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":303,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":304,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_invalidIndexModUnmark_throwParseException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":305,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModUnmarkCommand.COMMAND_WORD + \" -1 \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-16"},{"lineNumber":306,"author":{"gitId":"carriezhengjr"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModUnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":307,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":308,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":309,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":310,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of unmarking 1 mod as not taken.","lastModifiedDate":"2022-10-16"},{"lineNumber":311,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":312,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":313,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_unmarkOneMod_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":314,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":315,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModUnmarkCommand.COMMAND_WORD + \" \" + targetIndex.getOneBased()","lastModifiedDate":"2022-10-16"},{"lineNumber":316,"author":{"gitId":"carriezhengjr"},"content":"                + \" \" + VALID_MOD_STRING_CS2103T;","lastModifiedDate":"2022-10-16"},{"lineNumber":317,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":318,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.singletonObservableList(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-16"},{"lineNumber":319,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand expectedCommand \u003d new ModUnmarkCommand(targetIndex, mods);","lastModifiedDate":"2022-10-16"},{"lineNumber":320,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":321,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":322,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":323,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":324,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":325,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of unmarking multiple mods as not taken.","lastModifiedDate":"2022-10-16"},{"lineNumber":326,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":327,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":328,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_unmarkMultipleMods_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":329,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":330,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModUnmarkCommand.COMMAND_WORD + \" \" + targetIndex.getOneBased()","lastModifiedDate":"2022-10-16"},{"lineNumber":331,"author":{"gitId":"carriezhengjr"},"content":"                + \" \" + VALID_MOD_STRING_CS2103T","lastModifiedDate":"2022-10-16"},{"lineNumber":332,"author":{"gitId":"carriezhengjr"},"content":"                + \" \" + VALID_MOD_STRING_CS2101","lastModifiedDate":"2022-10-16"},{"lineNumber":333,"author":{"gitId":"carriezhengjr"},"content":"                + \" \" + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-16"},{"lineNumber":334,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":335,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-16"},{"lineNumber":336,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2100));","lastModifiedDate":"2022-10-16"},{"lineNumber":337,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-16"},{"lineNumber":338,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2101));","lastModifiedDate":"2022-10-16"},{"lineNumber":339,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand expectedCommand \u003d new ModUnmarkCommand(targetIndex, mods);","lastModifiedDate":"2022-10-16"},{"lineNumber":340,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":341,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":342,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":343,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":344,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":5,"jonasgwt":86,"carriezhengjr":253}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    private static final String INVALID_GITHUB \u003d \" \";","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_MOD \u003d \"#CS2103\";","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"    private static final String VALID_GITHUB \u003d \"racheltan\";","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_MOD_1 \u003d \"CS2103\";","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_MOD_2 \u003d \"CS2101\";","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"sltsheryl"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"sltsheryl"},"content":"    public void parseGitHub_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_GITHUB));","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"sltsheryl"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"sltsheryl"},"content":"    public void parseGitHub_valid_returnsGitHub() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"sltsheryl"},"content":"        GitHub expectedGitHub \u003d new GitHub(VALID_GITHUB);","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"sltsheryl"},"content":"        assertEquals(expectedGitHub, ParserUtil.parseGitHub(VALID_GITHUB));","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"sltsheryl"},"content":"    public void parseTelegram_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTelegram((String) null));","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(INVALID_ADDRESS));","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"sltsheryl"},"content":"    public void parseTelegram_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"sltsheryl"},"content":"        Telegram expectedAddress \u003d new Telegram(VALID_ADDRESS);","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"sltsheryl"},"content":"        assertEquals(expectedAddress, ParserUtil.parseTelegram(VALID_ADDRESS));","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"sltsheryl"},"content":"        Telegram expectedAddress \u003d new Telegram(VALID_ADDRESS);","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"sltsheryl"},"content":"        assertEquals(expectedAddress, ParserUtil.parseTelegram(addressWithWhitespace));","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"jonasgwt"},"content":"    public void parseMod_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMod(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":223,"author":{"gitId":"jonasgwt"},"content":"    public void parseMod_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMod(INVALID_MOD));","lastModifiedDate":"2022-10-12"},{"lineNumber":225,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"jonasgwt"},"content":"    public void parseMod_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":229,"author":{"gitId":"jonasgwt"},"content":"        Mod expectedMod \u003d new Mod(VALID_MOD_1);","lastModifiedDate":"2022-10-12"},{"lineNumber":230,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(expectedMod, ParserUtil.parseMod(VALID_MOD_1));","lastModifiedDate":"2022-10-12"},{"lineNumber":231,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"jonasgwt"},"content":"    public void parseMod_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"jonasgwt"},"content":"        String modWithWhitespace \u003d WHITESPACE + VALID_MOD_1 + WHITESPACE;","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"jonasgwt"},"content":"        Mod expectedMod \u003d new Mod(VALID_MOD_1);","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(expectedMod, ParserUtil.parseMod(modWithWhitespace));","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":241,"author":{"gitId":"jonasgwt"},"content":"    public void parseMods_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":242,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMods(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":243,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":244,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":245,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":246,"author":{"gitId":"jonasgwt"},"content":"    public void parseMods_collectionWithInvalidMods_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":247,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMods(Arrays.asList(VALID_MOD_1, INVALID_MOD)));","lastModifiedDate":"2022-10-12"},{"lineNumber":248,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":249,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":250,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":251,"author":{"gitId":"jonasgwt"},"content":"    public void parseMods_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":252,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(ParserUtil.parseMods(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":254,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":255,"author":{"gitId":"sltsheryl"},"content":"    @SuppressWarnings(\"checkstyle:SingleSpaceSeparator\")","lastModifiedDate":"2022-10-13"},{"lineNumber":256,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"jonasgwt"},"content":"    public void parseMods_collectionWithValidMods_returnsModSet() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e actualModSet \u003d ParserUtil.parseMods(Arrays.asList(VALID_MOD_1, VALID_MOD_2));","lastModifiedDate":"2022-10-13"},{"lineNumber":259,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e expectedModSet \u003d FXCollections.observableArrayList(Arrays.asList(","lastModifiedDate":"2022-10-13"},{"lineNumber":260,"author":{"gitId":"sltsheryl"},"content":"                new Mod(VALID_MOD_2), new Mod(VALID_MOD_1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":261,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":262,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(expectedModSet, actualModSet);","lastModifiedDate":"2022-10-12"},{"lineNumber":263,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":264,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":265,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":266,"author":{"gitId":"jonasgwt"},"content":"    public void parseMods_collectionWithValidDuplicateMods_returnsModSet() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":267,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e actualModSet \u003d ParserUtil.parseMods(Arrays.asList(VALID_MOD_1, VALID_MOD_1));","lastModifiedDate":"2022-10-13"},{"lineNumber":268,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e expectedModSet \u003d FXCollections.observableArrayList(Arrays.asList(new Mod(VALID_MOD_1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":269,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":270,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(expectedModSet, actualModSet);","lastModifiedDate":"2022-10-12"},{"lineNumber":271,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"sltsheryl":31,"jonasgwt":54,"-":187}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"sltsheryl"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"sltsheryl"},"content":"        private final ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"sltsheryl":5,"-":99}},{"path":"src/test/java/seedu/address/model/person/ModTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"public class ModTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of the constructor when {@code modName} is null.","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Mod(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of the constructor when {@code modName} is invalid.","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"    public void constructor_invalidMod_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"        String invalidMod \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Mod(invalidMod));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of the {@code isValidModName} method","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"    public void isValidMod() {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"        // null mod","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e Mod.isValidModName(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"        // invalid mod names","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"\")); // empty string","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\" \")); // spaces only","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"this is a mod\")); // spaces within words","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"ALLWORDS\")); // all words","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"1234\")); // all numbers","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"cs2103\")); // not uppercase","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"CS2103t\")); // not uppercase","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"#CS@2103\")); // special characters","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"        // valid mod names","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Mod.isValidModName(\"CS1101\")); // regular mod name","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Mod.isValidModName(\"GESS1025\")); // mod with long prefix","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Mod.isValidModName(\"CS2103T\")); // mod name with letter(s) behind","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Mod.isValidModName(\"CS1231S\")); // mod name with letter(s) behind","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of the {@code isSameMod} method","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"    public void isSameMod() {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"        Mod mod \u003d new Mod(\"CS2103T\");","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"        // different mods","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(mod.isSameMod(new Mod(\"CS2103\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(mod.isSameMod(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"        // same mod","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(mod.isSameMod(mod));","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(mod.isSameMod(new Mod(\"CS2103T\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of the {@code getModCategory} method","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"    public void modCategory_correctAssigment() {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"        // CS Mods","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.COMP, new Mod(\"CS2100\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.COMP, new Mod(\"CS2103T\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.COMP, new Mod(\"CP2106\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.COMP, new Mod(\"IS1103\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"        // Math Mods","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.MATH, new Mod(\"ST2334\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.MATH, new Mod(\"MA1521\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.MATH, new Mod(\"MA2001\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"        // Sci Mods","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.SCI, new Mod(\"LSM1301\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.SCI, new Mod(\"CM1102\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.SCI, new Mod(\"PC1201\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"        // GE Mods","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.GE, new Mod(\"GEA1000\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.GE, new Mod(\"UTC1102B\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.GE, new Mod(\"GESS1025\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"        // COMMS Mods","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.COMMS, new Mod(\"ES2660\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"        // UE Mods","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.UE, new Mod(\"CFG1002\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jonasgwt":102}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"        // Keywords match phone, email, address and github username","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\",","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"chm252"},"content":"                \"AliceInTheWonderLand\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"Main Street\")","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"AliceInTheWonderLand\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"        // Keywords matching github username","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aliceinthewonderland\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"Main Street\")","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"AliceInTheWonderLand\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"        // Keywords containing partially-matching github username","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"chm252"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"wonderland\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"chm252"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"chm252"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"Main Street\")","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"AliceInTheWonderLand\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"chm252"},"content":"        // Keywords containing partially-matching telegram handle","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"chm252"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"shuai\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"chm252"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Handsome\").withPhone(\"999769\")","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"chm252"},"content":"                .withEmail(\"lengzai@email.com\").withTelegram(\"woShiDaShuaiGe\")","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"handsomelengzai888\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"chm252"},"content":"        // Keywords containing partially-matching telegram handle","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"chm252"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"999\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"chm252"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"mata\").withPhone(\"180099969\")","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"chm252"},"content":"                .withEmail(\"polis@email.com\").withTelegram(\"polis\")","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"iamPolis\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"chm252"},"content":"        // Array containing no matching keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"chm252"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"jonasGoh\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"chm252"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"Main Street\")","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"AliceInTheWonderLand\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"chm252"},"content":"        // Array containing no matching keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"chm252"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"999\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"chm252"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"chm252"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"Main Street\")","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"AliceInTheWonderLand\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chm252":43,"-":72}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"                .withTags(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"sltsheryl"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"sltsheryl":3,"-":88}},{"path":"src/test/java/seedu/address/model/person/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"public class TelegramTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Telegram(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Telegram(invalidAddress));","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"    public void isValidTelegram() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(NullPointerException.class, () -\u003e Telegram.isValidTelegram(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(Telegram.isValidTelegram(\"\")); // empty string","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(Telegram.isValidTelegram(\" \")); // spaces only","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(Telegram.isValidTelegram(\"fnnn\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(Telegram.isValidTelegram(\"-\")); // one character","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(Telegram.isValidTelegram(\"jammy12\")); // long address","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"sltsheryl":10,"-":26}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"sltsheryl"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"sltsheryl":3,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.testutil.TypicalPersons.TOM;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"    private static final String INVALID_TELEGRAM \u003d \" \";","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_GITHUB \u003d \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_MOD \u003d \"#CS2100\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"    private static final String VALID_GITHUB \u003d BENSON.getGitHub().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"    private static final String VALID_TELEGRAM \u003d BENSON.getTelegram().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"    private static final List\u003cJsonAdaptedMod\u003e VALID_MODS \u003d BENSON.getMods().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"            .map(JsonAdaptedMod::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_nullOptionalFields_returnsPerson() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(TOM);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(TOM, person.toModelType());","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM,","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"                        VALID_GITHUB, VALID_TAGS, VALID_MODS);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"            VALID_TELEGRAM, VALID_GITHUB, VALID_TAGS, VALID_MODS);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"                        VALID_TELEGRAM, VALID_GITHUB, VALID_TAGS, VALID_MODS);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"                        VALID_TELEGRAM, VALID_GITHUB, VALID_TAGS, VALID_MODS);","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_invalidHandle_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"                        INVALID_TELEGRAM, VALID_GITHUB, VALID_TAGS, VALID_MODS);","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"sltsheryl"},"content":"        String expectedMessage \u003d Telegram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_invalidUsername_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"jonasgwt"},"content":"                        VALID_TELEGRAM, INVALID_GITHUB, VALID_TAGS, VALID_MODS);","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"        String expectedMessage \u003d GitHub.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"jonasgwt"},"content":"                        VALID_TELEGRAM, VALID_GITHUB, invalidTags, VALID_MODS);","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_invalidMods_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"jonasgwt"},"content":"        List\u003cJsonAdaptedMod\u003e invalidMods \u003d new ArrayList\u003c\u003e(VALID_MODS);","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"carriezhengjr"},"content":"        invalidMods.add(new JsonAdaptedMod(INVALID_MOD, false));","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"jonasgwt"},"content":"                        VALID_TELEGRAM, VALID_GITHUB, VALID_TAGS, invalidMods);","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sltsheryl":6,"jonasgwt":39,"carriezhengjr":1,"-":83}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setTelegram(person.getTelegram());","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setGitHub(person.getGitHub());","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"     * Sets the {@code Telegram} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"    public EditPersonDescriptorBuilder withTelegram(String handle) {","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setTelegram(new Telegram(handle));","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"    public EditPersonDescriptorBuilder withGitHub(String username) {","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setGitHub(new GitHub(username));","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"     * Parses the {@code mods} into a {@code Set\u003cMod\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"     * that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"    public EditPersonDescriptorBuilder withMods(String... mods) {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e modSet \u003d Stream.of(mods).map(Mod::new).collect(","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"sltsheryl"},"content":"            Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"jonasgwt"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"sltsheryl":13,"jonasgwt":9,"-":88}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"amybee\";","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"    public static final String DEFAULT_GITHUB \u003d \"amybee\";","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"    private Telegram handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"    private GitHub username;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"    private ObservableList\u003cMod\u003e mods;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"        handle \u003d new Telegram(DEFAULT_TELEGRAM);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"        username \u003d new GitHub(DEFAULT_GITHUB);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"        mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"        handle \u003d personToCopy.getTelegram();","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"        username \u003d personToCopy.getGitHub();","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"        mods \u003d FXCollections.observableArrayList(personToCopy.getMods());","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"     * Parses the {@code mods} into a {@code Set\u003cMod\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"    public PersonBuilder withMods(String ... mods) {","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"        this.mods \u003d SampleDataUtil.getModSet(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"sltsheryl"},"content":"     * Sets the {@code Telegram} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"sltsheryl"},"content":"    public PersonBuilder withTelegram(String handle) {","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"sltsheryl"},"content":"        this.handle \u003d new Telegram(handle);","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"sltsheryl"},"content":"     * Sets the {@code GitHub} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"sltsheryl"},"content":"    public PersonBuilder withGitHub(String gitHub) {","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"sltsheryl"},"content":"        this.username \u003d new GitHub(gitHub);","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"sltsheryl"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":120,"author":{"gitId":"jonasgwt"},"content":"        return new Person(name, phone, email, handle, username, tags, mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"sltsheryl":24,"jonasgwt":8,"-":90}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"        sb.append(PREFIX_TELEGRAM + person.getTelegram().handle + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"        sb.append(PREFIX_GITHUB + person.getGitHub().username + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"        person.getMods().stream().forEach(","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"                s -\u003e sb.append(PREFIX_MOD + s.getModName() + \" \")","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"        );","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"        descriptor.getTelegram().ifPresent(telegram -\u003e sb.append(PREFIX_TELEGRAM).append(telegram.handle).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"        descriptor.getGitHub().ifPresent(github -\u003e sb.append(PREFIX_GITHUB).append(github.username).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"        if (descriptor.getMods().isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"            ObservableList\u003cMod\u003e mods \u003d descriptor.getMods().get();","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"            if (mods.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"                sb.append(PREFIX_MOD);","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"            } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"                mods.forEach(s -\u003e sb.append(PREFIX_MOD).append(s.getModName()).append(\" \"));","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"sltsheryl":8,"jonasgwt":12,"-":59}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"            .withTelegram(\"alice\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"            .withPhone(\"94351253\").withGitHub(\"alifur\")","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"            .withTags(\"friends\").withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"            .withTelegram(\"bensonhaha\").withGitHub(\"benji\")","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"            .withTags(\"owesMoney\", \"friends\").withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"            .withEmail(\"heinz@example.com\").withGitHub(\"carl69\")","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"            .withTelegram(\"magcarlsen\").withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"            .withEmail(\"cornelia@example.com\").withTelegram(\"dannylim\").withGitHub(\"dashi\")","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"            .withTags(\"friends\").withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"            .withEmail(\"werner@example.com\").withGitHub(\"goldl8ol\").withTelegram(\"ellie\")","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"            .withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"            .withEmail(\"lydia@example.com\").withGitHub(\"EDXs\").withTelegram(\"fionalim\")","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"            .withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"            .withEmail(\"anna@example.com\").withTelegram(\"georgesim\").withGitHub(\"pizzac0der\")","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"            .withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"    // Only optional fields filled","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"    public static final Person TOM \u003d new PersonBuilder().withName(\"Tom\").withTelegram(\"tom\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"            .withEmail(\"stefan@example.com\").withTelegram(\"hoonmeier\").withGitHub(\"coderhoon\")","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"            .withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"            .withGitHub(\"ida23\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"            .withEmail(\"hans@example.com\").withTelegram(\"idamul\").withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"            .withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"            .withGitHub(VALID_GITHUB_AMY).withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"            .withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB).withGitHub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withMods(\"CS2100\")","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"sltsheryl":14,"jonasgwt":17,"-":60}}]
