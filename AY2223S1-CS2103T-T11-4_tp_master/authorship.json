[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"    \u003cimg src\u003d\"docs/images/Logo.png\" width\u003d\"360\"\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"    \u003ca href\u003d\"https://github.com/AY2223S1-CS2103T-T11-4/tp/actions\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"        \u003cimg src\u003d\"https://github.com/AY2223S1-CS2103T-T11-4/tp/workflows/Java%20CI/badge.svg\" /\u003e\u003c/a\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"    \u003ca href\u003d\"https://codecov.io/gh/AY2223S1-CS2103T-T11-4/tp\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"        \u003cimg alt\u003d\"Coverage\" src\u003d\"https://codecov.io/gh/AY2223S1-CS2103T-T11-4/tp/branch/master/graph/badge.svg?token\u003dSQHP14Y75Q\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"    \u003c/a\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"Mass Linkers is a powerful Desktop application tool that helps Computer Science (CS) students find study support from batchmates, making it easier to form study groups and look for module-related guidance.\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"![](docs/images/Ui.png)","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"## Features","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"Mass Linkers provides the following features:","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"  * Save your CS batchmatesâ€™ module and contact details","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"  * Search for batchmates with common interests ","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"  * Search for batchmates who are taking or have taken similar modules","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"It is optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"## Getting started","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"To get started and download Mass Linkers, see the [Mass Linkers User Guide](https://ay2223s1-cs2103t-t11-4.github.io/tp/UserGuide.html).","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"## More Information","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"* For the detailed documentation of this project, see the [Mass Linkers Product Website](https://ay2223s1-cs2103t-t11-4.github.io/tp/).","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"* _This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)._","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"ElijahS67":9,"sltsheryl":21}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"mainClassName \u003d \u0027seedu.masslinkers.Main\u0027","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"    archiveFileName \u003d \u0027MassLinkers.jar\u0027","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"run {","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sltsheryl":1,"jonasgwt":5,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"We are Team Mass Linkers, a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"We strive to use our tech skills to solve problems faced by students and make peer support accessible and convenient for all. ","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"You can find out more about our work below or reach out to us via the portfolio links below.","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"### Chin Hong Ming","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"\u003cimg src\u003d\"images/chm252.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"[[github](http://github.com/chm252)]","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"[[portfolio](team/chm252.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"* Responsibilities: Model, Integration","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"### Sheryl-Lynn Tan","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"\u003cimg src\u003d\"images/sltsheryl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"[[github](https://github.com/sltsheryl)] [[portfolio](team/sltsheryl.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"* Responsibilities: UI, Student Information","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"### Zheng Jiarui","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"\u003cimg src\u003d\"images/carriezhengjr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"[[github](https://github.com/carriezhengjr)] [[portfolio](team/carriezhengjr.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"* Responsibilities: User Guide, Logic","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"### Elijah Seah","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"\u003cimg src\u003d\"images/elijahs67.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"ElijahS67"},"content":"[[github](https://github.com/elijahs67)]","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"ElijahS67"},"content":"[[portfolio](team/elijahs67.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ElijahS67"},"content":"* Responsibilities: Commons, Testing","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"### Jonas Goh","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"\u003cimg src\u003d\"images/jonasgwt.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"[[github](http://github.com/jonasgwt)]","lastModifiedDate":"2022-09-27"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"[[portfolio](team/jonasgwt.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"ElijahS67"},"content":"* Responsibilities: Storage","lastModifiedDate":"2022-10-31"}],"authorContributionMap":{"ElijahS67":6,"sltsheryl":11,"jonasgwt":4,"chm252":6,"carriezhengjr":4,"-":32}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test`â€‰â€”â€‰Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test`â€‰â€”â€‰Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message that mentions CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2223S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/masslinkers/MainApp.java).","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"sltsheryl"},"content":"2. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"sltsheryl"},"content":"3. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"4. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"sltsheryl":3,"carriezhengjr":2,"-":74}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"## **Overview**","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"Mass Linkers is a powerful Desktop application tool that helps **Computer Science (CS) students** find study support from batchmates.","lastModifiedDate":"2022-10-30"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"It provides a **centralised** platform for CS students to","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"* save their batchmatesâ€™ contact and module details","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"* search for batchmates with common interests or who are taking similar modules **conveniently**","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"It is optimised for use via a **Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"This *Developer Guide* provides general information for developers interested in understanding the design implementation of Mass Linkers for further development.","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-29"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-10-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-10-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"* This project is based on [AddressBook-Level3](https://se-education.org/addressbook-level3/) by [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5), [PlantUML](https://plantuml.com/).","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"* Font packages used: [Ancient Olive Sans Serif Font](https://www.downloadfonts.io/ancient-olive-sans-serif-font/).","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"* Logos used: [Flaticon](https://www.flaticon.com/free-icons/official).","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103T-T11-4/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"Given below is a quick overview of the main components and how they interact with each other.","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/masslinkers/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/masslinkers/MainApp.java). It is responsible for,","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"* At app launch: Initialises the components in the correct sequence and connects them up with each other.","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"* At shutdown: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"* [**`Storage`**](#storage-component): Reads data from and writes data to the hard disk.","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"sltsheryl"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2022-10-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class, which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"The sections below give more details about each component.","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"carriezhengjr"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/masslinkers/ui/Ui.java).","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StudentListPanel`, `ModListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class, which captures the commonalities between classes representing parts of the visible GUI.","lastModifiedDate":"2022-11-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts is defined in matching `.fxml` files in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/masslinkers/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-T11-4/tp/blob/master/src/main/resources/view/MainWindow.fxml).","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"sltsheryl"},"content":"* depends on some classes in the `Model` component, as it displays `Student` object residing in the `Model`.","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"carriezhengjr"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/masslinkers/logic/Logic.java)","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"sltsheryl"},"content":"1. When `Logic` is called upon to execute a command, it uses the `MassLinkersParser` class to parse the user command.","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"jonasgwt"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`), which is executed by the `LogicManager`.","lastModifiedDate":"2022-11-07"},{"lineNumber":119,"author":{"gitId":"sltsheryl"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a student).","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"jonasgwt"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X), but due to a limitation of PlantUML, the lifeline reaches the end of the diagram.","lastModifiedDate":"2022-11-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"jonasgwt"},"content":"* When called upon to parse a user command, the `MassLinkersParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name, e.g., `AddCommandParser`), which uses the other classes shown above to parse the user command and create an `XYZCommand` object (e.g., `AddCommand`) which the `MassLinkersParser` returns as a `Command` object.","lastModifiedDate":"2022-11-07"},{"lineNumber":135,"author":{"gitId":"jonasgwt"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g., during testing.","lastModifiedDate":"2022-11-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/masslinkers/model/Model.java)","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"jonasgwt"},"content":"* stores the mass linkers data, i.e., all `Student` objects (contained in a `UniqueStudentList` object).","lastModifiedDate":"2022-11-07"},{"lineNumber":146,"author":{"gitId":"sltsheryl"},"content":"* stores the currently \u0027selected\u0027 `Student` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"jonasgwt"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` object.","lastModifiedDate":"2022-11-07"},{"lineNumber":148,"author":{"gitId":"jonasgwt"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components).","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"jonasgwt"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has an `Interest` list in the `MassLinkers`, which `Student` references. This allows `MassLinkers` to only require one `Interest` object per unique tag, instead of each `Student` needing their own `Interest` objects.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"carriezhengjr"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/masslinkers/storage/Storage.java)","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"jonasgwt"},"content":"* can save both Mass Linker\u0027s data and user preference data in JSON format and read them back into corresponding objects.","lastModifiedDate":"2022-11-07"},{"lineNumber":165,"author":{"gitId":"sltsheryl"},"content":"* inherits from both `MassLinkersStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"jonasgwt"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`).","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"sltsheryl"},"content":"Classes used by multiple components are in the `seedu.masslinkers.commons` package.","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"sltsheryl"},"content":"### 1. Find Interest Feature","lastModifiedDate":"2022-10-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":180,"author":{"gitId":"ElijahS67"},"content":"#### Implementation","lastModifiedDate":"2022-10-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":182,"author":{"gitId":"ElijahS67"},"content":"The `FindInterestCommandParser` reads the specified interests entered by the student in `FindInterestCommandParser#parse`.","lastModifiedDate":"2022-10-22"},{"lineNumber":183,"author":{"gitId":"sltsheryl"},"content":"The specified interests are then passed as a `StudentContainsInterestPredicate` predicate for execution in `FindInterestCommand#execute`.","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":185,"author":{"gitId":"ElijahS67"},"content":"During execution, the interests of every batchmate will be tested against the aforementioned predicate.","lastModifiedDate":"2022-10-22"},{"lineNumber":186,"author":{"gitId":"carriezhengjr"},"content":"If all interests specified are found in a batchmate\u0027s interests, that batchmate will be filtered out and displayed.","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"ElijahS67"},"content":"The result would be a list of all batchmates that are filtered out.","lastModifiedDate":"2022-10-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":189,"author":{"gitId":"ElijahS67"},"content":"The following (partial) class diagram shows how the different classes involved in the find interest operation interact with one another:","lastModifiedDate":"2022-10-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":191,"author":{"gitId":"ElijahS67"},"content":"![FindInterestClassDiagram](images/FindInterestClassDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":193,"author":{"gitId":"jonasgwt"},"content":"The following activity diagram summarises what happens when a student enters a `findInt` command, assuming the command is valid, and no error occurs:","lastModifiedDate":"2022-11-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":195,"author":{"gitId":"ElijahS67"},"content":"![FindInterestActivityDiagram](images/FindInterestActivityDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":197,"author":{"gitId":"sltsheryl"},"content":"#### Design considerations","lastModifiedDate":"2022-10-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":199,"author":{"gitId":"ElijahS67"},"content":"**Aspect: How `findInt` executes:**","lastModifiedDate":"2022-10-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":201,"author":{"gitId":"ElijahS67"},"content":"* **Alternative 1 (current choice):** Finds all batchmates whose interests match all interests specified (i.e. a superset of those specified).","lastModifiedDate":"2022-10-19"},{"lineNumber":202,"author":{"gitId":"jonasgwt"},"content":"    * Pros: A specific search to find batchmates who have the same interests as the student. (Specifying `ai` and `swe` will result in a batchmate whose interests are `ai`, `swe` and `algo` to be displayed).","lastModifiedDate":"2022-10-30"},{"lineNumber":203,"author":{"gitId":"jonasgwt"},"content":"    * Cons: Search might be too narrow since it excludes batchmates that have some but not all the interests specified. (Specifying `ai` and `swe` will not result in a batchmate whose only interest is `ai` to be displayed).","lastModifiedDate":"2022-10-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":205,"author":{"gitId":"jonasgwt"},"content":"* **Alternative 2:** Finds all batchmates whose interests match at least one specified interest.","lastModifiedDate":"2022-11-07"},{"lineNumber":206,"author":{"gitId":"jonasgwt"},"content":"    * Pros: A more general search might be useful for finding a greater number of batchmates who share some of the interests of the student.","lastModifiedDate":"2022-11-07"},{"lineNumber":207,"author":{"gitId":"jonasgwt"},"content":"    * Cons: It diminishes the usefulness of searching for multiple interests at once if a general search is implemented. The purpose of specifying multiple interests is so that the search results would be specific.","lastModifiedDate":"2022-11-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":209,"author":{"gitId":"carriezhengjr"},"content":"### 2. Mod Mark Feature","lastModifiedDate":"2022-11-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":211,"author":{"gitId":"carriezhengjr"},"content":"#### Implementation","lastModifiedDate":"2022-10-16"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"carriezhengjr"},"content":"The `ModCommandParser` implements the operation `ModCommandParser#parseMarkCommand(String args)` to read inputs entered by the student for execution in `ModMarkCommand`. `ModMarkCommand` extends `ModCommand` to execute the `mod mark` command.","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":215,"author":{"gitId":"jonasgwt"},"content":"During execution, all modules specified by the student are marked in the `Student` class with the operation `Student#markMods(ObservableList\u003cMod\u003e mods)`. This is because the list of modules is stored and associated with a `Student`. Hence any updates on the module status in the current list of modules will be handled in `Student`. Each individual module is then marked in the `Mod` class with the operation `Mod#markMod()`.","lastModifiedDate":"2022-11-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":217,"author":{"gitId":"jonasgwt"},"content":"The following (partial) class diagram shows how the different classes involved in the mod mark operation interact with one another:","lastModifiedDate":"2022-11-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"carriezhengjr"},"content":"![ModMarkClassDiagram](images/ModMarkClassDiagram.png)","lastModifiedDate":"2022-10-16"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"jonasgwt"},"content":"The following activity diagram summarises what happens when a student enters a `mod mark` command, assuming the command is valid, and no error occurs:","lastModifiedDate":"2022-11-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"carriezhengjr"},"content":"![ModMarkWithLoopActivityDiagram](images/ModMarkActivityDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":225,"author":{"gitId":"sltsheryl"},"content":"#### Design considerations","lastModifiedDate":"2022-10-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":227,"author":{"gitId":"carriezhengjr"},"content":"**Aspect: How `mod mark` executes:**","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":229,"author":{"gitId":"carriezhengjr"},"content":"* **Alternative 1 (current choice):** Marks mods of a batchmate whose index is specified.","lastModifiedDate":"2022-10-16"},{"lineNumber":230,"author":{"gitId":"carriezhengjr"},"content":"    * Pros: Easier to implement. Shorter command to enter.","lastModifiedDate":"2022-10-16"},{"lineNumber":231,"author":{"gitId":"jonasgwt"},"content":"    * Cons: May be hard to find and locate the index of the batchmate, especially when the list of batchmates is long.","lastModifiedDate":"2022-11-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":233,"author":{"gitId":"carriezhengjr"},"content":"* **Alternative 2:** Marks mods of a batchmate whose name is specified.","lastModifiedDate":"2022-10-16"},{"lineNumber":234,"author":{"gitId":"carriezhengjr"},"content":"    * Pros: Easier to find the batchmate by directly entering the name.","lastModifiedDate":"2022-10-16"},{"lineNumber":235,"author":{"gitId":"jonasgwt"},"content":"    * Cons: Full name of the batchmate has to be specified. It may take more time to enter the name, especially for long and complicated names.","lastModifiedDate":"2022-11-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":237,"author":{"gitId":"carriezhengjr"},"content":"### 3. Mod Find Feature","lastModifiedDate":"2022-11-07"},{"lineNumber":238,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":239,"author":{"gitId":"chm252"},"content":"#### Implementation","lastModifiedDate":"2022-10-22"},{"lineNumber":240,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":241,"author":{"gitId":"chm252"},"content":"The `ModCommandParser` implements the operation `ModCommandParser#parseFindCommand(String args)` to read inputs entered by the student for execution in `ModFindCommand`. `ModFindCommand` extends `ModCommand` to execute the `mod find` command.","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":243,"author":{"gitId":"chm252"},"content":"During execution, the user inputs of module codes are passed into a `List` to `ModContainsKeywordsPredicate`.","lastModifiedDate":"2022-10-20"},{"lineNumber":244,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":245,"author":{"gitId":"carriezhengjr"},"content":"For simplicity, we will call this `List` of module codes `keywords`. `ModContainsKeywordsPredicate#test(Student student)` returns `true` for a particular `Student` only if every element in `keywords` is in `Mod` of this `Student` (stored as `ObservableList\u003cMod\u003e`).","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":247,"author":{"gitId":"jonasgwt"},"content":"Checking whether the elements in the `keywords` and `Mod` match each other is done by the `StringUtil#containsWordIgnoreCase(String sentence, String word)`.","lastModifiedDate":"2022-11-07"},{"lineNumber":248,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":249,"author":{"gitId":"carriezhengjr"},"content":"The result of `ModContainsKeywordsPredicate#test(Student student)` is then used by `Model#updateFilteredStudentList` to filter those `Student` with the specified module(s) when `ModFindCommand#execute(Model model)` is called.","lastModifiedDate":"2022-10-27"},{"lineNumber":250,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":251,"author":{"gitId":"jonasgwt"},"content":"The following sequence diagram shows how the different classes involved in the `mod find` operation interact with one another:","lastModifiedDate":"2022-11-07"},{"lineNumber":252,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":253,"author":{"gitId":"chm252"},"content":"![ModFindSequenceDiagram](images/ModFindSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":254,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":255,"author":{"gitId":"jonasgwt"},"content":"The following activity diagram summarises what happens when a student enters a `mod find` command, assuming the command is valid, and no error occurs:","lastModifiedDate":"2022-11-07"},{"lineNumber":256,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":257,"author":{"gitId":"chm252"},"content":"![ModFindActivityDiagram](images/ModFindActivityDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":258,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":259,"author":{"gitId":"sltsheryl"},"content":"#### Design considerations","lastModifiedDate":"2022-10-29"},{"lineNumber":260,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":261,"author":{"gitId":"carriezhengjr"},"content":"**Aspect: How `mod find` executes:**","lastModifiedDate":"2022-10-27"},{"lineNumber":262,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":263,"author":{"gitId":"carriezhengjr"},"content":"* **Alternative 1 (current choice):** Modules will be identified only if user inputs fully match the module code. For instance, `mod find cs1231` does not return batchmates with the module `CS1231S` (lacking an \"S\").","lastModifiedDate":"2022-10-27"},{"lineNumber":264,"author":{"gitId":"carriezhengjr"},"content":"    * Pros: Reduces confusion. Requiring exact module code will display batchmates that are tailored to the specifications, reducing the need to manually filter through the list of `Student`. Imagine that if the system allows partial matching of module codes, typing `mod find cs` yields all Computer Science batchmates with modules having the code \"CS\" to be displayed.","lastModifiedDate":"2022-10-27"},{"lineNumber":265,"author":{"gitId":"chm252"},"content":"    * Cons: If the desired module code is so unique that partial matching can suffice to pinpoint the module, requiring a fully matching input would cause some inconvenience to the user.","lastModifiedDate":"2022-10-20"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":267,"author":{"gitId":"carriezhengjr"},"content":"* **Alternative 2:** Modules can be identified by partially matching inputs of module codes. For instance, `mod find 123` will return `Student` with the module `CS1231S`.","lastModifiedDate":"2022-10-27"},{"lineNumber":268,"author":{"gitId":"carriezhengjr"},"content":"    * Pros: Shorter commands to enter and grants greater convenience to users.","lastModifiedDate":"2022-10-27"},{"lineNumber":269,"author":{"gitId":"jonasgwt"},"content":"    * Cons: If many module codes share the same partial module code that the user inputs, many batchmates will be returned, rendering the `mod find` function ineffective as users still need to manually search for batchmates with the desired module.","lastModifiedDate":"2022-11-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":271,"author":{"gitId":"sltsheryl"},"content":"### 4. Module Categorisation","lastModifiedDate":"2022-10-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":273,"author":{"gitId":"sltsheryl"},"content":"#### Implementation","lastModifiedDate":"2022-10-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":275,"author":{"gitId":"jonasgwt"},"content":"Module categorisation is handled by `ParserUtil#parseModsToCategory(String modName)`.","lastModifiedDate":"2022-10-18"},{"lineNumber":276,"author":{"gitId":"jonasgwt"},"content":"A category is assigned to every mod upon creating it through its constructor.","lastModifiedDate":"2022-10-18"},{"lineNumber":277,"author":{"gitId":"jonasgwt"},"content":"This categorisation is not saved in Storage.","lastModifiedDate":"2022-10-18"},{"lineNumber":278,"author":{"gitId":"jonasgwt"},"content":"The module categories can be viewed [here](UserGuide.md# module-categorisation).","lastModifiedDate":"2022-10-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":280,"author":{"gitId":"jonasgwt"},"content":"Upon calling the constructor of `Mod` to create a new instance, the constructor","lastModifiedDate":"2022-10-18"},{"lineNumber":281,"author":{"gitId":"jonasgwt"},"content":"will then call `ParserUtil#parseModsToCategory(String modName)` which returns a `ModCategory`","lastModifiedDate":"2022-10-18"},{"lineNumber":282,"author":{"gitId":"jonasgwt"},"content":"corresponding to the `modName`.","lastModifiedDate":"2022-10-18"},{"lineNumber":283,"author":{"gitId":"jonasgwt"},"content":"A new `Mod` instance with its `modName` and `modCategory` is created.","lastModifiedDate":"2022-10-18"},{"lineNumber":284,"author":{"gitId":"jonasgwt"},"content":"This `modCategory` will later be used to colour code mods in the UI.","lastModifiedDate":"2022-10-18"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":286,"author":{"gitId":"jonasgwt"},"content":"The (partial) sequence diagram below shows the categorisation of a new mod when","lastModifiedDate":"2022-10-18"},{"lineNumber":287,"author":{"gitId":"jonasgwt"},"content":"its constructor is called in `JsonAdaptedMod`.","lastModifiedDate":"2022-10-18"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":289,"author":{"gitId":"jonasgwt"},"content":"![ModCategorisationSequenceDiagram](images/ModCategorisationSequenceDiagram.png)","lastModifiedDate":"2022-10-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":291,"author":{"gitId":"jonasgwt"},"content":"The (partial) activity diagram below summarises what happens when a new mod is created in `JsonAdaptedMod`","lastModifiedDate":"2022-10-18"},{"lineNumber":292,"author":{"gitId":"jonasgwt"},"content":"assuming no errors occur.","lastModifiedDate":"2022-10-18"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":294,"author":{"gitId":"jonasgwt"},"content":"![ModCategorisationActivityDiagram](images/ModCategorisationActivityDiagram.png)","lastModifiedDate":"2022-10-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":296,"author":{"gitId":"jonasgwt"},"content":"Activity: Determines and returns a category.","lastModifiedDate":"2022-10-27"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":298,"author":{"gitId":"jonasgwt"},"content":"![ModCategorisationActivityDiagramRake](images/ModCategorisationActivityDiagramRake.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":300,"author":{"gitId":"sltsheryl"},"content":"#### Design considerations","lastModifiedDate":"2022-10-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":302,"author":{"gitId":"jonasgwt"},"content":"**Aspect: How categorisation is handled:**","lastModifiedDate":"2022-10-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":304,"author":{"gitId":"jonasgwt"},"content":"* **Alternative 1 (current choice):** All categorisation is handled upon creation of a `Mod` instance.","lastModifiedDate":"2022-10-18"},{"lineNumber":305,"author":{"gitId":"jonasgwt"},"content":"    * Pros: Easier to implement. Less bug-prone. No need to save mod categorisation.","lastModifiedDate":"2022-10-18"},{"lineNumber":306,"author":{"gitId":"jonasgwt"},"content":"    * Cons: User is unable to edit the mod categories. Lowers performance.","lastModifiedDate":"2022-10-18"},{"lineNumber":307,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":308,"author":{"gitId":"jonasgwt"},"content":"* **Alternative 2:** Categories of mods are saved into Storage.","lastModifiedDate":"2022-10-18"},{"lineNumber":309,"author":{"gitId":"sltsheryl"},"content":"    * Pros: Users can edit mod categories with fewer changes to the code base. Increased performance.","lastModifiedDate":"2022-10-27"},{"lineNumber":310,"author":{"gitId":"jonasgwt"},"content":"    * Cons: Increased complexity.","lastModifiedDate":"2022-10-18"},{"lineNumber":311,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":312,"author":{"gitId":"sltsheryl"},"content":"### 5. Add Interest Feature","lastModifiedDate":"2022-10-29"},{"lineNumber":313,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":314,"author":{"gitId":"carriezhengjr"},"content":"#### Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":315,"author":{"gitId":"sltsheryl"},"content":"The ```addInt``` command allows students to add one or more interests to a batchmate by indicating the index held by the batchmate and the list of interests to be added.","lastModifiedDate":"2022-10-27"},{"lineNumber":316,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":317,"author":{"gitId":"sltsheryl"},"content":"The command takes in two arguments:","lastModifiedDate":"2022-10-27"},{"lineNumber":318,"author":{"gitId":"sltsheryl"},"content":"- ```Index``` targetIndex","lastModifiedDate":"2022-10-27"},{"lineNumber":319,"author":{"gitId":"sltsheryl"},"content":"- ```Set\u003cInterest\u003e``` interests","lastModifiedDate":"2022-10-27"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"carriezhengjr"},"content":"Each ```Student``` has a ```Set``` of ```Interest```. Adding an ```Interest``` to a batchmate would add to the set of ```Interest``` of the ```Student``` with the ```targetIndex```. The Add Interest mechanism is facilitated by ```AddInterestCommand```, which extends from ```Command``` and ```AddInterestCommandParser```, which extends from","lastModifiedDate":"2022-10-27"},{"lineNumber":322,"author":{"gitId":"sltsheryl"},"content":"```Parser```. ```AddInterestCommandParser``` serves to parse the command arguments and create a new ```AddInterestCommand``` object. ```AddInterestCommand```handles adding the ```Interest``` to the set of ```Interest``` of the ```Student```.","lastModifiedDate":"2022-10-27"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"carriezhengjr"},"content":"Below are the steps:","lastModifiedDate":"2022-10-27"},{"lineNumber":325,"author":{"gitId":"sltsheryl"},"content":"1. When the student enters the ```addInt``` command, the ```LogicManager``` is executed and it calls the ```MassLinkersParser``` to parse the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":326,"author":{"gitId":"sltsheryl"},"content":"2. A new ```AddInterestCommandParser``` object is constructed.","lastModifiedDate":"2022-10-21"},{"lineNumber":327,"author":{"gitId":"sltsheryl"},"content":"3. ```AddInterestCommandParser#parse``` parses the command arguments and returns a set of Interests. A new ```AddInterestCommand``` is constructed.","lastModifiedDate":"2022-10-21"},{"lineNumber":328,"author":{"gitId":"sltsheryl"},"content":"4. ```AddInterestCommand``` is returned to the ```LogicManager```, which invokes ```AddInterestCommand#execute```.","lastModifiedDate":"2022-10-20"},{"lineNumber":329,"author":{"gitId":"sltsheryl"},"content":"5. The ```Index``` is verified to be valid and if so, the list of interests is added to the ```Student``` marked by ```Index```.","lastModifiedDate":"2022-10-26"},{"lineNumber":330,"author":{"gitId":"sltsheryl"},"content":"6. ```Student``` is updated with the added interests. ```ModelManager``` will also be updated with the changes.","lastModifiedDate":"2022-10-26"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"ElijahS67"},"content":"The sequence diagram for the command ```addInt 1 algo``` is as follows.","lastModifiedDate":"2022-10-27"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"sltsheryl"},"content":"![AddInterestSequenceDiagram](images/AddInterestSequenceDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"jonasgwt"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddInterestCommandParser` should end at the destroy marker (X), but due to a limitation of PlantUML, the lifeline reaches the end of the diagram.","lastModifiedDate":"2022-11-07"},{"lineNumber":337,"author":{"gitId":"sltsheryl"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":338,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":339,"author":{"gitId":"carriezhengjr"},"content":"In addition, the sequence diagram below illustrates how the ```AddInterestCommand``` interacts with ```Model``` to update the added interests in Mass Linkers.","lastModifiedDate":"2022-10-27"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"sltsheryl"},"content":"![AddInterestRefSequenceDiagram](images/AddInterestRefSequenceDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"sltsheryl"},"content":"#### Design considerations","lastModifiedDate":"2022-10-29"},{"lineNumber":344,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":345,"author":{"gitId":"carriezhengjr"},"content":"**Aspect: Usefulness of ```AddInterestCommand```:**","lastModifiedDate":"2022-10-27"},{"lineNumber":346,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":347,"author":{"gitId":"carriezhengjr"},"content":"* The current ```EditCommand``` allows users to update interests. However, this involves overwriting all the current interests. Hence, ```addInt``` is useful to provide a quick way to add new interests to a ```Student```.","lastModifiedDate":"2022-10-27"},{"lineNumber":348,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":349,"author":{"gitId":"carriezhengjr"},"content":"**Aspect: Managing the List of Interests:**","lastModifiedDate":"2022-10-27"},{"lineNumber":350,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":351,"author":{"gitId":"carriezhengjr"},"content":"* **Alternative 1 (current choice):** Store the set of```Interest``` as a field in the ```Student``` class.","lastModifiedDate":"2022-10-27"},{"lineNumber":352,"author":{"gitId":"carriezhengjr"},"content":"    * Pros: Easier to implement. The use of a ```HashSet``` can handle duplicates.","lastModifiedDate":"2022-10-27"},{"lineNumber":353,"author":{"gitId":"sltsheryl"},"content":"    * Cons: There is less abstraction as the logic of getting the list and adding to the list is handled by ```Student```.","lastModifiedDate":"2022-10-26"},{"lineNumber":354,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":355,"author":{"gitId":"carriezhengjr"},"content":"* **Alternative 2:** Have a ```UniqueInterestList``` to handle the list of Interests (similar to that of ```UniqueStudentList```).","lastModifiedDate":"2022-10-27"},{"lineNumber":356,"author":{"gitId":"jonasgwt"},"content":"    * Pros: The low-level details of adding, removing and checking the interests are abstracted. There is greater adherence to the Single Responsibility Principle as the list of interests is handled by the ```UniqueInterestList``` class.","lastModifiedDate":"2022-11-07"},{"lineNumber":357,"author":{"gitId":"jonasgwt"},"content":"    * Cons: The number of ```Interest``` is usually not that large, so Alternative 2 could result in unnecessary implementation overhead.","lastModifiedDate":"2022-11-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":359,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"ElijahS67"},"content":"* Computer Science students at NUS \u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":378,"author":{"gitId":"carriezhengjr"},"content":"    * Provides a centralised platform for Computer Science (CS) students to find study support from batchmates with common modules. It allows students to save their CS batchmatesâ€™ contact details in one place, find common modules and form study groups.","lastModifiedDate":"2022-10-28"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":380,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":381,"author":{"gitId":"jonasgwt"},"content":"**Value proposition**: Easily find batchmates to form study groups or ask for module-related advice.","lastModifiedDate":"2022-11-07"},{"lineNumber":382,"author":{"gitId":"ElijahS67"},"content":"* Provides a centralised platform for students to share their contact info for easier communication.","lastModifiedDate":"2022-10-27"},{"lineNumber":383,"author":{"gitId":"jonasgwt"},"content":"* Provides convenience for students to find batchmates who are taking the same modules or have the same interests.","lastModifiedDate":"2022-11-07"},{"lineNumber":384,"author":{"gitId":"ElijahS67"},"content":"* Provides convenience for students to find batchmates who have taken their mods before to ask them for module-related advice.","lastModifiedDate":"2022-10-27"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹            | I want to â€¦â€‹                                                                          | So that I canâ€¦â€‹                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"chm252"},"content":"|----------|--------------------|---------------------------------------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-10-27"},{"lineNumber":393,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | add my batchmates to Mass Linkers                                                     | keep track of information about the people I have met                  |","lastModifiedDate":"2022-10-27"},{"lineNumber":394,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | add my batchmateâ€™s name                                                               | identify their details                                                 |","lastModifiedDate":"2022-10-27"},{"lineNumber":395,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | add my batchmateâ€™s phone number                                                       | message or call them, especially in urgent situations.                 |","lastModifiedDate":"2022-10-27"},{"lineNumber":396,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | add my batchmateâ€™s telegram handle                                                    | contact and chat with them conveniently                                |","lastModifiedDate":"2022-10-27"},{"lineNumber":397,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | add my batchmateâ€™s email address                                                      | share documents and files with them                                    |","lastModifiedDate":"2022-10-27"},{"lineNumber":398,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | add my batchmateâ€™s GitHub usernames                                                   | find their profiles                                                    |","lastModifiedDate":"2022-10-27"},{"lineNumber":399,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | edit the list of batchmates in Mass Linkers                                           | keep them up to date                                                   |","lastModifiedDate":"2022-10-27"},{"lineNumber":400,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | choose the batchmate I want to edit                                                   | write to the correct person                                            |","lastModifiedDate":"2022-10-28"},{"lineNumber":401,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | edit my batchmateâ€™s name                                                              | change the alias or amend if I keyed in wrongly                        |","lastModifiedDate":"2022-10-28"},{"lineNumber":402,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | edit my batchmateâ€™s phone number                                                      | change it accordingly when they change                                 |","lastModifiedDate":"2022-10-28"},{"lineNumber":403,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | edit my batchmateâ€™s telegram handle                                                   | change it accordingly when they change                                 |","lastModifiedDate":"2022-10-28"},{"lineNumber":404,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | edit my batchmateâ€™s GitHub usernames                                                  | change it accordingly when they change                                 |","lastModifiedDate":"2022-10-28"},{"lineNumber":405,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | search and access the list of batchmates I have in Mass Linkers                       |                                                                        |","lastModifiedDate":"2022-10-28"},{"lineNumber":406,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | easily search for a specific person by their name / GitHub username / Telegram handle | quickly get their details                                              |","lastModifiedDate":"2022-10-28"},{"lineNumber":407,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | find a list of batchmates that share the same interests as me                         | find batchmates to whom I can better relate to                         |","lastModifiedDate":"2022-10-28"},{"lineNumber":408,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | search the list of batchmates by the mods they have or are taking                     | ask them about the mod when I have a module-specific doubt             |","lastModifiedDate":"2022-10-28"},{"lineNumber":409,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | add, edit and see what mods my batchmates have taken or are taking                    | ask them module-related questions when I have any doubts               |","lastModifiedDate":"2022-10-28"},{"lineNumber":410,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | add a mod to the list of mods for the selected batchmate                              |                                                                        |","lastModifiedDate":"2022-10-28"},{"lineNumber":411,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | delete a mod from the list of mods for the selected batchmate                         |                                                                        |","lastModifiedDate":"2022-10-28"},{"lineNumber":412,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | easily see the mods a selected batchmate is currently taking or has taken             |                                                                        |","lastModifiedDate":"2022-10-28"},{"lineNumber":413,"author":{"gitId":"chm252"},"content":"| `* * *`  | student            | mark a mod as completed or is currently taking for a particular person                | know whether he or she is taking the module or has taken the module    |","lastModifiedDate":"2022-10-28"},{"lineNumber":414,"author":{"gitId":"chm252"},"content":"| `* *`    | student            | view mods colour-coded by their mod type                                              | easily identify the mods                                               |","lastModifiedDate":"2022-10-27"},{"lineNumber":415,"author":{"gitId":"chm252"},"content":"| `* *`    | user               | fully utilise Mass Linkers with an easy-to-use interface                              |                                                                        | ","lastModifiedDate":"2022-10-27"},{"lineNumber":416,"author":{"gitId":"chm252"},"content":"| `* *`    | user               | view all the available commands                                                       | know what to type for the various functions                            |","lastModifiedDate":"2022-10-27"},{"lineNumber":417,"author":{"gitId":"chm252"},"content":"| `* *`    | user               | have a clean and polished interface that is aesthetically pleasing                    |                                                                        |","lastModifiedDate":"2022-10-28"},{"lineNumber":418,"author":{"gitId":"chm252"},"content":"| `* *`    | busy user          | have an interface that is self-explanatory                                            | reduce time spent on learning how to use the program                   |","lastModifiedDate":"2022-10-28"},{"lineNumber":419,"author":{"gitId":"chm252"},"content":"| `* *`    | user               | close the application with a command instead of using the mouse to close the window   |                                                                        |","lastModifiedDate":"2022-10-28"},{"lineNumber":420,"author":{"gitId":"chm252"},"content":"| `* *`    | student            | save and export the data                                                              | the address book has greater scalability and can be shared with others | ","lastModifiedDate":"2022-10-28"},{"lineNumber":421,"author":{"gitId":"chm252"},"content":"| `* *`    | student            | save my data to a file and use it on another computer                                 | access the data on different devices                                   |","lastModifiedDate":"2022-10-28"},{"lineNumber":422,"author":{"gitId":"chm252"},"content":"| `* *`    | student            | export the data                                                                       | share it with my friends                                               |","lastModifiedDate":"2022-10-28"},{"lineNumber":423,"author":{"gitId":"chm252"},"content":"| `* *`    | user               | have a comprehensive and comprehensible documentation                                 | easily access all the information about Mass Linkers                   | ","lastModifiedDate":"2022-10-28"},{"lineNumber":424,"author":{"gitId":"chm252"},"content":"| `* *`    | user               | have a help page with Frequently Asked Questions (FAQ)                                | self-diagnose any issues I may encounter                               |","lastModifiedDate":"2022-10-28"},{"lineNumber":425,"author":{"gitId":"chm252"},"content":"| `* *`    | technical user     | have a short installation guide with concrete steps on how to run the program         | set it up on my own with some technical knowledge                      |","lastModifiedDate":"2022-10-28"},{"lineNumber":426,"author":{"gitId":"chm252"},"content":"| `* *`    | advanced user      | have a short guide to all the commands/functions I can do in the application          | save time                                                              |","lastModifiedDate":"2022-10-28"},{"lineNumber":427,"author":{"gitId":"chm252"},"content":"| `*`      | non-technical user | have an installation video guide                                                      | follow and run the program without much technical knowledge            | ","lastModifiedDate":"2022-10-27"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":430,"author":{"gitId":"sltsheryl"},"content":"(For all use cases below, the **System** is Mass Linkers and the **Actor** is the student, unless specified otherwise)","lastModifiedDate":"2022-10-14"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"sltsheryl"},"content":"**Use case 1: Add a batchmateâ€™s information**","lastModifiedDate":"2022-10-09"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":434,"author":{"gitId":"sltsheryl"},"content":"**MSS**","lastModifiedDate":"2022-09-26"},{"lineNumber":435,"author":{"gitId":"sltsheryl"},"content":"1. Student chooses to add a batchmate\u0027s contact.","lastModifiedDate":"2022-10-09"},{"lineNumber":436,"author":{"gitId":"sltsheryl"},"content":"2. Student enters batchmate\u0027s particulars.","lastModifiedDate":"2022-10-09"},{"lineNumber":437,"author":{"gitId":"sltsheryl"},"content":"3. Mass Linkers adds batchmate to current list of batchmates. \\","lastModifiedDate":"2022-10-09"},{"lineNumber":438,"author":{"gitId":"sltsheryl"},"content":"   Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":439,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":440,"author":{"gitId":"sltsheryl"},"content":"**Extensions**","lastModifiedDate":"2022-09-26"},{"lineNumber":441,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-09"},{"lineNumber":442,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file. \\","lastModifiedDate":"2022-10-09"},{"lineNumber":443,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":444,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":445,"author":{"gitId":"sltsheryl"},"content":"**Use case 2: Remove a batchmate**","lastModifiedDate":"2022-10-09"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"sltsheryl"},"content":"1. Student requests for the list of batchmates.","lastModifiedDate":"2022-10-09"},{"lineNumber":449,"author":{"gitId":"sltsheryl"},"content":"2. Mass Linkers shows the current list of batchmates.","lastModifiedDate":"2022-10-09"},{"lineNumber":450,"author":{"gitId":"sltsheryl"},"content":"3. Student requests to delete a specific batchmate in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":451,"author":{"gitId":"sltsheryl"},"content":"4. Mass Linkers deletes the specified batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":452,"author":{"gitId":"sltsheryl"},"content":"   \\","lastModifiedDate":"2022-09-26"},{"lineNumber":453,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"sltsheryl"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":457,"author":{"gitId":"sltsheryl"},"content":"  \\","lastModifiedDate":"2022-09-27"},{"lineNumber":458,"author":{"gitId":"sltsheryl"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":459,"author":{"gitId":"ElijahS67"},"content":"* 3a. Mass Linkers detects an incorrect phone number in the entered command.","lastModifiedDate":"2022-10-30"},{"lineNumber":460,"author":{"gitId":"ElijahS67"},"content":"    * 3a1. Mass Linkers warns the user that the phone number is incorrect.","lastModifiedDate":"2022-10-30"},{"lineNumber":461,"author":{"gitId":"ElijahS67"},"content":"      \\","lastModifiedDate":"2022-10-30"},{"lineNumber":462,"author":{"gitId":"ElijahS67"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2022-10-30"},{"lineNumber":463,"author":{"gitId":"ElijahS67"},"content":"* 3b. The specified batchmate is not found.","lastModifiedDate":"2022-10-30"},{"lineNumber":464,"author":{"gitId":"ElijahS67"},"content":"    * 3b1. Mass Linkers detects an error in specified batchmate (invalid index).","lastModifiedDate":"2022-10-30"},{"lineNumber":465,"author":{"gitId":"ElijahS67"},"content":"    * 3b2. Mass Linkers requests for a valid batchmate.","lastModifiedDate":"2022-10-30"},{"lineNumber":466,"author":{"gitId":"ElijahS67"},"content":"    * Steps 3b1-3b2 are repeated until a valid index is given.","lastModifiedDate":"2022-10-30"},{"lineNumber":467,"author":{"gitId":"ElijahS67"},"content":"      \\","lastModifiedDate":"2022-10-30"},{"lineNumber":468,"author":{"gitId":"ElijahS67"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2022-10-30"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-09"},{"lineNumber":471,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file.","lastModifiedDate":"2022-10-09"},{"lineNumber":472,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-09-26"},{"lineNumber":473,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":474,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":475,"author":{"gitId":"ElijahS67"},"content":"**Use case 3: Add an interest to a batchmate**","lastModifiedDate":"2022-10-27"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":477,"author":{"gitId":"sltsheryl"},"content":"**MSS**","lastModifiedDate":"2022-09-26"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":479,"author":{"gitId":"ElijahS67"},"content":"1. Student chooses to add an interest to a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":480,"author":{"gitId":"sltsheryl"},"content":"2. Mass Linkers searches through the list of batchmates for the selected batchmate.","lastModifiedDate":"2022-10-09"},{"lineNumber":481,"author":{"gitId":"ElijahS67"},"content":"3. Mass Linkers adds the interests to the batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":482,"author":{"gitId":"sltsheryl"},"content":"   \\","lastModifiedDate":"2022-09-26"},{"lineNumber":483,"author":{"gitId":"sltsheryl"},"content":"   Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":485,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-10-09"},{"lineNumber":486,"author":{"gitId":"sltsheryl"},"content":"* 2a. The list of batchmates is empty.","lastModifiedDate":"2022-10-09"},{"lineNumber":487,"author":{"gitId":"ElijahS67"},"content":"    * 2a1. Mass Linkers warns adding an interest is invalid.","lastModifiedDate":"2022-10-26"},{"lineNumber":488,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-09-26"},{"lineNumber":489,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-09"},{"lineNumber":490,"author":{"gitId":"sltsheryl"},"content":"* 2b. Mass Linkers detects an error in specified batchmate (non valid index).","lastModifiedDate":"2022-10-14"},{"lineNumber":491,"author":{"gitId":"ElijahS67"},"content":"    * 2b1. Mass Linkers requests for new batchmate details.","lastModifiedDate":"2022-10-26"},{"lineNumber":492,"author":{"gitId":"ElijahS67"},"content":"    * Step 2b1 is repeated until a batchmate is found.","lastModifiedDate":"2022-10-26"},{"lineNumber":493,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-09-26"},{"lineNumber":494,"author":{"gitId":"ElijahS67"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-10-30"},{"lineNumber":495,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":496,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-09"},{"lineNumber":497,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file.","lastModifiedDate":"2022-10-09"},{"lineNumber":498,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-09-26"},{"lineNumber":499,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":500,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":501,"author":{"gitId":"ElijahS67"},"content":"**Use case 4: Search batchmates via interests**","lastModifiedDate":"2022-10-27"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":503,"author":{"gitId":"ElijahS67"},"content":"**MSS**","lastModifiedDate":"2022-10-27"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":505,"author":{"gitId":"ElijahS67"},"content":"1. Student requests the list of batchmates with the specified interests.","lastModifiedDate":"2022-10-27"},{"lineNumber":506,"author":{"gitId":"jonasgwt"},"content":"2. Mass Linkers return the list of batchmates associated with the particular interests.","lastModifiedDate":"2022-11-07"},{"lineNumber":507,"author":{"gitId":"ElijahS67"},"content":"   \\","lastModifiedDate":"2022-10-27"},{"lineNumber":508,"author":{"gitId":"ElijahS67"},"content":"   Use case ends.","lastModifiedDate":"2022-10-27"},{"lineNumber":509,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":510,"author":{"gitId":"ElijahS67"},"content":"**Extensions**","lastModifiedDate":"2022-10-27"},{"lineNumber":511,"author":{"gitId":"jonasgwt"},"content":"* 1a. Mass Linkers detect an invalid input. (No interests specified by the student).","lastModifiedDate":"2022-11-07"},{"lineNumber":512,"author":{"gitId":"ElijahS67"},"content":"    * 1a1. Mass Linkers requests for at least one interest to be specified.","lastModifiedDate":"2022-10-27"},{"lineNumber":513,"author":{"gitId":"ElijahS67"},"content":"    * 1a2. Student inputs new interests.","lastModifiedDate":"2022-10-27"},{"lineNumber":514,"author":{"gitId":"ElijahS67"},"content":"    * Steps 1a1-1a2 are repeated until input is valid.","lastModifiedDate":"2022-10-27"},{"lineNumber":515,"author":{"gitId":"ElijahS67"},"content":"      \\","lastModifiedDate":"2022-10-27"},{"lineNumber":516,"author":{"gitId":"ElijahS67"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-10-30"},{"lineNumber":517,"author":{"gitId":"ElijahS67"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-27"},{"lineNumber":518,"author":{"gitId":"ElijahS67"},"content":"  \\","lastModifiedDate":"2022-10-27"},{"lineNumber":519,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-10-27"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":521,"author":{"gitId":"sltsheryl"},"content":"**Use case 5: Mark a module completed**","lastModifiedDate":"2022-10-12"},{"lineNumber":522,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":523,"author":{"gitId":"sltsheryl"},"content":"**MSS**","lastModifiedDate":"2022-10-12"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":525,"author":{"gitId":"sltsheryl"},"content":"1. Student requests the list of modules for a batchmate.","lastModifiedDate":"2022-10-12"},{"lineNumber":526,"author":{"gitId":"sltsheryl"},"content":"2. Student requests to mark a module complete.","lastModifiedDate":"2022-10-12"},{"lineNumber":527,"author":{"gitId":"sltsheryl"},"content":"3. Mass Linkers marks the module completed.","lastModifiedDate":"2022-10-12"},{"lineNumber":528,"author":{"gitId":"sltsheryl"},"content":"   \\","lastModifiedDate":"2022-10-12"},{"lineNumber":529,"author":{"gitId":"sltsheryl"},"content":"   Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":531,"author":{"gitId":"sltsheryl"},"content":"**Extensions**","lastModifiedDate":"2022-10-12"},{"lineNumber":532,"author":{"gitId":"sltsheryl"},"content":"* 2a. The list of modules is empty.","lastModifiedDate":"2022-10-12"},{"lineNumber":533,"author":{"gitId":"ElijahS67"},"content":"    * 2a1. Mass Linkers warns marking a module is invalid.","lastModifiedDate":"2022-10-26"},{"lineNumber":534,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":535,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":536,"author":{"gitId":"jonasgwt"},"content":"* 2b. Mass Linkers detect the specified module is invalid (out of range).","lastModifiedDate":"2022-11-07"},{"lineNumber":537,"author":{"gitId":"ElijahS67"},"content":"    * 2b1. Mass Linkers requests for new module.","lastModifiedDate":"2022-10-26"},{"lineNumber":538,"author":{"gitId":"ElijahS67"},"content":"    * Step 2b1 is repeated until a module is found.","lastModifiedDate":"2022-10-26"},{"lineNumber":539,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":540,"author":{"gitId":"ElijahS67"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-10-30"},{"lineNumber":541,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":542,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-12"},{"lineNumber":543,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file.","lastModifiedDate":"2022-10-12"},{"lineNumber":544,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":545,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":546,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":547,"author":{"gitId":"sltsheryl"},"content":"**Use case 6: Edit Batchmate**","lastModifiedDate":"2022-10-12"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":549,"author":{"gitId":"sltsheryl"},"content":"**MSS**","lastModifiedDate":"2022-10-12"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":551,"author":{"gitId":"sltsheryl"},"content":"1. Student requests the list of batchmates.","lastModifiedDate":"2022-10-12"},{"lineNumber":552,"author":{"gitId":"jonasgwt"},"content":"2. Mass Linkers display a list of batchmates.","lastModifiedDate":"2022-11-07"},{"lineNumber":553,"author":{"gitId":"sltsheryl"},"content":"3. Student requests to edit a specific batchmate in the list with the new details.","lastModifiedDate":"2022-10-12"},{"lineNumber":554,"author":{"gitId":"sltsheryl"},"content":"4. Mass Linkers updates the details of said batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":555,"author":{"gitId":"sltsheryl"},"content":"   \\","lastModifiedDate":"2022-10-12"},{"lineNumber":556,"author":{"gitId":"sltsheryl"},"content":"   Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":557,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":558,"author":{"gitId":"sltsheryl"},"content":"**Extensions**","lastModifiedDate":"2022-10-12"},{"lineNumber":559,"author":{"gitId":"sltsheryl"},"content":"* 2a. The list of batchmates is empty.","lastModifiedDate":"2022-10-12"},{"lineNumber":560,"author":{"gitId":"sltsheryl"},"content":"  \\","lastModifiedDate":"2022-10-12"},{"lineNumber":561,"author":{"gitId":"sltsheryl"},"content":"  Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":562,"author":{"gitId":"sltsheryl"},"content":"* 3a. Mass Linkers detects an error in the entered command.","lastModifiedDate":"2022-10-14"},{"lineNumber":563,"author":{"gitId":"sltsheryl"},"content":"    * 3a1. Mass Linkers requests for the correct command.","lastModifiedDate":"2022-10-14"},{"lineNumber":564,"author":{"gitId":"jonasgwt"},"content":"    * 3a2. Student enters a new command.","lastModifiedDate":"2022-11-07"},{"lineNumber":565,"author":{"gitId":"sltsheryl"},"content":"      Steps 3a1-3a2 are repeated until the command entered is correct.","lastModifiedDate":"2022-10-14"},{"lineNumber":566,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":567,"author":{"gitId":"sltsheryl"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2022-10-12"},{"lineNumber":568,"author":{"gitId":"ElijahS67"},"content":"* 3b. Mass Linkers detects an incorrect phone number in the edited batchmate.","lastModifiedDate":"2022-10-30"},{"lineNumber":569,"author":{"gitId":"ElijahS67"},"content":"    * 3b1. Mass Linkers warns the user that the phone number is incorrect.","lastModifiedDate":"2022-10-30"},{"lineNumber":570,"author":{"gitId":"ElijahS67"},"content":"      \\","lastModifiedDate":"2022-10-30"},{"lineNumber":571,"author":{"gitId":"ElijahS67"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2022-10-30"},{"lineNumber":572,"author":{"gitId":"ElijahS67"},"content":"* 3c. Mass Linkers could not find the batchmate specified.","lastModifiedDate":"2022-10-30"},{"lineNumber":573,"author":{"gitId":"ElijahS67"},"content":"    * 3c1. Mass Linkers requests the user to input a valid batchmate.","lastModifiedDate":"2022-10-30"},{"lineNumber":574,"author":{"gitId":"jonasgwt"},"content":"    * 3c2. Student enters a new command.","lastModifiedDate":"2022-11-07"},{"lineNumber":575,"author":{"gitId":"jonasgwt"},"content":"      Steps 3c1-3c2 are repeated until the command entered is correct.","lastModifiedDate":"2022-11-07"},{"lineNumber":576,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":577,"author":{"gitId":"sltsheryl"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2022-10-12"},{"lineNumber":578,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":579,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-12"},{"lineNumber":580,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file.","lastModifiedDate":"2022-10-12"},{"lineNumber":581,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":582,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":583,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":584,"author":{"gitId":"sltsheryl"},"content":"**Use case 7: Add module**","lastModifiedDate":"2022-10-12"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":586,"author":{"gitId":"sltsheryl"},"content":"**MSS**","lastModifiedDate":"2022-10-12"},{"lineNumber":587,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":588,"author":{"gitId":"sltsheryl"},"content":"1. Student requests to add modules to a specific batchmate.","lastModifiedDate":"2022-10-12"},{"lineNumber":589,"author":{"gitId":"sltsheryl"},"content":"2. Mass Linkers add modules to said batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":590,"author":{"gitId":"sltsheryl"},"content":"   \\","lastModifiedDate":"2022-10-12"},{"lineNumber":591,"author":{"gitId":"sltsheryl"},"content":"   Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":592,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":593,"author":{"gitId":"sltsheryl"},"content":"**Extensions**","lastModifiedDate":"2022-10-12"},{"lineNumber":594,"author":{"gitId":"sltsheryl"},"content":"* 1a. The list of batchmates is empty.","lastModifiedDate":"2022-10-12"},{"lineNumber":595,"author":{"gitId":"sltsheryl"},"content":"  \\","lastModifiedDate":"2022-10-12"},{"lineNumber":596,"author":{"gitId":"sltsheryl"},"content":"  Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":597,"author":{"gitId":"sltsheryl"},"content":"* 2a. Mass Linkers detects an error in the entered command.","lastModifiedDate":"2022-10-14"},{"lineNumber":598,"author":{"gitId":"sltsheryl"},"content":"    * 2a1. Mass Linkers requests for the correct command.","lastModifiedDate":"2022-10-14"},{"lineNumber":599,"author":{"gitId":"jonasgwt"},"content":"    * 2a2. Student enters a new command.","lastModifiedDate":"2022-11-07"},{"lineNumber":600,"author":{"gitId":"sltsheryl"},"content":"      Steps 2a1-2a2 are repeated until the command entered are correct.","lastModifiedDate":"2022-10-14"},{"lineNumber":601,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":602,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":603,"author":{"gitId":"sltsheryl"},"content":"* 2b. Mass Linkers could not find the batchmate specified.","lastModifiedDate":"2022-10-12"},{"lineNumber":604,"author":{"gitId":"sltsheryl"},"content":"    * 2b1. Mass Linkers requests the user to input a valid batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":605,"author":{"gitId":"jonasgwt"},"content":"    * 2b2. Student enters a new command.","lastModifiedDate":"2022-11-07"},{"lineNumber":606,"author":{"gitId":"sltsheryl"},"content":"      Steps 2b1-2b2 are repeated until the command entered are correct.","lastModifiedDate":"2022-10-14"},{"lineNumber":607,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":608,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":609,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":610,"author":{"gitId":"sltsheryl"},"content":"* *a. At any time, Student chooses to close Mass Linkers.","lastModifiedDate":"2022-10-12"},{"lineNumber":611,"author":{"gitId":"sltsheryl"},"content":"    * a1. Mass Linkers updates the storage file.","lastModifiedDate":"2022-10-12"},{"lineNumber":612,"author":{"gitId":"sltsheryl"},"content":"      \\","lastModifiedDate":"2022-10-12"},{"lineNumber":613,"author":{"gitId":"sltsheryl"},"content":"      Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"jonasgwt"},"content":"2. Should be able to hold up to 1000 batchmates without a noticeable sluggish performance for typical usage.","lastModifiedDate":"2022-11-07"},{"lineNumber":619,"author":{"gitId":"jonasgwt"},"content":"3. A user with above-average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than the mouse.","lastModifiedDate":"2022-11-07"},{"lineNumber":620,"author":{"gitId":"jonasgwt"},"content":"4. The GUI should work well with standard screen resolutions 1920x1080 and higher. i.e. GUI does not appear to be cut or distorted.","lastModifiedDate":"2022-09-28"},{"lineNumber":621,"author":{"gitId":"jonasgwt"},"content":"5. For every action by the user, the result should be visible within 5 seconds.","lastModifiedDate":"2022-09-28"},{"lineNumber":622,"author":{"gitId":"jonasgwt"},"content":"6. The project should not depend on any remote servers.","lastModifiedDate":"2022-09-28"},{"lineNumber":623,"author":{"gitId":"jonasgwt"},"content":"7. The software and documentation should be accessible to users with a basic command of English.","lastModifiedDate":"2022-09-28"},{"lineNumber":624,"author":{"gitId":"jonasgwt"},"content":"8. The packaged JAR file should not exceed 100MB.","lastModifiedDate":"2022-09-28"},{"lineNumber":625,"author":{"gitId":"jonasgwt"},"content":"9. The software should work without the need for an installer.","lastModifiedDate":"2022-09-28"},{"lineNumber":626,"author":{"gitId":"jonasgwt"},"content":"10. The product should not be able to verify the legitimacy of the information provided by the student.","lastModifiedDate":"2022-11-07"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"sltsheryl"},"content":"* **Batchmate**: The people whom the users need to link to and interact with.","lastModifiedDate":"2022-10-29"},{"lineNumber":631,"author":{"gitId":"chm252"},"content":"* **Command Line Interface (CLI)**: A text of lines input by the users to send instructions to the system.","lastModifiedDate":"2022-09-28"},{"lineNumber":632,"author":{"gitId":"chm252"},"content":"* **Graphical User Interface (GUI)**: A means, supported by visuals, for the users to send instructions to the system.","lastModifiedDate":"2022-09-28"},{"lineNumber":633,"author":{"gitId":"sltsheryl"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2022-10-29"},{"lineNumber":634,"author":{"gitId":"sltsheryl"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others.","lastModifiedDate":"2022-10-29"},{"lineNumber":635,"author":{"gitId":"chm252"},"content":"* **Student**: The main user.","lastModifiedDate":"2022-09-28"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"sltsheryl"},"content":"## **Appendix: Future Developments**","lastModifiedDate":"2022-10-30"},{"lineNumber":639,"author":{"gitId":"sltsheryl"},"content":"Due to time and manpower constraints, several good-to-have features were considered for future developments.","lastModifiedDate":"2022-10-30"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"sltsheryl"},"content":"### 1. Undo Command","lastModifiedDate":"2022-10-30"},{"lineNumber":642,"author":{"gitId":"jonasgwt"},"content":"Several of the commands can create drastic changes to the data in Mass Linkers, such as `mod mark all`, which would mark every module for all students as taken and `clear`, which would delete all the data existing in Mass Linkers.","lastModifiedDate":"2022-11-07"},{"lineNumber":643,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":644,"author":{"gitId":"sltsheryl"},"content":"Having an `undo` feature would be valuable to help users overcome the problem of executing these commands unintentionally and needing to revert the changes made.","lastModifiedDate":"2022-10-30"},{"lineNumber":645,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":646,"author":{"gitId":"sltsheryl"},"content":"### 2. Selecting a batchmate using CLI","lastModifiedDate":"2022-10-30"},{"lineNumber":647,"author":{"gitId":"sltsheryl"},"content":"Mass Linkers is targeted at users who can type fast and prefer typing as the primary form of input.","lastModifiedDate":"2022-10-30"},{"lineNumber":648,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":649,"author":{"gitId":"jonasgwt"},"content":"Currently, the selection of a batchmate in the _Students panel_ to view their modules can only be done via the GUI interface by clicking on the particular batchmate.","lastModifiedDate":"2022-11-07"},{"lineNumber":650,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":651,"author":{"gitId":"sltsheryl"},"content":"Having a `mod view INDEX` command would give users an option to select a batchmate with index ```INDEX``` using the CLI, helping Mass Linkers align more to its typing-preferred characteristic.","lastModifiedDate":"2022-10-30"},{"lineNumber":652,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":653,"author":{"gitId":"sltsheryl"},"content":"### 3. Auto-scroll when a batchmate is added","lastModifiedDate":"2022-10-30"},{"lineNumber":654,"author":{"gitId":"jonasgwt"},"content":"Currently, the _Students panel_ does not scroll to the bottom when a batchmate is added, and the row exceeds the currently displayed list of batchmates in the _Students panel_.","lastModifiedDate":"2022-11-07"},{"lineNumber":655,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":656,"author":{"gitId":"jonasgwt"},"content":"Implementing the _Students panel_ to display the most-recently added batchmate would help in enhancing the user experience, and users do not need to manually scroll to the bottom each time.","lastModifiedDate":"2022-11-07"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":658,"author":{"gitId":"jonasgwt"},"content":"### 4. Display students in alphabetical order","lastModifiedDate":"2022-11-07"},{"lineNumber":659,"author":{"gitId":"jonasgwt"},"content":"Currently, students are displayed in the _Students panel_ based on chronological order; the most recently added student would be the last.","lastModifiedDate":"2022-11-07"},{"lineNumber":660,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":661,"author":{"gitId":"jonasgwt"},"content":"Looking ahead, we would implement the display of students to be based on the alphabetical order of their names. This would make it much more intuitive and easier to search for users.","lastModifiedDate":"2022-11-07"},{"lineNumber":662,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":663,"author":{"gitId":"sltsheryl"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-30"},{"lineNumber":664,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"jonasgwt"},"content":"1. Initial launch.","lastModifiedDate":"2022-10-27"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"jonasgwt"},"content":"    1. Download the jar file and copy it into an empty folder.","lastModifiedDate":"2022-10-27"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"jonasgwt"},"content":"    2. Double-click the jar file. \u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":680,"author":{"gitId":"jonasgwt"},"content":"       Expected: Shows the GUI with a set of sample batchmates. The window size may not be optimum.","lastModifiedDate":"2022-10-27"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"jonasgwt"},"content":"2. Saving window preferences.","lastModifiedDate":"2022-10-27"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"jonasgwt"},"content":"    2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":687,"author":{"gitId":"jonasgwt"},"content":"       Expected: The most recent window size and location are retained.","lastModifiedDate":"2022-11-07"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"jonasgwt"},"content":"### Adding a batchmate","lastModifiedDate":"2022-10-27"},{"lineNumber":690,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":691,"author":{"gitId":"jonasgwt"},"content":"1. Adding a batchmate to the data.","lastModifiedDate":"2022-10-27"},{"lineNumber":692,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":693,"author":{"gitId":"jonasgwt"},"content":"    1. Test case: `add n/John t/johnnn`.\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":694,"author":{"gitId":"sltsheryl"},"content":"       Expected: A new batchmate with the name `John` and telegram handle `johnnn` is added at the bottom of the _Students panel_ in Mass Linkers.","lastModifiedDate":"2022-10-30"},{"lineNumber":695,"author":{"gitId":"jonasgwt"},"content":"       The status message indicates that a batchmate named `John` has been successfully added.","lastModifiedDate":"2022-10-27"},{"lineNumber":696,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":697,"author":{"gitId":"jonasgwt"},"content":"        1. Prerequisite: A batchmate with the name `Tom` and the telegram `tommmm` is already in Mass Linkers. \u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":698,"author":{"gitId":"jonasgwt"},"content":"           Test case: `add n/Tom t/tommmm`.\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":699,"author":{"gitId":"jonasgwt"},"content":"           Expected: No batchmate is added. The status message indicates that the batchmate already exists in Mass Linkers.","lastModifiedDate":"2022-10-27"},{"lineNumber":700,"author":{"gitId":"sltsheryl"},"content":"           Uniqueness is verified using two of the mandatory fields - the ```Student```\u0027s name and telegram handle.","lastModifiedDate":"2022-10-28"},{"lineNumber":701,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":702,"author":{"gitId":"jonasgwt"},"content":"    2. Test case: `add n/John t/john i/ai g/john`.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":703,"author":{"gitId":"sltsheryl"},"content":"       Expected: A new batchmate with the name `John`, telegram handle `john`, interests `ai` and GitHub `john` is added at the bottom of the _Students panel_ in Mass Linkers.","lastModifiedDate":"2022-10-30"},{"lineNumber":704,"author":{"gitId":"jonasgwt"},"content":"       The status message indicates that a batchname named `John` has been successfully added.","lastModifiedDate":"2022-10-27"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"sltsheryl"},"content":"    3. Test case: `add n/John`.\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":707,"author":{"gitId":"jonasgwt"},"content":"       Expected: No batchmate is added. The status message indicates that the command is of an invalid format.","lastModifiedDate":"2022-10-27"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"jonasgwt"},"content":"    4. Other incorrect `add` commands to try: `add`, `add n/John t/johnnn x/invalid`, `...` (where x is any invalid prefix).\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":710,"author":{"gitId":"jonasgwt"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-10-27"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":713,"author":{"gitId":"jonasgwt"},"content":"### Deleting a batchmate","lastModifiedDate":"2022-10-27"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"jonasgwt"},"content":"1. Deleting a batchmate while all batchmates are being shown.","lastModifiedDate":"2022-10-27"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"jonasgwt"},"content":"    1. Prerequisites: List all batchmates using the `list` command. There are multiple batchmates in the list.","lastModifiedDate":"2022-10-27"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"jonasgwt"},"content":"    2. Test case: `delete 1`.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":720,"author":{"gitId":"jonasgwt"},"content":"       Expected: First batchmate is deleted from the list. Details of the deleted batchmate are shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"jonasgwt"},"content":"    3. Test case: `delete 0`.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":723,"author":{"gitId":"jonasgwt"},"content":"       Expected: No batchmate is deleted. Error details are shown in the status message.","lastModifiedDate":"2022-10-27"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":725,"author":{"gitId":"jonasgwt"},"content":"    4. Other incorrect `delete` commands to try: `delete`, `delete x`, `...` (where x is larger than the list size).\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":726,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"jonasgwt"},"content":"### Find batchmates","lastModifiedDate":"2022-10-27"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":730,"author":{"gitId":"jonasgwt"},"content":"1. Find batchmates using keyword(s).","lastModifiedDate":"2022-10-27"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":732,"author":{"gitId":"jonasgwt"},"content":"    1. Prerequisites: List all batchmates using the `list` command. There are multiple batchmates in the list.","lastModifiedDate":"2022-10-27"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":734,"author":{"gitId":"carriezhengjr"},"content":"    2. Prerequisite: There exists a batchmate with telegram handle `charlie`.\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":735,"author":{"gitId":"jonasgwt"},"content":"       Test case: `find char`.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":736,"author":{"gitId":"sltsheryl"},"content":"       Expected: The batchmate with telegram handle `charlie` appears in the _Students panel_ after executing the command.","lastModifiedDate":"2022-10-30"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":738,"author":{"gitId":"carriezhengjr"},"content":"    3. Prerequisite: There exists a batchmate with telegram handle `charlie` and a batchmate with name `Tom`.\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":739,"author":{"gitId":"jonasgwt"},"content":"       Test case: `find char Tom`.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":740,"author":{"gitId":"jonasgwt"},"content":"       Expected: The batchmate with telegram handle `charlie` and batchmate named `Tom`","lastModifiedDate":"2022-10-27"},{"lineNumber":741,"author":{"gitId":"sltsheryl"},"content":"       appear in the _Students panel_ after executing the command.","lastModifiedDate":"2022-10-30"},{"lineNumber":742,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":743,"author":{"gitId":"jonasgwt"},"content":"    4. Other incorrect `find` commands to try: `find` (no keywords provided).\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":744,"author":{"gitId":"jonasgwt"},"content":"       Expected: The status message will indicate that the command is invalid.","lastModifiedDate":"2022-10-27"},{"lineNumber":745,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":746,"author":{"gitId":"jonasgwt"},"content":"### Add mods to a batchmate","lastModifiedDate":"2022-10-27"},{"lineNumber":747,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":748,"author":{"gitId":"jonasgwt"},"content":"1. Add mods to a batchmate.","lastModifiedDate":"2022-10-27"},{"lineNumber":749,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":750,"author":{"gitId":"jonasgwt"},"content":"    1. Prerequisites: List all batchmates using the `list` command. There are multiple batchmates in the list.","lastModifiedDate":"2022-10-27"},{"lineNumber":751,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":752,"author":{"gitId":"jonasgwt"},"content":"    2. Test case: `mod add 1 cs2103t cs2101`.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":753,"author":{"gitId":"jonasgwt"},"content":"       Expected: The mods `CS2103T` and `CS2101` will be present in the mods pane when the batchmate located at index 1 is selected.","lastModifiedDate":"2022-10-27"},{"lineNumber":754,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":755,"author":{"gitId":"jonasgwt"},"content":"    3. Other incorrect `mod add` commands to try: `mod add cs2103t`, `mod add 1 xxx` (where xxx is any invalid mod name).\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":756,"author":{"gitId":"jonasgwt"},"content":"       Expected: No mods are added, and the status message will indicate that the command is invalid.","lastModifiedDate":"2022-10-27"},{"lineNumber":757,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":758,"author":{"gitId":"jonasgwt"},"content":"### Mark mod(s) for a batchmate","lastModifiedDate":"2022-10-27"},{"lineNumber":759,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":760,"author":{"gitId":"jonasgwt"},"content":"1. Mark mod(s) for a batchmate.","lastModifiedDate":"2022-10-27"},{"lineNumber":761,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":762,"author":{"gitId":"jonasgwt"},"content":"    1. Prerequisites: List all batchmates using the `list` command. There are multiple batchmates in the list.","lastModifiedDate":"2022-10-27"},{"lineNumber":763,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":764,"author":{"gitId":"jonasgwt"},"content":"    2. Prerequisites: The batchmate at index 1 must have the mods CS2103T and CS2101.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":765,"author":{"gitId":"jonasgwt"},"content":"       Test case: `mod mark 1 cs2103t cs2101`.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":766,"author":{"gitId":"jonasgwt"},"content":"       Expected: The mods `CS2103T` and `CS2101` will be marked as taken in the mods pane when the batchmate located at index 1 is selected.","lastModifiedDate":"2022-10-27"},{"lineNumber":767,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":768,"author":{"gitId":"jonasgwt"},"content":"    3. Other incorrect `mod mark` commands to try: `mod mark cs2103t`, `mod mark 1 xxx`","lastModifiedDate":"2022-10-27"},{"lineNumber":769,"author":{"gitId":"jonasgwt"},"content":"       (where xxx is any mod name that is not in the list of mods for that batchmate).\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":770,"author":{"gitId":"jonasgwt"},"content":"       Expected: No mods are added, and the status message will indicate that the command is invalid.","lastModifiedDate":"2022-10-27"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"jonasgwt"},"content":"1. Dealing with missing/corrupted data files.","lastModifiedDate":"2022-10-27"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"carriezhengjr"},"content":"    1. Go to the data file located at `data/massLinkers.json`. If the directory is not present,","lastModifiedDate":"2022-10-28"},{"lineNumber":777,"author":{"gitId":"jonasgwt"},"content":"       run Mass Linkers, modify the data, and exit. The data file should be present in the directory.","lastModifiedDate":"2022-10-27"},{"lineNumber":778,"author":{"gitId":"jonasgwt"},"content":"    2. Attempt to corrupt the data by deleting a closing brace `}` at the end of the file.","lastModifiedDate":"2022-10-27"},{"lineNumber":779,"author":{"gitId":"jonasgwt"},"content":"    3. Reopen Mass Linkers. \u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":780,"author":{"gitId":"sltsheryl"},"content":"       Expected: Mass Linkers will run and start with an empty data file. No batchmates will be shown on the _Students panel_.","lastModifiedDate":"2022-10-30"},{"lineNumber":781,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":782,"author":{"gitId":"jonasgwt"},"content":"2. All data saved.","lastModifiedDate":"2022-10-27"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":784,"author":{"gitId":"jonasgwt"},"content":"    1. Add or edit batchmate(s) in Mass Linkers.","lastModifiedDate":"2022-10-27"},{"lineNumber":785,"author":{"gitId":"jonasgwt"},"content":"    2. Close Mass Linkers.","lastModifiedDate":"2022-10-27"},{"lineNumber":786,"author":{"gitId":"jonasgwt"},"content":"    3. Reopen Mass Linkers. \u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":787,"author":{"gitId":"jonasgwt"},"content":"       Expected: The data is saved, and the changes you made to the data are still present.","lastModifiedDate":"2022-10-27"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ElijahS67":54,"sltsheryl":196,"jonasgwt":165,"carriezhengjr":46,"chm252":57,"-":270}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"   1. Run the `seedu.masslinkers.Main` and try a few commands.","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"2. **Set up CI**","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"3. **Learn the design**","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [Mass Linkersâ€™ architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"sltsheryl":2,"carriezhengjr":2,"-":44}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"   e.g. `seedu.masslinkers.commons.StringUtilTest`","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"   e.g. `seedu.masslinkers.storage.StorageManagerTest`","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"   e.g. `seedu.masslinkers.logic.LogicManagerTest`","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"carriezhengjr":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"\u003cimg src\u003d\"images/Logo.png\" width\u003d\"360\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"Welcome to Mass Linkers \u0026mdash; a powerful Desktop application tool that helps **Computer Science (CS) students** find study support from batchmates.","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"## **1. About Mass Linkers**","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"Mass Linkers helps you find batchmates to form study groups and seek study advice through the following way.","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"It provides a **centralised** platform for you to","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"- save your batchmates\u0027 contact and module details","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"- search for batchmates with common interests or who are taking similar modules as you **conveniently**.","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"A fast typer? Mass Linkers is made just for you.","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"It is optimised for use via a **Command Line Interface (CLI)** while still having the benefits of an aesthetic **Graphical User Interface (GUI)**.","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"## **2. Using the User Guide**","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"In this *User Guide*, we will take you through the many useful features and functions of Mass Linkers, and provide you crucial information on how the different commands are used.","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"Feeling lost as a first-time user? We advise you to follow the User Guide sequentially, starting from [Getting started](#4-getting-started), as it provides a natural flow of how the commands should be executed.","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"If you are more familiar with CLI or Mass Linkers, head over to the [Command summary](#7-command-summary) to start using the app.","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"The following icons are used in the _User Guide_ to denote special information to look out for.","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"### 2.1. Meaning of icons","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"**:information_source:**: __Additional information__ such as specific requirements of parameters and the nature of command","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"**:bulb:**: __Tip__ on how to carry out certain functionalities","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"**:warning:**: __Warning__ as the command can create drastic changes to the existing App data","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"## **3. Table of contents**","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"* Table of Contents","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"{:toc}","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"## **4. Getting started**","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"1. Ensure you have Java `11` or above installed on your computer.","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"    * To check for the Java version on your computer, you can first open the command-line or terminal window. Then, run the command `java -version`. The output will display the version of the Java package installed on your system.","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"    * If you do not have Java `11` or above in your computer, head to the [Technical Support](#61-technical-support) section for the installation guide.","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"2. Download the latest `MassLinkers.jar` from [here](https://github.com/AY2223S1-CS2103T-T11-4/tp/releases).","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Mass Linkers.","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"4. Double-click the file to start the app. If done correctly, the GUI similar to the one below should appear in a few seconds. The image below is annotated with the various sections of the UI.","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"   * Note for Mac users: If you face difficulty running Mass Linkers, refer to the [FAQ](#6-faq) section.\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"![Ui](images/UiBreakDown.png)","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"5. The app has been populated with some sample data. If you wish to start with an empty set of data, execute the [Clear](#542-clear-all-data-clear) command.","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"6. Type a command in the command box and press Enter to execute it. Refer to the section on [Features](#5-features) below for details and usage of each command.","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"7. You can also use the [`help`](#541-view-help-help) command in Mass Linkers to view a summary of all available commands and their syntax.","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"## **5. Features**","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"There are 4 main types of commands used in Mass Linkers - Batchmate commands, Interest commands, Module commands and General commands.","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"By segregating the commands in this manner, this makes it easier to make modifications and conduct a search based on different fields (i.e. search by common interests, modules or personal information).","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":78,"author":{"gitId":"sltsheryl"},"content":"The following notes outline several noteworthy format that the [Features](#5-features) section uses in detailing the usage of different commands.","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"**:information_source: Take note of the Command Format:**\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"sltsheryl"},"content":"* Words in `UPPER_CASE` are parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"  Example:","lastModifiedDate":"2022-10-29"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"  * In `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-10-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"  Example:","lastModifiedDate":"2022-10-29"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"  * `n/NAME t/TELEGRAM [i/INTEREST]` can be used as `n/John Doe t/johnxyz i/ai` or as `n/John Doe t/johnxyz` without using `i/INTEREST`.","lastModifiedDate":"2022-10-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"carriezhengjr"},"content":"* Items with `...` after them can be used multiple times.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"carriezhengjr"},"content":"  Examples:","lastModifiedDate":"2022-10-29"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"  * `[i/INTEREST]...` can be used as `i/ai`, `i/algo i/swe` etc.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":95,"author":{"gitId":"carriezhengjr"},"content":"  * `[MORE_MODULES]...` can be used as `cs2100`, `cs2103t cs2101 cs2105` etc.","lastModifiedDate":"2022-10-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"carriezhengjr"},"content":"  Example:","lastModifiedDate":"2022-10-29"},{"lineNumber":99,"author":{"gitId":"carriezhengjr"},"content":"  * If the command specifies `n/NAME t/TELEGRAM [g/GITHUB] [p/PHONE] [e/EMAIL] [i/INTEREST]`, then `[i/INTEREST] [e/EMAIL] [p/PHONE] n/NAME [g/GITHUB] t/TELEGRAM` is also acceptable.","lastModifiedDate":"2022-10-29"},{"lineNumber":100,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"* Any words that come after a prefix will be taken as the parameter.\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"  Example:","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"  * `n/john smith t/john parallelisation` john parallelization would be considered as the parameter for the telegram handle, which is invalid.","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"jonasgwt"},"content":"    \u003cbr\u003eie. a space does not demarcate the end of a parameter.","lastModifiedDate":"2022-11-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"carriezhengjr"},"content":"  Example:","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"carriezhengjr"},"content":"  * If you specify `n/John Doe n/Bob Tan`, only `n/Bob Tan` will be saved.","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"carriezhengjr"},"content":"  * If you specify `p/12341234` `p/56785678`, only `p/56785678` will be saved.","lastModifiedDate":"2022-10-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":111,"author":{"gitId":"jonasgwt"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) and `mod mark all` will be ignored.","lastModifiedDate":"2022-11-05"},{"lineNumber":112,"author":{"gitId":"jonasgwt"},"content":"  \u003cbr\u003eExample:","lastModifiedDate":"2022-11-05"},{"lineNumber":113,"author":{"gitId":"carriezhengjr"},"content":"  * If the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-10-30"},{"lineNumber":114,"author":{"gitId":"carriezhengjr"},"content":"  * If the command specifies `exit 345`, it will be interpreted as `exit`.","lastModifiedDate":"2022-10-30"},{"lineNumber":115,"author":{"gitId":"jonasgwt"},"content":"  * If the command specifies `mod mark all 123`, it will be interpreted as `mod mark all`.","lastModifiedDate":"2022-11-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"carriezhengjr"},"content":"Parameters are the input words that come after a command word to specify how the command should be executed. Click [here](#55-parameter-requirements) to view the list of parameter requirements.","lastModifiedDate":"2022-11-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":121,"author":{"gitId":"sltsheryl"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":122,"author":{"gitId":"sltsheryl"},"content":"**:information_source: Regarding parameters:**\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"carriezhengjr"},"content":"* For all commands involving `INDEX`, `INDEX` refers to the index number shown in the currently displayed list.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"sltsheryl"},"content":"  * ___Beware!!!___ This may not be the full list of batchmates you have in Mass Linkers! For example, you may have entered the [find](#514-find-a-batchmate-find) command, so the currently displayed list will be the result of `find` which is not the full list.","lastModifiedDate":"2022-11-07"},{"lineNumber":126,"author":{"gitId":"sltsheryl"},"content":"  * The index __must be a positive integer__, e.g. 1, 2, 3 â€¦ and be smaller than or equal to the number of batchmates in the currently displayed list.","lastModifiedDate":"2022-10-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"carriezhengjr"},"content":"### 5.1. Batchmate commands","lastModifiedDate":"2022-11-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":132,"author":{"gitId":"sltsheryl"},"content":"Batchmate commands handle the management of a batchmate\u0027s personal information such as Name, Telegram, GitHub and Phone number.","lastModifiedDate":"2022-11-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":134,"author":{"gitId":"carriezhengjr"},"content":"#### 5.1.1. Add a batchmate: `add`","lastModifiedDate":"2022-11-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"sltsheryl"},"content":"Adds a batchmate to the list of batchmates in the _Students panel_.","lastModifiedDate":"2022-10-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `add n/NAME t/TELEGRAM [g/GITHUB] [p/PHONE] [e/EMAIL] [i/INTEREST]... [m/MODULE]...`","lastModifiedDate":"2022-10-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"carriezhengjr"},"content":"* A summary of the requirements of each parameter can be found under [Parameter Requirements](#55-parameter-requirements).","lastModifiedDate":"2022-11-05"},{"lineNumber":141,"author":{"gitId":"jonasgwt"},"content":"* Only unique batchmate can be added. It is considered a duplicate if an existing batchmate and the current batchmate to be added have an identical Telegram handle, GitHub username, email address or phone number.","lastModifiedDate":"2022-11-06"},{"lineNumber":142,"author":{"gitId":"carriezhengjr"},"content":"* Modules added to a batchmate will be automatically categorised according to their prefixes. e.g. `cs2103t` will be tagged as `Computer Science`.  `ma1521` will be tagged as `Mathematics`. For modules that are not identified by Mass Linkers, they will be tagged as `Unrestricted Elective`. More information can be found under [Module Categorisation](#56-module-categorisation).","lastModifiedDate":"2022-11-05"},{"lineNumber":143,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":145,"author":{"gitId":"carriezhengjr"},"content":"* `add n/John Doe t/johnxyz` adds a batchmate named `John Doe` with telegram handle `johnxyz` to the list.","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"carriezhengjr"},"content":"* `add n/John Doe t/johnxyz g/johndoe p/98765432 e/johnd@example.com i/ai i/swe` adds a batchmate named `John Doe` with telegram handle `johnxyz`, GitHub username `johndoe`, phone number `98765432`, email address `johnd@example.com` and interests in `ai` and `swe` to the list.","lastModifiedDate":"2022-11-05"},{"lineNumber":147,"author":{"gitId":"carriezhengjr"},"content":"* `add n/John Doe t/johnxyz m/cs2103t m/cs2101` adds a batchmate named `John Doe` with telegram handle `johnxyz` and modules `cs2103t` and `cs2101` to the list.","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"carriezhengjr"},"content":"#### 5.1.2. Edit a batchmate: `edit`","lastModifiedDate":"2022-11-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"sltsheryl"},"content":"Edits the information of a specified batchmate in the _Students panel_.","lastModifiedDate":"2022-10-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `edit INDEX [n/NAME] [t/TELEGRAM] [g/GITHUB] [p/PHONE] [e/EMAIL] [i/INTEREST]...`","lastModifiedDate":"2022-10-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"* Edits the batchmate at the specific `INDEX` in the __currently displayed list__ in the _Students panel_. Refer to the section on _Regarding parameters_ at the start of [Features](#5-features) for more details.","lastModifiedDate":"2022-11-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"ElijahS67"},"content":"* When editing interests, the existing interests of the batchmate will be completely replaced by the new ones.","lastModifiedDate":"2022-10-30"},{"lineNumber":159,"author":{"gitId":"chm252"},"content":"* You may not change Telegram handle, GitHub username, email address or phone number to one that has already been owned by someone in the Mass Linkers.","lastModifiedDate":"2022-11-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-11-02"},{"lineNumber":162,"author":{"gitId":"carriezhengjr"},"content":"You can remove all batchmatesâ€™ interests by typing `i/` without specifying any interests after it.","lastModifiedDate":"2022-11-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":166,"author":{"gitId":"carriezhengjr"},"content":"* `edit 1 g/johndoe p/91234567 e/johndoe@example.com` edits the GitHub username, phone number and email address of the 1st batchmate in the currently displayed list to be `johndoe`, `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-11-02"},{"lineNumber":167,"author":{"gitId":"carriezhengjr"},"content":"* `edit 2 n/Bob Tan i/` edits the name of the 2nd batchmate in the currently displayed list to be `Bob Tan` and clears all existing interests.","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":169,"author":{"gitId":"carriezhengjr"},"content":"#### 5.1.3. Delete a batchmate: `delete`","lastModifiedDate":"2022-11-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":171,"author":{"gitId":"sltsheryl"},"content":"Deletes a specified batchmate from the _Students panel_.","lastModifiedDate":"2022-10-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":173,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `delete INDEX`","lastModifiedDate":"2022-10-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":175,"author":{"gitId":"carriezhengjr"},"content":"* Deletes the batchmate at the specific `INDEX` in the __currently displayed list__ in the _Students panel_. Refer to the section on _Regarding parameters_ at the start of [Features](#5-features) for more details.","lastModifiedDate":"2022-11-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":177,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":178,"author":{"gitId":"sltsheryl"},"content":"* `list` followed by `delete 2` deletes the 2nd batchmate in the full list of batchmates you have in Mass Linkers.","lastModifiedDate":"2022-10-30"},{"lineNumber":179,"author":{"gitId":"sltsheryl"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st batchmate in the currently displayed list of the `find` command.","lastModifiedDate":"2022-10-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":181,"author":{"gitId":"carriezhengjr"},"content":"#### 5.1.4. Find a batchmate: `find`","lastModifiedDate":"2022-11-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":183,"author":{"gitId":"carriezhengjr"},"content":"Finds batchmates whose details contain __any__ of the given keywords.","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `find KEYWORD [MORE_KEYWORDS]...`","lastModifiedDate":"2022-10-30"},{"lineNumber":186,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":187,"author":{"gitId":"chm252"},"content":"* `NAME`, `TELEGRAM`, `GITHUB`, `PHONE` and `EMAIL` are searched simultaneously.","lastModifiedDate":"2022-11-02"},{"lineNumber":188,"author":{"gitId":"carriezhengjr"},"content":"* The search is case-insensitive. e.g. `jOnAs` will return `Jonas`, `ivAn` will return `Ivan`.","lastModifiedDate":"2022-11-05"},{"lineNumber":189,"author":{"gitId":"chm252"},"content":"* Finding by `NAME`:","lastModifiedDate":"2022-11-02"},{"lineNumber":190,"author":{"gitId":"chm252"},"content":"  * The order of the keywords does not matter. e.g. `Ming Qing` will return both `Ming Qing` and `Qing Ming`.","lastModifiedDate":"2022-11-03"},{"lineNumber":191,"author":{"gitId":"chm252"},"content":"  * Batchmates matching at least one keyword will be returned. e.g. `Ming Xuan` will return `Ming Qing`, `Yu Xuan`.","lastModifiedDate":"2022-11-03"},{"lineNumber":192,"author":{"gitId":"chm252"},"content":"  * Only __full words__ will be matched. e.g. `Qin` will _not_ return a batchmate with the name `Qing`. You need to write `Qing`.","lastModifiedDate":"2022-11-03"},{"lineNumber":193,"author":{"gitId":"chm252"},"content":"* Finding by `TELEGRAM`, `GITHUB`, `PHONE` and `EMAIL`:","lastModifiedDate":"2022-11-02"},{"lineNumber":194,"author":{"gitId":"chm252"},"content":"  * Partial words are accepted. E.g. `uxu` will return `yuxuan`.","lastModifiedDate":"2022-11-03"},{"lineNumber":195,"author":{"gitId":"chm252"},"content":"  * Unlike `NAME`, these items (`TELEGRAM`, `GITHUB`, `PHONE` and `EMAIL`) are not separated by spaces. If full words are needed for matching, you will have to type the full item out each time you search.","lastModifiedDate":"2022-11-02"},{"lineNumber":196,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":197,"author":{"gitId":"chm252"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-11-02"},{"lineNumber":198,"author":{"gitId":"chm252"},"content":"`TELEGRAM`, `GITHUB`, `PHONE` and `EMAIL` are unique. If your partial text input is too common and list too many batchmates, simply type a few more letters! It is still better than typing the entire item!","lastModifiedDate":"2022-11-07"},{"lineNumber":199,"author":{"gitId":"chm252"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":200,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":201,"author":{"gitId":"chm252"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":202,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":203,"author":{"gitId":"chm252"},"content":"**:information_source: find:**\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":204,"author":{"gitId":"chm252"},"content":"`find` command searches `NAME`, `TELEGRAM`, `GITHUB`, `PHONE` and `EMAIL` simultaneously.","lastModifiedDate":"2022-11-02"},{"lineNumber":205,"author":{"gitId":"chm252"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":208,"author":{"gitId":"chm252"},"content":"* When you want to search by `NAME`:","lastModifiedDate":"2022-11-02"},{"lineNumber":209,"author":{"gitId":"chm252"},"content":"  * `find ming` returns `Ming`, `Ming Qing` and `Hong Ming`.","lastModifiedDate":"2022-11-03"},{"lineNumber":210,"author":{"gitId":"chm252"},"content":"  * `find byron henry` returns `Byron Huang`, `Henry Chuah`.","lastModifiedDate":"2022-11-03"},{"lineNumber":211,"author":{"gitId":"chm252"},"content":"* When you want to search by `TELEGRAM`, `GITHUB` or `EMAIL`:","lastModifiedDate":"2022-11-02"},{"lineNumber":212,"author":{"gitId":"chm252"},"content":"  * `find ion` returns the batchmates with Telegram handle, GitHub username or email address containing `ion`, e.g. batchmate with telegram handle `liona`, batchmate with GitHub username `thecation47`.","lastModifiedDate":"2022-11-03"},{"lineNumber":213,"author":{"gitId":"chm252"},"content":"* When you want to search by `PHONE`:","lastModifiedDate":"2022-11-02"},{"lineNumber":214,"author":{"gitId":"jonasgwt"},"content":"  * `find 999` returns the batchmates with phone numbers `69998888`, `89991234` or `99912345`.","lastModifiedDate":"2022-11-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"carriezhengjr"},"content":"#### 5.1.5. List all batchmates: `list`","lastModifiedDate":"2022-11-05"},{"lineNumber":217,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":218,"author":{"gitId":"sltsheryl"},"content":"Shows a list of all batchmates in the _Students panel_.","lastModifiedDate":"2022-10-30"},{"lineNumber":219,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":220,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `list`","lastModifiedDate":"2022-10-30"},{"lineNumber":221,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":222,"author":{"gitId":"carriezhengjr"},"content":"### 5.2. Interest commands","lastModifiedDate":"2022-11-05"},{"lineNumber":223,"author":{"gitId":"jonasgwt"},"content":"Interest commands manage a batchmate\u0027s list of interests, such as the addition of interests, deletion of interests and searching batchmates with specified interests.","lastModifiedDate":"2022-11-06"},{"lineNumber":224,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":225,"author":{"gitId":"sltsheryl"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":226,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":227,"author":{"gitId":"sltsheryl"},"content":"**:information_source: What are considered interests:**\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":228,"author":{"gitId":"sltsheryl"},"content":"Interests can include batchmates\u0027 hobbies such as games, CS specialisations, etc.","lastModifiedDate":"2022-11-02"},{"lineNumber":229,"author":{"gitId":"sltsheryl"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":230,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":231,"author":{"gitId":"carriezhengjr"},"content":"#### 5.2.1. Add interests: `addInt`","lastModifiedDate":"2022-11-05"},{"lineNumber":232,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":233,"author":{"gitId":"sltsheryl"},"content":"Adds interest(s) to a specified batchmate in the _Students panel_.","lastModifiedDate":"2022-10-30"},{"lineNumber":234,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":235,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `addInt INDEX INTEREST [MORE_INTERESTS]...`","lastModifiedDate":"2022-10-30"},{"lineNumber":236,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":237,"author":{"gitId":"carriezhengjr"},"content":"* Adds interest(s) to the batchmate at the specific INDEX in the __currently displayed list__ in the _Students panel_. Refer to the section on _Regarding parameters_ at the start of [Features](#5-features) for more details.","lastModifiedDate":"2022-11-05"},{"lineNumber":238,"author":{"gitId":"jonasgwt"},"content":"* Interests added are case-insensitive and will be displayed in a lower casing.","lastModifiedDate":"2022-11-06"},{"lineNumber":239,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":240,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":241,"author":{"gitId":"chm252"},"content":"* `addInt 1 algo` adds the interest `algo` to the 1st batchmate in the currently displayed list.","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"jonasgwt"},"content":"* `addInt 3 database swe machinelearning` adds the interests `database`, `swe` and `machinelearning` to the 3rd batchmate in the currently displayed list.","lastModifiedDate":"2022-10-30"},{"lineNumber":243,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":244,"author":{"gitId":"carriezhengjr"},"content":"#### 5.2.2. Delete interests: `deleteInt`","lastModifiedDate":"2022-11-05"},{"lineNumber":245,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":246,"author":{"gitId":"sltsheryl"},"content":"Delete interest(s) from a specified batchmate in the _Students panel_.","lastModifiedDate":"2022-10-30"},{"lineNumber":247,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":248,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `deleteInt INDEX INTEREST [MORE_INTERESTS]...`","lastModifiedDate":"2022-10-30"},{"lineNumber":249,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":250,"author":{"gitId":"carriezhengjr"},"content":"* Deletes interest(s) from the batchmate at the specific INDEX in the __currently displayed list__ in the _Students panel_. Refer to the section on _Regarding parameters_ at the start of [Features](#5-features) for more details.","lastModifiedDate":"2022-11-05"},{"lineNumber":251,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":252,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":253,"author":{"gitId":"jonasgwt"},"content":"* `deleteInt 1 ai` deletes the interest `ai` from the 1st batchmate in the currently displayed list.","lastModifiedDate":"2022-10-30"},{"lineNumber":254,"author":{"gitId":"jonasgwt"},"content":"* `deleteInt 3 ai swe` deletes the interests `ai` and `swe` from the 3rd batchmate in the currently displayed list.","lastModifiedDate":"2022-10-30"},{"lineNumber":255,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":256,"author":{"gitId":"carriezhengjr"},"content":"#### 5.2.3. Find batchmates by interests: `findInt`","lastModifiedDate":"2022-11-05"},{"lineNumber":257,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":258,"author":{"gitId":"ElijahS67"},"content":"Finds batchmates whose interests contain __all__ the specified interests.","lastModifiedDate":"2022-10-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `findInt INTEREST [MORE_INTERESTS]...`","lastModifiedDate":"2022-10-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"jonasgwt"},"content":"* The search is case-insensitive. e.g. `machineLearning` will match `machinelearning`.","lastModifiedDate":"2022-10-31"},{"lineNumber":263,"author":{"gitId":"jonasgwt"},"content":"* Only exact words will be matched. e.g. `sw` will not match `swe`.","lastModifiedDate":"2022-10-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":265,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":266,"author":{"gitId":"jonasgwt"},"content":"* `findInt ai` returns all batchmates whose interests contain `ai`.","lastModifiedDate":"2022-10-30"},{"lineNumber":267,"author":{"gitId":"jonasgwt"},"content":"* `findInt swe security` returns all batchmates whose interests contain both `swe` and `security`.","lastModifiedDate":"2022-10-30"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"carriezhengjr"},"content":"### 5.3. Module commands","lastModifiedDate":"2022-11-05"},{"lineNumber":270,"author":{"gitId":"jonasgwt"},"content":"Module commands manage a batchmate\u0027s list of modules, such as the addition of modules, deletion of modules and searching batchmates with specified modules.","lastModifiedDate":"2022-11-06"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":272,"author":{"gitId":"carriezhengjr"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**","lastModifiedDate":"2022-10-30"},{"lineNumber":273,"author":{"gitId":"carriezhengjr"},"content":"Commands used to manage a batchmate\u0027s personal information in [Batchmate commands](#51-batchmate-commands) and [Interest commands](#52-interest-commands) follow the 1 command word syntax. E.g., `add`, `addInt`.","lastModifiedDate":"2022-11-05"},{"lineNumber":274,"author":{"gitId":"jonasgwt"},"content":"On the other hand, commands that manage a module detail in [Module commands](#53-module-commands) can have multiple command words preceded by the `mod` keyword. E.g., `mod add`, `mod mark all`, `mod find taken`.","lastModifiedDate":"2022-11-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":276,"author":{"gitId":"carriezhengjr"},"content":"This is to facilitate easy distinction between the nature of commands.","lastModifiedDate":"2022-10-30"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"carriezhengjr"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":279,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":280,"author":{"gitId":"carriezhengjr"},"content":"#### 5.3.1. View a batchmate\u0027s modules","lastModifiedDate":"2022-11-05"},{"lineNumber":281,"author":{"gitId":"carriezhengjr"},"content":"Views the list of modules taken by a batchmate in the Modules panel.","lastModifiedDate":"2022-10-30"},{"lineNumber":282,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":283,"author":{"gitId":"carriezhengjr"},"content":"Left-click the row with the batchmate\u0027s name in the Students panel.","lastModifiedDate":"2022-10-30"},{"lineNumber":284,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":285,"author":{"gitId":"carriezhengjr"},"content":"- The selected row would turn blue and the Modules panel would display all the modules of the batchmate.","lastModifiedDate":"2022-10-30"},{"lineNumber":286,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":287,"author":{"gitId":"carriezhengjr"},"content":"Below is the GUI after you left-click the 1st batchmate in the Students panel. The 1st row turns blue and the Modules panel displays all the modules of the 1st batchmate.","lastModifiedDate":"2022-11-05"},{"lineNumber":288,"author":{"gitId":"jonasgwt"},"content":"![UgViewMod](images/UgViewMod.png)","lastModifiedDate":"2022-11-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"carriezhengjr"},"content":"#### 5.3.2. Add module to a batchmate: `mod add`","lastModifiedDate":"2022-11-05"},{"lineNumber":291,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":292,"author":{"gitId":"sltsheryl"},"content":"Adds module(s) to a specified batchmate in the _Modules panel_.","lastModifiedDate":"2022-10-30"},{"lineNumber":293,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":294,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `mod add INDEX MODULE [MORE_MODULES]...`","lastModifiedDate":"2022-10-30"},{"lineNumber":295,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":296,"author":{"gitId":"carriezhengjr"},"content":"* Adds module(s) to the batchmate at the specific `INDEX` in the __currently displayed list__ in the _Modules panel_. Refer to the section on _Regarding parameters_ at the start of [Features](#5-features) for more details.","lastModifiedDate":"2022-11-05"},{"lineNumber":297,"author":{"gitId":"jonasgwt"},"content":"* Modules added to a batchmate will be automatically categorised according to their prefixes. e.g. `cs2103t` will be tagged as `Computer Science`.  `ma1521` will be tagged as `Mathematics`. Modules that Mass Linkers cannot identify will be tagged as `Unrestricted Elective`. More information can be found under [Module Categorisation](#56-module-categorisation).","lastModifiedDate":"2022-11-06"},{"lineNumber":298,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":299,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":300,"author":{"gitId":"carriezhengjr"},"content":"* `mod add 1 ma1521` adds the module `MA1521` to the 1st batchmate in the currently displayed list.","lastModifiedDate":"2022-10-30"},{"lineNumber":301,"author":{"gitId":"jonasgwt"},"content":"* `mod add 3 cs2100 cs2103t cs2101 cs2105` adds the modules `CS2100`, `CS2103T`, `CS2101` and `CS2105` to the 3rd batchmate in the currently displayed list.","lastModifiedDate":"2022-10-16"},{"lineNumber":302,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":303,"author":{"gitId":"jonasgwt"},"content":"Below is the GUI after executing `mod add 1 ma1521`. The module `MA1521` is successfully added to the 1st batchmate and automatically categorised as `Mathematics`. The expected changes are annotated with a purple rectangular box below.","lastModifiedDate":"2022-11-06"},{"lineNumber":304,"author":{"gitId":"jonasgwt"},"content":"![UgModAdd](images/UgModAdd.png)","lastModifiedDate":"2022-11-02"},{"lineNumber":305,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":306,"author":{"gitId":"carriezhengjr"},"content":"#### 5.3.3. Delete module from a batchmate: `mod delete`","lastModifiedDate":"2022-11-05"},{"lineNumber":307,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":308,"author":{"gitId":"sltsheryl"},"content":"Deletes module(s) from a specified batchmate in the _Modules panel_.","lastModifiedDate":"2022-10-30"},{"lineNumber":309,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":310,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `mod delete INDEX MODULE [MORE_MODULES]...`","lastModifiedDate":"2022-10-30"},{"lineNumber":311,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":312,"author":{"gitId":"carriezhengjr"},"content":"* Deletes module(s) from the batchmate at the specific `INDEX` in the __currently displayed list__ in the _Modules panel_. Refer to the section on _Regarding parameters_ at the start of [Features](#5-features) for more details.","lastModifiedDate":"2022-11-05"},{"lineNumber":313,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":314,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":315,"author":{"gitId":"jonasgwt"},"content":"* `mod delete 1 cs2103t` deletes the module `CS2103T` from the 1st batchmate in the currently displayed list.","lastModifiedDate":"2022-10-16"},{"lineNumber":316,"author":{"gitId":"jonasgwt"},"content":"* `mod delete 3 cs2100 cs2103t cs2101 cs2105` deletes the modules `CS2100`, `CS2103T`, `CS2101` and `CS2105` from the 3rd batchmate in the currently displayed list.","lastModifiedDate":"2022-10-16"},{"lineNumber":317,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":318,"author":{"gitId":"carriezhengjr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-11-02"},{"lineNumber":319,"author":{"gitId":"carriezhengjr"},"content":"To edit a module, simply delete that module using [`mod delete`](#533-delete-module-from-a-batchmate-mod-delete) and add the new module using [`mod add`](#532-add-module-to-a-batchmate-mod-add).","lastModifiedDate":"2022-11-05"},{"lineNumber":320,"author":{"gitId":"carriezhengjr"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":321,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":322,"author":{"gitId":"carriezhengjr"},"content":"#### 5.3.4. Mark module as taken: `mod mark`","lastModifiedDate":"2022-11-05"},{"lineNumber":323,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":324,"author":{"gitId":"sltsheryl"},"content":"Marks module(s) of a specified batchmate as `taken` in the _Modules panel_, which means the batchmate has taken the module(s) before.","lastModifiedDate":"2022-10-30"},{"lineNumber":325,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":326,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `mod mark INDEX MODULE [MORE_MODULES]...`","lastModifiedDate":"2022-10-30"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":328,"author":{"gitId":"carriezhengjr"},"content":"* Marks module(s) of the batchmate at the specific `INDEX` in the __currently displayed list__ in the _Modules panel_. Refer to the section on _Regarding parameters_ at the start of [Features](#5-features) for more details.","lastModifiedDate":"2022-11-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":330,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":331,"author":{"gitId":"jonasgwt"},"content":"* `mod mark 1 cs2103t` marks the module `CS2103T` of the 1st batchmate in the currently displayed list as `taken`.","lastModifiedDate":"2022-10-16"},{"lineNumber":332,"author":{"gitId":"jonasgwt"},"content":"* `mod mark 3 cs2100 cs2103t cs2101 cs2105` marks the modules `CS2100`, `CS2103T`, `CS2101` and `CS2105` of the 3rd batchmate in the currently displayed list as `taken`.","lastModifiedDate":"2022-10-16"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":334,"author":{"gitId":"jonasgwt"},"content":"Below is the GUI after executing `mod mark 3 cs2100 cs2103t cs2101 cs2105`. The modules `CS2100`, `CS2103T`, `CS2101` and `CS2105` are successfully marked as `taken`. The expected changes are annotated with purple rectangular boxes below.","lastModifiedDate":"2022-11-06"},{"lineNumber":335,"author":{"gitId":"jonasgwt"},"content":"![UgModMark](images/UgModMark.png)","lastModifiedDate":"2022-11-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":338,"author":{"gitId":"carriezhengjr"},"content":"#### 5.3.5. Unmark module as not taken: `mod unmark`","lastModifiedDate":"2022-11-05"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":340,"author":{"gitId":"sltsheryl"},"content":"Unmarks module(s) of a specified batchmate and updates the status as `taking` in the _Modules panel_, which means the batchmate is currently taking the module(s).","lastModifiedDate":"2022-10-30"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":342,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `mod unmark INDEX MODULE [MORE_MODULES]...`","lastModifiedDate":"2022-10-30"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":344,"author":{"gitId":"carriezhengjr"},"content":"* Unmarks module(s) of the batchmate at the specific `INDEX` in the __currently displayed list__ in the _Modules panel_. Refer to the section on _Regarding parameters_ at the start of [Features](#5-features) for more details.","lastModifiedDate":"2022-11-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":347,"author":{"gitId":"jonasgwt"},"content":"* `mod unmark 1 cs2103t` unmarks the module `CS2103T` of the 1st batchmate in the currently displayed list as `not taken`.","lastModifiedDate":"2022-10-16"},{"lineNumber":348,"author":{"gitId":"jonasgwt"},"content":"* `mod unmark 3 cs2100 cs2103t cs2101 cs2105` unmarks the modules `CS2100`, `CS2103T`, `CS2101` and `CS2105` of the 3rd batchmate in the currently displayed list as `not taken`.","lastModifiedDate":"2022-10-16"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"carriezhengjr"},"content":"#### 5.3.6. Mark all modules as taken: `mod mark all`","lastModifiedDate":"2022-11-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":352,"author":{"gitId":"carriezhengjr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:warning: **Warning:** The `mod mark all` command is irreversible. Only execute it if you intend to mark __all existing modules__ for __all batchmates__ as taken. ","lastModifiedDate":"2022-11-05"},{"lineNumber":353,"author":{"gitId":"sltsheryl"},"content":" \u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":355,"author":{"gitId":"sltsheryl"},"content":"Marks all current modules of every batchmate in Mass Linkers as `taken` in the _Modules panel_. This makes it convenient to update the module status of all existing modules of every batchmate as taken after each semester.","lastModifiedDate":"2022-10-30"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":357,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `mod mark all`","lastModifiedDate":"2022-10-30"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":359,"author":{"gitId":"carriezhengjr"},"content":"#### 5.3.7. Find batchmates taking specified modules: `mod find`","lastModifiedDate":"2022-11-05"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":361,"author":{"gitId":"carriezhengjr"},"content":"Finds batchmates with modules matching __all__ the specified modules.","lastModifiedDate":"2022-10-19"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":363,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `mod find MODULE [MORE_MODULES]...`","lastModifiedDate":"2022-10-30"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":365,"author":{"gitId":"carriezhengjr"},"content":"* The search is case-insensitive. e.g `cs2100` will match `CS2100`.","lastModifiedDate":"2022-10-12"},{"lineNumber":366,"author":{"gitId":"carriezhengjr"},"content":"* Only __full words__ will be matched. e.g. `cs21` will _not_ return batchmates with the mods `CS2100` and `CS2101`.","lastModifiedDate":"2022-10-27"},{"lineNumber":367,"author":{"gitId":"chm252"},"content":"* Searching for illegitimate module codes will return 0 student.","lastModifiedDate":"2022-11-06"},{"lineNumber":368,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":369,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":370,"author":{"gitId":"chm252"},"content":"* `mod find cs2100` returns batchmates with the module `CS2100`.","lastModifiedDate":"2022-10-26"},{"lineNumber":371,"author":{"gitId":"chm252"},"content":"* `mod find cs2101 cs2103t cs1231s` returns batchmates with all three modules - `CS2101`, `CS2103T` and `CS1231S`.","lastModifiedDate":"2022-11-06"},{"lineNumber":372,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":373,"author":{"gitId":"carriezhengjr"},"content":"#### 5.3.8. Find modules taken or taking: `mod find taken` or `mod find taking`","lastModifiedDate":"2022-11-05"},{"lineNumber":374,"author":{"gitId":"carriezhengjr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-19"},{"lineNumber":375,"author":{"gitId":"carriezhengjr"},"content":"This is an \u003ci\u003eextension\u003c/i\u003e of [`mod find`](#537-find-batchmates-taking-specified-modules-mod-find). The rules listed above for [`mod find`](#537-find-batchmates-taking-specified-modules-mod-find) apply to this feature too.","lastModifiedDate":"2022-11-05"},{"lineNumber":376,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":378,"author":{"gitId":"carriezhengjr"},"content":"Finds batchmates who have taken or are taking __all__ the specified modules.","lastModifiedDate":"2022-10-27"},{"lineNumber":379,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":380,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `mod find taken MODULE [MORE_MODULES]...` or `mod find taking MODULE [MORE_MODULES]...`","lastModifiedDate":"2022-10-30"},{"lineNumber":381,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":382,"author":{"gitId":"carriezhengjr"},"content":"__Examples:__","lastModifiedDate":"2022-10-30"},{"lineNumber":383,"author":{"gitId":"chm252"},"content":"* `mod find taken cs2100` returns batchmates who have taken `CS2100`.","lastModifiedDate":"2022-10-26"},{"lineNumber":384,"author":{"gitId":"chm252"},"content":"* `mod find taken cs2101 cs2103t cs1231s` returns batchmates who have taken all three modules - `CS2101`, `CS2103T` and `CS1231S`.","lastModifiedDate":"2022-11-06"},{"lineNumber":385,"author":{"gitId":"chm252"},"content":"* `mod find taking cs2100` returns batchmates who are taking `CS2100`.","lastModifiedDate":"2022-10-26"},{"lineNumber":386,"author":{"gitId":"chm252"},"content":"* `mod find taking cs2101 cs2103t cs1231s` returns batchmates who are taking all three modules - `CS2101`, `CS2103T` and `CS1231S`.","lastModifiedDate":"2022-11-06"},{"lineNumber":387,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":388,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":389,"author":{"gitId":"carriezhengjr"},"content":"### 5.4. General commands","lastModifiedDate":"2022-11-05"},{"lineNumber":390,"author":{"gitId":"sltsheryl"},"content":"General commands are commands which do not fall under any of the above categories.  ","lastModifiedDate":"2022-11-02"},{"lineNumber":391,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":392,"author":{"gitId":"carriezhengjr"},"content":"#### 5.4.1. View help: `help`","lastModifiedDate":"2022-11-05"},{"lineNumber":393,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":394,"author":{"gitId":"jonasgwt"},"content":"Shows a brief summary of commands with their syntax and a link to the user guide. You can also click the `Open User Guide` button, which will redirect you to the user guide in your browser.","lastModifiedDate":"2022-11-06"},{"lineNumber":395,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":396,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `help`","lastModifiedDate":"2022-10-30"},{"lineNumber":397,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":398,"author":{"gitId":"carriezhengjr"},"content":"#### 5.4.2. Clear all data: `clear`","lastModifiedDate":"2022-11-05"},{"lineNumber":399,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":400,"author":{"gitId":"carriezhengjr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:warning: **Warning:** The `clear` command is irreversible. Only execute it if you intend to clear __all existing data__. ","lastModifiedDate":"2022-11-05"},{"lineNumber":401,"author":{"gitId":"sltsheryl"},"content":" \u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":403,"author":{"gitId":"sltsheryl"},"content":"Clears all existing data in Mass Linkers. ","lastModifiedDate":"2022-10-30"},{"lineNumber":404,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":405,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `clear`","lastModifiedDate":"2022-10-30"},{"lineNumber":406,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":407,"author":{"gitId":"carriezhengjr"},"content":"#### 5.4.3. Exit the program : `exit`","lastModifiedDate":"2022-11-05"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"carriezhengjr"},"content":"Exits Mass Linkers.","lastModifiedDate":"2022-10-27"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"carriezhengjr"},"content":"__Format:__ `exit`","lastModifiedDate":"2022-10-30"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"carriezhengjr"},"content":"#### 5.4.4. Save the data","lastModifiedDate":"2022-11-05"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"jonasgwt"},"content":"Mass Linkers ensures your data is saved automatically after executing a command that changes the data. Hence, you do not need to conduct a save manually.","lastModifiedDate":"2022-11-06"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-29"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":419,"author":{"gitId":"carriezhengjr"},"content":"### 5.5. Parameter Requirements","lastModifiedDate":"2022-11-05"},{"lineNumber":420,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":421,"author":{"gitId":"sltsheryl"},"content":"Below is the summary of requirements to take note of for each parameter for the different commands.","lastModifiedDate":"2022-11-02"},{"lineNumber":422,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":423,"author":{"gitId":"sltsheryl"},"content":"| Parameter       | Requirements| Examples                                                             |","lastModifiedDate":"2022-11-05"},{"lineNumber":424,"author":{"gitId":"sltsheryl"},"content":"|-----------------||----------------------------------------------------------------------|","lastModifiedDate":"2022-11-05"},{"lineNumber":425,"author":{"gitId":"sltsheryl"},"content":"| Name            | Only alphabetical with spaces allowed. \u003cbr/\u003e| `Joe`, `John Doe`                                                    |","lastModifiedDate":"2022-11-05"},{"lineNumber":426,"author":{"gitId":"sltsheryl"},"content":"| Telegram handle | 1. May only contain alphanumeric characters or underscores and have a minimum length of 5 characters.\u003cbr\u003e 2. Consecutive and/or starting/ending with underscores are not allowed as per Telegram requirements.                                                                                                                                                                                                                                                                                                                                                                                                                                                                               | `johndoe`, `john_doe123`                                             |","lastModifiedDate":"2022-11-05"},{"lineNumber":427,"author":{"gitId":"sltsheryl"},"content":"| Phone number    | 1. Should contain only numerical values (i.e. `0-9`), and at most one \"`+`\" at the beginning for country code (optional). \u003cbr\u003e 2. Should have a length of 7-16 characters (inclusive of country code). \u003cbr\u003e 3. Incorrect phone numbers are still accepted, though they are discouraged and a warning will be shown.                                                                                                                                                                                                                                                                                                                                                                          | `98383913`, `+12064512559`, `(+65) 98383913` (Warning will be shown) |","lastModifiedDate":"2022-11-05"},{"lineNumber":428,"author":{"gitId":"sltsheryl"},"content":"| GitHub username | 1. May only contain alphanumeric characters or hyphens and have a length between 1 - 39 characters.\u003cbr\u003e 2. Consecutive and/or starting with hyphens are not allowed as per GitHub requirements. \u003cbr/\u003e                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        | `john1`, `john-doe`                                                  |","lastModifiedDate":"2022-11-05"},{"lineNumber":429,"author":{"gitId":"jonasgwt"},"content":"| Interest        | Only alphanumerical characters are allowed| `swe`, `ai`, `algo`                                                  |","lastModifiedDate":"2022-11-06"},{"lineNumber":430,"author":{"gitId":"sltsheryl"},"content":"| Email           | Emails should be of the format local-part@domain and adhere to the following constraints: \u003cbr\u003e 1. The local-part should only contain alphanumeric characters and these special characters within the quotation marks: \"`+_.-`\". The local-part may not start or end with any special characters.\u003cbr\u003e 2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods.\u003cbr\u003eThe domain name must:\u003cbr\u003e- end with a domain label at least 2 characters long\u003cbr\u003e- have each domain label start and end with alphanumeric characters\u003cbr\u003e- have each domain label consist of alphanumeric characters, separated only by hyphens, if any. \u003cbr/\u003e | `john12@gmail.com`, `joe-lim@u.nus.edu`, `joe@mail`                  |","lastModifiedDate":"2022-11-05"},{"lineNumber":431,"author":{"gitId":"sltsheryl"},"content":"| Modules         | Module names should be numbers prefixed with alphabets and be less than 10 characters| `CS2100`, `CS2103T`, `ES2660`                                        |","lastModifiedDate":"2022-11-05"},{"lineNumber":432,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":433,"author":{"gitId":"carriezhengjr"},"content":"### 5.6. Module Categorisation","lastModifiedDate":"2022-11-05"},{"lineNumber":434,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":435,"author":{"gitId":"sltsheryl"},"content":"Modules are automatically categorised when you create them. The categorisation is modelled after the prefixes which [NUS modules](https://nusmods.com/modules?sem[0]\u003d1\u0026sem[1]\u003d2\u0026sem[2]\u003d3\u0026sem[3]\u003d4) use.","lastModifiedDate":"2022-11-02"},{"lineNumber":436,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":437,"author":{"gitId":"carriezhengjr"},"content":"Below is the categorisation:","lastModifiedDate":"2022-10-27"},{"lineNumber":438,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":439,"author":{"gitId":"jonasgwt"},"content":"| Category              | Module Prefix      |","lastModifiedDate":"2022-10-20"},{"lineNumber":440,"author":{"gitId":"carriezhengjr"},"content":"|-----------------------|--------------------|","lastModifiedDate":"2022-10-29"},{"lineNumber":441,"author":{"gitId":"carriezhengjr"},"content":"| Computer Science      | CS, IS, CP         |","lastModifiedDate":"2022-10-29"},{"lineNumber":442,"author":{"gitId":"carriezhengjr"},"content":"| Mathematics           | ST, MA             |","lastModifiedDate":"2022-10-29"},{"lineNumber":443,"author":{"gitId":"carriezhengjr"},"content":"| Science               | LS, CM, PC         |","lastModifiedDate":"2022-10-29"},{"lineNumber":444,"author":{"gitId":"carriezhengjr"},"content":"| General Education     | GE, UT             |","lastModifiedDate":"2022-10-29"},{"lineNumber":445,"author":{"gitId":"carriezhengjr"},"content":"| Unrestricted Elective | All other prefixes |","lastModifiedDate":"2022-10-29"},{"lineNumber":446,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":447,"author":{"gitId":"carriezhengjr"},"content":"_Module prefix refers to the first two characters of every module name._","lastModifiedDate":"2022-10-27"},{"lineNumber":448,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":449,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"carriezhengjr"},"content":"## **6. FAQ**","lastModifiedDate":"2022-11-05"},{"lineNumber":452,"author":{"gitId":"jonasgwt"},"content":"Facing an issue? Below are several commonly asked questions which address technical and privacy concerns.","lastModifiedDate":"2022-11-06"},{"lineNumber":453,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":454,"author":{"gitId":"carriezhengjr"},"content":"### 6.1. Technical Support","lastModifiedDate":"2022-11-05"},{"lineNumber":455,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":456,"author":{"gitId":"carriezhengjr"},"content":"**Q**: If I do not have Java 11 or above, how can I install it on my computer?\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":457,"author":{"gitId":"carriezhengjr"},"content":"**A**: Visit [this website](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html) and follow the installation guide for your operating system.","lastModifiedDate":"2022-11-05"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":459,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"jonasgwt"},"content":"**A**: Install Mass Linkers on the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Mass Linkers home folder.","lastModifiedDate":"2022-11-06"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"jonasgwt"},"content":"**Q**: Do I need an internet connection to use Mass Linkers?\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":463,"author":{"gitId":"jonasgwt"},"content":"**A**: No, an internet connection is not required.","lastModifiedDate":"2022-11-06"},{"lineNumber":464,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":465,"author":{"gitId":"jonasgwt"},"content":"\u003cspan style\u003d\"background-color: #FFFF00\"\u003eImportant for Mac users\u003c/span\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":466,"author":{"gitId":"sltsheryl"},"content":"**Q**: I am using Mac and I tried opening the `MassLinkers.jar` file by double-clicking it in Finder. It says *\"MassLinkers.jar\" cannot be opened because it is from an unidentified developer.*\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":467,"author":{"gitId":"carriezhengjr"},"content":"**A**: Right-click the `MassLinkers.jar file` and select `Open`. When a warning message that says _macOS cannot verify the developer of \"MassLinkers.jar\". Are you sure you want to open it?_ appears, select `Open`. Alternatively, you can right-click the `MassLinkers.jar` file and select `Open with JavaLauncher(default)`.","lastModifiedDate":"2022-11-05"},{"lineNumber":468,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":469,"author":{"gitId":"sltsheryl"},"content":"**Q**: Will the data of batchmates be saved if the program was not closed via the ```exit``` command?\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":470,"author":{"gitId":"sltsheryl"},"content":"**A**: Yes, the data will still be saved if the program is closed by closing the application window directly. However, we advise using the ```exit``` command for a better user experience.","lastModifiedDate":"2022-10-30"},{"lineNumber":471,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":472,"author":{"gitId":"sltsheryl"},"content":"**Q**: I have accidentally cleared all the data. Is there any way to undo the changes?\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":473,"author":{"gitId":"sltsheryl"},"content":"**A**: Currently, there is no ```undo``` feature and the ```clear``` command is irreversible. Hence, it is extremely important to only use it when you want an empty Student and Module table. However, we are looking into adding ```undo``` and ```redo``` commands for future developments.","lastModifiedDate":"2022-10-30"},{"lineNumber":474,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":475,"author":{"gitId":"jonasgwt"},"content":"**Q**: I have added a batchmate whose row exceeds the currently displayed list of batchmates in the _Students panel_. I have to scroll below to view the newly added batchmate. Is this expected?\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":476,"author":{"gitId":"jonasgwt"},"content":"**A**: Yes, adding a new batchmate would not auto-scroll the _Students panel_ to the bottom of the list.","lastModifiedDate":"2022-11-06"},{"lineNumber":477,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":478,"author":{"gitId":"carriezhengjr"},"content":"### 6.2. Privacy Issues","lastModifiedDate":"2022-11-05"},{"lineNumber":479,"author":{"gitId":"sltsheryl"},"content":"**Q**: What if I do not want to share some of my personal data like my phone number and email address?\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":480,"author":{"gitId":"sltsheryl"},"content":"**A**: While it is every student\u0027s responsibility to exercise discretion in sharing their batchmates\u0027 contacts, Mass Linkers has made more sensitive data fields such as GitHub, Phone and Email optional. In this way, the only mandatory fields are your name and telegram handle. If you are uncomfortable sharing your name, you can use a pseudo-name for identification purposes.","lastModifiedDate":"2022-10-30"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":482,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"carriezhengjr"},"content":"## **7. Command summary**","lastModifiedDate":"2022-11-05"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"carriezhengjr"},"content":"All the available commands in Mass Linkers are categorised into 4 summary tables below.","lastModifiedDate":"2022-10-30"},{"lineNumber":487,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":488,"author":{"gitId":"carriezhengjr"},"content":"### 7.1. Batchmate commands","lastModifiedDate":"2022-11-05"},{"lineNumber":489,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":490,"author":{"gitId":"sltsheryl"},"content":"| Action                           | Format                                                                                    | Examples                                                                                          |","lastModifiedDate":"2022-10-29"},{"lineNumber":491,"author":{"gitId":"sltsheryl"},"content":"|----------------------------------|-------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-30"},{"lineNumber":492,"author":{"gitId":"jonasgwt"},"content":"| **Add**                          | `add n/NAME t/TELEGRAM [g/GITHUB] [p/PHONE] [e/EMAIL] [i/INTEREST]... [m/MODULE]...`      | `add n/John Doe t/johnxyz g/johndoe p/98765432 e/johnd@example.com i/AI i/swe m/cs2103t m/cs2101` |","lastModifiedDate":"2022-10-30"},{"lineNumber":493,"author":{"gitId":"jonasgwt"},"content":"| **Edit**                         | `edit INDEX [n/NAME] [t/TELEGRAM] [g/GITHUB] [p/PHONE] [e/EMAIL] [i/INTEREST]...`         | `edit 1 g/johndoe p/91234567 e/johndoe@example.com`                                               |","lastModifiedDate":"2022-10-29"},{"lineNumber":494,"author":{"gitId":"carriezhengjr"},"content":"| **Delete**                       | `delete INDEX`                                                                            | `delete 2`                                                                                        |","lastModifiedDate":"2022-10-30"},{"lineNumber":495,"author":{"gitId":"sltsheryl"},"content":"| **Find**                         | `find KEYWORD [MORE_KEYWORDS]...`                                                         | `find Alex david`                                                                                 |","lastModifiedDate":"2022-10-29"},{"lineNumber":496,"author":{"gitId":"carriezhengjr"},"content":"| **List**                         | `list`                                                                                    | `list`                                                                                            |","lastModifiedDate":"2022-10-30"},{"lineNumber":497,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":498,"author":{"gitId":"carriezhengjr"},"content":"### 7.2. Interest commands","lastModifiedDate":"2022-11-05"},{"lineNumber":499,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":500,"author":{"gitId":"carriezhengjr"},"content":"| Action                           | Format                                                                                    | Examples                                                                                          |","lastModifiedDate":"2022-10-30"},{"lineNumber":501,"author":{"gitId":"carriezhengjr"},"content":"|----------------------------------|-------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-30"},{"lineNumber":502,"author":{"gitId":"jonasgwt"},"content":"| **Add interest**                 | `addInt INDEX INTEREST [MORE_INTERESTS]...`                                               | `addInt 3 algo ai swe`                                                                            |","lastModifiedDate":"2022-10-30"},{"lineNumber":503,"author":{"gitId":"jonasgwt"},"content":"| **Delete interest**              | `deleteInt INDEX INTEREST [MORE_INTERESTS]...`                                            | `deleteInt 3 ai swe`                                                                              |","lastModifiedDate":"2022-10-30"},{"lineNumber":504,"author":{"gitId":"jonasgwt"},"content":"| **Find by interest**             | `findInt INTEREST [MORE_INTEREST]...`                                                     | `findInt ai swe`                                                                                  |","lastModifiedDate":"2022-10-30"},{"lineNumber":505,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":506,"author":{"gitId":"carriezhengjr"},"content":"### 7.3. Module commands","lastModifiedDate":"2022-11-05"},{"lineNumber":507,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":508,"author":{"gitId":"carriezhengjr"},"content":"| Action                           | Format                                                                                    | Examples                                                                                          |","lastModifiedDate":"2022-10-30"},{"lineNumber":509,"author":{"gitId":"carriezhengjr"},"content":"|----------------------------------|-------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-30"},{"lineNumber":510,"author":{"gitId":"sltsheryl"},"content":"| **Add module**                   | `mod add INDEX MODULE [MORE_MODULES]...`                                                  | `mod add 3 cs2100 cs2103t cs2101 cs2105`                                                          |","lastModifiedDate":"2022-10-29"},{"lineNumber":511,"author":{"gitId":"sltsheryl"},"content":"| **Delete module**                | `mod delete INDEX MODULE [MORE_MODULES]...`                                               | `mod delete 3 cs2100 cs2103t cs2101 cs2105`                                                       |","lastModifiedDate":"2022-10-29"},{"lineNumber":512,"author":{"gitId":"sltsheryl"},"content":"| **Mark module**                  | `mod mark INDEX MODULE [MORE_MODULES]...`                                                 | `mod mark 3 cs2100 cs2103t cs2101 cs2105`                                                         |","lastModifiedDate":"2022-10-29"},{"lineNumber":513,"author":{"gitId":"sltsheryl"},"content":"| **Unmark module**                | `mod unmark INDEX MODULE [MORE_MODULES]...`                                               | `mod unmark 3 cs2100 cs2103t cs2101 cs2105`                                                       |","lastModifiedDate":"2022-10-29"},{"lineNumber":514,"author":{"gitId":"sltsheryl"},"content":"| **Mark all modules**             | `mod mark all`                                                                            | `mod mark all`                                                                                    |","lastModifiedDate":"2022-10-29"},{"lineNumber":515,"author":{"gitId":"sltsheryl"},"content":"| **Find module**                  | `mod find MODULE [MORE_MODULES]...`                                                       | `mod find cs2101 cs2103t`                                                                         |","lastModifiedDate":"2022-10-29"},{"lineNumber":516,"author":{"gitId":"sltsheryl"},"content":"| **Find modules taken or taking** | `mod find taken MODULE [MORE_MODULES]...` \u003cbr\u003e `mod find taking MODULE [MORE_MODULES]...` | `mod find taken cs2100` or \u003cbr\u003e `mod find taking cs2101 cs2103t`                                  |","lastModifiedDate":"2022-10-29"},{"lineNumber":517,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":518,"author":{"gitId":"carriezhengjr"},"content":"### 7.4. General commands","lastModifiedDate":"2022-11-05"},{"lineNumber":519,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":520,"author":{"gitId":"carriezhengjr"},"content":"| Action                           | Format                                                                                    | Examples                                                                                          |","lastModifiedDate":"2022-10-30"},{"lineNumber":521,"author":{"gitId":"carriezhengjr"},"content":"|----------------------------------|-------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-30"},{"lineNumber":522,"author":{"gitId":"carriezhengjr"},"content":"| **Help**                         | `help`                                                                                    | `help`                                                                                            |","lastModifiedDate":"2022-10-30"},{"lineNumber":523,"author":{"gitId":"sltsheryl"},"content":"| **Clear all data**               | `clear`                                                                                   | `clear`                                                                                           |","lastModifiedDate":"2022-10-30"},{"lineNumber":524,"author":{"gitId":"sltsheryl"},"content":"| **Exit**                         | `exit`                                                                                    | `exit`                                                                                            |","lastModifiedDate":"2022-10-29"}],"authorContributionMap":{"ElijahS67":6,"sltsheryl":108,"jonasgwt":65,"carriezhengjr":203,"chm252":33,"-":109}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ElijahS67"},"content":"    content: \"Mass Linkers\";","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ElijahS67":1,"-":294}},{"path":"docs/_sass/minima/_layout.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Site header","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":".site-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  border-top: 5px solid $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  min-height: $spacing-unit * 1.865;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  line-height: $base-line-height * $base-font-size * 2.25;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  // Positioning context for the mobile navigation icon","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":".site-title {","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"  @include relative-font-size(1.6);","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  font-weight: 300;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    padding-right: 45px;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u0026,","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    color: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":".site-nav {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  position: absolute;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  top: 9px;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  border-radius: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  text-align: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  .nav-trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    height: 26px;","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    line-height: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    padding-top: 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003e svg path {","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      fill: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    height: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    z-index: 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    cursor: pointer;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  input:checked ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    padding-bottom: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    line-height: $base-line-height;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    padding: 5px 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // Gaps between nav items, but not on the last one","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      margin-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    margin-left: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-medium) {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    position: static;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    border: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    background-color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      display: inline;","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        margin-right: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":" * Page content","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":".page-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  padding: $spacing-unit 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  flex: 1 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":".page-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":".post-list-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"sltsheryl"},"content":"  @include relative-font-size(1.55);","lastModifiedDate":"2022-11-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":".post-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  margin-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  list-style: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  \u003e li {","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":".post-meta {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":".post-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.5);","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Posts","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":".post-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":".post-title,","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":".post-content h1 {","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"sltsheryl"},"content":"  @include relative-font-size(2.4);","lastModifiedDate":"2022-11-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  line-height: 1.15;","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"sltsheryl"},"content":"    @include relative-font-size(2.4);","lastModifiedDate":"2022-11-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":".post-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"sltsheryl"},"content":"  h1, h2, h3 { margin-top: $spacing-unit }","lastModifiedDate":"2022-10-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  h4, h5, h6 { margin-top: $spacing-unit }","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  h2 {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"sltsheryl"},"content":"    @include relative-font-size(1.4);","lastModifiedDate":"2022-11-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  h3 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"sltsheryl"},"content":"    @include relative-font-size(1.3);","lastModifiedDate":"2022-11-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"sltsheryl"},"content":"      @include relative-font-size(1.3);","lastModifiedDate":"2022-11-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  h4 {","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"sltsheryl"},"content":"    @include relative-font-size(1.2);","lastModifiedDate":"2022-11-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  h5 {","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"sltsheryl"},"content":"    @include relative-font-size(1.1);","lastModifiedDate":"2022-11-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.0625);","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":".social-media-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  margin: 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    margin: 5px 10px 5px 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u0026:last-of-type { margin-right: 0 }","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    a {","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      \u0026:hover { border-color: darken($brand-color-light, 10%) }","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * Pagination navbar","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".pagination {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  @extend .social-media-list;","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    a, div {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      min-width: 41px;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      box-sizing: border-box;","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    div {","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      border: 1px solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      \u0026.pager-edge {","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        color: darken($brand-color-light, 5%);","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        border: 1px dashed;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":" * Grid helpers","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"@media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  .one-half {","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    width: calc(50% - (#{$spacing-unit} / 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sltsheryl":10,"-":253}},{"path":"docs/_sass/minima/custom-styles.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// Placeholder to allow defining custom styles that override everything else.","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"// (Use `_sass/minima/custom-variables.scss` to override variable defaults)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"  color: #9021b8;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"h2 {","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"  margin-bottom:15px;","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":".post-content h4 {","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"  margin-top: 10px;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"  margin-bottom: 5px;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"h4 {","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"  font-weight: 500;","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"h2, h3 {","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"  margin-top: 30px;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":".post-content h5, .post-content h6 {","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"  margin-top: 20px;","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"// Bootstrap style alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":".alert {","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  padding: $alert-padding-y $alert-padding-x;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  margin-bottom: $alert-margin-bottom;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  border: $alert-border-width solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  order-radius : $alert-border-radius;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"// Headings for larger alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":".alert-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  // Specified to prevent conflicts of changing $headings-color","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"// Provide class for links that match alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":".alert-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  font-weight: $alert-link-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"// Generate contextual modifier classes for colorizing the alert.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@each $color, $value in $theme-colors {","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  .alert-#{$color} {","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @include alert-variant(color-level($value, $alert-bg-level), color-level($value, $alert-border-level), color-level($value, $alert-color-level));","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sltsheryl":22,"-":33}},{"path":"docs/diagrams/AddInterestRefSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"skinparam SequenceReferenceBackgroundColor White","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"participant \":AddInterest\\nCommand\" as AddInterestCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"participant \":Student\" as Student MODEL_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"group sd Add Interest","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"[-\u003e AddInterestCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"activate AddInterestCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"AddInterestCommand -\u003e Model: getFilteredStudentList()","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"activate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"Model --\u003e AddInterestCommand: ObservableList\u003cStudent\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"AddInterestCommand -\u003e Student: get(1)","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"activate Student","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"Student --\u003e AddInterestCommand: studentToEdit","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"deactivate Student","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"AddInterestCommand -\u003e Student: addInterest(\"algo\")","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"activate Student","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"Student --\u003e AddInterestCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"deactivate Student","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"AddInterestCommand -\u003e Model: updateFilteredStudentList()","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"Model --\u003e AddInterestCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"[\u003c--AddInterestCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"deactivate AddInterestCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"end","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"ElijahS67":1,"sltsheryl":40}},{"path":"docs/diagrams/AddInterestSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"skinparam SequenceReferenceBackgroundColor White","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"participant \":Logic\\nManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"participant \":MassLinkers\\nParser\" as MassLinkersParser LOGIC_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"participant \":AddInterest\\nCommandParser\" as AddInterestCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"participant \":AddInterest\\nCommand\" as AddInterestCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"participant \"interestList:\\nSet\u003cInterest\u003e\" as Interest MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"[-\u003e LogicManager : execute\\n(\"addInt 1 algo\")","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"LogicManager -\u003e MassLinkersParser : parseCommand\\n(\"addInt 1 algo\")","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"activate MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"create AddInterestCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"MassLinkersParser -\u003e AddInterestCommandParser","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"activate AddInterestCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"AddInterestCommandParser --\u003e MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"deactivate AddInterestCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"MassLinkersParser -\u003e AddInterestCommandParser : parse\\n(\"1 algo\")","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"activate AddInterestCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"create Interest","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"AddInterestCommandParser -\u003e Interest","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"activate Interest","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"Interest --\u003e AddInterestCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"deactivate Interest","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"create AddInterestCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"AddInterestCommandParser -\u003e AddInterestCommand: new\\n(1, interestSet)","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"activate AddInterestCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"AddInterestCommand --\u003e AddInterestCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"deactivate AddInterestCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"AddInterestCommandParser --\u003e MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"deactivate AddInterestCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"AddInterestCommandParser -[hidden]-\u003e MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"destroy AddInterestCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"MassLinkersParser --\u003e LogicManager","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"deactivate MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"LogicManager -\u003e AddInterestCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"activate AddInterestCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"ref over AddInterestCommand, Model : Add Interest","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"AddInterestCommand --\u003e LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"deactivate AddInterestCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"ElijahS67":4,"sltsheryl":61}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStudent(p)","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveMassLinkers(massLinkers)","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sltsheryl":2,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"MassLinkers *-right-\u003e \"1\" UniqueStudentList","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"MassLinkers *-right-\u003e \"1\" UniqueInterestList","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"UniqueInterestList -[hidden]down- UniqueStudentList","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"UniqueInterestList -[hidden]down- UniqueStudentList","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"UniqueInterestList *-right-\u003e \"*\" Interest","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"UniqueStudentList -right-\u003e Student","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"Student -up-\u003e \"*\" Interest","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"Student *--\u003e Name","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"Student *--\u003e Telegram","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"Student *--\u003e GitHub","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"Student *--\u003e Phone","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"Student *--\u003e Email","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"Student *--\u003e \"*\" Module","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sltsheryl":5,"carriezhengjr":8,"-":10}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"if () then ([command commits MassLinkers])","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"    :Save MassLinkers to","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"    massLinkersStateList;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sltsheryl":3,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"participant \":MassLinkersParser\" as MassLinkersParser LOGIC_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"LogicManager -\u003e MassLinkersParser : parseCommand(\"delete 1\")","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"activate MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"MassLinkersParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"DeleteCommandParser --\u003e MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"MassLinkersParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"DeleteCommandParser --\u003e MassLinkersParser : d","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"DeleteCommandParser -[hidden]-\u003e MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"MassLinkersParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"deactivate MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"DeleteCommand -\u003e Model : deleteStudent(1)","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sltsheryl":11,"-":58}},{"path":"docs/diagrams/FindInterestActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"start","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":":Student enters find interest command;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":":Mass Linkers reads and parses command;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":":Mass Linkers creates a predicate","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"to test if entered interests","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"match those of a batchmate;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":":Mass Linkers tests this predicate","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"on every batchmate;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"if () then ([matches predicate])","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"    :Mass Linkers retains","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"    this batchmate in the list","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"    of batchmates;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"else ([does not match predicate])","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"    :Mass Linkers removes","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"    this batchmate from the","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"    list of batchmates;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"endif","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":":Updated list of batchmates","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":" is then displayed;","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"stop","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"ElijahS67":25}},{"path":"docs/diagrams/FindInterestClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"hide circle","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"hide members","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"show FindInterestCommandParser methods","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"show FindInterestCommand methods","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"show StudentContainsInterestPredicate methods","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"show Student methods","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPredicate\" as Predicate","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"Class FindInterestCommandParser {","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"  +parse(args: String): FindInterestCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"Class StudentContainsInterestPredicate {","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"  +test(student: Student): boolean","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"Class FindInterestCommand {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"  +execute(model: Model): CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"Class Student {","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"  +getInterests(): Set\u003cInterest\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"Parser \u003c|.. FindInterestCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"StudentContainsInterestPredicate .right.|\u003e Predicate","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"FindInterestCommandParser -right-\u003e StudentContainsInterestPredicate","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"FindInterestCommandParser -right-\u003e FindInterestCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"FindInterestCommand --\u003e StudentContainsInterestPredicate","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"FindInterestCommand -up-|\u003e Command","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"StudentContainsInterestPredicate -left-\u003e Student","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"ElijahS67":26,"sltsheryl":9}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"Class MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"LogicManager -right-\u003e\"1\" MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"MassLinkersParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sltsheryl":3,"-":43}},{"path":"docs/diagrams/ModCategoirsationActivityDiagramRake.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"start","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":":Takes the first 2 characters from modName;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"switch ()","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"case ([\"CS\", \"CP\", \"IS\"])","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"  :Return COMP category;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"case ([\"MA\", \"ST\"])","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"  :Return MATH category;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"case([\"LS\", \"CM\", \"PC\"])","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"  :Return SCI category;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"case([\"GE\", \"UT\"])","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"  :Return GE category;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"case([\"ES\"])","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"  :Return COMMS category;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"case([all others])","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"  :Return UE category;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"endswitch","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"stop","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"jonasgwt":22}},{"path":"docs/diagrams/ModCategorisationActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"|#dee4e8|JsonAdaptedMod|","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"|#c4c9cd|Mod|","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"|#daf0fe|ParserUtil|","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"sprite $rake [16x16/8] {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"0000000000000000","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"0000000jj0000000","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"0000000jj0000000","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"0005555jj5555000","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"000jjeejjeejj000","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"000jj00jj00jj000","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"000jj00jj00jj000","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"0000000000000000","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"|JsonAdaptedMod|","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"start","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":":Calls the constructor of Mod;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"|Mod|","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":":Checks if the arguments provided is valid;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":":Calls ParserUtil#parseModsToCategory(String modName);","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"|ParserUtil|","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":":Determines and returns a category \u003c$rake\u003e;","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"|Mod|","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":":The constructor assigns the category to this instance of Mod;","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":":The constructor returns the instance to JsonAdaptedMod;","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"|JsonAdaptedMod|","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"stop","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"jonasgwt":34}},{"path":"docs/diagrams/ModCategorisationSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"!include style.puml","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"skinparam Class {","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"BorderColor #000000","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"participant \":JsonAdaptedMod\" as JsonAdaptedMod STORAGE_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"participant \":Mod\" as Mod MODEL_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"participant \"ParserUtil\" as ParserUtil \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"create Mod","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"JsonAdaptedMod -\u003e Mod: new Mod(\"CS2103T\", false)","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"activate Mod","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"Mod -\u003e ParserUtil: parseModsToCategory(\"CS2103T\")","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"activate ParserUtil","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"ParserUtil --\u003e Mod: modCategory","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"deactivate ParserUtil","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"Mod --\u003e JsonAdaptedMod:","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"deactivate Mod","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"jonasgwt":22}},{"path":"docs/diagrams/ModFindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chm252"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"chm252"},"content":"start","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"chm252"},"content":":Student enters Mod Find command;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"chm252"},"content":":Mass Linkers reads and parses command;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"chm252"},"content":"skinparam conditionStyle diamond","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"chm252"},"content":"if () then ([1 mod in command])","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"chm252"},"content":"   : Mass Linkers finds batchmates","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"    who have taken or","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"    are taking the module;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"chm252"},"content":"else ([More than 1 mod in command])","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"  :Mass Linkers finds batchmates","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"chm252"},"content":"  who have taken or","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"  are taking all of the modules","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"chm252"},"content":"  stated in the command;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"endif","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"chm252"},"content":":Mass Linkers displays the batchmates","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"who match the criteria;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"stop","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"chm252":24}},{"path":"docs/diagrams/ModFindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chm252"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"chm252"},"content":"!include style.puml","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"chm252"},"content":"hide Footbox","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"chm252"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"chm252"},"content":"participant \":LogicManager\" as LM LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"participant \":MassLinkersParser\" as ABP LOGIC_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"participant \":ModCommandParser\" as MCP LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"participant \"f:ModFindCommand\" as MFC LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":"participant \":CommandResult\" as CR LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"chm252"},"content":"end box","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"chm252"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"chm252"},"content":"-\u003eLM ++  : execute(\"mod find cs2101\")","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"LM -\u003e ABP ++ : parseCommand(\"mod find cs2101\")","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"chm252"},"content":"ABP -\u003e MCP **","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"activate MCP","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"chm252"},"content":"MCP --\u003e ABP","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"deactivate MCP","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"ABP -\u003e MCP : parse(\"find cs2101\")","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"activate MCP","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"MCP -\u003e MCP ++ : parseFindCommand(\"cs2101\")","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"MCP -\u003e MFC **","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"activate MFC","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"return f","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"return f","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"return f","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"return f","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"destroy MCP","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"LM -\u003e MFC ++ : execute(model)","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"MFC -\u003e Model ++ : updateFilteredStudentList(predicate)","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"MFC -\u003e CR **","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"activate CR","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"return result","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"sltsheryl":2,"chm252":38}},{"path":"docs/diagrams/ModMarkActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"@startuml","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"start","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":":Student enters mod mark command;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":":Mass Linkers reads and parses command;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":":Mass Linkers searches for the","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"batchmate at specified index;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"if () then ([1 mod to mark])","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"    :Mass Linkers searches for the specified","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"    mod in the list of mods of batchmate;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"    :Mass Linkers marks","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"    that mod as taken;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"else ([multiple mods to mark])","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"    :Mass Linkers searches for all specified","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"    mods in the list of mods of batchmate;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"    :Mass Linkers marks all","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"    specified mods as taken;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"endif","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":":Updated mod status is saved","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"and stored in Mass Linkers;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"stop","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"@enduml","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"carriezhengjr":24}},{"path":"docs/diagrams/ModMarkClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"@startuml","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"hide circle","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"hide members","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"show ModCommandParser methods","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"show ModMarkCommand methods","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"show Student methods","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"show Mod methods","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"Class \"{abstract}\\nModCommand\" as ModCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"Class ModCommandParser {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"  -parseMarkCommand(args: String): ModMarkCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"Class ModMarkCommand {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"  +execute(model: Model): CommandResult","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"Class Student {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":" +markMods(mods: ObservableList\u003cMod\u003e)","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"Class Mod {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":" +markMod()","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"Parser \u003c|.. ModCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"ModCommand \u003c|-- ModMarkCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"ModCommandParser -right-\u003e ModMarkCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"ModMarkCommand --\u003e Student","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"Student -left-\u003e Mod","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"ModCommandParser ..\u003e Mod","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"ModMarkCommand ..\u003e Mod","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"@enduml","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"sltsheryl":4,"carriezhengjr":30}},{"path":"docs/diagrams/ModMarkWithLoopActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"@startuml","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"\u0027This diagram is not used now, as the loop notation is","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"\u0027not taught in CS2103T module.","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"start","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":":Student enters mod mark command;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":":Mass Linkers reads and parses command;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":":Mass Linkers searches for the","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"batchmate at specified index;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"repeat","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"  :Mass Linkers searches for a specified mod","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"  in the list of mods of batchmate;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"  :Mass Linkers marks the","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"  specified mod as taken;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"repeat while (more mods?) is (yes)","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"-\u003eno;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":":Updated mod status is saved","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"and stored in Mass Linkers;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"stop","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"@enduml","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"carriezhengjr":22}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyMassLinkers\" as ReadOnlyMassLinkers","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"Class MassLinkers","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"Class UniqueStudentList","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"Class Student","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"Class Telegram","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"Class GitHub","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"Class Email","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"Class Interest","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"Class Module","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"MassLinkers .up.|\u003e ReadOnlyMassLinkers","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"Model .left.\u003e ReadOnlyMassLinkers","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"ModelManager -left-\u003e \"1\" MassLinkers","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"MassLinkers *--\u003e \"1\" UniqueStudentList","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"UniqueStudentList --\u003e \"~* all\" Student","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"Student *--\u003e Name","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"Student *--\u003e Telegram","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"Student *--\u003e GitHub","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"Student *--\u003e Phone","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"Student *--\u003e Email","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"Student *--\u003e \"*\" Interest","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"Student *--\u003e \"*\" Module","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"Name -[hidden]right-\u003e Telegram","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"Telegram -[hidden]right-\u003e GitHub","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"GitHub -[hidden]right-\u003e Phone","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"Phone -[hidden]right-\u003e Email","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"Email -[hidden]right-\u003e Interest","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"Interest -[hidden]right-\u003e Module","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"ModelManager --\u003e Student: \" * filtered\"","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sltsheryl":16,"carriezhengjr":15,"-":29}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"Class MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"HiddenOutside ..\u003e MassLinkersParser","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"MassLinkersParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"MassLinkersParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"sltsheryl":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"package \"MassLinkers Storage\" #F4F6F6{","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nMassLinkersStorage\" as MassLinkersStorage","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"Class JsonMassLinkersStorage","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"Class JsonSerializableMassLinkers","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"Class JsonAdaptedStudent","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"Class JsonAdaptedInterest","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"Class JsonAdaptedMod","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"StorageManager -up-\u003e \"1\" MassLinkersStorage","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"Storage -right-|\u003e MassLinkersStorage","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"JsonMassLinkersStorage .up.|\u003e MassLinkersStorage","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"JsonMassLinkersStorage ..\u003e JsonSerializableMassLinkers","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"JsonSerializableMassLinkers --\u003e \"*\" JsonAdaptedStudent","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"JsonAdaptedStudent --\u003e \"*\" JsonAdaptedInterest","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"JsonAdaptedStudent --\u003e \"*\" JsonAdaptedMod","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sltsheryl":10,"jonasgwt":4,"-":31}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"Class StudentListPanel","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"Class StudentCard","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"Class ModListPanel","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"Class ModCard","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"MainWindow *-down-\u003e \"1\" ModListPanel","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"ModListPanel -down-\u003e \"*\" ModCard","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"ModListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"ModCard --|\u003e UiPart","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"ModCard ..\u003e Model","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"StudentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"ModListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sltsheryl":16,"-":52}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"    Padding 10","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"skinparam MinClassWidth 20","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"skinparam ParticipantPadding 5","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sltsheryl":3,"-":72}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"Participant \":MassLinkersParser\" as abp LOGIC_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"ecp -\u003e ec ++: index, editStudentDescriptor","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"sltsheryl":2,"-":19}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"    \u003cimg src\u003d\"https://raw.githubusercontent.com/AY2223S1-CS2103T-T11-4/tp/master/docs/images/Logo.png\" width\u003d\"360\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"    \u003ca href\u003d\"https://github.com/AY2223S1-CS2103T-T11-4/tp/actions\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"        \u003cimg src\u003d\"https://github.com/AY2223S1-CS2103T-T11-4/tp/workflows/Java%20CI/badge.svg\" /\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"    \u003c/a\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"    \u003ca href\u003d\"https://codecov.io/gh/AY2223S1-CS2103T-T11-4/tp\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"        \u003cimg alt\u003d\"Coverage\" src\u003d\"https://codecov.io/gh/AY2223S1-CS2103T-T11-4/tp/branch/master/graph/badge.svg?token\u003dSQHP14Y75Q\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"    \u003c/a\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"**Mass Linkers is a desktop application for managing your Computer Science batchmates\u0027 contact details and module information.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"* If you are interested in using Mass Linkers, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"* If you are interested about developing Mass Linkers, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"* This project is based on [AddressBook-Level3](https://se-education.org/addressbook-level3/) by [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5), [PlantUML](https://plantuml.com/).","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ElijahS67":9,"sltsheryl":4,"carriezhengjr":4,"-":12}},{"path":"docs/team/carriezhengjr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"title: Zheng Jiarui\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"### Project: Mass Linkers","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"Mass Linkers is a powerful Desktop application tool that provides a centralised platform for Computer Science (CS) students to find study support from batchmates with common modules. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"#### New Enhancement: Upgrade help window","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"* What it does: Shows a brief summary of commands with their syntax and a link to the user guide. Opens the user guide directly in the browser with a single button click.","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"* Justification: It provides flexibility for students to choose between shortcuts or the long detailed user guide based on their needs.","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"* Highlights: Updated the user guide link, added a command summary, replaced the original `Copy URL` button with an `Open User Guide` button in `HelpWindow`. Updated the `.fxml` file of `HelpWindow` to reflect design changes. (Pull request [#60](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/60)) ","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"#### New Feature: Mark module as taken","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"* What it does: Marks the specified module(s) of a batchmate as `taken`, with the flexibility of marking one or multiple modules in a single command.","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"* Justification: It is a crucial core feature to track batchmates\u0027 module status.","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"* Highlights: Modified `ModCommandParser` and implemented `ModMarkCommand` to parse and handle the marking of module(s). Modified `Mod` and `Student` to include new methods to facilitate the marking of module(s). Wrote tests in `ModMarkCommandTest` and `ModCommandParserTest` for `mod mark` and `mod delete`. (Pull request [#85](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/85))","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"#### New Feature: Unmark module as not taken","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"* What it does: Unmarks the specified module(s) of a batchmate and updates the status as `taking` (i.e. currently taking), with the flexibility of unmarking one or multiple modules in a single command.","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"* Justification: It allows students to rectify mistakes made in recording the module status of a batchmate.","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"* Highlights: Modified `ModCommandParser` and implemented `ModUnmarkCommand` to parse and handle the unmarking of module(s). Modified `Mod` and `Student` to include new methods to facilitate the unmarking of module(s). Wrote tests in `ModUnmarkCommandTest` and `ModCommandParserTest` for `mod unmark`. (Pull request [#96](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/96))","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"#### New Feature: Mark all modules as taken","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"* What it does: Marks all modules of every batchmate as taken.","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"* Justification: It is useful for updating the module status of all modules of every batchmate as taken after each semester.","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"* Highlights: Modified `ModCommandParser` and implemented `ModMarkAllCommand` to parse and handle the marking of all modules of every batchmate. Modified `Student` to include a new method to facilitate the marking of all modules. Wrote tests in `ModMarkAllCommandTest` for `mod mark all`. (Pull request [#145](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/145), [#147](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/147), [#148](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/148), [#152](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/152))","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"#### Code contributed: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dcarriezhengjr\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"#### Project management","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"* Added issues for the team on GitHub. ","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"* Facilitated the workflow on Git.","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"#### Documentation","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"* **User Guide**:","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"  * Wrote and formatted most of the content in user guide. (Pull request [#30](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/30), [#71](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/71), [#80](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/80), [#83](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/83), [#115](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/115))","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"  * Proofread user guide for bugs. (Pull request [#161](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/161), [#169](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/169), [#189](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/189), [#205](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/205), [#208](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/208), [#212](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/212), [#215](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/215), [#242](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/242), [#252](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/252), [#253](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/253), [#256](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/256))","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"* **Developer Guide**:","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"  * Designed diagrams and added writeup for [`Mod Mark` Feature](https://ay2223s1-cs2103t-t11-4.github.io/tp/DeveloperGuide.html#2-mod-mark-feature). (Pull request [#99](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/99), [#121](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/121))","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"  * Proofread developer guide for bugs. (Pull request [#163](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/163), [#169](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/169))","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"#### Community:","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"* Reviewed and approved other teammates\u0027 PRs.","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"* Contributed in weekly team meeting.","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"* Submitted [bugs and feedback](https://github.com/carriezhengjr/ped/issues) for [ArtBuddy](https://ay2223s1-cs2103t-w11-3.github.io/tp/), another team in the module.","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"#### Tools:","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"* JavaFX: Platform which Mass Linkers\u0027 help window uses","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"* PlantUML: Software to create UML diagrams","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"* Git workflow","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"carriezhengjr":54}},{"path":"docs/team/chm252.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chm252"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"chm252"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"chm252"},"content":"title: Chin Hong Ming\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"chm252"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"chm252"},"content":"### Project: Mass Linkers","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"Mass Linkers is a powerful Desktop application tool that provides a centralised platform for Computer Science (CS) students to find study support from batchmates with common modules. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"#### New Enhancements: find: (Pull requests [\\#75](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/75), [\\#82](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/82))","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"chm252"},"content":"* What it does: Find batchmates by their Telegram, GitHub, emails or phone numbers, with partially matching text input.","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"* Justification: It provides greater convenience to the users as they are not limited to finding based on names. Being able to find Telegram handles, GitHub usernames, emails and phone numbers with partially matching text input is reasonable as these items are unique to individuals. ","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"chm252"},"content":"* Highlights:","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"  * Implemented `containsPartialWordIgnoreCase` method in `StringUtil` to allow the finding of items with partially matching text.","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"chm252"},"content":"  * Included test cases for `containsPartialWordIgnoreCase` in `StringUtilTest`.","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"chm252"},"content":"#### New Enhancements: duplicate add and edit prevention: (Pull requests [\\#207](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/207))","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"* What it does: Users may now add/edit to names that already exists in the Mass Linkers!","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"* Justification: Allowing identical names to coexist fits into the reality that people can share the same name. But Telegram handles, GitHub usernames, emails and phone numbers should be unique.","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"* Highlights:","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"  * Updated `isSameStudent` in `Student` class.","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"#### New Feature: Mod Find (Pull requests [\\#101](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/101))","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"* What it does: Finds and lists batchmates who have taken or are taking certain module(s).","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"* Justification: It allows users to effortlessly know the batchmates who have taken or are taking certain module(s).","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"* Highlights:","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"  * Implemented `ModFindCommand` to handle finding of batchmates who have taken or are taking certain module(s)","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"  * Modified `ModCommandParser` to parse `mod find` command arguments.","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"  * Built test cases in `ModFindCommandTest` for `ModFindCommand`.","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"  * Included `mod find` parser tests in `ModCommandParserTest`.","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"  * Implemented `ModContainsKeywordsPredicate` to support module finding.","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"#### New Feature: Mod Find Taken/Taken (Pull requests [\\#132](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/132))","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"* What it does: Finds and lists batchmates who have taken/are taking certain module(s).","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"* Justification: It allows users to effortlessly know the batchmates who have taken/are taking certain module(s).","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"* Highlights:","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"  * Modified `ModCommandParser` to parse `mod find taken` and `mod find taking` command arguments.","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"  * Included `mod find taken` and `mod find taking` parser tests in `ModCommandParserTest`.","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"  * Implemented `ModTakenContainsKeywordsPredicate` and `ModTakingContainsKeywordsPredicate` to support this feature.","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"#### Code contributed: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dchm252\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"#### Project management:","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"chm252"},"content":"* Set up the GitHub team org/repo","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"* Added issues for the team on GitHub.","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"chm252"},"content":"* Facilitated the workflow on Git.","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"chm252"},"content":"#### Documentation:","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"chm252"},"content":"* User Guide: (Pull requests [\\#248](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/248), [\\#266](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/266))","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"    * Worked on `find`, `mod find`, `mod find taken` and `mod find taking` sections.","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"    * Proofread user guide for bugs.","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"* Developer Guide: (Pull requests [\\#120](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/120))","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"    * Responsible for `Mod find feature` category.","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"    * Designed sequence diagram and activity diagram for `ModFindCommand`.","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"    * Worked on glossary section.","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"    * Proofread developer guide for bugs.","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"#### Community:","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"chm252"},"content":"* PRs reviewed (with non-trivial review comments): [\\#42](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/42)","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"* Contributed in weekly team meeting.","lastModifiedDate":"2022-10-31"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"* Reported [\\bugs and suggestions](https://github.com/chm252/ped/issues) for team `ProfNUS`, another team in the module.","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"#### Tools:","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"* PlantUML: Software to create UML diagrams","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"* Git workflow","lastModifiedDate":"2022-10-31"}],"authorContributionMap":{"chm252":67}},{"path":"docs/team/elijahs67.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"title: Elijah Seah\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"### Project: Mass Linkers","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"Mass Linkers is a powerful Desktop application tool that provides a centralised platform for Computer Science (CS) students to find study support from batchmates with common modules. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"#### New Feature: Find Interest","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"* What it does: Allows students to find others by their interests.","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"* Justification: Provides a way for students find others with the same interests as them.","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"* Highlights:","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"  * Implemented `StudentContainsInterestPredicate` to test if the entered interests can be found in a student\u0027s interest.","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"  * Implemented `FindInterestCommand` which handles the testing of the predicate on every student.","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"  * Implemented `FindInterestCommandParser` to parse `findInt` command arguments.","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"  * Wrote tests for `FindInterestCommandTest`.","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"#### New Feature: Delete Interest","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"* What it does: Allows students to delete interests from a specified student.","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"* Justification: It is an easier alternative to editing the set of interests instead.","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"* Highlights:","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"  * Implemented `DeleteInterestCommand` which handles the deletion of the entered interests.","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"  * Implemented `DeleteInterestCommandParser` to parse `deleteInt` command arguments.","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"  * Wrote tests for `DeleteInterestCommandTest`.","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"#### New Feature: Delete Mod","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"* What it does: Allows students to delete modules from a specified student.","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"* Justification: Allows students to remove erroneous entries from their list of modules.","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"* Highlights:","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"  * Implemented `ModDeleteCommand` which handles the deletion of the entered modules.","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"  * Wrote tests for `ModDeleteCommandTest`.","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"#### New Feature: Input checking for phone numbers","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"* What it does: Warns the student if the entered phone number is of an incorrect format.","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"* Justification: Alerts the student if they have typed it wrong by accident, rather than blocking it outright.","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"* Highlights:","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"  * Used regex to handle the checking.","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"  * Added a warning when an incorrect format is entered.","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"  * Wrote tests to `PhoneTest`.","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"#### Code contributed: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003delijahs67\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"#### Project management:","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"* Review and approve PRs on Github.","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"ElijahS67"},"content":"* Published v1.3.trial and the initial v1.3.1 releases.","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"ElijahS67"},"content":"#### Enhancements to existing features:","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"ElijahS67"},"content":"* Improved phone input checking.","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"ElijahS67"},"content":"* Refactored `tag` to `interest`.","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"ElijahS67"},"content":"#### Documentation:","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"ElijahS67"},"content":"* User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"ElijahS67"},"content":"    * Added the `findInt`, `deleteInt` and `mod delete` sections.","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"ElijahS67"},"content":"    * Worked on the Parameter Requirements section.","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"ElijahS67"},"content":"    * Proofread user guide for bugs.","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"ElijahS67"},"content":"* Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"ElijahS67"},"content":"    * Designed sequence diagram and activity diagram for the command `findInt`.","lastModifiedDate":"2022-10-31"},{"lineNumber":62,"author":{"gitId":"ElijahS67"},"content":"    * Updated Product Scope, Value Proposition, User Stories as well as some use cases.","lastModifiedDate":"2022-10-31"},{"lineNumber":63,"author":{"gitId":"ElijahS67"},"content":"    * Worked on NFR section.","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"ElijahS67"},"content":"    * Proofread developer guide for bugs.","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"ElijahS67"},"content":"#### Community:","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"ElijahS67"},"content":"* Reviewed and approved PRs on Github.","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"ElijahS67"},"content":"* Contributed in weekly team meeting.","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"ElijahS67"},"content":"* Reported [bugs](https://github.com/ElijahS67/ped/issues) for team Waddle, another team in this module.","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"ElijahS67"},"content":"#### Tools:","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"ElijahS67"},"content":"* PlantUML: Software to create UML diagrams","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"ElijahS67"},"content":"* Git workflow","lastModifiedDate":"2022-10-31"}],"authorContributionMap":{"ElijahS67":73}},{"path":"docs/team/jonasgwt.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"title: Jonas Goh\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"### Project: Mass Linkers","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"Mass Linkers is a powerful Desktop application tool that provides a centralised platform for Computer Science (CS) students to find study support from batchmates with common modules. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"#### New Feature: Add modules to a batchmate","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"* What it does: Add modules inputted by the user to a batchmate.","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"* Justification: It is a crucial core feature.","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"* Highlights: ","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"  * Add a `ModCommandParser` class to parse all mod commands, an abstract class `ModCommand` and a class `ModAddCommand` that extends `ModCommand`. ","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"  * Modify the `add` command to also accept mods with the prefix `m/`. ","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"  * Modify the `edit` command to throw an exception when a user attempts to edit the mods. ","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"  * Add and update tests.","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"#### New Feature: Module Categorisation","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"* What it does: Categorises a mod using the first 2 characters of the module name.","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"* Justification: It allows users to quickly identify the type of mod when looking at the mod panel.","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"* Highlights:","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"    * Add a method to categorise mods in `ParserUtil`.","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"    * Wrote tests for mod categorisation in `ParserUtil`. ","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"#### New Enhancement: Sorting of modules","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"* What it does: Sorts mods by their completion (taking in front) and then by their `modName` in lexicographic order.","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"* Justification: Bring greater convenience for the user when looking for mods via the mod panel.","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"* Highlights:","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"    * Add a new `ModComparator` class to compare 2 mods.","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"    * Change `Person` to return a `SortedList`.","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"    * Add tests for `ModComparator`.","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"#### New Enhancement: Input validation for GitHub and Telegram fields","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"* What it does: Ensure that the GitHub username and Telegram handle provided by the user is valid.","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"* Justification: Having an invalid GitHub username or Telegram handle would result in the user not being able to contact that person.","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"* Highlights:","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"    * Used regex to check for input validity for GitHub and Telegram.","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    * Edit warning message for invalid input.","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"    * Add tests to `isValidGitHub` and `isValidTelegram`.","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"#### Code contributed: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djonasgwt\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"#### Project management:","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"* Added several issues for the team on GitHub.","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"* Set up Codecov in team repository.","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"* Update release of v1.3.1.","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"#### Documentation:","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"* User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"    * Worked on Module Categorisation section.","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"    * Proofread user guide for bugs.","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"* Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"    * Worked on Instructions on Manual Testing section.","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"    * Design diagrams and writeup for Mod Categorisation.","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"    * Worked on NFR section.","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"    * Proofread developer guide for bugs.","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"#### Community:","lastModifiedDate":"2022-10-31"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"* PRs reviewed (with non-trivial review comments): [\\#64](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/64), [\\#100](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/100), [\\#141](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/141)","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"* Contributed in weekly team meeting.","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"* Reported [bugs and suggestions](https://github.com/jonasgwt/ped/issues) for team Friendnancial, another team in the module.","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"#### Tools:","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"* PlantUML: Software to create UML diagrams","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"* Git workflow","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"jonasgwt":70}},{"path":"docs/team/sltsheryl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"title: Sheryl-Lynn Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"### Project: Mass Linkers","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"Mass Linkers is a powerful Desktop application tool that provides a centralised platform for Computer Science (CS) students to find study support from batchmates with common modules. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"#### New Enhancement: Refactored the GUI and its behavior","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"* What it does:","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"  * Implements a UI overhaul with its new design inspired by Outlook. (Pull request [#87](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/87), [#100](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/100), [#72](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/72))","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"  * Handles the interaction between the ```model``` and ```ui``` components. (Pull request [#133](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/133))","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"* Justification: To improve user experience with an aesthetically pleasing UI.","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"* Highlights:","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"  * Created module panel, ```ModListPanel.fxml``` and ```ModListCard.fxml```, to display the modules taken by selected student. ","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"  * Handled live updates to UI for commands such as ```mod add```, ```mod mark``` and ```addInt```. (Pull request [#105](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/105), [#129](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/129))","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"  * Enhance style (Pull request [#133](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/133)) and fix UI bugs. (Pull request [#131](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/131))","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"#### New Feature: Add Interest","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"* What it does: Gives students a hassle-free way of adding new interests to a batchmate.","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"* Justification: It is crucial for students to be able to add interests without overwriting current interests.","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"* Highlights: ","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"  * Implemented ```AddInterestCommand``` and ```AddInterestCommandParser``` which handles adding a set of interests to a student. (Pull request [#118](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/118))","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"#### Other Modifications: Modify Student Information","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"* What it does: Removes ```Address``` field and adds ```Telegram```and ```GitHub``` fields to a student.","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"* Justification: Since Mass Linkers serves as a CS contact-sharing platform, it would be a value-add to include relevant socials to a batchmate.","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"* Highlights:","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"    * Added private ```Telegram``` and ```GitHub``` fields to ```Student```. (Pull request [#64](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/64))","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    * Redesigned user interface of ```Student``` fields such as addition of GitHub and Telegram logos.","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"#### Other Modifications: Ensure Specificity of Error Messages","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"* What it does: Displays appropriate error messages for different command input errors. (Pull request [#167](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/167), [#206](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/206))","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"* Justification: Handling and signalling different types of input errors to users increases the ease of use of Mass Linkers.","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"* Highlights:","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"  * The different types of errors include unknown command, missing parameters and invalid index.","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"#### Code contributed: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dsltsheryl\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"#### Project management","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"* Added weekly Issues for the team on GitHub.","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"* Facilitated the workflow on Git (PR and Issues categorisation).","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"#### Documentation","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"* **User Guide**:","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"  * Writeup of project description and FAQ. (Pull request [#211](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/211))","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"  * Proofread user guide for bugs and enhance writing quality. (Pull request [#176](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/176), [#239](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/239), [#219](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/219), [#210](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/210))","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"* **Developer Guide**:","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"  * Writeup of Overview, Use cases 1 - 4 (Pull request [#63](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/63), [#24](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/24)) and Future Developments. (Pull request [#214](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/214))","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"  * Design diagrams and writeup for ```Add Interest``` feature. (Pull request [#119](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/119))","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"  * Proofread developer guide for bugs.","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"#### Community:","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"* Reviewed other teammate\u0027s PRs. (Pull request [#246](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/246), [#218](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/218), [#207](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/207), [#117](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/117), [#95](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/95), [#149](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/149#issuecomment-1292136614), [#95](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/95#issuecomment-1279923223), [#132](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/132#discussion_r1002453049), [#101](https://github.com/AY2223S1-CS2103T-T11-4/tp/pull/101#discussion_r998665397))","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"* Contributed in weekly team meeting.","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"* Submitted [bugs and feedback](https://github.com/sltsheryl/ped/issues) for [Team Salesy](https://ay2223s1-cs2103t-w08-4.github.io/tp/), another team in the module.","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"#### Tools:","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"* JavaFX: Platform which Mass Linkers\u0027 UI uses","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"* PlantUML: Software to create UML diagrams","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"* Git workflow","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"sltsheryl":62}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new commandâ€‰â€”â€‰`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"This command allows users of the MassLinkers application to add optional remarks to people in their mass linkers and edit it if required. The command should have the following format:","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Weâ€™ll assume that you have already set up the development environment as outlined in the Developerâ€™s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Letâ€™s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, letâ€™s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":" * Changes the remark of an existing student in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `MassLinkersParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Letâ€™s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"            + \": Edits the remark of the student identified \"","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, letâ€™s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"sltsheryl"},"content":"     * @param index of the student in the filtered student list to edit the remark","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"sltsheryl"},"content":"     * @param remark of the student to be updated to","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now letâ€™s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"sltsheryl"},"content":"Create a `RemarkCommandParser` class in the `seedu.masslinkers.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Letâ€™s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now letâ€™s find out what we need to do in order to obtain the Index and String that we need. Letâ€™s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the userâ€™s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"sltsheryl"},"content":":information_source: Donâ€™t forget to update `MassLinkersParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-10-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"sltsheryl"},"content":"Now that we have all the information that we need, letâ€™s lay the groundwork for propagating the remarks added into the in-memory storage of student data. We achieve that by working with the `Student` model. Each field in a Student is implemented as a separate class (e.g. a `Name` object represents the studentâ€™s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a student.","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"sltsheryl"},"content":"Create a new `Remark` in `seedu.masslinkers.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"sltsheryl"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/address-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-10-28"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"sltsheryl"},"content":"Without getting too deep into `fxml`, letâ€™s go on a 5 minute adventure to get some placeholder text to show up for each student.","lastModifiedDate":"2022-10-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"sltsheryl"},"content":"Simply add the following to [`seedu.masslinkers.ui.StudentCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"sltsheryl"},"content":"**`StudentCard.java`:**","lastModifiedDate":"2022-10-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, donâ€™t worryâ€‰â€”â€‰we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"sltsheryl"},"content":"Then insert the following into [`main/resources/view/StudentListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-10-28"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"sltsheryl"},"content":"**`StudentListCard.fxml`:**","lastModifiedDate":"2022-10-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Thatâ€™s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"sltsheryl"},"content":"## Modify `Student` to support a `Remark` field","lastModifiedDate":"2022-10-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"sltsheryl"},"content":"Since `StudentCard` displays data from a `Student`, we need to update `Student` to get our `Remark` displayed!","lastModifiedDate":"2022-10-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"sltsheryl"},"content":"### Modify `Student`","lastModifiedDate":"2022-10-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"sltsheryl"},"content":"We change the constructor of `Student` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2022-10-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"sltsheryl"},"content":"### Update other usages of `Student`","lastModifiedDate":"2022-10-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"sltsheryl"},"content":"Unfortunately, a change to `Student` will cause other commands to break, you will have to modify these commands to use the updated `Student`!","lastModifiedDate":"2022-10-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"sltsheryl"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Student` class to find these commands.","lastModifiedDate":"2022-10-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2022-10-28"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"sltsheryl"},"content":"MassLinkers stores data by serializing `JsonAdaptedStudent` into `json` with the help of an external libraryâ€‰â€”â€‰Jackson. Letâ€™s update `JsonAdaptedStudent` to work with our new `Student`!","lastModifiedDate":"2022-10-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"sltsheryl"},"content":":exclamation: You must delete MassLinkersâ€™s storage file located at `/data/massLinkers.json` before running it! Not doing so will cause MassLinkers to default to an empty mass linkers!","lastModifiedDate":"2022-10-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2022-10-28"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"sltsheryl"},"content":"Now that we have finalized the `Student` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2022-10-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2022-10-28"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"sltsheryl"},"content":"**`StudentCard.java`:**","lastModifiedDate":"2022-10-26"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"sltsheryl"},"content":"public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2022-10-26"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"sltsheryl"},"content":"    remark.setText(student.getRemark().value);","lastModifiedDate":"2022-10-26"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regressionâ€‰â€”â€‰we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"sltsheryl"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Student`. Since all fields in a `Student` are immutable, we create a new instance of a `Student` with the values that we want and","lastModifiedDate":"2022-10-26"},{"lineNumber":329,"author":{"gitId":"sltsheryl"},"content":"save it with `Model#setStudent()`.","lastModifiedDate":"2022-10-26"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Student: %1$s\";","lastModifiedDate":"2022-10-26"},{"lineNumber":336,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Student: %1$s\";","lastModifiedDate":"2022-10-26"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"sltsheryl"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"sltsheryl"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"sltsheryl"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":347,"author":{"gitId":"sltsheryl"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2022-10-26"},{"lineNumber":348,"author":{"gitId":"sltsheryl"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2022-10-26"},{"lineNumber":349,"author":{"gitId":"sltsheryl"},"content":"                studentToEdit.getAddress(), remark, studentToEdit.getTags());","lastModifiedDate":"2022-10-26"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"sltsheryl"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":352,"author":{"gitId":"sltsheryl"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2022-10-26"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"sltsheryl"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2022-10-26"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"sltsheryl"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2022-10-26"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"sltsheryl"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2022-10-26"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs donâ€™t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Letâ€™s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-10-28"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Letâ€™s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, letâ€™s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Letâ€™s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-10-28"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"sltsheryl"},"content":"This concludes the tutorial for adding a new `Command` to MassLinkers.","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"sltsheryl":50,"-":351}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Student` class.","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Letâ€™s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"The `address` field in `Student` is actually an instance of the `seedu.masslinkers.model.student.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditStudentDescriptor` may require more careful inspection.","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"Letâ€™s try removing references to `Address` in `EditStudentDescriptor`.","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"1. Safe delete the field `address` in `EditStudentDescriptor`.","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Student` class will require you to modify its constructor.","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `StudentCard` that has not been removed nor identified.","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"A quick look at the `StudentCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"**`StudentCard.java`**","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"sltsheryl"},"content":"**`StudentCard.fxml`**","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. Whatâ€™s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"sltsheryl"},"content":"**`invalidStudentMassLinkers.json`:**","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"sltsheryl"},"content":"  \"students\": [ {","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"sltsheryl"},"content":"    \"name\": \"Student with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sltsheryl":13,"-":99}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. â€¦â€‹\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEAâ€™s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.masslinkers.logic.Logic`.","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"A quick look at the `seedu.masslinkers.logic.Logic` (an extract given below) confirms that this indeed might be what weâ€™re looking for.","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"Bingo! `MainWindow#executeCommand()` seems to be exactly what weâ€™re looking for!","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now letâ€™s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so letâ€™s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Letâ€™s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"sltsheryl"},"content":"        Command command \u003d massLinkersParser.parseCommand(commandText);","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"sltsheryl"},"content":"            storage.saveMassLinkers(model.getMassLinkers());","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Letâ€™s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"sltsheryl"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `MassLinkersParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Letâ€™s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"sltsheryl"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditStudentDescriptor`. Recall that we can verify the contents of `editStudentDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Letâ€™s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"sltsheryl"},"content":"       Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"sltsheryl"},"content":"       Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"sltsheryl"},"content":"       if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"sltsheryl"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"sltsheryl"},"content":"       model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"sltsheryl"},"content":"       model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"sltsheryl"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"sltsheryl"},"content":"   * it uses the `setStudent()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the student data.","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"sltsheryl"},"content":"   * it uses the `updateFilteredStudentList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ students.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"sltsheryl"},"content":"     FYI, The \u0027filtered list\u0027 is the list of students resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the students so that the user can see the edited student along with all other students. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"sltsheryl"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of students is being tracked.","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"sltsheryl"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveMassLinkers(model.getMassLinkers())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2022-10-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"sltsheryl"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonMassLinkers#saveMassLinkers()` method which calls the `JsonSerializableMassLinkers` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"sltsheryl"},"content":"    **`JsonSerializableMassLinkers` constructor:**","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"sltsheryl"},"content":"     * Converts a given {@code ReadOnlyMassLinkers} into this class for Jackson use.","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"sltsheryl"},"content":"     * {@code JsonSerializableMassLinkers}.","lastModifiedDate":"2022-10-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"sltsheryl"},"content":"    public JsonSerializableMassLinkers(ReadOnlyMassLinkers source) {","lastModifiedDate":"2022-10-26"},{"lineNumber":234,"author":{"gitId":"sltsheryl"},"content":"        students.addAll(","lastModifiedDate":"2022-10-26"},{"lineNumber":235,"author":{"gitId":"sltsheryl"},"content":"            source.getStudentList()","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"sltsheryl"},"content":"                  .map(JsonAdaptedStudent::new)","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"sltsheryl"},"content":"1. It appears that a `JsonAdaptedStudent` is created for each `Student` and then added to the `JsonSerializableMassLinkers`.","lastModifiedDate":"2022-10-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/ã‚¢ãƒªã‚¹ ãƒ¦ãƒ¼`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"carriezhengjr"},"content":"    3.  Save Mass Linkers in the CSV format instead","lastModifiedDate":"2022-10-27"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"sltsheryl"},"content":"    5.  Add a new field to `Student`","lastModifiedDate":"2022-10-26"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"carriezhengjr"},"content":"    6.  Add a new entity to Mass Linkers","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"sltsheryl":28,"carriezhengjr":3,"-":270}},{"path":"src/main/java/seedu/masslinkers/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.FileUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"sltsheryl":3,"-":61}},{"path":"src/main/java/seedu/masslinkers/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"sltsheryl":1,"-":24}},{"path":"src/main/java/seedu/masslinkers/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Config;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Version;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.StringUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.Logic;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.LogicManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.storage.JsonMassLinkersStorage;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.storage.MassLinkersStorage;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.storage.Storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.storage.StorageManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.ui.Ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.ui.UiManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing MassLinkers ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        MassLinkersStorage massLinkersStorage \u003d new JsonMassLinkersStorage(userPrefs.getMassLinkersFilePath());","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(massLinkersStorage, userPrefsStorage);","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s mass linkers and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample mass linkers will be used instead if {@code storage}\u0027s mass linkers is not found,","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty mass linkers will be used instead if errors occur when reading {@code storage}\u0027s mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyMassLinkers\u003e massLinkersOptional;","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyMassLinkers initialData;","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            massLinkersOptional \u003d storage.readMassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (massLinkersOptional.isEmpty()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample MassLinkers\");","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d massLinkersOptional.orElseGet(SampleDataUtil::getSampleMassLinkers);","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty MassLinkers\");","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new MassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty MassLinkers\");","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new MassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty MassLinkers\");","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting MassLinkers \" + MainApp.VERSION);","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":24,"-":159}},{"path":"src/main/java/seedu/masslinkers/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.core;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":1,"-":62}},{"path":"src/main/java/seedu/masslinkers/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.core;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":1,"-":78}},{"path":"src/main/java/seedu/masslinkers/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.core;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"    private static final String LOG_FILE \u003d \"massLinkers.log\";","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":2,"-":110}},{"path":"src/main/java/seedu/masslinkers/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.core;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Invalid command! Enter help to view all valid commands.\";","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_INCOMPLETE_COMMAND_FORMAT \u003d \"Incomplete command format! \\n%1$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_MISSING_ARGUMENTS \u003d \"Missing arguments for the given command! \\n%1$s\";","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_INVALID_ARGUMENTS \u003d \"Input with missing parameter prefixes found! \\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"            + \"Invalid Input: %1$s\";","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid or \"","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"            + \"not a non-zero unsigned integer.\";","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"    public static final String MESSAGE_PHONE_WARNING \u003d \"This student\u0027s phone number appears to be invalid to \"","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"            + \"Mass Linkers, but we\u0027re allowing it. You may change it via the edit command.\\n\";","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is missing, not a non-zero unsigned integer or is not \"","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"            + \"specified before valid prefixes.\";","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_UNEXPECTED_PREFIX \u003d \"The prefix %1$s is not recognised \"","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"            + \"by Mass Linkers.\\nOnly n/ t/ p/ e/ m/ i/ is recognised.\";","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_INVALID_INTERESTS \u003d \"Interests should be alphanumeric.\";","lastModifiedDate":"2022-10-29"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_ONE_STUDENT_LISTED_OVERVIEW \u003d \"%1$d student listed!\";","lastModifiedDate":"2022-10-29"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_MORE_THAN_ONE_INDEX \u003d \"There is more than one valid index.\";","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ElijahS67":2,"sltsheryl":6,"jonasgwt":10,"-":9}},{"path":"src/main/java/seedu/masslinkers/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.core;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":1,"-":115}},{"path":"src/main/java/seedu/masslinkers/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.core.index;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"sltsheryl":1,"-":53}},{"path":"src/main/java/seedu/masslinkers/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.exceptions;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":1,"-":10}},{"path":"src/main/java/seedu/masslinkers/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.exceptions;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":1,"-":20}},{"path":"src/main/java/seedu/masslinkers/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.MainApp;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sltsheryl":2,"-":41}},{"path":"src/main/java/seedu/masslinkers/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":1,"-":34}},{"path":"src/main/java/seedu/masslinkers/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Config;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sltsheryl":3,"-":20}},{"path":"src/main/java/seedu/masslinkers/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":1,"-":82}},{"path":"src/main/java/seedu/masslinkers/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":3,"-":140}},{"path":"src/main/java/seedu/masslinkers/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"     *   Ignores case, a full word match is not necessary.","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"chm252"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"     *       containsPartialWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"chm252"},"content":"     *       containsPartialWordIgnoreCase(\"ABc def\", \"DE\") \u003d\u003d true","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"     *       containsPartialWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"chm252"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"chm252"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"chm252"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"    public static boolean containsPartialWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"        requireNonNull(word);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"        if (preppedSentence.length() \u003c preppedWord.length()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"        for (int i \u003d 0; i \u003c preppedSentence.length() - preppedWord.length() + 1; i++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"            if (preppedWord.equalsIgnoreCase(preppedSentence.substring(i, i + preppedWord.length()))) {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"                return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"        } return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":2,"chm252":32,"-":66}},{"path":"src/main/java/seedu/masslinkers/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.GuiSettings;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.CommandResult;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"     * Returns the MassLinkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"     * @see seedu.masslinkers.model.Model#getMassLinkers()","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    ReadOnlyMassLinkers getMassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"     * Returns the user prefs\u0027 mass linkers file path.","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"    Path getMassLinkersFilePath();","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sltsheryl":15,"-":36}},{"path":"src/main/java/seedu/masslinkers/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.GuiSettings;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.Command;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.CommandResult;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.MassLinkersParser;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.storage.Storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    private final MassLinkersParser massLinkersParser;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"        massLinkersParser \u003d new MassLinkersParser();","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"        Command command \u003d massLinkersParser.parseCommand(commandText);","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"            storage.saveMassLinkers(model.getMassLinkers());","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"    public ReadOnlyMassLinkers getMassLinkers() {","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"        return model.getMassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"    public Path getMassLinkersFilePath() {","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"        return model.getMassLinkersFilePath();","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sltsheryl":22,"-":58}},{"path":"src/main/java/seedu/masslinkers/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_PHONE_WARNING;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":" * Adds a student to Mass Linkers.","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_USAGE \u003d \"Add a batchmate\u0027s information in this manner: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"            +","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"            \"\\nadd \" + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"            + PREFIX_TELEGRAM + \"TELEGRAM \"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"            + \"[\" + PREFIX_GITHUB + \"GITHUB] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"            + \"[\" + PREFIX_INTEREST + \"INTEREST]...\";","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"    public static final String MESSAGE_SUCCESS_WARN \u003d MESSAGE_PHONE_WARNING + MESSAGE_SUCCESS;","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"The Telegram handle/\"","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"            + \"GitHub username/email/phone number already exist(s) in Mass Linkers.\";","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"    private final Student toAdd;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"        toAdd \u003d student;","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"ElijahS67"},"content":"        String message \u003d toAdd.hasIncorrectPhone() ? MESSAGE_SUCCESS_WARN : MESSAGE_SUCCESS;","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"ElijahS67"},"content":"        return new CommandResult(String.format(message, toAdd),","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"ElijahS67"},"content":"                false, false, true, true);","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ElijahS67":7,"sltsheryl":28,"chm252":2,"-":31}},{"path":"src/main/java/seedu/masslinkers/logic/commands/AddInterestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"//@@author sltsheryl","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":" * Adds a list of interests to the specified student.","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"public class AddInterestCommand extends Command {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"    public static final String COMMAND_WORD \u003d \"addInt\";","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_USAGE \u003d \"Add interests to a batchmate in this manner: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"            +","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"            \"\\naddInt INDEX INTEREST [MORE_INTERESTS]...\";","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Interest(s) added successfully!\";","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    private final Set\u003cInterest\u003e interests;","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"     * Constructs a command that adds all interests specified to the target batchmate.","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"     * @param index The index of the batchmate.","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"     * @param interests The set of interests to be added.","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"    public AddInterestCommand(Index index, Set\u003cInterest\u003e interests) {","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(interests);","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"        this.interests \u003d interests;","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"        Student studentToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"        studentToEdit.addInterests(interests);","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, studentToEdit), false, false, false, true);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"            return true;","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"        if (!(other instanceof AddInterestCommand)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"            return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"        // state check","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"sltsheryl"},"content":"        AddInterestCommand e \u003d (AddInterestCommand) other;","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 interests.equals(e.interests);","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"ElijahS67":6,"sltsheryl":71}},{"path":"src/main/java/seedu/masslinkers/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Mass Linkers has been cleared!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setMassLinkers(new MassLinkers());","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":3,"-":20}},{"path":"src/main/java/seedu/masslinkers/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":3,"-":17}},{"path":"src/main/java/seedu/masslinkers/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Reset mod panel. */","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean resetModPanel;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean updateStudentPanel;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit,","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                         boolean resetModPanel, boolean updateStudentPanel) {","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.resetModPanel \u003d resetModPanel;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.updateStudentPanel \u003d updateStudentPanel;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false, false, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isResetModPanel() {","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return resetModPanel;","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean isUpdateStudentPanel() {","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return updateStudentPanel;","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 resetModPanel \u003d\u003d otherCommandResult.resetModPanel","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 updateStudentPanel \u003d\u003d otherCommandResult.updateStudentPanel;","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":1,"-":88}},{"path":"src/main/java/seedu/masslinkers/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a student identified using it\u0027s displayed index from the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d \"Delete a batchmate in this manner: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            +","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \"\\ndelete INDEX\";","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete), false,","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":6,"-":47}},{"path":"src/main/java/seedu/masslinkers/logic/commands/DeleteInterestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"//@@author ElijahS67","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":" * Deletes interests from the specified batchmate.","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"public class DeleteInterestCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"    public static final String COMMAND_WORD \u003d \"deleteInt\";","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"    public static final String MESSAGE_USAGE \u003d \"Delete interests from a batchmate in this manner: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"            +","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"            \"\\ndeleteInt INDEX INTEREST [MORE_INTERESTS]...\";","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Interest(s) deleted successfully!\";","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"    public static final String MESSAGE_INVALID_INTEREST \u003d \"This batchmate does not have all of the interests specified.\"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"            + \"\\nPlease check the entered interests and try again.\";","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"    private final Set\u003cInterest\u003e interests;","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"     * Constructs a command that deletes all interests specified from the target batchmate.","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"     * @param index The index of the batchmate.","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"     * @param interests The set of interests to be deleted.","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"    public DeleteInterestCommand(Index index, Set\u003cInterest\u003e interests) {","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(interests);","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"        this.interests \u003d interests;","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"ElijahS67"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"ElijahS67"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"ElijahS67"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"ElijahS67"},"content":"        Student studentToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"ElijahS67"},"content":"        if (studentToEdit.canDeleteInterests(this.interests)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"ElijahS67"},"content":"            studentToEdit.deleteInterests(this.interests);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"ElijahS67"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"ElijahS67"},"content":"            throw new CommandException(MESSAGE_INVALID_INTEREST);","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"ElijahS67"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"ElijahS67"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, studentToEdit), false, false, false, true);","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"ElijahS67"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"ElijahS67"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"ElijahS67"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"ElijahS67"},"content":"            return true;","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"ElijahS67"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"ElijahS67"},"content":"        if (!(other instanceof DeleteInterestCommand)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"ElijahS67"},"content":"            return false;","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"ElijahS67"},"content":"        // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"ElijahS67"},"content":"        DeleteInterestCommand e \u003d (DeleteInterestCommand) other;","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"ElijahS67"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"ElijahS67"},"content":"                \u0026\u0026 interests.equals(e.interests);","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"ElijahS67":83}},{"path":"src/main/java/seedu/masslinkers/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_PHONE_WARNING;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":" * Edits the details of an existing student in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    public static final String MODS_PASSED_TO_EDIT \u003d \"Use [mod] commands to edit mods.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_USAGE \u003d \"Edit a batchmate\u0027s information in this manner: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"            +","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"            \"\\nedit INDEX \" + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-11-03"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"            + \"[\" + PREFIX_GITHUB + \"GITHUB] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"            + \"[\" + PREFIX_INTEREST + \"INTEREST]...\";","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"ElijahS67"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS_WARN \u003d MESSAGE_PHONE_WARNING + MESSAGE_EDIT_STUDENT_SUCCESS;","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"The Telegram handle/\"","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"            + \"GitHub username/email/phone number already exist(s) in Mass Linkers.\";","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"     * @param index of the student in the filtered student list to edit","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"sltsheryl"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"sltsheryl"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"chm252"},"content":"        Telegram editedTelegram \u003d editStudentDescriptor.getTelegram().orElse(null);","lastModifiedDate":"2022-10-29"},{"lineNumber":85,"author":{"gitId":"chm252"},"content":"        GitHub editedGitHub \u003d editStudentDescriptor.getGitHub().orElse(null);","lastModifiedDate":"2022-10-29"},{"lineNumber":86,"author":{"gitId":"chm252"},"content":"        Email editedEmail \u003d editStudentDescriptor.getEmail().orElse(null);","lastModifiedDate":"2022-10-29"},{"lineNumber":87,"author":{"gitId":"chm252"},"content":"        Phone editedPhone \u003d editStudentDescriptor.getPhone().orElse(null);","lastModifiedDate":"2022-10-29"},{"lineNumber":88,"author":{"gitId":"chm252"},"content":"        if ((editedTelegram !\u003d null \u0026\u0026 model.hasTelegram(editedTelegram))","lastModifiedDate":"2022-10-29"},{"lineNumber":89,"author":{"gitId":"chm252"},"content":"            || (editedGitHub !\u003d null \u0026\u0026 model.hasGitHub(editedGitHub))","lastModifiedDate":"2022-10-29"},{"lineNumber":90,"author":{"gitId":"chm252"},"content":"            || (editedEmail !\u003d null \u0026\u0026 model.hasEmail(editedEmail))","lastModifiedDate":"2022-10-29"},{"lineNumber":91,"author":{"gitId":"chm252"},"content":"            || (editedPhone !\u003d null \u0026\u0026 model.hasPhone(editedPhone))) {","lastModifiedDate":"2022-10-29"},{"lineNumber":92,"author":{"gitId":"sltsheryl"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"sltsheryl"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"sltsheryl"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"ElijahS67"},"content":"        if (editedStudent.hasIncorrectPhone()) { //warns whenever the edited student has an incorrect phone","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"ElijahS67"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS_WARN, editedStudent),","lastModifiedDate":"2022-10-30"},{"lineNumber":99,"author":{"gitId":"ElijahS67"},"content":"                    false, false, true, false);","lastModifiedDate":"2022-10-30"},{"lineNumber":100,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":101,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent),","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"sltsheryl"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"sltsheryl"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"sltsheryl"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"sltsheryl"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"sltsheryl"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"sltsheryl"},"content":"        Phone updatedPhone \u003d editStudentDescriptor.getPhone().orElse(studentToEdit.getPhone());","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"sltsheryl"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"sltsheryl"},"content":"        Telegram updatedTelegram \u003d editStudentDescriptor.getTelegram().orElse(studentToEdit.getTelegram());","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"sltsheryl"},"content":"        GitHub updatedGitHub \u003d editStudentDescriptor.getGitHub().orElse(studentToEdit.getGitHub());","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"sltsheryl"},"content":"        Set\u003cInterest\u003e updatedInterests \u003d editStudentDescriptor.getInterests().orElse(studentToEdit.getInterests());","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e mods \u003d studentToEdit.getMods();","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"sltsheryl"},"content":"        return new Student(updatedName, updatedPhone, updatedEmail, updatedTelegram, updatedGitHub,","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"ElijahS67"},"content":"                updatedInterests, mods);","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"sltsheryl"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"sltsheryl"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"sltsheryl"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"sltsheryl"},"content":"        private Telegram handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"sltsheryl"},"content":"        private GitHub username;","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"ElijahS67"},"content":"        private Set\u003cInterest\u003e interests;","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"sltsheryl"},"content":"        private ObservableList\u003cMod\u003e mods;","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"sltsheryl"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"ElijahS67"},"content":"         * A defensive copy of {@code interests} is used internally.","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"sltsheryl"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"sltsheryl"},"content":"            setTelegram(toCopy.handle);","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"sltsheryl"},"content":"            setGitHub(toCopy.username);","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"ElijahS67"},"content":"            setInterests(toCopy.interests);","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"jonasgwt"},"content":"         * Returns true if at least one field is edited except the mods field.","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"jonasgwt"},"content":"         * Editing mods should be done on a separate command.","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"ElijahS67"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, handle, username, interests);","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"sltsheryl"},"content":"        public void setTelegram(Telegram handle) {","lastModifiedDate":"2022-10-09"},{"lineNumber":203,"author":{"gitId":"sltsheryl"},"content":"            this.handle \u003d handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"sltsheryl"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2022-10-09"},{"lineNumber":207,"author":{"gitId":"sltsheryl"},"content":"            return Optional.ofNullable(handle);","lastModifiedDate":"2022-10-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"sltsheryl"},"content":"        public void setGitHub(GitHub username) {","lastModifiedDate":"2022-10-09"},{"lineNumber":211,"author":{"gitId":"sltsheryl"},"content":"            this.username \u003d username;","lastModifiedDate":"2022-10-09"},{"lineNumber":212,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":213,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":214,"author":{"gitId":"sltsheryl"},"content":"        public Optional\u003cGitHub\u003e getGitHub() {","lastModifiedDate":"2022-10-09"},{"lineNumber":215,"author":{"gitId":"sltsheryl"},"content":"            return Optional.ofNullable(username);","lastModifiedDate":"2022-10-09"},{"lineNumber":216,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"ElijahS67"},"content":"         * Sets {@code interests} to this object\u0027s {@code interests}.","lastModifiedDate":"2022-10-15"},{"lineNumber":219,"author":{"gitId":"ElijahS67"},"content":"         * A defensive copy of {@code interests} is used internally.","lastModifiedDate":"2022-10-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"ElijahS67"},"content":"        public void setInterests(Set\u003cInterest\u003e interests) {","lastModifiedDate":"2022-10-15"},{"lineNumber":222,"author":{"gitId":"ElijahS67"},"content":"            this.interests \u003d (interests !\u003d null) ? new HashSet\u003c\u003e(interests) : null;","lastModifiedDate":"2022-10-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"ElijahS67"},"content":"         * Returns an unmodifiable interest set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"ElijahS67"},"content":"         * Returns {@code Optional#empty()} if {@code interests} is null.","lastModifiedDate":"2022-10-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"ElijahS67"},"content":"        public Optional\u003cSet\u003cInterest\u003e\u003e getInterests() {","lastModifiedDate":"2022-10-15"},{"lineNumber":231,"author":{"gitId":"ElijahS67"},"content":"            return (interests !\u003d null) ? Optional.of(Collections.unmodifiableSet(interests)) : Optional.empty();","lastModifiedDate":"2022-10-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"jonasgwt"},"content":"        /**","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"jonasgwt"},"content":"         * Returns an unmodifiable mod set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"jonasgwt"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"jonasgwt"},"content":"         * Returns {@code Optional#empty()} if {@code mods} is null.","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"jonasgwt"},"content":"         */","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"sltsheryl"},"content":"        public Optional\u003cObservableList\u003cMod\u003e\u003e getMods() {","lastModifiedDate":"2022-10-13"},{"lineNumber":240,"author":{"gitId":"sltsheryl"},"content":"            return (mods !\u003d null) ? Optional.of(FXCollections.unmodifiableObservableList(mods)) : Optional.empty();","lastModifiedDate":"2022-10-13"},{"lineNumber":241,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"sltsheryl"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"sltsheryl"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2022-10-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"sltsheryl"},"content":"                    \u0026\u0026 getTelegram().equals(e.getTelegram())","lastModifiedDate":"2022-10-09"},{"lineNumber":262,"author":{"gitId":"ElijahS67"},"content":"                    \u0026\u0026 getInterests().equals(e.getInterests());","lastModifiedDate":"2022-10-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"ElijahS67":20,"sltsheryl":86,"jonasgwt":13,"chm252":10,"-":136}},{"path":"src/main/java/seedu/masslinkers/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Mass Linkers as requested ...\";","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"sltsheryl":3,"carriezhengjr":1,"-":15}},{"path":"src/main/java/seedu/masslinkers/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.DetailsContainKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":" * Finds and lists all students in mass linkers whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_USAGE \u003d \"Find batchmates with a keyword in this manner: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"            +","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"            \"\\nfind KEYWORD [MORE_KEYWORDS]...\";","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"    private final DetailsContainKeywordsPredicate predicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"    public FindCommand(DetailsContainKeywordsPredicate predicate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"        int numOfStudents \u003d model.getFilteredStudentList().size();","lastModifiedDate":"2022-10-29"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"        if (numOfStudents !\u003d 1) {","lastModifiedDate":"2022-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"                    String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW,","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"                            numOfStudents), false, false, true, false);","lastModifiedDate":"2022-10-29"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"        } else {","lastModifiedDate":"2022-10-29"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-29"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"                    String.format(Messages.MESSAGE_ONE_STUDENT_LISTED_OVERVIEW,","lastModifiedDate":"2022-10-29"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"                            numOfStudents), false, false, true, false);","lastModifiedDate":"2022-10-29"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ElijahS67":1,"sltsheryl":17,"chm252":3,"-":28}},{"path":"src/main/java/seedu/masslinkers/logic/commands/FindInterestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.StudentContainsInterestPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"//@@author ElijahS67","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":" * Lists batchmates that match all interests specified by the user.","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"public class FindInterestCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"    public static final String COMMAND_WORD \u003d \"findInt\";","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"    public static final String MESSAGE_USAGE \u003d \"Find batchmates with specified interests in this manner: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"            +","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"            \"\\nfindInt INTEREST [MORE_INTERESTS]...\";","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"    private final StudentContainsInterestPredicate predicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"    public FindInterestCommand(StudentContainsInterestPredicate predicate) {","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"        int numOfStudents \u003d model.getFilteredStudentList().size();","lastModifiedDate":"2022-10-29"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"        if (numOfStudents !\u003d 1) {","lastModifiedDate":"2022-10-29"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"                    String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW,","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"                            numOfStudents), false, false, true, false);","lastModifiedDate":"2022-10-29"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"        } else {","lastModifiedDate":"2022-10-29"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-29"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"                    String.format(Messages.MESSAGE_ONE_STUDENT_LISTED_OVERVIEW,","lastModifiedDate":"2022-10-29"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"                            numOfStudents), false, false, true, false);","lastModifiedDate":"2022-10-29"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"                || (other instanceof FindInterestCommand // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"                \u0026\u0026 predicate.equals(((FindInterestCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"ElijahS67":45,"sltsheryl":4}},{"path":"src/main/java/seedu/masslinkers/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_USAGE \u003d \"View all available commands by entering help\";","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":4,"-":16}},{"path":"src/main/java/seedu/masslinkers/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":" * Lists all students in the mass linkers to the user.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all batchmates.\";","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":7,"-":17}},{"path":"src/main/java/seedu/masslinkers/logic/commands/ModAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"//@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":" * Appends new mods to the batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"public class ModAddCommand extends ModCommand {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully added the specified mod(s).\";","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Usage:\\nmod add INDEX MODULE [MORE_MODULES]...\";","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"    private final ObservableList\u003cMod\u003e mods;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"     * Constructs a command that adds a set of mods to the batchmate","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"     * with the target index.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"     * @param index The index of the batchmate to add to.","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"     * @param mods The set of mods to add to.","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"    public ModAddCommand(Index index, ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"        this.mods \u003d mods;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"        Student studentToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"        studentToEdit.addMods(mods);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false, false);","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"        if (!(other instanceof ModAddCommand)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"        ModAddCommand e \u003d (ModAddCommand) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"                \u0026\u0026 mods.equals(e.mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"sltsheryl":8,"jonasgwt":70}},{"path":"src/main/java/seedu/masslinkers/logic/commands/ModCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"//@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":" * Represents a command that modifies the mod attribute of the","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":" * batchmate identified.","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"public abstract class ModCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"    public static final String COMMAND_WORD \u003d \"mod\";","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_USAGE \u003d \"Enter a mod command such as mod add, \"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"            +","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"        \"mod delete, mod mark, mod unmark and mod find. \\n \";","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_MODS_EMPTY \u003d \"Mods cannot be empty! Specify mods to be modified.\";","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_INDEX_EMPTY \u003d \"Index is missing or not a non-zero unsigned integer.\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"            + \"Specify the index of a batchmate to be modified.\";","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"    public static final String INVALID_ARGUMENTS \u003d \"Invalid arguments is provided to the mod command.\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"            + \"Invalid input: %1$s\";","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"sltsheryl":1,"jonasgwt":18}},{"path":"src/main/java/seedu/masslinkers/logic/commands/ModDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"//@@author ElijahS67","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":" * Deletes mods from the batchmate specified.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"public class ModDeleteCommand extends ModCommand {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully deleted the specified mod(s).\";","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Usage:\\nmod delete INDEX MODULE [MORE_MODULES]...\";","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"    public static final String MESSAGE_INVALID_MOD \u003d \"This batchmate is not taking all of the modules specified.\"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"            + \"\\nPlease check the list of mods and try again.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"    private final ObservableList\u003cMod\u003e mods;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"     * Constructs a command that deletes all mods specified from the list of the batchmate at the target index.","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"     * @param index The index of the batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"     * @param mods The set of mods to be deleted.","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"    public ModDeleteCommand(Index index, ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"        this.mods \u003d mods;","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ElijahS67"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ElijahS67"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ElijahS67"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ElijahS67"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ElijahS67"},"content":"        Student studentToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ElijahS67"},"content":"        if (studentToEdit.canEditMods(mods)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"ElijahS67"},"content":"            studentToEdit.deleteMods(mods);","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"ElijahS67"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ElijahS67"},"content":"            throw new CommandException(MESSAGE_INVALID_MOD);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"ElijahS67"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, studentToEdit));","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ElijahS67"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"ElijahS67"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ElijahS67"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"ElijahS67"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ElijahS67"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ElijahS67"},"content":"        if (!(other instanceof ModDeleteCommand)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ElijahS67"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ElijahS67"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ElijahS67"},"content":"        ModDeleteCommand e \u003d (ModDeleteCommand) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ElijahS67"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"ElijahS67"},"content":"                \u0026\u0026 mods.equals(e.mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ElijahS67":80,"sltsheryl":7}},{"path":"src/main/java/seedu/masslinkers/logic/commands/ModFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"chm252"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.ModContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"//@@author chm252","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"chm252"},"content":" * Finds and lists those in mass linkers who have taken or are taking module(s) that contain(s)","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":" * the argument keywords.","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"chm252"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"chm252"},"content":"public class ModFindCommand extends ModCommand {","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"chm252"},"content":"    public static final String COMMAND_WORD_TAKEN \u003d \"taken\";","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"    public static final String COMMAND_WORD_TAKING \u003d \"taking\";","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"chm252"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully found those who are taking or have taken this mod!\";","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"    public static final String MESSAGE_USAGE \u003d \"Find batchmates taking or have taken specified modules in this manner: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"            +","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"            \"\\nmod find MOD [MORE_MODS]...\";","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"    private final ModContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"     * Constructs the ModFindCommand.","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"     * @param predicate Boolean condition for whether modules match all the given user inputs and the given condition,","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"     *     if any.","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"    public ModFindCommand(ModContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"        int numOfStudents \u003d model.getFilteredStudentList().size();","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"        if (numOfStudents !\u003d 1) {","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"                    String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()),","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"                    false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"        } else {","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"chm252"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"                    String.format(Messages.MESSAGE_ONE_STUDENT_LISTED_OVERVIEW,","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"chm252"},"content":"                            numOfStudents), false, false, true, false);","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"chm252"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"chm252"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"                || (other instanceof seedu.masslinkers.logic.commands.ModFindCommand // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"                \u0026\u0026 predicate.equals(((seedu.masslinkers.logic.commands.ModFindCommand) other)","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"                .predicate)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"sltsheryl":4,"chm252":53}},{"path":"src/main/java/seedu/masslinkers/logic/commands/ModMarkAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"//@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":" * Marks all mods of every batchmate as taken.","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"public class ModMarkAllCommand extends ModCommand {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"    public static final String COMMAND_WORD \u003d \"mark all\";","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully marked all mods of every batchmate as taken.\";","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"     * Constructs a command that marks all mods of every batchmate as taken.","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"    public ModMarkAllCommand() {}","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"        for (Student student : lastShownList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"            student.markAllMods();","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"                MESSAGE_SUCCESS, false, false, false, false);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"sltsheryl":4,"carriezhengjr":42}},{"path":"src/main/java/seedu/masslinkers/logic/commands/ModMarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"//@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":" * Marks mods of the batchmate specified as taken.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"public class ModMarkCommand extends ModCommand {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully marked the specified mod(s).\";","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Usage:\\nmod mark INDEX MODULE [MORE_MODULES]...\";","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_INVALID_MOD \u003d \"This batchmate is not taking all of the modules specified.\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"            + \"Please check the list of mods and try again.\";","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"    private final ObservableList\u003cMod\u003e mods;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"     * Constructs a command that marks all mods specified at the target batchmate as taken.","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"     * @param index The index of the batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"     * @param mods The set of mods to be marked.","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"    public ModMarkCommand(Index index, ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"        this.mods \u003d mods;","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"        Student studentToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"        if (studentToEdit.canEditMods(mods)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"            studentToEdit.markMods(mods);","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"            throw new CommandException(MESSAGE_INVALID_MOD);","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"                String.format(MESSAGE_SUCCESS, studentToEdit),","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"                false,","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"                false,","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"                false,","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"                false);","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"        if (!(other instanceof ModMarkCommand)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"        // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand e \u003d (ModMarkCommand) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"carriezhengjr"},"content":"                \u0026\u0026 mods.equals(e.mods);","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"sltsheryl":7,"carriezhengjr":85}},{"path":"src/main/java/seedu/masslinkers/logic/commands/ModUnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"//@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":" * Unmarks mods of the batchmate specified and updates the status as taking.","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"public class ModUnmarkCommand extends ModCommand {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully unmarked the specified mod(s).\";","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Usage:\\nmod unmark INDEX MODULE [MORE_MODULES]...\";","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"    public static final String MESSAGE_INVALID_MOD \u003d \"This batchmate is not taking all of the modules specified.\"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"            + \"\\nPlease check the list of mods and try again.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"    private final ObservableList\u003cMod\u003e mods;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"     * Constructs a command that unmarks all mods specified at the target batchmate and updates the status as taking.","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"     * @param index The index of the batchmate.","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"     * @param mods The set of mods to be unmarked.","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"    public ModUnmarkCommand(Index index, ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"        this.mods \u003d mods;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"        Student studentToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"        if (studentToEdit.canEditMods(mods)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"            studentToEdit.unmarkMods(mods);","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"            throw new CommandException(MESSAGE_INVALID_MOD);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"                String.format(MESSAGE_SUCCESS, studentToEdit),","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"                false,","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"                false,","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"                false, false);","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"        if (!(other instanceof ModUnmarkCommand)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"        // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand e \u003d (ModUnmarkCommand) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"                \u0026\u0026 mods.equals(e.mods);","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"sltsheryl":7,"carriezhengjr":84}},{"path":"src/main/java/seedu/masslinkers/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands.exceptions;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"sltsheryl":1,"-":16}},{"path":"src/main/java/seedu/masslinkers/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_ARGUMENTS;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_UNEXPECTED_PREFIX;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.logic.parser.ParserUtil.PREFIX_REGEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.AddCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM, PREFIX_GITHUB, PREFIX_INTEREST, PREFIX_MOD);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"        // if there are words added after the \"add\" which is not a valid prefix","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"            String invalidArgs \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"            // if the preamble is an invalid prefix","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"            if (invalidArgs.matches(PREFIX_REGEX)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"                throw new ParseException(String.format(MESSAGE_UNEXPECTED_PREFIX, invalidArgs.substring(0, 2)));","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"            }","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_ARGUMENTS, invalidArgs));","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"        // if name and telegram is not provided","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_TELEGRAM)) {","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_ARGUMENTS, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"        Telegram handle \u003d ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"        GitHub gitHub \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"        Phone phone \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"        Email email \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"ElijahS67"},"content":"        Set\u003cInterest\u003e interestSet \u003d ParserUtil.parseInterests(argMultimap.getAllValues(PREFIX_INTEREST));","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e modList \u003d ParserUtil.parseMods(argMultimap.getAllValues(PREFIX_MOD));","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"            gitHub \u003d ParserUtil.parseGitHub(argMultimap.getValue(PREFIX_GITHUB).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"sltsheryl"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"sltsheryl"},"content":"        Student student \u003d new Student(name, phone, email, handle, gitHub, interestSet, modList);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"        return new AddCommand(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ElijahS67":2,"sltsheryl":31,"jonasgwt":20,"carriezhengjr":4,"-":32}},{"path":"src/main/java/seedu/masslinkers/logic/parser/AddInterestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.ParserUtil.parseIndex;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.AddInterestCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"//@@author sltsheryl","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":" * Parses input arguments and creates a new AddInterestCommand object","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"public class AddInterestCommandParser implements Parser\u003cAddInterestCommand\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"    protected static final String MESSAGE_INTERESTS_EMPTY \u003d \"Interests cannot be empty!\";","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"    private static final Pattern INDEX_FORMAT \u003d Pattern.compile(\"-?\\\\d+\");","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"    private static final String MESSAGE_INDEX_EMPTY \u003d \"Index cannot be empty!\";","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"     * Parses the given {@code String} of arguments in the context of the AddInterestCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"     * and returns an AddInterestCommand object for execution.","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    public AddInterestCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"                    String.format(MESSAGE_MISSING_ARGUMENTS, AddInterestCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"        String indexFromCommand \u003d ParserUtil.getIndexFromCommand(trimmedArgs);","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"        Index index \u003d parseIndex(indexFromCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"        Set\u003cInterest\u003e interestSet \u003d InterestCommandParser.handleInvalidInterestCommandInput(trimmedArgs);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        return new AddInterestCommand(index, interestSet);","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"ElijahS67":5,"sltsheryl":34,"jonasgwt":1}},{"path":"src/main/java/seedu/masslinkers/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"sltsheryl":1,"-":59}},{"path":"src/main/java/seedu/masslinkers/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"sltsheryl"},"content":"        private final int startPosition;","lastModifiedDate":"2022-11-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"sltsheryl":2,"-":146}},{"path":"src/main/java/seedu/masslinkers/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"    public static final Prefix PREFIX_GITHUB \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"    public static final Prefix PREFIX_INTEREST \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"    public static final Prefix PREFIX_MOD \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ElijahS67":1,"sltsheryl":3,"jonasgwt":1,"-":12}},{"path":"src/main/java/seedu/masslinkers/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-29"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"        Index index;","lastModifiedDate":"2022-10-29"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-29"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-29"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-29"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"                    String.format(MESSAGE_MISSING_ARGUMENTS, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(pe.getMessage());","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"sltsheryl":14,"jonasgwt":3,"-":20}},{"path":"src/main/java/seedu/masslinkers/logic/parser/DeleteInterestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import static seedu.masslinkers.logic.parser.ParserUtil.parseIndex;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.logic.commands.DeleteInterestCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"//@@author ElijahS67","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":" * Parses input arguments and creates a new DeleteInterestCommand object","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"public class DeleteInterestCommandParser implements Parser\u003cDeleteInterestCommand\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"    private static final String MESSAGE_INTERESTS_EMPTY \u003d \"Interests cannot be empty!\";","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteInterestCommandParser","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"     * and returns an DeleteInterestCommand object for execution.","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"    public DeleteInterestCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-29"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"                    String.format(MESSAGE_MISSING_ARGUMENTS, DeleteInterestCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"        String indexFromCommand \u003d ParserUtil.getIndexFromCommand(trimmedArgs);","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"        Index index \u003d parseIndex(indexFromCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"        Set\u003cInterest\u003e interestSet \u003d InterestCommandParser.handleInvalidInterestCommandInput(trimmedArgs);","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"        return new DeleteInterestCommand(index, interestSet);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"ElijahS67":36,"sltsheryl":1,"jonasgwt":1}},{"path":"src/main/java/seedu/masslinkers/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.EditCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"                PREFIX_TELEGRAM, PREFIX_GITHUB, PREFIX_INTEREST, PREFIX_MOD);","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-29"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-29"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-29"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"                    String.format(MESSAGE_MISSING_ARGUMENTS, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(pe.getMessage());","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"        if (!argMultimap.getAllValues(PREFIX_MOD).isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_ARGUMENTS, EditCommand.MODS_PASSED_TO_EDIT));","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"            editStudentDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"            editStudentDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"sltsheryl"},"content":"            editStudentDescriptor.setGitHub(ParserUtil.parseGitHub(argMultimap.getValue(PREFIX_GITHUB).get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"sltsheryl"},"content":"        parseInterestsForEdit(argMultimap.getAllValues(PREFIX_INTEREST)).ifPresent(editStudentDescriptor::setInterests);","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"        return new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"ElijahS67"},"content":"     * Parses {@code Collection\u003cString\u003e interests} into a {@code Set\u003cInterest\u003e} if {@code interests} is non-empty.","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"ElijahS67"},"content":"     * If {@code interests} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"ElijahS67"},"content":"     * {@code Set\u003cInterest\u003e} containing zero interests.","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"ElijahS67"},"content":"    private Optional\u003cSet\u003cInterest\u003e\u003e parseInterestsForEdit(Collection\u003cString\u003e interests) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"ElijahS67"},"content":"        assert interests !\u003d null;","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"ElijahS67"},"content":"        if (interests.isEmpty()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"ElijahS67"},"content":"        Collection\u003cString\u003e interestsSet \u003d interests.size() \u003d\u003d 1 \u0026\u0026 interests.contains(\"\")","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"ElijahS67"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"ElijahS67"},"content":"                : interests;","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"ElijahS67"},"content":"        return Optional.of(ParserUtil.parseInterests(interestsSet));","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ElijahS67":11,"sltsheryl":30,"jonasgwt":7,"-":51}},{"path":"src/main/java/seedu/masslinkers/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.FindCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.DetailsContainKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"                    String.format(MESSAGE_MISSING_ARGUMENTS, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"        return new FindCommand(new DetailsContainKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"sltsheryl":3,"jonasgwt":2,"chm252":2,"-":26}},{"path":"src/main/java/seedu/masslinkers/logic/parser/FindInterestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.FindInterestCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.StudentContainsInterestPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"//@@author ElijahS67","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":" * Parses input arguments and creates a new FindInterestCommandParser object","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"public class FindInterestCommandParser implements Parser\u003cFindInterestCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"     * Parses the given {@code String} of arguments in the context of the FindInterestCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"     * and returns a FindInterestCommand object for execution.","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"    public FindInterestCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"                    String.format(MESSAGE_MISSING_ARGUMENTS, FindInterestCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"        String[] interestNameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"        return new FindInterestCommand(new StudentContainsInterestPredicate(Arrays.asList(interestNameKeywords)));","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"ElijahS67":28,"sltsheryl":4,"jonasgwt":1}},{"path":"src/main/java/seedu/masslinkers/logic/parser/InterestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_INTERESTS;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.AddInterestCommandParser.MESSAGE_INTERESTS_EMPTY;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.ParserUtil.parseIndex;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":" * Parses input arguments and creates a new AddInterest and DeleteInterest object.","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"public class InterestCommandParser {","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"     * Throws suitable errors when an invalid input is passed into an interest command.","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"    public static Set\u003cInterest\u003e handleInvalidInterestCommandInput(String trimmedArgs) throws ParseException {","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"        String indexFromCommand \u003d ParserUtil.getIndexFromCommand(trimmedArgs);","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"        Set\u003cInterest\u003e interestSet;","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"        try {","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"            interestSet \u003d getInterestsFromCommand(trimmedArgs);","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"            throw new ParseException(MESSAGE_INVALID_INTERESTS, e);","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"        try {","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"            Index index \u003d parseIndex(indexFromCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"            throw new ParseException(MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"        if (interestSet.isEmpty()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"            throw new ParseException(MESSAGE_INTERESTS_EMPTY);","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"        return interestSet;","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"     * Extracts out the interests specified in the user command.","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"     *","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"     * @param args The user command.","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"     * @return A set of interests of type Interest.","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"    private static Set\u003cInterest\u003e getInterestsFromCommand(String args) {","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"        String[] splitArgs \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"        return Arrays.stream(splitArgs)","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"                .skip(1)","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"                .map(Interest::new)","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"                .collect(Collectors.toCollection(HashSet::new));","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"sltsheryl":61}},{"path":"src/main/java/seedu/masslinkers/logic/parser/MassLinkersParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.AddCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.AddInterestCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.Command;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.logic.commands.DeleteInterestCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.EditCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.FindCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.FindInterestCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ListCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"public class MassLinkersParser {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"ElijahS67"},"content":"        case FindInterestCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"ElijahS67"},"content":"            return new FindInterestCommandParser().parse(arguments);","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"ElijahS67"},"content":"        case AddInterestCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"ElijahS67"},"content":"            return new AddInterestCommandParser().parse(arguments);","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"ElijahS67"},"content":"        case DeleteInterestCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"ElijahS67"},"content":"            return new DeleteInterestCommandParser().parse(arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"        case ModCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"            return new ModCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ElijahS67":10,"sltsheryl":17,"jonasgwt":4,"-":62}},{"path":"src/main/java/seedu/masslinkers/logic/parser/ModCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INCOMPLETE_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModAddCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModDeleteCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModFindCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModMarkAllCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModMarkCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModUnmarkCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.ModContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.ModTakenContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.ModTakingContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":" * Parses input arguments and creates a new ModCommand object.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"public class ModCommandParser implements Parser\u003cModCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"    public static final Pattern INDEX_FORMAT \u003d Pattern.compile(\"-?\\\\d+\");","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"    private static final String MOD_TAKEN_COMMAND_WORD \u003d \"taken\";","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"    private static final String MOD_TAKING_COMMAND_WORD \u003d \"taking\";","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"     * Parses the given {@code userInput} of arguments in the context of the ModCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"     * and returns a ModCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"    public ModCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(trimmedArgs);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"        // check if empty and matches format","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"        if (trimmedArgs.isEmpty() || !matcher.matches()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"                    String.format(MESSAGE_INCOMPLETE_COMMAND_FORMAT, ModCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"        // parse","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"        case ModAddCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"            return parseAddCommand(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"ElijahS67"},"content":"        case ModDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ElijahS67"},"content":"            return parseDeleteCommand(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"        case ModMarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"            return parseMarkCommand(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"        case ModUnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"            return parseUnmarkCommand(arguments);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"        case ModFindCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"            return parseFindCommand(arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"        default:","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"    //@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"     * Parses a mod add command from user to construct a ModAddCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"     * @param args Arguments from user input.","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"     * @return A ModAddCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"     * @throws ParseException If there is a parse error.","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"    private ModAddCommand parseAddCommand(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"        // checks for common user mistakes","lastModifiedDate":"2022-11-03"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"        checkForUserMistakes(trimmedArgs);","lastModifiedDate":"2022-11-03"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"        return new ModAddCommand(getIndex(trimmedArgs), getMods(trimmedArgs));","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"ElijahS67"},"content":"    //@@author ElijahS67","lastModifiedDate":"2022-11-02"},{"lineNumber":101,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"ElijahS67"},"content":"     * Parses a mod delete command from user to construct a ModDeleteCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"ElijahS67"},"content":"     * @param args Arguments from user input.","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"ElijahS67"},"content":"     * @return A ModDeleteCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"ElijahS67"},"content":"     * @throws ParseException If there is a parse error.","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"ElijahS67"},"content":"    private ModDeleteCommand parseDeleteCommand(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"ElijahS67"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":111,"author":{"gitId":"ElijahS67"},"content":"        // checks for common user mistakes","lastModifiedDate":"2022-11-03"},{"lineNumber":112,"author":{"gitId":"ElijahS67"},"content":"        checkForUserMistakes(trimmedArgs);","lastModifiedDate":"2022-11-03"},{"lineNumber":113,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":114,"author":{"gitId":"ElijahS67"},"content":"        return new ModDeleteCommand(getIndex(trimmedArgs), getMods(trimmedArgs));","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":118,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"carriezhengjr"},"content":"     * Parses a mod mark command from user to construct a ModMarkAllCommand or ModMarkCommand for execution.","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"carriezhengjr"},"content":"     * @param args Arguments from user input.","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"carriezhengjr"},"content":"     * @return A ModCommand for execution, depending on if it is ModMarkAllCommand or ModMarkCommand.","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"     * @throws ParseException If there is a parse error.","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"carriezhengjr"},"content":"    private ModCommand parseMarkCommand(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"carriezhengjr"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"carriezhengjr"},"content":"        // checks for common user mistakes","lastModifiedDate":"2022-11-03"},{"lineNumber":129,"author":{"gitId":"carriezhengjr"},"content":"        checkForUserMistakes(trimmedArgs);","lastModifiedDate":"2022-11-03"},{"lineNumber":130,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":131,"author":{"gitId":"carriezhengjr"},"content":"        // checks if it is a mod mark all command","lastModifiedDate":"2022-11-06"},{"lineNumber":132,"author":{"gitId":"carriezhengjr"},"content":"        String indexOrAll \u003d getModMarkIndexOrAll(trimmedArgs);","lastModifiedDate":"2022-11-03"},{"lineNumber":133,"author":{"gitId":"carriezhengjr"},"content":"        if (indexOrAll.equals(\"all\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"carriezhengjr"},"content":"            return new ModMarkAllCommand();","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":136,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"carriezhengjr"},"content":"        return new ModMarkCommand(getIndex(trimmedArgs), getMods(trimmedArgs));","lastModifiedDate":"2022-11-06"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":139,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":141,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"carriezhengjr"},"content":"     * Parses a mod unmark command from user to construct a ModUnmarkCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"carriezhengjr"},"content":"     * @param args Arguments from user input.","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"carriezhengjr"},"content":"     * @return A ModUnmarkCommand for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"carriezhengjr"},"content":"     * @throws ParseException If there is a parse error.","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"carriezhengjr"},"content":"    private ModUnmarkCommand parseUnmarkCommand(String args) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"carriezhengjr"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":151,"author":{"gitId":"carriezhengjr"},"content":"        // checks for common user mistakes","lastModifiedDate":"2022-11-03"},{"lineNumber":152,"author":{"gitId":"carriezhengjr"},"content":"        checkForUserMistakes(trimmedArgs);","lastModifiedDate":"2022-11-03"},{"lineNumber":153,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":154,"author":{"gitId":"carriezhengjr"},"content":"        return new ModUnmarkCommand(getIndex(trimmedArgs), getMods(trimmedArgs));","lastModifiedDate":"2022-11-06"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"chm252"},"content":"    //@@author chm252","lastModifiedDate":"2022-11-03"},{"lineNumber":158,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":159,"author":{"gitId":"chm252"},"content":"     * Parses a mod find command from user to construct a ModFindCommand for execution.","lastModifiedDate":"2022-11-03"},{"lineNumber":160,"author":{"gitId":"chm252"},"content":"     *","lastModifiedDate":"2022-11-03"},{"lineNumber":161,"author":{"gitId":"chm252"},"content":"     * @param args Arguments from user input.","lastModifiedDate":"2022-11-03"},{"lineNumber":162,"author":{"gitId":"chm252"},"content":"     * @return A ModFindCommand for execution.","lastModifiedDate":"2022-11-03"},{"lineNumber":163,"author":{"gitId":"chm252"},"content":"     * @throws ParseException If there is a parse error.","lastModifiedDate":"2022-11-03"},{"lineNumber":164,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":165,"author":{"gitId":"chm252"},"content":"    private ModFindCommand parseFindCommand(String args) throws ParseException {","lastModifiedDate":"2022-11-03"},{"lineNumber":166,"author":{"gitId":"chm252"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-11-03"},{"lineNumber":167,"author":{"gitId":"chm252"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":168,"author":{"gitId":"chm252"},"content":"            throw new ParseException(ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-11-03"},{"lineNumber":169,"author":{"gitId":"chm252"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":170,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":171,"author":{"gitId":"chm252"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-11-03"},{"lineNumber":172,"author":{"gitId":"chm252"},"content":"        boolean isTaken \u003d keywords[0].equalsIgnoreCase(MOD_TAKEN_COMMAND_WORD);","lastModifiedDate":"2022-11-03"},{"lineNumber":173,"author":{"gitId":"chm252"},"content":"        boolean isTaking \u003d keywords[0].equalsIgnoreCase(MOD_TAKING_COMMAND_WORD);","lastModifiedDate":"2022-11-03"},{"lineNumber":174,"author":{"gitId":"chm252"},"content":"        String[] keywordsWithoutFirstElement \u003d Arrays.copyOfRange(keywords, 1, keywords.length);","lastModifiedDate":"2022-11-03"},{"lineNumber":175,"author":{"gitId":"chm252"},"content":"        if ((isTaken || isTaking) \u0026\u0026 keywordsWithoutFirstElement.length \u003d\u003d 0) {","lastModifiedDate":"2022-11-03"},{"lineNumber":176,"author":{"gitId":"chm252"},"content":"            throw new ParseException(ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-11-03"},{"lineNumber":177,"author":{"gitId":"chm252"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":178,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":179,"author":{"gitId":"chm252"},"content":"        if (isTaken) {","lastModifiedDate":"2022-11-03"},{"lineNumber":180,"author":{"gitId":"chm252"},"content":"            return new ModFindCommand(","lastModifiedDate":"2022-11-03"},{"lineNumber":181,"author":{"gitId":"chm252"},"content":"                    new ModTakenContainsKeywordsPredicate(Arrays.asList(keywordsWithoutFirstElement)));","lastModifiedDate":"2022-11-03"},{"lineNumber":182,"author":{"gitId":"chm252"},"content":"        } else if (isTaking) {","lastModifiedDate":"2022-11-03"},{"lineNumber":183,"author":{"gitId":"chm252"},"content":"            return new ModFindCommand(","lastModifiedDate":"2022-11-03"},{"lineNumber":184,"author":{"gitId":"chm252"},"content":"                    new ModTakingContainsKeywordsPredicate(Arrays.asList(keywordsWithoutFirstElement)));","lastModifiedDate":"2022-11-03"},{"lineNumber":185,"author":{"gitId":"chm252"},"content":"        } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":186,"author":{"gitId":"chm252"},"content":"            return new ModFindCommand(new ModContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-11-03"},{"lineNumber":187,"author":{"gitId":"chm252"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":188,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":189,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":190,"author":{"gitId":"chm252"},"content":"    // ------------------------------------- Helper Methods -----------------------------------------------------------","lastModifiedDate":"2022-11-03"},{"lineNumber":191,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":192,"author":{"gitId":"jonasgwt"},"content":"    //@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":193,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"jonasgwt"},"content":"     * Converts a collection of strings representing mod names to a set of mods.","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"jonasgwt"},"content":"     * @param mods A collection of mods in string.","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"jonasgwt"},"content":"     * @return A set of mods.","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"jonasgwt"},"content":"     * @throws ParseException When mod names are of incorrect format.","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"jonasgwt"},"content":"    private Optional\u003cObservableList\u003cMod\u003e\u003e parseMods(Collection\u003cString\u003e mods) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":201,"author":{"gitId":"jonasgwt"},"content":"        assert mods !\u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":202,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":203,"author":{"gitId":"jonasgwt"},"content":"        if (mods.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"jonasgwt"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-12"},{"lineNumber":205,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"jonasgwt"},"content":"        Collection\u003cString\u003e modSet \u003d mods.size() \u003d\u003d 1 \u0026\u0026 mods.contains(\"\") ? Collections.emptySet() : mods;","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"jonasgwt"},"content":"        return Optional.of(ParserUtil.parseMods(modSet));","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":209,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":210,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":211,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":212,"author":{"gitId":"carriezhengjr"},"content":"     * Extracts out the word after mod mark, which could be the index of the student or \"all\".","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":214,"author":{"gitId":"carriezhengjr"},"content":"     * @param args The user command.","lastModifiedDate":"2022-10-25"},{"lineNumber":215,"author":{"gitId":"carriezhengjr"},"content":"     * @return The index of the student in String or the word \"all\".","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":217,"author":{"gitId":"carriezhengjr"},"content":"    private String getModMarkIndexOrAll(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":218,"author":{"gitId":"carriezhengjr"},"content":"        String[] splittedArgs \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2022-10-29"},{"lineNumber":219,"author":{"gitId":"carriezhengjr"},"content":"        String indexOrAll \u003d splittedArgs[0].trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":220,"author":{"gitId":"carriezhengjr"},"content":"        boolean isAll \u003d indexOrAll.equals(\"all\");","lastModifiedDate":"2022-10-25"},{"lineNumber":221,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":222,"author":{"gitId":"carriezhengjr"},"content":"        if (isAll) {","lastModifiedDate":"2022-10-25"},{"lineNumber":223,"author":{"gitId":"carriezhengjr"},"content":"            // Checks if the word is \"all\". If yes, the word \"all\" will be returned.","lastModifiedDate":"2022-10-25"},{"lineNumber":224,"author":{"gitId":"carriezhengjr"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":225,"author":{"gitId":"carriezhengjr"},"content":"            // Checks if the word is an index. If yes, the index will be returned. Otherwise, throw an error.","lastModifiedDate":"2022-10-25"},{"lineNumber":226,"author":{"gitId":"carriezhengjr"},"content":"            final Matcher matcher \u003d INDEX_FORMAT.matcher(indexOrAll);","lastModifiedDate":"2022-10-25"},{"lineNumber":227,"author":{"gitId":"carriezhengjr"},"content":"            if (!matcher.matches()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":228,"author":{"gitId":"carriezhengjr"},"content":"                throw new ParseException(ModCommand.MESSAGE_INDEX_EMPTY);","lastModifiedDate":"2022-10-25"},{"lineNumber":229,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":230,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":231,"author":{"gitId":"carriezhengjr"},"content":"        return indexOrAll;","lastModifiedDate":"2022-10-25"},{"lineNumber":232,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":233,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":234,"author":{"gitId":"jonasgwt"},"content":"    //@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":235,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"jonasgwt"},"content":"     * Extracts out the mods specified in the user command.","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"jonasgwt"},"content":"     * @param args The user command.","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"jonasgwt"},"content":"     * @return A set of mods of type String.","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":241,"author":{"gitId":"jonasgwt"},"content":"    private Set\u003cString\u003e getModsFromCommand(String args) {","lastModifiedDate":"2022-10-12"},{"lineNumber":242,"author":{"gitId":"jonasgwt"},"content":"        String[] splittedArgs \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2022-10-29"},{"lineNumber":243,"author":{"gitId":"jonasgwt"},"content":"        // it is guaranteed that a valid index would be in the first element of the array as","lastModifiedDate":"2022-11-03"},{"lineNumber":244,"author":{"gitId":"jonasgwt"},"content":"        // ParserUtil.getIndexFromCommand would have thrown an exception otherwise.","lastModifiedDate":"2022-11-03"},{"lineNumber":245,"author":{"gitId":"jonasgwt"},"content":"        assert INDEX_FORMAT.matcher(splittedArgs[0]).matches();","lastModifiedDate":"2022-11-03"},{"lineNumber":246,"author":{"gitId":"jonasgwt"},"content":"        List\u003cString\u003e extractedMods \u003d Arrays.asList(splittedArgs).subList(1, splittedArgs.length);","lastModifiedDate":"2022-10-12"},{"lineNumber":247,"author":{"gitId":"jonasgwt"},"content":"        return new HashSet\u003c\u003e(extractedMods);","lastModifiedDate":"2022-10-12"},{"lineNumber":248,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":249,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":250,"author":{"gitId":"jonasgwt"},"content":"    //@@author jonasgwt","lastModifiedDate":"2022-11-06"},{"lineNumber":251,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":252,"author":{"gitId":"jonasgwt"},"content":"     * Checks for common user mistakes.","lastModifiedDate":"2022-11-03"},{"lineNumber":253,"author":{"gitId":"jonasgwt"},"content":"     * 1. Adding words between command word and index.","lastModifiedDate":"2022-11-03"},{"lineNumber":254,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-11-05"},{"lineNumber":255,"author":{"gitId":"jonasgwt"},"content":"     * @param args The user input to check.","lastModifiedDate":"2022-11-03"},{"lineNumber":256,"author":{"gitId":"jonasgwt"},"content":"     * @throws ParseException When user input is found to have made one of the mistakes listed.","lastModifiedDate":"2022-11-03"},{"lineNumber":257,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":258,"author":{"gitId":"jonasgwt"},"content":"    private void checkForUserMistakes(String args) throws ParseException {","lastModifiedDate":"2022-11-03"},{"lineNumber":259,"author":{"gitId":"jonasgwt"},"content":"        String[] splittedArgs \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2022-11-03"},{"lineNumber":260,"author":{"gitId":"jonasgwt"},"content":"        List\u003cString\u003e validIndexes \u003d Arrays.stream(splittedArgs)","lastModifiedDate":"2022-11-03"},{"lineNumber":261,"author":{"gitId":"jonasgwt"},"content":"                .filter(x -\u003e INDEX_FORMAT.matcher(x.trim()).matches() || x.equals(\"all\"))","lastModifiedDate":"2022-11-03"},{"lineNumber":262,"author":{"gitId":"jonasgwt"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-11-03"},{"lineNumber":263,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":264,"author":{"gitId":"jonasgwt"},"content":"        // valid index is not after the command word","lastModifiedDate":"2022-11-03"},{"lineNumber":265,"author":{"gitId":"jonasgwt"},"content":"        if (!validIndexes.isEmpty() \u0026\u0026 !validIndexes.get(0).equals(splittedArgs[0])) {","lastModifiedDate":"2022-11-03"},{"lineNumber":266,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(String.format(ModCommand.INVALID_ARGUMENTS, splittedArgs[0]));","lastModifiedDate":"2022-11-03"},{"lineNumber":267,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":268,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":269,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":270,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":271,"author":{"gitId":"jonasgwt"},"content":"     * Returns the index of the student from user input.","lastModifiedDate":"2022-11-06"},{"lineNumber":272,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-11-06"},{"lineNumber":273,"author":{"gitId":"jonasgwt"},"content":"     * @param trimmedArgs The user input.","lastModifiedDate":"2022-11-06"},{"lineNumber":274,"author":{"gitId":"jonasgwt"},"content":"     * @return The index from the command.","lastModifiedDate":"2022-11-06"},{"lineNumber":275,"author":{"gitId":"jonasgwt"},"content":"     * @throws ParseException If there is an invalid user input.","lastModifiedDate":"2022-11-06"},{"lineNumber":276,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":277,"author":{"gitId":"jonasgwt"},"content":"    private Index getIndex(String trimmedArgs) throws ParseException {","lastModifiedDate":"2022-11-06"},{"lineNumber":278,"author":{"gitId":"jonasgwt"},"content":"        Index index;","lastModifiedDate":"2022-11-06"},{"lineNumber":279,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":280,"author":{"gitId":"jonasgwt"},"content":"        String indexFromCommand \u003d ParserUtil.getIndexFromCommand(trimmedArgs);","lastModifiedDate":"2022-11-06"},{"lineNumber":281,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":282,"author":{"gitId":"jonasgwt"},"content":"        // attempts to parse the index","lastModifiedDate":"2022-11-06"},{"lineNumber":283,"author":{"gitId":"jonasgwt"},"content":"        try {","lastModifiedDate":"2022-11-06"},{"lineNumber":284,"author":{"gitId":"jonasgwt"},"content":"            index \u003d ParserUtil.parseIndex(indexFromCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":285,"author":{"gitId":"jonasgwt"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-11-06"},{"lineNumber":286,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":287,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":288,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":289,"author":{"gitId":"jonasgwt"},"content":"        return index;","lastModifiedDate":"2022-11-06"},{"lineNumber":290,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":291,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":292,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":293,"author":{"gitId":"jonasgwt"},"content":"     * Returns an ObservableList of mods from user input.","lastModifiedDate":"2022-11-06"},{"lineNumber":294,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-11-06"},{"lineNumber":295,"author":{"gitId":"jonasgwt"},"content":"     * @param trimmedArgs The user input.","lastModifiedDate":"2022-11-06"},{"lineNumber":296,"author":{"gitId":"jonasgwt"},"content":"     * @return An ObservableList of Mods","lastModifiedDate":"2022-11-06"},{"lineNumber":297,"author":{"gitId":"jonasgwt"},"content":"     * @throws ParseException If there is no mods in user input or input invalid.","lastModifiedDate":"2022-11-06"},{"lineNumber":298,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":299,"author":{"gitId":"jonasgwt"},"content":"    private ObservableList\u003cMod\u003e getMods(String trimmedArgs) throws ParseException {","lastModifiedDate":"2022-11-06"},{"lineNumber":300,"author":{"gitId":"jonasgwt"},"content":"        Set\u003cString\u003e modsFromCommand \u003d getModsFromCommand(trimmedArgs);","lastModifiedDate":"2022-11-06"},{"lineNumber":301,"author":{"gitId":"jonasgwt"},"content":"        Optional\u003cObservableList\u003cMod\u003e\u003e mods \u003d parseMods(modsFromCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":302,"author":{"gitId":"jonasgwt"},"content":"        if (mods.isEmpty()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":303,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-11-06"},{"lineNumber":304,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":305,"author":{"gitId":"jonasgwt"},"content":"        return mods.get();","lastModifiedDate":"2022-11-06"},{"lineNumber":306,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":307,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ElijahS67":19,"sltsheryl":19,"jonasgwt":162,"chm252":37,"carriezhengjr":70}},{"path":"src/main/java/seedu/masslinkers/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.Command;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"sltsheryl":3,"-":13}},{"path":"src/main/java/seedu/masslinkers/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_ARGUMENTS;","lastModifiedDate":"2022-11-03"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-11-03"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_MORE_THAN_ONE_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_UNEXPECTED_PREFIX;","lastModifiedDate":"2022-11-03"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.logic.parser.ModCommandParser.INDEX_FORMAT;","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.StringUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"import seedu.masslinkers.logic.commands.ModCommand;","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod.ModCategory;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"    public static final String PREFIX_REGEX \u003d \"(?i)[a-z]/.*\";","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"     * Parses the preamble, {@code oneBasedIndex} into an {@code Index} and returns it.","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"        checkForPrefix(trimmedIndex);","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"        // checks if index has extraneous characters","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"        String[] splitArgs \u003d trimmedIndex.split(\"\\\\s+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"        if (splitArgs.length \u003e 1) {","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"            List\u003cString\u003e illegalChars \u003d Arrays.stream(splitArgs)","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"                    .filter(x -\u003e !StringUtil.isNonZeroUnsignedInteger(x))","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"            // if there is more than 2 valid indexes","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"            if (illegalChars.isEmpty()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"                throw new ParseException(MESSAGE_MORE_THAN_ONE_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"            }","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_ARGUMENTS, illegalChars.get(0)));","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"        checkForPrefix(trimmedName);","lastModifiedDate":"2022-11-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"ElijahS67"},"content":"     * @throws ParseException only if the given {@code phone} is empty. Otherwise, it will be accepted.","lastModifiedDate":"2022-10-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"ElijahS67"},"content":"        if (Phone.isEmptyPhone(trimmedPhone)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"sltsheryl"},"content":"     * Parses a {@code String handle} into an {@code Telegram}.","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"sltsheryl"},"content":"     * @throws ParseException if the given {@code handle} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"sltsheryl"},"content":"    public static Telegram parseTelegram(String handle) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(handle);","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"sltsheryl"},"content":"        String trimmedHandle \u003d handle.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"        checkForPrefix(trimmedHandle);","lastModifiedDate":"2022-11-02"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":109,"author":{"gitId":"sltsheryl"},"content":"        if (!Telegram.isValidTelegram(trimmedHandle)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"sltsheryl"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"sltsheryl"},"content":"        return new Telegram(trimmedHandle);","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"sltsheryl"},"content":"     * Parses a {@code String username} into a {@code GitHub}.","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"sltsheryl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"sltsheryl"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"sltsheryl"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"sltsheryl"},"content":"    public static GitHub parseGitHub(String username) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"sltsheryl"},"content":"        String trimmedUsername \u003d username.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"jonasgwt"},"content":"        checkForPrefix(trimmedUsername);","lastModifiedDate":"2022-11-02"},{"lineNumber":124,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":125,"author":{"gitId":"sltsheryl"},"content":"        if (!GitHub.isValidGitHub(trimmedUsername)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"sltsheryl"},"content":"            throw new ParseException(GitHub.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"sltsheryl"},"content":"        return new GitHub(trimmedUsername);","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"jonasgwt"},"content":"        checkForPrefix(trimmedEmail);","lastModifiedDate":"2022-11-02"},{"lineNumber":140,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"ElijahS67"},"content":"     * Parses an {@code String interest} into an {@code interest}.","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"ElijahS67"},"content":"     * @throws ParseException if the given {@code interest} is invalid.","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"ElijahS67"},"content":"    public static Interest parseInterest(String interest) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"ElijahS67"},"content":"        String trimmedInterest \u003d interest.trim();","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"jonasgwt"},"content":"        checkForPrefix(trimmedInterest);","lastModifiedDate":"2022-11-02"},{"lineNumber":156,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":157,"author":{"gitId":"ElijahS67"},"content":"        if (!Interest.isValidInterest(trimmedInterest)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"ElijahS67"},"content":"            throw new ParseException(Interest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"ElijahS67"},"content":"        return new Interest(trimmedInterest);","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"ElijahS67"},"content":"     * Parses {@code Collection\u003cString\u003e interests} into a {@code Set\u003cInterest\u003e}.","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"ElijahS67"},"content":"    public static Set\u003cInterest\u003e parseInterests(Collection\u003cString\u003e interests) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"ElijahS67"},"content":"        final Set\u003cInterest\u003e interestSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"ElijahS67"},"content":"        for (String interestName : interests) {","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"ElijahS67"},"content":"            interestSet.add(parseInterest(interestName));","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"ElijahS67"},"content":"        return interestSet;","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"jonasgwt"},"content":"     * Parses a {@code String mod} into a {@code Mod}.","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"jonasgwt"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"jonasgwt"},"content":"     * @throws ParseException if the given {@code mod} is invalid.","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"jonasgwt"},"content":"    public static Mod parseMod(String mod) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"jonasgwt"},"content":"        String trimmedMod \u003d mod.trim();","lastModifiedDate":"2022-11-03"},{"lineNumber":182,"author":{"gitId":"jonasgwt"},"content":"        checkForPrefix(trimmedMod);","lastModifiedDate":"2022-11-03"},{"lineNumber":183,"author":{"gitId":"jonasgwt"},"content":"        String trimmedUpperCasedMod \u003d trimmedMod.toUpperCase();","lastModifiedDate":"2022-11-03"},{"lineNumber":184,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":185,"author":{"gitId":"jonasgwt"},"content":"        if (!Mod.isValidModName(trimmedUpperCasedMod)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"jonasgwt"},"content":"        return new Mod(trimmedUpperCasedMod);","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"ElijahS67"},"content":"     * Parses {@code Collection\u003cString\u003e mods} into a {@code ObservableList\u003cMod\u003e}.","lastModifiedDate":"2022-10-19"},{"lineNumber":193,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"sltsheryl"},"content":"    public static ObservableList\u003cMod\u003e parseMods(Collection\u003cString\u003e mods) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"sltsheryl"},"content":"        List\u003cString\u003e deDupStringList \u003d new ArrayList\u003c\u003e(new HashSet\u003c\u003e(mods));","lastModifiedDate":"2022-10-13"},{"lineNumber":196,"author":{"gitId":"sltsheryl"},"content":"        final ObservableList\u003cMod\u003e modSet \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"sltsheryl"},"content":"        for (String modName : deDupStringList) {","lastModifiedDate":"2022-10-13"},{"lineNumber":198,"author":{"gitId":"jonasgwt"},"content":"            modSet.add(parseMod(modName));","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"jonasgwt"},"content":"        return modSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":202,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":203,"author":{"gitId":"jonasgwt"},"content":"    //@@author jonasgwt","lastModifiedDate":"2022-11-06"},{"lineNumber":204,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":205,"author":{"gitId":"jonasgwt"},"content":"     * Parses {@code String modName} into a {@code ModCategory}","lastModifiedDate":"2022-10-18"},{"lineNumber":206,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":207,"author":{"gitId":"jonasgwt"},"content":"     * @param modName The module name.","lastModifiedDate":"2022-10-18"},{"lineNumber":208,"author":{"gitId":"jonasgwt"},"content":"     * @return The category that the module name fall under.","lastModifiedDate":"2022-10-18"},{"lineNumber":209,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":210,"author":{"gitId":"jonasgwt"},"content":"    public static ModCategory parseModsToCategory(String modName) {","lastModifiedDate":"2022-10-18"},{"lineNumber":211,"author":{"gitId":"jonasgwt"},"content":"        assert modName !\u003d null;","lastModifiedDate":"2022-10-18"},{"lineNumber":212,"author":{"gitId":"jonasgwt"},"content":"        String prefix \u003d modName.split(\"[0-9]\")[0];","lastModifiedDate":"2022-11-05"},{"lineNumber":213,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":214,"author":{"gitId":"jonasgwt"},"content":"        // prefix should be at least of length 2 as checked by the VALIDATION_REGEX in Mod.","lastModifiedDate":"2022-11-05"},{"lineNumber":215,"author":{"gitId":"jonasgwt"},"content":"        assert prefix.length() \u003e 1;","lastModifiedDate":"2022-11-05"},{"lineNumber":216,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":217,"author":{"gitId":"jonasgwt"},"content":"        String modPrefix \u003d prefix.substring(0, 2);","lastModifiedDate":"2022-11-05"},{"lineNumber":218,"author":{"gitId":"jonasgwt"},"content":"        switch (modPrefix) {","lastModifiedDate":"2022-10-18"},{"lineNumber":219,"author":{"gitId":"jonasgwt"},"content":"        case \"CS\":","lastModifiedDate":"2022-10-18"},{"lineNumber":220,"author":{"gitId":"jonasgwt"},"content":"        case \"IS\":","lastModifiedDate":"2022-10-18"},{"lineNumber":221,"author":{"gitId":"jonasgwt"},"content":"        case \"CP\":","lastModifiedDate":"2022-10-18"},{"lineNumber":222,"author":{"gitId":"jonasgwt"},"content":"            return ModCategory.COMP;","lastModifiedDate":"2022-10-18"},{"lineNumber":223,"author":{"gitId":"jonasgwt"},"content":"        case \"MA\":","lastModifiedDate":"2022-10-18"},{"lineNumber":224,"author":{"gitId":"jonasgwt"},"content":"        case \"ST\":","lastModifiedDate":"2022-10-18"},{"lineNumber":225,"author":{"gitId":"jonasgwt"},"content":"            return ModCategory.MATH;","lastModifiedDate":"2022-10-18"},{"lineNumber":226,"author":{"gitId":"jonasgwt"},"content":"        case \"LS\":","lastModifiedDate":"2022-10-18"},{"lineNumber":227,"author":{"gitId":"jonasgwt"},"content":"        case \"CM\":","lastModifiedDate":"2022-10-18"},{"lineNumber":228,"author":{"gitId":"jonasgwt"},"content":"        case \"PC\":","lastModifiedDate":"2022-10-18"},{"lineNumber":229,"author":{"gitId":"jonasgwt"},"content":"            return ModCategory.SCI;","lastModifiedDate":"2022-10-18"},{"lineNumber":230,"author":{"gitId":"jonasgwt"},"content":"        case \"ES\":","lastModifiedDate":"2022-10-18"},{"lineNumber":231,"author":{"gitId":"jonasgwt"},"content":"            return ModCategory.COMMS;","lastModifiedDate":"2022-10-18"},{"lineNumber":232,"author":{"gitId":"jonasgwt"},"content":"        case \"GE\":","lastModifiedDate":"2022-10-18"},{"lineNumber":233,"author":{"gitId":"jonasgwt"},"content":"        case \"UT\":","lastModifiedDate":"2022-10-18"},{"lineNumber":234,"author":{"gitId":"jonasgwt"},"content":"            return ModCategory.GE;","lastModifiedDate":"2022-10-18"},{"lineNumber":235,"author":{"gitId":"jonasgwt"},"content":"        default:","lastModifiedDate":"2022-10-18"},{"lineNumber":236,"author":{"gitId":"jonasgwt"},"content":"            return ModCategory.UE;","lastModifiedDate":"2022-10-18"},{"lineNumber":237,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":238,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":239,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":240,"author":{"gitId":"jonasgwt"},"content":"    //@@author jonasgwt","lastModifiedDate":"2022-11-06"},{"lineNumber":241,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":242,"author":{"gitId":"jonasgwt"},"content":"     * Checks for extraneous characters that are prefixes.","lastModifiedDate":"2022-11-02"},{"lineNumber":243,"author":{"gitId":"jonasgwt"},"content":"     * @param args The string to check.","lastModifiedDate":"2022-11-02"},{"lineNumber":244,"author":{"gitId":"jonasgwt"},"content":"     * @throws ParseException When an invalid prefix is found.","lastModifiedDate":"2022-11-02"},{"lineNumber":245,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":246,"author":{"gitId":"jonasgwt"},"content":"    private static void checkForPrefix(String args) throws ParseException {","lastModifiedDate":"2022-11-02"},{"lineNumber":247,"author":{"gitId":"jonasgwt"},"content":"        String[] splitArgs \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":248,"author":{"gitId":"jonasgwt"},"content":"        if (splitArgs.length \u003e 1) {","lastModifiedDate":"2022-11-06"},{"lineNumber":249,"author":{"gitId":"jonasgwt"},"content":"            Set\u003cString\u003e stringsWithInvalidPrefix \u003d Arrays.stream(splitArgs)","lastModifiedDate":"2022-11-06"},{"lineNumber":250,"author":{"gitId":"jonasgwt"},"content":"                    .filter(x -\u003e x.matches(PREFIX_REGEX)).collect(Collectors.toSet());","lastModifiedDate":"2022-11-02"},{"lineNumber":251,"author":{"gitId":"jonasgwt"},"content":"            if (!stringsWithInvalidPrefix.isEmpty()) {","lastModifiedDate":"2022-11-02"},{"lineNumber":252,"author":{"gitId":"jonasgwt"},"content":"                throw new ParseException(String.format(MESSAGE_UNEXPECTED_PREFIX,","lastModifiedDate":"2022-11-02"},{"lineNumber":253,"author":{"gitId":"jonasgwt"},"content":"                        stringsWithInvalidPrefix.iterator().next().substring(0, 2)));","lastModifiedDate":"2022-11-02"},{"lineNumber":254,"author":{"gitId":"jonasgwt"},"content":"            }","lastModifiedDate":"2022-11-02"},{"lineNumber":255,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":256,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":257,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":258,"author":{"gitId":"jonasgwt"},"content":"    //@@author jonasgwt","lastModifiedDate":"2022-11-03"},{"lineNumber":259,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":260,"author":{"gitId":"jonasgwt"},"content":"     * Extracts out the index of the student specified in the user command.","lastModifiedDate":"2022-11-03"},{"lineNumber":261,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-11-03"},{"lineNumber":262,"author":{"gitId":"jonasgwt"},"content":"     * @param args The user command.","lastModifiedDate":"2022-11-03"},{"lineNumber":263,"author":{"gitId":"jonasgwt"},"content":"     * @return The index of the student in String.","lastModifiedDate":"2022-11-03"},{"lineNumber":264,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":265,"author":{"gitId":"jonasgwt"},"content":"    public static String getIndexFromCommand(String args) throws ParseException {","lastModifiedDate":"2022-11-03"},{"lineNumber":266,"author":{"gitId":"jonasgwt"},"content":"        String[] splitArgs \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":267,"author":{"gitId":"jonasgwt"},"content":"        List\u003cString\u003e validIndexes \u003d Arrays.stream(splitArgs)","lastModifiedDate":"2022-11-06"},{"lineNumber":268,"author":{"gitId":"jonasgwt"},"content":"                .filter(x -\u003e INDEX_FORMAT.matcher(x.trim()).matches())","lastModifiedDate":"2022-11-03"},{"lineNumber":269,"author":{"gitId":"jonasgwt"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-11-03"},{"lineNumber":270,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":271,"author":{"gitId":"jonasgwt"},"content":"        // no valid index","lastModifiedDate":"2022-11-03"},{"lineNumber":272,"author":{"gitId":"jonasgwt"},"content":"        if (validIndexes.isEmpty()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":273,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(ModCommand.MESSAGE_INDEX_EMPTY);","lastModifiedDate":"2022-11-03"},{"lineNumber":274,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":275,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":276,"author":{"gitId":"jonasgwt"},"content":"        // valid index is not after the command word","lastModifiedDate":"2022-11-03"},{"lineNumber":277,"author":{"gitId":"jonasgwt"},"content":"        if (!validIndexes.get(0).equals(splitArgs[0])) {","lastModifiedDate":"2022-11-06"},{"lineNumber":278,"author":{"gitId":"jonasgwt"},"content":"            throw new ParseException(String.format(ModCommand.INVALID_ARGUMENTS, splitArgs[0]));","lastModifiedDate":"2022-11-06"},{"lineNumber":279,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":280,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":281,"author":{"gitId":"jonasgwt"},"content":"        return validIndexes.iterator().next();","lastModifiedDate":"2022-11-03"},{"lineNumber":282,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":283,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ElijahS67":16,"sltsheryl":48,"jonasgwt":139,"-":80}},{"path":"src/main/java/seedu/masslinkers/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"sltsheryl":1,"-":38}},{"path":"src/main/java/seedu/masslinkers/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser.exceptions;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"sltsheryl":2,"-":15}},{"path":"src/main/java/seedu/masslinkers/model/MassLinkers.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-29"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-29"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-29"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-29"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.UniqueStudentList;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the mass linkers level","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class MassLinkers implements ReadOnlyMassLinkers {","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UniqueStudentList students;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public MassLinkers() {}","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an MassLinkers using the Students in the {@code toBeCopied}","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public MassLinkers(ReadOnlyMassLinkers toBeCopied) {","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code MassLinkers} with {@code newData}.","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyMassLinkers newData) {","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    //// student-level operations","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return students.contains(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if a student with Telegram handle that is same as {@code telegram} exists in","lastModifiedDate":"2022-10-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param telegram the telegram","lastModifiedDate":"2022-10-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @return boolean indicating if such telegram is owned by anyone in the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean hasTelegram(Telegram telegram) {","lastModifiedDate":"2022-10-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2022-10-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return students.containsTelegram(telegram);","lastModifiedDate":"2022-10-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if a student with GitHub that is same as {@code gitHub} exists in","lastModifiedDate":"2022-10-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param gitHub the gitHub","lastModifiedDate":"2022-10-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @return boolean indicating if such gitHub is owned by anyone in the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean hasGitHub(GitHub gitHub) {","lastModifiedDate":"2022-10-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(gitHub);","lastModifiedDate":"2022-10-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return students.containsGitHub(gitHub);","lastModifiedDate":"2022-10-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns true if a student with email that is same as {@code email} exists in","lastModifiedDate":"2022-10-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param email the email","lastModifiedDate":"2022-10-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return boolean indicating if such email is owned by anyone in the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean hasEmail(Email email) {","lastModifiedDate":"2022-10-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2022-10-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return students.containsEmail(email);","lastModifiedDate":"2022-10-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns true if a student with phone number that is same as {@code phone} exists in","lastModifiedDate":"2022-10-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param phone the phone number","lastModifiedDate":"2022-10-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @return boolean indicating if such phone number is owned by anyone in the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean hasPhone(Phone phone) {","lastModifiedDate":"2022-10-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-10-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return students.containsPhone(phone);","lastModifiedDate":"2022-10-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Adds a student to the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * The student must not already exist in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        students.add(p);","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * The student identity of {@code editedStudent} must not be the same as","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * another existing student in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code MassLinkers}.","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        students.remove(key);","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return students.asUnmodifiableObservableList().size()","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                + \" students\";","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return students.hashCode();","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                || (other instanceof MassLinkers // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \u0026\u0026 students.equals(((MassLinkers) other).students));","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":3,"chm252":4,"-":162}},{"path":"src/main/java/seedu/masslinkers/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.GuiSettings;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-29"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-29"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-29"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"     * Returns the user prefs\u0027 mass linkers file path.","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"    Path getMassLinkersFilePath();","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"     * Sets the user prefs\u0027 mass linkers file path.","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"    void setMassLinkersFilePath(Path massLinkersFilePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"     * Replaces mass linkers data with the data in {@code massLinkers}.","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"    void setMassLinkers(ReadOnlyMassLinkers massLinkers);","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"    /** Returns the MassLinkers */","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"    ReadOnlyMassLinkers getMassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"     * Returns true if a student with Telegram handle that is same as {@code telegram} exists in","lastModifiedDate":"2022-10-29"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"     * the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"     * @param telegram the telegram","lastModifiedDate":"2022-10-29"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"     * @return boolean indicating if such telegram is owned by anyone in the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"    public boolean hasTelegram(Telegram telegram);","lastModifiedDate":"2022-10-29"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":73,"author":{"gitId":"chm252"},"content":"     * Returns true if a student with GitHub that is same as {@code gitHub} exists in","lastModifiedDate":"2022-10-29"},{"lineNumber":74,"author":{"gitId":"chm252"},"content":"     * the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":75,"author":{"gitId":"chm252"},"content":"     * @param gitHub the gitHub","lastModifiedDate":"2022-10-29"},{"lineNumber":76,"author":{"gitId":"chm252"},"content":"     * @return boolean indicating if such gitHub is owned by anyone in the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":77,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":78,"author":{"gitId":"chm252"},"content":"    public boolean hasGitHub(GitHub gitHub);","lastModifiedDate":"2022-10-29"},{"lineNumber":79,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":80,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":81,"author":{"gitId":"chm252"},"content":"     * Returns true if a student with email that is same as {@code email} exists in","lastModifiedDate":"2022-10-29"},{"lineNumber":82,"author":{"gitId":"chm252"},"content":"     * the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":83,"author":{"gitId":"chm252"},"content":"     * @param email the email","lastModifiedDate":"2022-10-29"},{"lineNumber":84,"author":{"gitId":"chm252"},"content":"     * @return boolean indicating if such email is owned by anyone in the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":85,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":86,"author":{"gitId":"chm252"},"content":"    public boolean hasEmail(Email email);","lastModifiedDate":"2022-10-29"},{"lineNumber":87,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":88,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":89,"author":{"gitId":"chm252"},"content":"     * Returns true if a student with phone number that is same as {@code phone} exists in","lastModifiedDate":"2022-10-29"},{"lineNumber":90,"author":{"gitId":"chm252"},"content":"     * the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":91,"author":{"gitId":"chm252"},"content":"     * @param phone the phone number","lastModifiedDate":"2022-10-29"},{"lineNumber":92,"author":{"gitId":"chm252"},"content":"     * @return boolean indicating if such phone number is owned by anyone in the mass linkers.","lastModifiedDate":"2022-10-29"},{"lineNumber":93,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":94,"author":{"gitId":"chm252"},"content":"    public boolean hasPhone(Phone phone);","lastModifiedDate":"2022-10-29"},{"lineNumber":95,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"sltsheryl"},"content":"     * Deletes the given student.","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"sltsheryl"},"content":"     * The student must exist in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"sltsheryl"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"sltsheryl"},"content":"     * Adds the given student.","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"sltsheryl"},"content":"     * {@code student} must not already exist in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"sltsheryl"},"content":"    void addStudent(Student student);","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"sltsheryl"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"sltsheryl"},"content":"     * {@code target} must exist in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"sltsheryl"},"content":"     * The student identity of {@code editedStudent} must not be the same as another","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"sltsheryl"},"content":"     * existing student in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"sltsheryl"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"sltsheryl"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"sltsheryl"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"sltsheryl"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sltsheryl":29,"chm252":36,"-":59}},{"path":"src/main/java/seedu/masslinkers/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.GuiSettings;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-29"},{"lineNumber":15,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-29"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-29"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-29"},{"lineNumber":19,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the mass linkers data.","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MassLinkers massLinkers;","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private UserPrefs userPrefs;","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given massLinkers and userPrefs.","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyMassLinkers massLinkers, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(massLinkers, userPrefs);","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with mass linkers: \" + massLinkers + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.massLinkers \u003d new MassLinkers(massLinkers);","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.massLinkers.getStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new MassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getMassLinkersFilePath() {","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getMassLinkersFilePath();","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setMassLinkersFilePath(Path massLinkersFilePath) {","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(massLinkersFilePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setMassLinkersFilePath(massLinkersFilePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MassLinkers \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setMassLinkers(ReadOnlyMassLinkers massLinkers) {","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.massLinkers.resetData(massLinkers);","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyMassLinkers getMassLinkers() {","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return massLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return massLinkers.hasStudent(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean hasTelegram(Telegram telegram) {","lastModifiedDate":"2022-10-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2022-10-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return massLinkers.hasTelegram(telegram);","lastModifiedDate":"2022-10-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean hasGitHub(GitHub gitHub) {","lastModifiedDate":"2022-10-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(gitHub);","lastModifiedDate":"2022-10-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return massLinkers.hasGitHub(gitHub);","lastModifiedDate":"2022-10-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean hasEmail(Email email) {","lastModifiedDate":"2022-10-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2022-10-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return massLinkers.hasEmail(email);","lastModifiedDate":"2022-10-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean hasPhone(Phone phone) {","lastModifiedDate":"2022-10-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-10-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return massLinkers.hasPhone(phone);","lastModifiedDate":"2022-10-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        massLinkers.removeStudent(target);","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        massLinkers.addStudent(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        massLinkers.setStudent(target, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * {@code versionedMassLinkers}","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return filteredStudents;","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return massLinkers.equals(other.massLinkers)","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":5,"chm252":5,"-":168}},{"path":"src/main/java/seedu/masslinkers/model/ReadOnlyMassLinkers.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an mass linkers","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyMassLinkers {","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":2,"-":16}},{"path":"src/main/java/seedu/masslinkers/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.GuiSettings;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Path getMassLinkersFilePath();","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"sltsheryl":2,"-":15}},{"path":"src/main/java/seedu/masslinkers/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.GuiSettings;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Path massLinkersFilePath \u003d Paths.get(\"data\" , \"massLinkers.json\");","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setMassLinkersFilePath(newUserPrefs.getMassLinkersFilePath());","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getMassLinkersFilePath() {","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return massLinkersFilePath;","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setMassLinkersFilePath(Path massLinkersFilePath) {","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(massLinkersFilePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.massLinkersFilePath \u003d massLinkersFilePath;","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 massLinkersFilePath.equals(o.massLinkersFilePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, massLinkersFilePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + massLinkersFilePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":2,"-":86}},{"path":"src/main/java/seedu/masslinkers/model/interest/Interest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":" * Represents an Interest in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidInterest(String)}","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"public class Interest {","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Interests should be alphanumeric.\";","lastModifiedDate":"2022-11-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"    public final String interestName;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"     * Constructs a {@code Interest}.","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"     * @param interestName A valid interest name.","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"    public Interest(String interestName) {","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"        requireNonNull(interestName);","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"        checkArgument(isValidInterest(interestName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"        this.interestName \u003d interestName.toLowerCase();","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"     * Returns true if a given string is a valid interest name.","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"    public static boolean isValidInterest(String test) {","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"                || (other instanceof Interest // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"                \u0026\u0026 interestName.equalsIgnoreCase(((Interest) other).interestName)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"        return interestName.hashCode();","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"ElijahS67"},"content":"        return \u0027[\u0027 + interestName + \u0027]\u0027;","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ElijahS67":12,"sltsheryl":3,"jonasgwt":4,"-":35}},{"path":"src/main/java/seedu/masslinkers/model/student/DetailsContainKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.StringUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":" * Tests that a {@code Student}\u0027s {@code Details} match any of the keywords given.","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"chm252"},"content":"public class DetailsContainKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"    public DetailsContainKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"        return keywords.stream().anyMatch(","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"                keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword))","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"                || keywords.stream().anyMatch(","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"                        keyword -\u003e StringUtil.containsPartialWordIgnoreCase(student.getTelegram().toString(), keyword))","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"                || (student.getGitHub() !\u003d null \u0026\u0026 keywords.stream().anyMatch(","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"                        keyword -\u003e StringUtil.containsPartialWordIgnoreCase(student.getGitHub().toString(), keyword)))","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"                || (student.getEmail() !\u003d null \u0026\u0026 keywords.stream().anyMatch(","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"                        keyword -\u003e StringUtil.containsPartialWordIgnoreCase(student.getEmail().toString(), keyword)))","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"                || (student.getPhone() !\u003d null \u0026\u0026 keywords.stream().anyMatch(","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"                        keyword -\u003e StringUtil.containsPartialWordIgnoreCase(student.getPhone().toString(), keyword)));","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"                || (other instanceof DetailsContainKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"                \u0026\u0026 keywords.equals(((DetailsContainKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"sltsheryl":3,"chm252":15,"-":21}},{"path":"src/main/java/seedu/masslinkers/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":" * Represents a Student\u0027s email in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Email is invalid! \"","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"            + \"Emails should be of the format local-part@domain.\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"            + \"Refer to user guide for email constraints.\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"            + \"https://ay2223s1-cs2103t-t11-4.github.io/tp/UserGuide.html#parameter-requirements\";","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"        value \u003d email.toLowerCase();","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"                \u0026\u0026 value.equalsIgnoreCase(((Email) other).value)); // state check","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":3,"jonasgwt":4,"chm252":2,"-":55}},{"path":"src/main/java/seedu/masslinkers/model/student/GitHub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":" * Represents a Student\u0027s GitHub in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGitHub(String)}","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"public class GitHub {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"    // GitHub username constraints adapted from https://github.com/shinnn/github-username-regex","lastModifiedDate":"2022-10-29"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Github username is invalid!\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"                    + \"â€¢ Github username must be between 1 to 39 characters.\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"                    + \"â€¢ Github username may only contain alphanumeric characters or hyphens.\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"                    + \"â€¢ Github username cannot begin with hyphens and \"","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"                            + \"cannot have multiple consecutive hyphens.\";","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"    // Regex adapted from: https://github.com/shinnn/github-username-regex","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-z\\\\d](?:[a-z\\\\d]-?){0,38}$\";","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"    public final String username;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    public GitHub(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"        checkArgument(isValidGitHub(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"        username \u003d name.toLowerCase();","lastModifiedDate":"2022-10-29"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"     * Returns true if a given string is a valid GitHub username.","lastModifiedDate":"2022-10-29"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"    public static boolean isValidGitHub(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"        return test.toLowerCase().matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-29"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"        return username;","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"                || (other instanceof GitHub // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 username.equals(((GitHub) other).username)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"        return username.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"sltsheryl":49,"jonasgwt":11}},{"path":"src/main/java/seedu/masslinkers/model/student/Mod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":" * Represents a mod in Mass Linkers.","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidModName(String)}","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"public class Mod {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"            \"Mod names should be numbers prefixed with alphabets and less than 10 characters.\";","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"    //@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"    /** Categories for mods */","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"    public enum ModCategory {","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"        COMP(\"Computer Science\"), MATH(\"Mathematics\"), SCI(\"Science\"), COMMS(\"Communication\"),","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"        GE(\"General Education\"), UE(\"Unrestricted Elective\");","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"        private String modName;","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"        ModCategory(String modName) {","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"            this.modName \u003d modName;","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"        public String getModName() {","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"            return modName;","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"        public String toString() {","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"            return this.getModName();","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Z]{2,}\\\\d+[A-Z]?\";","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"    private final String modName;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"    private boolean hasTaken;","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    private final ModCategory modCategory;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"     * Constructs a {@code Mod}.","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"     * @param modName A valid mod name.","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"    public Mod(String modName) {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(modName);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"        checkArgument(isValidModName(modName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"        this.modName \u003d modName.toUpperCase();","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"        this.hasTaken \u003d false;","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"        this.modCategory \u003d ParserUtil.parseModsToCategory(modName);","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"     * Constructs a {@code Mod} with name and hasTaken status.","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"     * @param modName A valid mod name.","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"     * @param hasTaken The mod status, i.e. whether it has been taken.","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"    public Mod(String modName, boolean hasTaken) {","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(modName);","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"        checkArgument(isValidModName(modName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"        this.modName \u003d modName.toUpperCase();","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        this.hasTaken \u003d hasTaken;","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"        this.modCategory \u003d ParserUtil.parseModsToCategory(modName);","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"     * Returns true if a given string is a valid mod name.","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"    public static boolean isValidModName(String test) {","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"        return test.length() \u003c 10 \u0026\u0026 test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"    //@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"     * Returns true if both mods have the same name.","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"     * This defines a weaker notion of equality between two mods.","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"    public boolean isSameMod(Mod otherMod) {","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"        if (otherMod \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"        return otherMod !\u003d null","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"                \u0026\u0026 otherMod.modName.equals((this.modName));","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"     * Marks a module as taken.","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"    public void markMod() {","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"        this.hasTaken \u003d true;","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"     * Unmarks a module and updates the status as taking.","lastModifiedDate":"2022-10-30"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"    public void unmarkMod() {","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"        this.hasTaken \u003d false;","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"     * Gets the module name.","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"     * @return String representation of module name.","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"jonasgwt"},"content":"    public String getModName() {","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"jonasgwt"},"content":"        return this.modName;","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"jonasgwt"},"content":"     * Gets the status of the module.","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"jonasgwt"},"content":"     * @return True if the batchmate has taken the mod; false otherwise.","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"jonasgwt"},"content":"    public boolean getModStatus() {","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"jonasgwt"},"content":"        return this.hasTaken;","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"jonasgwt"},"content":"     * Gets the mod category.","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"jonasgwt"},"content":"     * @return The mod category.","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"jonasgwt"},"content":"    public ModCategory getModCategory() {","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"jonasgwt"},"content":"        return this.modCategory;","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"jonasgwt"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"jonasgwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"jonasgwt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"jonasgwt"},"content":"                || (other instanceof Mod // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"jonasgwt"},"content":"                \u0026\u0026 modName.equals(((Mod) other).modName)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"jonasgwt"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"jonasgwt"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"jonasgwt"},"content":"        return modName.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"jonasgwt"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"jonasgwt"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"jonasgwt"},"content":"        return \u0027[\u0027 + modName + \": \" + hasTaken + \u0027]\u0027;","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"sltsheryl":3,"jonasgwt":146,"carriezhengjr":1}},{"path":"src/main/java/seedu/masslinkers/model/student/ModContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"chm252"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"chm252"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"chm252"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.StringUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"//@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":" * Tests that a {@code Student}\u0027s {@code Mod} matches any of the keywords given.","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"public class ModContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"     * Constructs for ModContainsKeywordsPredicate","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"     * @param keywords list of user inputs.","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"    public ModContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"        ObservableList\u003cMod\u003e mods \u003d student.getMods();","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"        return (long) keywords.size() !\u003d 0","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"            \u0026\u0026 keywords.stream().allMatch(keyword -\u003e mods.stream()","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"                .anyMatch(mod -\u003e StringUtil.containsWordIgnoreCase(mod.getModName(), keyword)));","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"                || (other instanceof ModContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"                \u0026\u0026 keywords.equals(((ModContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"sltsheryl":2,"jonasgwt":31,"chm252":6}},{"path":"src/main/java/seedu/masslinkers/model/student/ModTakenContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"chm252"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"chm252"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.StringUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"//@@author chm252","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":" * Tests that a {@code Student}\u0027s taken {@code Mod} matches any of the keywords given.","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"chm252"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"public class ModTakenContainsKeywordsPredicate extends ModContainsKeywordsPredicate {","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"chm252"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"     * Constructs the ModTakenContainsKeywordsPredicate","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"chm252"},"content":"     * @param keywords list of user inputs.","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"chm252"},"content":"    public ModTakenContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"        super(keywords);","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"        ObservableList\u003cMod\u003e mods \u003d student.getMods();","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"        return (long) keywords.size() !\u003d 0","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"                \u0026\u0026 keywords.stream().allMatch(keyword -\u003e mods.stream()","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"                .anyMatch(mod -\u003e mod.getModStatus() \u0026\u0026 StringUtil.containsWordIgnoreCase(mod.getModName(), keyword)));","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"                || (other instanceof ModTakenContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"                \u0026\u0026 keywords.equals(((ModTakenContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"sltsheryl":2,"chm252":37}},{"path":"src/main/java/seedu/masslinkers/model/student/ModTakingContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"chm252"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"chm252"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.StringUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"//@@author chm252","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":" * Tests that a {@code Student}\u0027s current {@code Mod} matches any of the keywords given.","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"chm252"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"public class ModTakingContainsKeywordsPredicate extends ModContainsKeywordsPredicate {","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"chm252"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"     * Constructs the ModTakingContainsKeywordsPredicate","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"chm252"},"content":"     * @param keywords list of user inputs.","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"chm252"},"content":"    public ModTakingContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"        super(keywords);","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"        ObservableList\u003cMod\u003e mods \u003d student.getMods();","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"        return (long) keywords.size() !\u003d 0","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"                \u0026\u0026 keywords.stream().allMatch(keyword -\u003e mods.stream()","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"                .anyMatch(mod -\u003e !mod.getModStatus() \u0026\u0026 StringUtil.containsWordIgnoreCase(mod.getModName(), keyword)));","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"                || (other instanceof ModTakingContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"                \u0026\u0026 keywords.equals(((ModTakingContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"sltsheryl":2,"chm252":37}},{"path":"src/main/java/seedu/masslinkers/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":" * Represents a Student\u0027s name in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"                \u0026\u0026 fullName.equalsIgnoreCase(((Name) other).fullName)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"        return fullName.toLowerCase().hashCode();","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":3,"jonasgwt":2,"-":54}},{"path":"src/main/java/seedu/masslinkers/model/student/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":" * Represents a Student\u0027s phone number in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":" * Guarantees: immutable; is valid as declared in {@link #isCorrect(String)}","lastModifiedDate":"2022-10-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"    //Phone numbers are usually between 7-16 digits long","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"    //Phone numbers cannot be empty after trimming","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"    //If phone numbers conform to the regex pattern, they are considered valid","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"    //If they do not, they are still valid but considered \"incorrect\" and a warning will be issued","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"            \"Phone numbers should not be blank and should have a length of 7-16 characters \"","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"            + \"(inclusive of country codes).\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"            + \"Phone numbers may start with \\\"+\\\" for the country code (optional).\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"            + \"Incorrect phone numbers are still accepted, though they are discouraged and a warning will be shown.\";","lastModifiedDate":"2022-10-30"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"    public static final String VALIDATION_REGEX \u003d \"(\\\\+)?[0-9]{7,15}\";","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"    private final boolean isIncorrect;","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"        checkArgument(!isEmptyPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"        isIncorrect \u003d !isCorrect(phone);","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"     * Returns true if the phone number is incorrect (but still valid)","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"     * (ie an incorrect phone is not blank and does not conform to the regex check but is still valid).","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"    public boolean hasIncorrectNumber() {","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"        return this.isIncorrect;","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"     * Returns true if a given string is blank after trimming.","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"    public static boolean isEmptyPhone(String test) {","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"ElijahS67"},"content":"        return test.trim().length() \u003d\u003d 0;","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"ElijahS67"},"content":"     * Returns true if a given string matches the regex pattern.","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"ElijahS67"},"content":"    public static boolean isCorrect(String test) {","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ElijahS67":30,"sltsheryl":3,"-":43}},{"path":"src/main/java/seedu/masslinkers/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.util.ModComparator;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":" * Represents a Student in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"public class Student {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"    private final GitHub gitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    private final Telegram handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"    private final Set\u003cInterest\u003e interests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"    private final ObservableList\u003cMod\u003e mods \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"            FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"    private boolean hasIncorrectPhone;","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"    public Student(Name name, Phone phone, Email email, Telegram handle,","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"                  GitHub gitHub, Set\u003cInterest\u003e interests, ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"        requireAllNonNull(name, handle);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"        this.hasIncorrectPhone \u003d phone !\u003d null \u0026\u0026 phone.hasIncorrectNumber();","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"        this.handle \u003d handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"        this.interests.addAll(interests);","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"        this.gitHub \u003d gitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"        this.mods.addAll(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"    public Telegram getTelegram() {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"        return handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"    public GitHub getGitHub() {","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"        return gitHub;","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"ElijahS67"},"content":"     * Returns true if student has an incorrect phone number (but still valid)","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":76,"author":{"gitId":"ElijahS67"},"content":"    public boolean hasIncorrectPhone() {","lastModifiedDate":"2022-10-30"},{"lineNumber":77,"author":{"gitId":"ElijahS67"},"content":"        return this.hasIncorrectPhone;","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":79,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"ElijahS67"},"content":"     * Returns an immutable interest set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"ElijahS67"},"content":"    public Set\u003cInterest\u003e getInterests() {","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"ElijahS67"},"content":"        return Collections.unmodifiableSet(interests);","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"ElijahS67"},"content":"     * Appends a list of interests to the current interests linked to this batchmate.","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"ElijahS67"},"content":"     * @param interestsToBeAdded The list of interests to add in.","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"sltsheryl"},"content":"    public void addInterests(Set\u003cInterest\u003e interestsToBeAdded) {","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"        this.interests.addAll(interestsToBeAdded);","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"ElijahS67"},"content":"     * Checks if the all interests provided are found in the set of interests linked to this batchmate.","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"ElijahS67"},"content":"     * @param interestsSet The set of interests to be deleted.","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"ElijahS67"},"content":"    public boolean canDeleteInterests(Set\u003cInterest\u003e interestsSet) {","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"ElijahS67"},"content":"        return this.interests.containsAll(interestsSet);","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"ElijahS67"},"content":"     * Removes all interests in {@code interestsSet} from the current list of interests linked to this batchmate.","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"ElijahS67"},"content":"     * @param interestsSet The set of interests to be deleted.","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"ElijahS67"},"content":"    public void deleteInterests(Set\u003cInterest\u003e interestsSet) {","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"ElijahS67"},"content":"        this.interests.removeAll(interestsSet);","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"jonasgwt"},"content":"     * Sorts then returns an immutable mods list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"jonasgwt"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"sltsheryl"},"content":"    public ObservableList\u003cMod\u003e getMods() {","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"jonasgwt"},"content":"        return FXCollections.unmodifiableObservableList(new SortedList\u003c\u003e(mods, new ModComparator()));","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"ElijahS67"},"content":"     * Appends a list of mods to the current mods linked to this batchmate.","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"ElijahS67"},"content":"     * @param mods The list of mods to add in.","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"sltsheryl"},"content":"    public void addMods(ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"ElijahS67"},"content":"        Set\u003cMod\u003e uniqueModsSet \u003d mods","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"ElijahS67"},"content":"                .stream()","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"ElijahS67"},"content":"                .filter(mod -\u003e !this.mods.contains(mod))","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"ElijahS67"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"ElijahS67"},"content":"        this.mods.addAll(uniqueModsSet);","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"     * Checks if the all mods provided can be found and edited in the set of mods linked to this batchmate.","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"ElijahS67"},"content":"     * @param mods The list of mods to be edited.","lastModifiedDate":"2022-10-19"},{"lineNumber":141,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"carriezhengjr"},"content":"    public boolean canEditMods(ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"ElijahS67"},"content":"        return this.mods.containsAll(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"ElijahS67"},"content":"     * Removes all mods in {@code mods} from the current list of mods linked to this batchmate.","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"ElijahS67"},"content":"     * @param mods The list of mods to be deleted.","lastModifiedDate":"2022-10-19"},{"lineNumber":150,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"ElijahS67"},"content":"    public void deleteMods(ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"ElijahS67"},"content":"        this.mods.removeAll(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"ElijahS67"},"content":"     * Marks all mods in {@code mods} in the current list of mods linked to this batchmate as taken.","lastModifiedDate":"2022-10-19"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"ElijahS67"},"content":"     * @param mods The list of mods to be marked.","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"carriezhengjr"},"content":"    public void markMods(ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"sltsheryl"},"content":"        for (Mod mod : mods) {","lastModifiedDate":"2022-11-06"},{"lineNumber":162,"author":{"gitId":"sltsheryl"},"content":"            for (Mod currentMod : this.mods) {","lastModifiedDate":"2022-11-06"},{"lineNumber":163,"author":{"gitId":"jonasgwt"},"content":"                String currentModName \u003d currentMod.getModName();","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"sltsheryl"},"content":"                String targetModName \u003d mod.getModName();","lastModifiedDate":"2022-11-06"},{"lineNumber":165,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":166,"author":{"gitId":"carriezhengjr"},"content":"                if (currentModName.equals(targetModName)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":167,"author":{"gitId":"carriezhengjr"},"content":"                    currentMod.markMod();","lastModifiedDate":"2022-10-14"},{"lineNumber":168,"author":{"gitId":"carriezhengjr"},"content":"                    break;","lastModifiedDate":"2022-10-14"},{"lineNumber":169,"author":{"gitId":"carriezhengjr"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":170,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":171,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":172,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"carriezhengjr"},"content":"     * Marks all mods of a batchmate as taken.","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"carriezhengjr"},"content":"    public void markAllMods() {","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"carriezhengjr"},"content":"        for (Mod mod : this.mods) {","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"carriezhengjr"},"content":"            mod.markMod();","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":181,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":182,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":183,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"ElijahS67"},"content":"     * Unmarks all mods in {@code mods} in the current list of mods linked to this batchmate as not taken.","lastModifiedDate":"2022-10-19"},{"lineNumber":185,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":186,"author":{"gitId":"ElijahS67"},"content":"     * @param mods The list of mods to be unmarked.","lastModifiedDate":"2022-10-19"},{"lineNumber":187,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"carriezhengjr"},"content":"    public void unmarkMods(ObservableList\u003cMod\u003e mods) {","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"sltsheryl"},"content":"        for (Mod mod : mods) {","lastModifiedDate":"2022-11-06"},{"lineNumber":190,"author":{"gitId":"sltsheryl"},"content":"            for (Mod currentMod : this.mods) {","lastModifiedDate":"2022-11-06"},{"lineNumber":191,"author":{"gitId":"jonasgwt"},"content":"                String currentModName \u003d currentMod.getModName();","lastModifiedDate":"2022-10-17"},{"lineNumber":192,"author":{"gitId":"sltsheryl"},"content":"                String targetModName \u003d mod.getModName();","lastModifiedDate":"2022-11-06"},{"lineNumber":193,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"carriezhengjr"},"content":"                if (currentModName.equals(targetModName)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"carriezhengjr"},"content":"                    currentMod.unmarkMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"carriezhengjr"},"content":"                    break;","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"carriezhengjr"},"content":"                }","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":203,"author":{"gitId":"chm252"},"content":"     * Returns true if both students have the same Telegram handle/GitHub username/email/phone.","lastModifiedDate":"2022-11-06"},{"lineNumber":204,"author":{"gitId":"sltsheryl"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":206,"author":{"gitId":"sltsheryl"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"sltsheryl"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":210,"author":{"gitId":"chm252"},"content":"        if (otherStudent \u003d\u003d null) {","lastModifiedDate":"2022-10-29"},{"lineNumber":211,"author":{"gitId":"chm252"},"content":"            return false;","lastModifiedDate":"2022-10-29"},{"lineNumber":212,"author":{"gitId":"chm252"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":213,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":214,"author":{"gitId":"chm252"},"content":"        return (otherStudent.getTelegram() !\u003d null \u0026\u0026 otherStudent.getTelegram().equals(getTelegram()))","lastModifiedDate":"2022-11-06"},{"lineNumber":215,"author":{"gitId":"chm252"},"content":"                || (otherStudent.getEmail() !\u003d null \u0026\u0026 otherStudent.getEmail().equals(getEmail()))","lastModifiedDate":"2022-11-06"},{"lineNumber":216,"author":{"gitId":"chm252"},"content":"                || (otherStudent.getGitHub() !\u003d null \u0026\u0026 otherStudent.getGitHub().equals(getGitHub()))","lastModifiedDate":"2022-11-06"},{"lineNumber":217,"author":{"gitId":"chm252"},"content":"                || (otherStudent.getPhone() !\u003d null \u0026\u0026 otherStudent.getPhone().equals(getPhone()));","lastModifiedDate":"2022-11-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":220,"author":{"gitId":"sltsheryl"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2022-10-26"},{"lineNumber":221,"author":{"gitId":"sltsheryl"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":229,"author":{"gitId":"sltsheryl"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":233,"author":{"gitId":"sltsheryl"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2022-10-26"},{"lineNumber":234,"author":{"gitId":"sltsheryl"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2022-10-26"},{"lineNumber":235,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 Optional.ofNullable(otherStudent.getPhone()).equals(Optional.ofNullable(getPhone()))","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"chm252"},"content":"                \u0026\u0026 Optional.ofNullable(otherStudent.getGitHub()).equals(Optional.ofNullable(getGitHub()))","lastModifiedDate":"2022-10-29"},{"lineNumber":237,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 Optional.ofNullable(otherStudent.getEmail()).equals(Optional.ofNullable(getEmail()))","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 otherStudent.getTelegram().equals(getTelegram())","lastModifiedDate":"2022-10-26"},{"lineNumber":239,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 otherStudent.getInterests().equals(getInterests())","lastModifiedDate":"2022-10-26"},{"lineNumber":240,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 otherStudent.getMods().equals(getMods());","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":246,"author":{"gitId":"jonasgwt"},"content":"        return Objects.hash(name, phone, email, handle, gitHub, interests, getMods());","lastModifiedDate":"2022-10-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":253,"author":{"gitId":"sltsheryl"},"content":"                .append(\"; Telegram: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":254,"author":{"gitId":"sltsheryl"},"content":"                .append(getTelegram())","lastModifiedDate":"2022-10-09"},{"lineNumber":255,"author":{"gitId":"sltsheryl"},"content":"                .append(\"; GitHub: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":256,"author":{"gitId":"carriezhengjr"},"content":"                .append(getGitHub())","lastModifiedDate":"2022-10-11"},{"lineNumber":257,"author":{"gitId":"carriezhengjr"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":258,"author":{"gitId":"carriezhengjr"},"content":"                .append(getPhone())","lastModifiedDate":"2022-10-11"},{"lineNumber":259,"author":{"gitId":"carriezhengjr"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":260,"author":{"gitId":"carriezhengjr"},"content":"                .append(getEmail());","lastModifiedDate":"2022-10-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":262,"author":{"gitId":"ElijahS67"},"content":"        Set\u003cInterest\u003e interestSet \u003d getInterests();","lastModifiedDate":"2022-10-15"},{"lineNumber":263,"author":{"gitId":"jonasgwt"},"content":"        ObservableList\u003cMod\u003e sortedMods \u003d getMods();","lastModifiedDate":"2022-10-23"},{"lineNumber":264,"author":{"gitId":"ElijahS67"},"content":"        if (!interestSet.isEmpty()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":265,"author":{"gitId":"ElijahS67"},"content":"            builder.append(\"; Interests: \");","lastModifiedDate":"2022-10-15"},{"lineNumber":266,"author":{"gitId":"ElijahS67"},"content":"            interestSet.forEach(builder::append);","lastModifiedDate":"2022-10-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":268,"author":{"gitId":"jonasgwt"},"content":"        if (!sortedMods.isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":269,"author":{"gitId":"jonasgwt"},"content":"            builder.append(\"; Mods: \");","lastModifiedDate":"2022-10-11"},{"lineNumber":270,"author":{"gitId":"jonasgwt"},"content":"            sortedMods.forEach(builder::append);","lastModifiedDate":"2022-10-23"},{"lineNumber":271,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ElijahS67":72,"sltsheryl":48,"jonasgwt":23,"carriezhengjr":43,"chm252":10,"-":79}},{"path":"src/main/java/seedu/masslinkers/model/student/StudentContainsInterestPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":" * Tests that a {@code Student}\u0027s {@code Interest} matches all the interests (case-insensitive) specified by Student.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"public class StudentContainsInterestPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"    private List\u003cString\u003e keywords;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"    public StudentContainsInterestPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"        if (keywords.isEmpty()) { //keywords \u003d trimmed user input","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"        Set\u003cString\u003e studentInterestSet \u003d student","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"                .getInterests()","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"                .stream()","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"                .map(interest -\u003e interest.interestName)","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"                .map(String::toLowerCase)","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"        Set\u003cString\u003e lowerCaseKeywords \u003d keywords //to be case-insensitive","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"                .stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"                .map(String::toLowerCase)","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"        return studentInterestSet.containsAll(lowerCaseKeywords);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"                || (other instanceof StudentContainsInterestPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 keywords.equals(((StudentContainsInterestPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"ElijahS67":37,"sltsheryl":10}},{"path":"src/main/java/seedu/masslinkers/model/student/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":" * Represents a Student\u0027s address in the mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegram(String)}","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"public class Telegram {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram handle is invalid!\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"            + \"â€¢ Telegram handle must be at least 5 characters long.\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"            + \"â€¢ Telegram handle may only contain alphanumeric characters or underscores.\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"            + \"â€¢ Telegram handle cannot begin or end with an underscore \"","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"            + \"and cannot have multiple consecutive underscores.\";","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"    // Regex adapted from:","lastModifiedDate":"2022-10-29"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"    // https://stackoverflow.com/questions/63308185/regex-match-telegram-username-and-delete-whole-line-in-php","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*\";","lastModifiedDate":"2022-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"    public final String handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"     * Constructs an {@code Telegram}.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"     * @param handle A valid handle.","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    public Telegram(String handle) {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(handle);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"        checkArgument(isValidTelegram(handle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"        this.handle \u003d handle.toLowerCase();","lastModifiedDate":"2022-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"     * Checks if telegram provided is valid.","lastModifiedDate":"2022-10-29"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"     * Checks follow that of telegram\u0027s guidelines:","lastModifiedDate":"2022-10-29"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"     * \"You can use a-z, 0-9, underscores. Minimum length is 5 characters.\"","lastModifiedDate":"2022-10-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"    public static boolean isValidTelegram(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"        return test.length() \u003e\u003d 5 \u0026\u0026 test.toLowerCase().matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"        return handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"                || (other instanceof Telegram // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"                \u0026\u0026 handle.equalsIgnoreCase(((Telegram) other).handle)); // state check","lastModifiedDate":"2022-10-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"        return handle.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sltsheryl":15,"jonasgwt":14,"-":32}},{"path":"src/main/java/seedu/masslinkers/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}.","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":" * As such, adding and updating of","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":" * students uses Student#isSameStudent(Student) for equality so as to ensure that the student being added or updated is","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":" * unique in terms of identity in the UniqueStudentList.","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":" * However, the removal of a student uses Student#equals(Object) so","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":" * as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":" *","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":" *","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"     * Returns true if the telegram handle is owned by a student in the list.","lastModifiedDate":"2022-10-29"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"     * @param toCheck Telegram handle","lastModifiedDate":"2022-10-29"},{"lineNumber":44,"author":{"gitId":"chm252"},"content":"     * @return boolean indicating if someone in the list has the telegram handle.","lastModifiedDate":"2022-10-29"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":46,"author":{"gitId":"chm252"},"content":"    public boolean containsTelegram(Telegram toCheck) {","lastModifiedDate":"2022-10-29"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-29"},{"lineNumber":48,"author":{"gitId":"chm252"},"content":"        return internalList.stream().anyMatch(x -\u003e x.getTelegram().equals(toCheck));","lastModifiedDate":"2022-10-29"},{"lineNumber":49,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":50,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":51,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"     * Returns true if the GitHub username is owned by a student in the list.","lastModifiedDate":"2022-10-29"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"     * @param toCheck GitHub username","lastModifiedDate":"2022-10-29"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"     * @return boolean indicating if someone in the list has the GitHub username.","lastModifiedDate":"2022-10-29"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"    public boolean containsGitHub(GitHub toCheck) {","lastModifiedDate":"2022-10-29"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-29"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"        return internalList.stream().anyMatch(x -\u003e x.getGitHub() !\u003d null","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"                \u0026\u0026 x.getGitHub().equals(toCheck));","lastModifiedDate":"2022-10-30"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":61,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"     * Returns true if the email is owned by a student in the list.","lastModifiedDate":"2022-10-29"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"     * @param toCheck email","lastModifiedDate":"2022-10-29"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"     * @return boolean indicating if someone in the list has the email.","lastModifiedDate":"2022-10-29"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"    public boolean containsEmail(Email toCheck) {","lastModifiedDate":"2022-10-29"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-29"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"        return internalList.stream().anyMatch(x -\u003e x.getEmail() !\u003d null","lastModifiedDate":"2022-10-30"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"                \u0026\u0026 x.getEmail().equals(toCheck));","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":73,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":74,"author":{"gitId":"chm252"},"content":"     * Returns true if the phone number is owned by a student in the list.","lastModifiedDate":"2022-10-29"},{"lineNumber":75,"author":{"gitId":"chm252"},"content":"     * @param toCheck phone number","lastModifiedDate":"2022-10-29"},{"lineNumber":76,"author":{"gitId":"chm252"},"content":"     * @return boolean indicating if someone in the list has the phone number.","lastModifiedDate":"2022-10-29"},{"lineNumber":77,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":78,"author":{"gitId":"chm252"},"content":"    public boolean containsPhone(Phone toCheck) {","lastModifiedDate":"2022-10-29"},{"lineNumber":79,"author":{"gitId":"chm252"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-29"},{"lineNumber":80,"author":{"gitId":"chm252"},"content":"        return internalList.stream().anyMatch(x -\u003e x.getPhone() !\u003d null","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"chm252"},"content":"                \u0026\u0026 x.getPhone().equals(toCheck));","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":83,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":84,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"sltsheryl"},"content":"     * Adds a student to the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"sltsheryl"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"sltsheryl"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"sltsheryl"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"sltsheryl"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"sltsheryl"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"sltsheryl"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"sltsheryl"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"sltsheryl"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"sltsheryl"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"sltsheryl"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"sltsheryl"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"sltsheryl"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"sltsheryl"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"sltsheryl"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"sltsheryl"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"sltsheryl"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"sltsheryl"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"sltsheryl"},"content":"     * The student must exist in the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"sltsheryl"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"sltsheryl"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"sltsheryl"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"sltsheryl"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"sltsheryl"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"sltsheryl"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"sltsheryl"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"sltsheryl"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"sltsheryl"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"sltsheryl"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"sltsheryl"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"sltsheryl"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"sltsheryl"},"content":"        internalList.setAll(students);","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"sltsheryl"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"sltsheryl"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"sltsheryl"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"sltsheryl"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"sltsheryl"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"sltsheryl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"sltsheryl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"sltsheryl"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"sltsheryl"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"sltsheryl"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"sltsheryl"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"sltsheryl"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"sltsheryl"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"sltsheryl"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"sltsheryl"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"sltsheryl"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"sltsheryl"},"content":"                    return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"sltsheryl"},"content":"                }","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"sltsheryl"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"sltsheryl"},"content":"        return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"sltsheryl":139,"chm252":43}},{"path":"src/main/java/seedu/masslinkers/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student.exceptions;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":" * Signals that the operation will result in duplicate Students","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":" * (Students are considered duplicates if they have the same","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":" * identity).","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"sltsheryl":12}},{"path":"src/main/java/seedu/masslinkers/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student.exceptions;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"sltsheryl":6}},{"path":"src/main/java/seedu/masslinkers/model/util/ModComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"//@@author jonasgwt","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":" * Comparator to compare order for mods.","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"public class ModComparator implements Comparator\u003cMod\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"     * Compares a mod with another for order. Returns a","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"     * negative integer, zero, or a positive integer if a mod is less","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"     * than, equal to, or greater than the other.","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"     * @param mod1 the object to be compared.","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"     * @param mod2 the other object to be compared.","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"     * @return a negative integer, zero, or a positive integer if a mod","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"     *         is less than, equal to, or greater than the other.","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"    public int compare(Mod mod1, Mod mod2) {","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(mod1);","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"        requireNonNull(mod2);","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"        if (mod1.getModStatus()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"            if (mod2.getModStatus()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"                return mod1.getModName().compareTo(mod2.getModName());","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"            } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"                return 1;","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"            if (mod2.getModStatus()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"                return -1;","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"            } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"                return mod1.getModName().compareTo(mod2.getModName());","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"sltsheryl":2,"jonasgwt":40}},{"path":"src/main/java/seedu/masslinkers/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":" * Contains utility methods for populating {@code MassLinkers} with sample data.","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"        return new Student[] {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"                new Telegram(\"ayeoh\"), new GitHub(\"alexyeow\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"                getInterestsSet(\"AI\"), getModSet(\"CS2100\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"            new Student(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"                new Telegram(\"bernieyu\"), new GitHub(\"beryu\"),","lastModifiedDate":"2022-10-29"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"                getInterestsSet(\"java\", \"AI\"), getModSet(\"CS2100\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"                new Telegram(\"charl0tte0liveir0\"), new GitHub(\"charlotte123\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"                getInterestsSet(\"algo\"), getModSet(\"CS2100\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"            new Student(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"                new Telegram(\"daveyli\"), new GitHub(\"daveli\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"                getInterestsSet(\"algo\"), getModSet(\"CS2100\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"                new Telegram(\"irfanibrahim\"), new GitHub(\"irfanibrahim\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"                getInterestsSet(\"algo\"), getModSet(\"CS2100\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"                new Telegram(\"roybala\"), new GitHub(\"balaroy\"),","lastModifiedDate":"2022-10-29"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"                getInterestsSet(\"java\"), getModSet(\"CS2100\"))","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"    public static ReadOnlyMassLinkers getSampleMassLinkers() {","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"        MassLinkers sampleAb \u003d new MassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"ElijahS67"},"content":"     * Returns an interest set containing the list of strings given.","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"ElijahS67"},"content":"    public static Set\u003cInterest\u003e getInterestsSet(String... strings) {","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"ElijahS67"},"content":"                .map(Interest::new)","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"     * Returns a mod set containing the list of strings given.","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"    public static ObservableList\u003cMod\u003e getModSet(String... strings) {","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"                .map(Mod::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"                .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"ElijahS67":4,"sltsheryl":32,"jonasgwt":9,"chm252":5,"-":23}},{"path":"src/main/java/seedu/masslinkers/storage/JsonAdaptedInterest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":" * Jackson-friendly version of {@link Interest}.","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"class JsonAdaptedInterest {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"    private String interestName;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"     * Constructs a {@code JsonAdaptedInterest} with the given {@code interestName}.","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"    public JsonAdaptedInterest(String interestName) {","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"        this.interestName \u003d interestName;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"     * Converts a given {@code Interest} into this class for Jackson use.","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"    public JsonAdaptedInterest(Interest source) {","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"        interestName \u003d source.interestName;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"    @JsonValue","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"    public String getInterestName() {","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"        return interestName;","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"     * Converts this Jackson-friendly adapted interest object into the model\u0027s {@code Interest} object.","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted interest.","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"    public Interest toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"        if (!Interest.isValidInterest(interestName)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"            throw new IllegalValueException(Interest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"        return new Interest(interestName);","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"ElijahS67":44,"sltsheryl":4}},{"path":"src/main/java/seedu/masslinkers/storage/JsonAdaptedMod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"//@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":" * Jackson-friendly version of {@link Mod}.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"class JsonAdaptedMod {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"    private String modName;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"    private boolean hasTaken;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"     * Constructs a {@code JsonAdaptedMod} with the given module details.","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"    public JsonAdaptedMod(@JsonProperty(\"modName\") String modName,","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"                          @JsonProperty(\"hasTaken\") boolean hasTaken) {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"        this.modName \u003d modName;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"        this.hasTaken \u003d hasTaken;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"     * Converts a given {@code Mod} into this class for Jackson use.","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"    public JsonAdaptedMod(Mod source) {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"        modName \u003d source.getModName();","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"        hasTaken \u003d source.getModStatus();","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"     * Converts this Jackson-friendly adapted mod object into the model\u0027s {@code Mod} object.","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted mod.","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    public Mod toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"        if (!Mod.isValidModName(modName)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"            throw new IllegalValueException(Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"        return new Mod(modName, hasTaken);","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":3,"jonasgwt":44,"carriezhengjr":1}},{"path":"src/main/java/seedu/masslinkers/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"    private final String handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"    private final String username;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"    private final List\u003cJsonAdaptedInterest\u003e interests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"    private final List\u003cJsonAdaptedMod\u003e mods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"handle\") String handle,","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"                             @JsonProperty(\"username\") String username,","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"                             @JsonProperty(\"interests\") List\u003cJsonAdaptedInterest\u003e interests,","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"                             @JsonProperty(\"mods\") List\u003cJsonAdaptedMod\u003e mods) {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"        this.handle \u003d handle;","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"        this.username \u003d username;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ElijahS67"},"content":"        if (interests !\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"ElijahS67"},"content":"            this.interests.addAll(interests);","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"        if (mods !\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"            this.mods.addAll(mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        if (source.getPhone() \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"            phone \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"        if (source.getEmail() \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"            email \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"        if (source.getGitHub() \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"            username \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"            username \u003d source.getGitHub().username;","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"        handle \u003d source.getTelegram().handle;","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"ElijahS67"},"content":"        interests.addAll(source.getInterests().stream()","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"ElijahS67"},"content":"                .map(JsonAdaptedInterest::new)","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"        mods.addAll(source.getMods().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"                .map(JsonAdaptedMod::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"sltsheryl"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"sltsheryl"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"sltsheryl"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"ElijahS67"},"content":"        final List\u003cInterest\u003e interests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"sltsheryl"},"content":"        final List\u003cMod\u003e studentMods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"ElijahS67"},"content":"        for (JsonAdaptedInterest interest : this.interests) {","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"ElijahS67"},"content":"            interests.add(interest.toModelType());","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"        for (JsonAdaptedMod mod : mods) {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"sltsheryl"},"content":"            studentMods.add(mod.toModelType());","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"        Phone modelPhone \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"        Email modelEmail \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"        GitHub modelGitHub \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"jonasgwt"},"content":"        // mandatory","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"sltsheryl"},"content":"        if (handle \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"sltsheryl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"sltsheryl"},"content":"                    Telegram.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"jonasgwt"},"content":"        if (!Telegram.isValidTelegram(handle)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"sltsheryl"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"sltsheryl"},"content":"        final Telegram modelHandle \u003d new Telegram(handle);","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"jonasgwt"},"content":"        // optional","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"ElijahS67"},"content":"        if (phone !\u003d null \u0026\u0026 Phone.isEmptyPhone(phone)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":129,"author":{"gitId":"jonasgwt"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"jonasgwt"},"content":"        if (phone !\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"jonasgwt"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"jonasgwt"},"content":"        if (email !\u003d null \u0026\u0026 !Email.isValidEmail(email)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"jonasgwt"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"jonasgwt"},"content":"        if (email !\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"jonasgwt"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"jonasgwt"},"content":"        if (username !\u003d null \u0026\u0026 !GitHub.isValidGitHub(username)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"sltsheryl"},"content":"            throw new IllegalValueException(GitHub.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"jonasgwt"},"content":"        if (username !\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"jonasgwt"},"content":"            modelGitHub \u003d new GitHub(username);","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"ElijahS67"},"content":"        final Set\u003cInterest\u003e interestSet \u003d new HashSet\u003c\u003e(interests);","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"sltsheryl"},"content":"        final ObservableList\u003cMod\u003e modelMods \u003d FXCollections.observableArrayList(studentMods);","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"sltsheryl"},"content":"        return new Student(modelName, modelPhone, modelEmail, modelHandle, modelGitHub, interestSet, modelMods);","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ElijahS67":11,"sltsheryl":40,"jonasgwt":47,"carriezhengjr":1,"-":55}},{"path":"src/main/java/seedu/masslinkers/storage/JsonMassLinkersStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.FileUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.JsonUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access MassLinkers data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonMassLinkersStorage implements MassLinkersStorage {","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonMassLinkersStorage.class);","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonMassLinkersStorage(Path filePath) {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getMassLinkersFilePath() {","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyMassLinkers\u003e readMassLinkers() throws DataConversionException {","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readMassLinkers(filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readMassLinkers()}.","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyMassLinkers\u003e readMassLinkers(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableMassLinkers\u003e jsonMassLinkers \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableMassLinkers.class);","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (jsonMassLinkers.isEmpty()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonMassLinkers.get().toModelType());","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveMassLinkers(ReadOnlyMassLinkers massLinkers) throws IOException {","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveMassLinkers(massLinkers, filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveMassLinkers(ReadOnlyMassLinkers)}.","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveMassLinkers(ReadOnlyMassLinkers massLinkers, Path filePath) throws IOException {","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(massLinkers);","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableMassLinkers(massLinkers), filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sltsheryl":7,"-":73}},{"path":"src/main/java/seedu/masslinkers/storage/JsonSerializableMassLinkers.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable MassLinkers that is serializable to JSON format.","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"massLinkers\")","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableMassLinkers {","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableMassLinkers} with the given students.","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableMassLinkers(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.students.addAll(students);","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyMassLinkers} into this class for Jackson use.","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableMassLinkers}.","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableMassLinkers(ReadOnlyMassLinkers source) {","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this mass linkers into the model\u0027s {@code MassLinkers} object.","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public MassLinkers toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        MassLinkers massLinkers \u003d new MassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (massLinkers.hasStudent(student)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            massLinkers.addStudent(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return massLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sltsheryl":5,"-":55}},{"path":"src/main/java/seedu/masslinkers/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.JsonUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sltsheryl":5,"-":42}},{"path":"src/main/java/seedu/masslinkers/storage/MassLinkersStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":" * Represents a storage for {@link seedu.masslinkers.model.MassLinkers}.","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"public interface MassLinkersStorage {","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"    Path getMassLinkersFilePath();","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"     * Returns MassLinkers data as a {@link ReadOnlyMassLinkers}.","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"    Optional\u003cReadOnlyMassLinkers\u003e readMassLinkers() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"     * @see #getMassLinkersFilePath()","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    Optional\u003cReadOnlyMassLinkers\u003e readMassLinkers(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"     * Saves the given {@link ReadOnlyMassLinkers} to the storage.","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"     * @param massLinkers cannot be null.","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"    void saveMassLinkers(ReadOnlyMassLinkers massLinkers) throws IOException;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"     * @see #saveMassLinkers(ReadOnlyMassLinkers)","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"    void saveMassLinkers(ReadOnlyMassLinkers massLinkers, Path filePath) throws IOException;","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sltsheryl":15,"-":30}},{"path":"src/main/java/seedu/masslinkers/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"public interface Storage extends MassLinkersStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"    Path getMassLinkersFilePath();","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"    Optional\u003cReadOnlyMassLinkers\u003e readMassLinkers() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"    void saveMassLinkers(ReadOnlyMassLinkers massLinkers) throws IOException;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sltsheryl":9,"-":23}},{"path":"src/main/java/seedu/masslinkers/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of MassLinkers data in local storage.","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private MassLinkersStorage massLinkersStorage;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code MassLinkersStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(MassLinkersStorage massLinkersStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.massLinkersStorage \u003d massLinkersStorage;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MassLinkers methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getMassLinkersFilePath() {","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return massLinkersStorage.getMassLinkersFilePath();","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyMassLinkers\u003e readMassLinkers() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readMassLinkers(massLinkersStorage.getMassLinkersFilePath());","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyMassLinkers\u003e readMassLinkers(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return massLinkersStorage.readMassLinkers(filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveMassLinkers(ReadOnlyMassLinkers massLinkers) throws IOException {","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveMassLinkers(massLinkers, massLinkersStorage.getMassLinkersFilePath());","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveMassLinkers(ReadOnlyMassLinkers massLinkers, Path filePath) throws IOException {","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        massLinkersStorage.saveMassLinkers(massLinkers, filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":6,"-":72}},{"path":"src/main/java/seedu/masslinkers/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":" * Represents a storage for {@link seedu.masslinkers.model.UserPrefs}.","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"     * Saves the given {@link seedu.masslinkers.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sltsheryl":6,"-":30}},{"path":"src/main/java/seedu/masslinkers/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.CommandResult;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"sltsheryl"},"content":"         * @see seedu.masslinkers.logic.Logic#execute(String)","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"sltsheryl":5,"-":80}},{"path":"src/main/java/seedu/masslinkers/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import java.awt.Desktop;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"import java.net.URI;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-t11-4.github.io/tp/UserGuide.html\\n\";","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"    public static final String COMMAND_SUMMARY \u003d \"\\nCOMMAND SUMMARY\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"            + \"â–ª help\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"            + \"â–ª add: add n/NAME t/TELEGRAM [g/GITHUB] [p/PHONE] [e/EMAIL] [i/INTEREST] [m/MODULE]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"            + \"â–ª list\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"            + \"â–ª edit: edit INDEX [n/NAME] [t/TELEGRAM] [g/GITHUB] [p/PHONE] [e/EMAIL] [i/INTEREST]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"            + \"â–ª find: find KEYWORD [MORE_KEYWORDS]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"            + \"â–ª addInt: addInt INDEX INTEREST [MORE_INTERESTS]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"            + \"â–ª deleteInt: deleteInt INDEX INTEREST [MORE_INTERESTS]\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"            + \"â–ª findInt: findInt INTEREST [MORE_INTERESTS]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"            + \"â–ª delete: delete INDEX\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"            + \"â–ª mod:\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"                + \"\\tâ–« add: mod add INDEX MODULE [MORE_MODULES]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"                + \"\\tâ–« delete: mod delete INDEX MODULE [MORE_MODULES]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"                + \"\\tâ–« mark: mod mark INDEX MODULE [MORE_MODULES]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"                + \"\\tâ–« unmark: mod unmark INDEX MODULE [MORE_MODULES]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"                + \"\\tâ–« mark all: mod mark all\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"                + \"\\tâ–« find: mod find MODULE [MORE_MODULES]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"                + \"\\tâ–« find taking: mod find taking MODULE [MORE_MODULES]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"                + \"\\tâ–« find taken: mod find taken MODULE [MORE_MODULES]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"            + \"â–ª exit\\n\";","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide for more details: \"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"            + USERGUIDE_URL","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"            + COMMAND_SUMMARY;","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":118,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"carriezhengjr"},"content":"     * Opens the user guide in the browser.","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":121,"author":{"gitId":"carriezhengjr"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":122,"author":{"gitId":"carriezhengjr"},"content":"    private void openGuide() throws URISyntaxException, IOException {","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"        Desktop.getDesktop().browse(new URI(\"https://ay2223s1-cs2103t-t11-4.github.io/tp/UserGuide.html\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":125,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ElijahS67":1,"sltsheryl":2,"jonasgwt":17,"carriezhengjr":18,"chm252":1,"-":86}},{"path":"src/main/java/seedu/masslinkers/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.GuiSettings;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.Logic;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.CommandResult;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"    private ModListPanel modListPanel;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"    private Label noSelectedText;","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"    private StackPane modListPanelPlaceholder;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"sltsheryl"},"content":"        modListPanel \u003d new ModListPanel();","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"sltsheryl"},"content":"        modListPanelPlaceholder.getChildren().add(modListPanel.getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"sltsheryl"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList(), modListPanel);","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"sltsheryl"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"sltsheryl"},"content":"        studentListPanel.handleStudentClick();","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"sltsheryl"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getMassLinkersFilePath());","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"sltsheryl"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"sltsheryl"},"content":"        return studentListPanel;","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"sltsheryl"},"content":"     * @see seedu.masslinkers.logic.Logic#execute(String)","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"sltsheryl"},"content":"            if (commandResult.isUpdateStudentPanel()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"sltsheryl"},"content":"                studentListPanel.setStudentPanel(logic.getFilteredStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"sltsheryl"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":196,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":197,"author":{"gitId":"sltsheryl"},"content":"            if (commandResult.isResetModPanel()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":198,"author":{"gitId":"sltsheryl"},"content":"                modListPanel.clearModPanel();","lastModifiedDate":"2022-10-15"},{"lineNumber":199,"author":{"gitId":"sltsheryl"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":200,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":201,"author":{"gitId":"sltsheryl"},"content":"            if (!commandResult.isResetModPanel()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"sltsheryl"},"content":"                modListPanel.setStudentModList(modListPanel.getCurrentStudent());","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"sltsheryl"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sltsheryl":38,"-":182}},{"path":"src/main/java/seedu/masslinkers/ui/ModCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":" * A UI component that displays information of a {@code Student}.","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"public class ModCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"    private static final String FXML \u003d \"ModListCard.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"    public final Mod module;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    private Label modId;","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    private Label modName;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"    private Label modCategory;","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"    private Label takenStatus;","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"     * Creates a {@code ModCard} with the given {@code Mod} and index to display.","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"    public ModCard(Mod module, int displayedIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"        super(FXML);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"        modId.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"        modName.setText(module.getModName());","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"        Mod.ModCategory modCat \u003d module.getModCategory();","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"        modCategory.setText(modCat.toString());","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"        // set color of category tag","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"        if (modCat.equals(Mod.ModCategory.COMP)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"            modCategory.setStyle(\"-fx-background-color: #b32436;\");","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"        } else if (modCat.equals(Mod.ModCategory.MATH)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"            modCategory.setStyle(\"-fx-background-color: #d7a006;\");","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"        } else if (modCat.equals(Mod.ModCategory.SCI)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"            modCategory.setStyle(\"-fx-background-color: #0F9D58;\");","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"        } else if (modCat.equals(Mod.ModCategory.COMMS)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"            modCategory.setStyle(\"-fx-background-color: #185abd;\");","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"        } else if (modCat.equals(Mod.ModCategory.GE)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"            modCategory.setStyle(\"-fx-background-color: #ce532f;\");","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"        } else if (modCat.equals(Mod.ModCategory.UE)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"            modCategory.setStyle(\"-fx-background-color: #7e49d5;\");","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"        boolean hasTaken \u003d module.getModStatus();","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"        if (hasTaken) {","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"            takenStatus.setStyle(\"-fx-background-color: #30c776;\");","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"            takenStatus.setText(\"Taken\");","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"        } else {","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"            takenStatus.setStyle(\"-fx-background-color: #adadad;\");","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"            takenStatus.setText(\"Taking\");","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"sltsheryl"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"sltsheryl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"sltsheryl"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"sltsheryl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"        if (!(other instanceof ModCard)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"sltsheryl"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"sltsheryl"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"sltsheryl"},"content":"        ModCard card \u003d (ModCard) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"sltsheryl"},"content":"        return modId.getText().equals(card.modId.getText())","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 this.module.equals(card.module);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":90,"jonasgwt":1}},{"path":"src/main/java/seedu/masslinkers/ui/ModListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":" * Panel containing the list of modules.","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"public class ModListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"    private static final String FXML \u003d \"ModListPanel.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"    private Student currentStudent;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ModListPanel.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"    private ListView\u003cMod\u003e modListView;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"     * Creates a {@code ModListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"    public ModListPanel() {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"        super(FXML);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"    public void setStudentModList(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"        if (student !\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"            currentStudent \u003d student;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"            ObservableList\u003cMod\u003e moduleList \u003d student.getMods();","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"            modListView.setItems(moduleList);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"            modListView.setCellFactory(listView -\u003e new ModListViewCell());","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"     * Returns the current {@code Student}.","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"    public Student getCurrentStudent() {","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"        return this.currentStudent;","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"    class ModListViewCell extends ListCell\u003cMod\u003e {","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"        protected void updateItem(Mod module, boolean isEmpty) {","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"            super.updateItem(module, isEmpty);","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"            if (isEmpty || module \u003d\u003d null) {","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"                setText(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"            } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"                setGraphic(new ModCard(module, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"     * Clears the mod panel.","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"    public void clearModPanel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"        modListView.setItems(null);","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":70,"jonasgwt":1}},{"path":"src/main/java/seedu/masslinkers/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":" * UI for the status bar that is displayed at the header of the application.","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"     * Constructor for ResultDisplay.","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"        resultDisplay.setStyle(\"-fx-opacity: 1;\");","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sltsheryl":6,"-":26}},{"path":"src/main/java/seedu/masslinkers/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":" * UI for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":2,"-":26}},{"path":"src/main/java/seedu/masslinkers/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":" *  A UI component that displays information of a {@code Student}.","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/massLinkers-level4/issues/336\"\u003eThe issue on MassLinkers level 4\u003c/a\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"    public final Student student;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"    private HBox phoneContainer;","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"    private HBox emailContainer;","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"    private Label email;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"    private HBox telegramContainer;","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"    private Label telegram;","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"    private HBox githubContainer;","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"    private Label github;","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"    private FlowPane interests;","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"     * Creates a {@code StudentCode} with the given {@code Student} and index to display.","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"        this.student \u003d student;","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"        telegram.setText(student.getTelegram().handle);","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"        if (student.getPhone() !\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"            phone.setText(student.getPhone().value);","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"            phoneContainer.getChildren().clear();","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"        if (student.getEmail() !\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"            email.setText(student.getEmail().value);","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"sltsheryl"},"content":"            emailContainer.getChildren().clear();","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"sltsheryl"},"content":"        if (student.getGitHub() !\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"            github.setText(student.getGitHub().username);","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"sltsheryl"},"content":"            githubContainer.getChildren().clear();","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"        student.getInterests()","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"ElijahS67"},"content":"                .stream()","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"sltsheryl"},"content":"                .sorted(Comparator.comparing(interest -\u003e interest.interestName))","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"                .forEach(interest -\u003e interests.getChildren().add(new Label(interest.interestName)));","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"sltsheryl"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"sltsheryl"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"sltsheryl"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ElijahS67":1,"sltsheryl":45,"jonasgwt":2,"-":54}},{"path":"src/main/java/seedu/masslinkers/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":" * Panel containing the list of students.","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"    private final ModListPanel modListPanel;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList, ModListPanel studentModList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"        super(FXML);","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"        this.modListPanel \u003d studentModList;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"    public void setStudentPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"     * Displays ListView item clicked on the ListView on the {@code testPanel}","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"    public void handleStudentClick() {","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"        studentListView.setOnMouseClicked(event -\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"            Student student \u003d studentListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"            if (student !\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"                modListPanel.setStudentModList(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"        });","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"        protected void updateItem(Student student, boolean isEmpty) {","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"            super.updateItem(student, isEmpty);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"            if (isEmpty || student \u003d\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"                setText(null);","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"            } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"sltsheryl":68}},{"path":"src/main/java/seedu/masslinkers/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sltsheryl":1,"-":12}},{"path":"src/main/java/seedu/masslinkers/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import java.util.Objects;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.MainApp;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.util.StringUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.Logic;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"    private final Logic logic;","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"        primaryStage.getIcons().add(getImage());","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"            showFatalErrorDialogAndShutdown(e);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"    private Image getImage() {","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"        return new Image(Objects.requireNonNull(MainApp.class.getResourceAsStream(UiManager.ICON_APPLICATION)));","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"    void showAlertDialogAndWait(String title, String headerText, String contentText) {","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), title, headerText, contentText);","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"    private static void showAlertDialogAndWait(Stage owner, String title, String headerText,","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"        final Alert alert \u003d new Alert(AlertType.ERROR);","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"sltsheryl"},"content":"    private void showFatalErrorDialogAndShutdown(Throwable e) {","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"        logger.severe(\"Fatal error during initializing\" + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"sltsheryl"},"content":"        showAlertDialogAndWait(\"Fatal error during initializing\", e.getMessage(), e.toString());","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sltsheryl":18,"-":70}},{"path":"src/main/java/seedu/masslinkers/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.MainApp;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sltsheryl":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"jonasgwt":1,"-":8}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"#helpMessage {","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: #5e5e5e;","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"#copyButton {","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #0072C6;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #0072C6;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #0072C6;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #edebeb;","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sltsheryl":9,"-":14}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2022-10-29"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"      \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openGuide\" text\u003d\"Open User Guide\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"                  \u003ccursor\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"                     \u003cCursor fx:constant\u003d\"HAND\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"                  \u003c/cursor\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"sltsheryl":1,"jonasgwt":1,"carriezhengjr":6,"-":41}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"700\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Mass Linkers\"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"        \u003cURL value\u003d\"@css/DarkTheme.css\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"        \u003cURL value\u003d\"@css/Extensions.css\"/\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"        \u003cAnchorPane fx:id\u003d\"menuContainer\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"        \u003cMenuBar AnchorPane.topAnchor\u003d\"8\" fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" styleClass\u003d\"menu-item\"  onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"            \u003cMenuItem styleClass\u003d\"menu-item\" fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"                      onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"            \u003cLabel AnchorPane.rightAnchor\u003d\"20\" AnchorPane.topAnchor\u003d\"10\" AnchorPane.bottomAnchor\u003d\"10\"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"                   fx:id\u003d\"appLogo\" text\u003d\"Mass Linkers\"/\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"        \u003c/AnchorPane\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"        \u003c!--Search bar--\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"        \u003c!--Search result--\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"90\" minHeight\u003d\"90\" prefHeight\u003d\"90\"","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"                   styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"2\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"        \u003cHBox prefWidth\u003d\"400\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"          \u003c!--People left panel--\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"        \u003cStackPane minWidth\u003d\"300\" prefWidth\u003d\"NaN\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"        \u003cVBox fx:id\u003d\"studentList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"          \u003cHBox fx:id\u003d\"studentHeader\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"              \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"                \u003cimage\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"                  \u003cImage url\u003d\"@../images/person.png\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"                \u003c/image\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"              \u003c/ImageView\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"sltsheryl"},"content":"              \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"sltsheryl"},"content":"                  \u003cInsets top\u003d\"9\" right\u003d\"1\" bottom\u003d\"9\" left\u003d\"6\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"                \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Students\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"sltsheryl"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"sltsheryl"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"sltsheryl"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":80,"author":{"gitId":"sltsheryl"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"1\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"sltsheryl"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"sltsheryl"},"content":"              \u003cInsets bottom\u003d\"0\"  /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"sltsheryl"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"sltsheryl"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"sltsheryl"},"content":"          \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"sltsheryl"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"sltsheryl"},"content":"          \u003c!--Mods right panel--\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"sltsheryl"},"content":"          \u003cStackPane minWidth\u003d\"300\" prefWidth\u003d\"NaN\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"sltsheryl"},"content":"                     HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"sltsheryl"},"content":"          \u003cVBox fx:id\u003d\"modList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"sltsheryl"},"content":"            \u003cHBox fx:id\u003d\"modHeader\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"sltsheryl"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"sltsheryl"},"content":"                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"sltsheryl"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"sltsheryl"},"content":"                    \u003cImage url\u003d\"@../images/book.png\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"sltsheryl"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"sltsheryl"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"sltsheryl"},"content":"                \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"sltsheryl"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"sltsheryl"},"content":"                    \u003cInsets top\u003d\"9\" right\u003d\"1\" bottom\u003d\"9\" left\u003d\"6\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"sltsheryl"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":106,"author":{"gitId":"sltsheryl"},"content":"                  \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Modules\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":107,"author":{"gitId":"sltsheryl"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":108,"author":{"gitId":"sltsheryl"},"content":"              \u003c/children\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":109,"author":{"gitId":"sltsheryl"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":110,"author":{"gitId":"sltsheryl"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"sltsheryl"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"1\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":112,"author":{"gitId":"sltsheryl"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"sltsheryl"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":114,"author":{"gitId":"sltsheryl"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"sltsheryl"},"content":"                  \u003cInsets bottom\u003d\"0\"  /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":116,"author":{"gitId":"sltsheryl"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"sltsheryl"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"sltsheryl"},"content":"              \u003cStackPane fx:id\u003d\"modListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"sltsheryl"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"sltsheryl"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"sltsheryl"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"sltsheryl":82,"jonasgwt":1,"-":43}},{"path":"src/main/resources/view/ModListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"\u003cHBox fx:id\u003d\"modCardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"        \u003cVBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"70\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"            \u003cHBox spacing\u003d\"1\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"                \u003cLabel fx:id\u003d\"modId\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"                \u003cLabel fx:id\u003d\"modName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"                    \u003cInsets left\u003d\"15\"/\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"                \u003cLabel fx:id\u003d\"modCategory\" wrapText\u003d\"true\" alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"                    \u003cInsets top\u003d\"5\"/\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"                \u003cLabel fx:id\u003d\"takenStatus\" text \u003d \"Taken\" wrapText\u003d\"true\"","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"                       alignment\u003d\"CENTER\" prefHeight\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":46,"jonasgwt":1}},{"path":"src/main/resources/view/ModListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"    \u003cListView fx:id\u003d\"modListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":8,"jonasgwt":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" text\u003d\"Enter help to get started.\"","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"            styleClass\u003d\"result-display\" promptText\u003d\"Command output...\"/\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"sltsheryl":2,"jonasgwt":1,"-":7}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"jonasgwt":1,"-":11}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"    \u003cVBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"85\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"      \u003cHBox spacing\u003d\"1\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"        \u003cInsets top\u003d\"3\" bottom\u003d\"3\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"      \u003cFlowPane fx:id\u003d\"interests\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"      \u003cHBox fx:id\u003d\"telegramContainer\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"          \u003cImageView fitHeight\u003d\"16.0\" fitWidth\u003d\"16.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"              \u003cImage url\u003d\"@../images/telegram.png\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"              \u003cInsets top\u003d\"1\" right\u003d\"1\" bottom\u003d\"1\" left\u003d\"4\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"            \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"      \u003cHBox fx:id\u003d\"phoneContainer\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"          \u003cImageView fitHeight\u003d\"16.0\" fitWidth\u003d\"16.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"              \u003cImage url\u003d\"@../images/phone.png\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"              \u003cInsets top\u003d\"1\" right\u003d\"1\" bottom\u003d\"1\" left\u003d\"4\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"      \u003cHBox fx:id\u003d\"emailContainer\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"sltsheryl"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"          \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"17.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"sltsheryl"},"content":"              \u003cImage url\u003d\"@../images/mail.png\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"sltsheryl"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"sltsheryl"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"sltsheryl"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"sltsheryl"},"content":"              \u003cInsets top\u003d\"1\" right\u003d\"1\" bottom\u003d\"1\" left\u003d\"4\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"sltsheryl"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"sltsheryl"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"sltsheryl"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"sltsheryl"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"sltsheryl"},"content":"      \u003cHBox fx:id\u003d\"githubContainer\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"sltsheryl"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"sltsheryl"},"content":"          \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"17.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"sltsheryl"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"sltsheryl"},"content":"              \u003cImage url\u003d\"@../images/github.png\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"sltsheryl"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"sltsheryl"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"sltsheryl"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"sltsheryl"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"sltsheryl"},"content":"              \u003cInsets top\u003d\"1\" right\u003d\"1\" bottom\u003d\"1\" left\u003d\"4\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"sltsheryl"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"sltsheryl"},"content":"            \u003cLabel fx:id\u003d\"github\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"sltsheryl"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"sltsheryl"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"sltsheryl"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":76,"jonasgwt":1,"-":28}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":1,"jonasgwt":1,"-":6}},{"path":"src/main/resources/view/css/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"@font-face {","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: QTAncientOlive-Bold;","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"    src: url(\u0027../font/QTAncientOlive-Bold.otf\u0027);","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"    background-color: white; /* Used in the default.html file */","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: \"Helvetica Neue\";","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"    -fx-opacity: 0.8;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: \"Helvetica Neue\";","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"    -fx-opacity: 0.8;","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: \"Helvetica Neue\";","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":".menu-item {","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #0072C6;","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":".menu-item:hover {","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":".label-subheader {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"    -fx-base: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"    -fx-control-inner-background: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":108,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"sltsheryl"},"content":".list-cell:empty {","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"sltsheryl"},"content":"    /*-fx-background-color: #dbdbdb;*/","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #f7f7f7;","lastModifiedDate":"2022-10-18"},{"lineNumber":130,"author":{"gitId":"sltsheryl"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"sltsheryl"},"content":"    -fx-border-color: #d4d4d4;","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #ececec;","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"sltsheryl"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"sltsheryl"},"content":"    -fx-border-color: #d4d4d4;","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #b3d9ff;","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"sltsheryl"},"content":"#modName, #modId {","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"sltsheryl"},"content":"    -fx-opacity: 0.8;","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: \"Helvetica Neue\";","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-10-18"},{"lineNumber":164,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: #9c9c9c;","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":168,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":172,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #dbdbdb;","lastModifiedDate":"2022-10-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #0072C6;","lastModifiedDate":"2022-10-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":180,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #f0f1f2;","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-radius: 16px;","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":183,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-10-23"},{"lineNumber":184,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: #5e5e5e;","lastModifiedDate":"2022-10-18"},{"lineNumber":185,"author":{"gitId":"sltsheryl"},"content":"    -fx-padding: 4px 4px 4px 4px;","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"sltsheryl"},"content":"#modHeader, #studentHeader {","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color:","lastModifiedDate":"2022-10-22"},{"lineNumber":190,"author":{"gitId":"sltsheryl"},"content":"    linear-gradient(to top, #6c6c6c, #b2b2b2);","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-radius: 12 12 0 0;","lastModifiedDate":"2022-10-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: \"Helvetica Neue\";","lastModifiedDate":"2022-10-18"},{"lineNumber":200,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2022-10-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"sltsheryl"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-23"},{"lineNumber":203,"author":{"gitId":"sltsheryl"},"content":"    -fx-padding: 2px;","lastModifiedDate":"2022-10-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":208,"author":{"gitId":"sltsheryl"},"content":"    -fx-border-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":218,"author":{"gitId":"sltsheryl"},"content":"    -fx-border-color: black;","lastModifiedDate":"2022-10-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":223,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #0072C6;","lastModifiedDate":"2022-10-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-23"},{"lineNumber":240,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: \"Helvetica Neue\";","lastModifiedDate":"2022-10-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"sltsheryl"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #0072C6;","lastModifiedDate":"2022-10-18"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #0072C6;","lastModifiedDate":"2022-10-18"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #0072C6;","lastModifiedDate":"2022-10-18"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"sltsheryl"},"content":"#menuContainer {","lastModifiedDate":"2022-10-23"},{"lineNumber":284,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #0072C6;","lastModifiedDate":"2022-10-23"},{"lineNumber":285,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":286,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":287,"author":{"gitId":"sltsheryl"},"content":"#appLogo {","lastModifiedDate":"2022-10-23"},{"lineNumber":288,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-23"},{"lineNumber":289,"author":{"gitId":"sltsheryl"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-23"},{"lineNumber":290,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 20;","lastModifiedDate":"2022-10-23"},{"lineNumber":291,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: QTAncientOlive-Bold;","lastModifiedDate":"2022-10-23"},{"lineNumber":292,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":293,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #0072C6;","lastModifiedDate":"2022-10-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2022-10-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: derive(#e6e6e6, 20%);","lastModifiedDate":"2022-10-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: derive(#adadad, 50%);","lastModifiedDate":"2022-10-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"sltsheryl"},"content":"    -fx-pref-height: 30;","lastModifiedDate":"2022-10-22"},{"lineNumber":372,"author":{"gitId":"sltsheryl"},"content":"    -fx-padding: 5 5 5 5;","lastModifiedDate":"2022-10-22"},{"lineNumber":373,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #f0f1f2;","lastModifiedDate":"2022-10-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"sltsheryl"},"content":"    -fx-border-color: grey;","lastModifiedDate":"2022-10-18"},{"lineNumber":376,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-family: \"Helvetica Neue\";","lastModifiedDate":"2022-10-22"},{"lineNumber":377,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-10-22"},{"lineNumber":378,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: #383838;","lastModifiedDate":"2022-10-18"},{"lineNumber":379,"author":{"gitId":"sltsheryl"},"content":"    -fx-border-radius: 10, 10, 10, 10;","lastModifiedDate":"2022-10-22"},{"lineNumber":380,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-radius: 10, 10, 10, 10;","lastModifiedDate":"2022-10-22"},{"lineNumber":381,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":384,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #f0f1f2;","lastModifiedDate":"2022-10-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":386,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":388,"author":{"gitId":"sltsheryl"},"content":"#interests {","lastModifiedDate":"2022-10-17"},{"lineNumber":389,"author":{"gitId":"sltsheryl"},"content":"    -fx-hgap: 10;","lastModifiedDate":"2022-10-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"sltsheryl"},"content":"#interests .label {","lastModifiedDate":"2022-10-17"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":395,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-color: #0072C6;","lastModifiedDate":"2022-10-18"},{"lineNumber":396,"author":{"gitId":"sltsheryl"},"content":"    -fx-padding: 3 3 3 3;","lastModifiedDate":"2022-10-18"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":398,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-radius: 12, 12, 0, 0;","lastModifiedDate":"2022-10-18"},{"lineNumber":399,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2022-10-22"},{"lineNumber":400,"author":{"gitId":"sltsheryl"},"content":"    -fx-alignment: center;","lastModifiedDate":"2022-10-18"},{"lineNumber":401,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":402,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":403,"author":{"gitId":"sltsheryl"},"content":"#modCategory {","lastModifiedDate":"2022-10-18"},{"lineNumber":404,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-radius: 16, 16, 0, 0;","lastModifiedDate":"2022-10-18"},{"lineNumber":405,"author":{"gitId":"sltsheryl"},"content":"    -fx-alignment: center;","lastModifiedDate":"2022-10-18"},{"lineNumber":406,"author":{"gitId":"sltsheryl"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-23"},{"lineNumber":407,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":408,"author":{"gitId":"sltsheryl"},"content":"    -fx-pref-width: 150px;","lastModifiedDate":"2022-10-22"},{"lineNumber":409,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 15;","lastModifiedDate":"2022-10-22"},{"lineNumber":410,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":411,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":412,"author":{"gitId":"sltsheryl"},"content":"#takenStatus {","lastModifiedDate":"2022-10-19"},{"lineNumber":413,"author":{"gitId":"sltsheryl"},"content":"    -fx-background-radius: 16, 16, 0, 0;","lastModifiedDate":"2022-10-18"},{"lineNumber":414,"author":{"gitId":"sltsheryl"},"content":"    -fx-alignment: center;","lastModifiedDate":"2022-10-18"},{"lineNumber":415,"author":{"gitId":"sltsheryl"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-23"},{"lineNumber":416,"author":{"gitId":"sltsheryl"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":417,"author":{"gitId":"sltsheryl"},"content":"    -fx-pref-width: 70px;","lastModifiedDate":"2022-10-19"},{"lineNumber":418,"author":{"gitId":"sltsheryl"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2022-10-22"},{"lineNumber":419,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"sltsheryl":146,"-":273}},{"path":"src/main/resources/view/css/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"    -fx-background: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":2,"-":19}},{"path":"src/test/java/seedu/masslinkers/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"sltsheryl":1,"-":57}},{"path":"src/test/java/seedu/masslinkers/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.core;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"sltsheryl":1,"-":26}},{"path":"src/test/java/seedu/masslinkers/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.core;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":2,"-":133}},{"path":"src/test/java/seedu/masslinkers/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.core.index;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"        final Index fifthStudentIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(fifthStudentIndex.equals(fifthStudentIndex));","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(fifthStudentIndex.equals(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(fifthStudentIndex.equals(5.0f));","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(fifthStudentIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"sltsheryl":9,"-":51}},{"path":"src/test/java/seedu/masslinkers/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"sltsheryl":2,"-":34}},{"path":"src/test/java/seedu/masslinkers/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"sltsheryl":3,"-":105}},{"path":"src/test/java/seedu/masslinkers/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Config;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sltsheryl":4,"-":112}},{"path":"src/test/java/seedu/masslinkers/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":2,"-":21}},{"path":"src/test/java/seedu/masslinkers/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.TestUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":3,"-":42}},{"path":"src/test/java/seedu/masslinkers/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.commons.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"chm252"},"content":"    //--------------Tests for containsPartialWordIgnoreCase-------------------------","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"chm252"},"content":"    public void containsPartialWordIgnoreCase() {","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"chm252"},"content":"        //matching partial words","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"chm252"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"AlbertEinstein\", \"bertein\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"chm252"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"Naruto\", \"ru\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"chm252"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"JayChou\", \"ayc\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"chm252"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"Conan\", \" nan\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"chm252"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"32688274698979\", \"69\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"chm252"},"content":"        //not matching any partial words","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"chm252"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"Naruto\", \"ruru\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"chm252"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"Conan\", \"mingZhengTanKeNan\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"chm252"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"Australia\", \"Perth\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"chm252"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"678463421\", \"999\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"sltsheryl":2,"chm252":19,"-":141}},{"path":"src/test/java/seedu/masslinkers/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.MOD_DESC_CS2100;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.AddCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.CommandResult;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ListCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.storage.JsonMassLinkersStorage;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.storage.StorageManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonMassLinkersStorage massLinkersStorage \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonMassLinkersStorage(temporaryFolder.resolve(\"massLinkers.json\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(massLinkersStorage, userPrefsStorage);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonMassLinkersIoExceptionThrowingStub","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonMassLinkersStorage massLinkersStorage \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonMassLinkersIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionMassLinkers.json\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(massLinkersStorage, userPrefsStorage);","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                + TELEGRAM_DESC_AMY + GITHUB_DESC_AMY + MOD_DESC_CS2100;","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withInterests().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static class JsonMassLinkersIoExceptionThrowingStub extends JsonMassLinkersStorage {","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private JsonMassLinkersIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void saveMassLinkers(ReadOnlyMassLinkers massLinkers, Path filePath) throws IOException {","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sltsheryl":25,"-":139}},{"path":"src/test/java/seedu/masslinkers/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel,","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                false, false, true, true);","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Student studentInList \u003d model.getMassLinkers().getStudentList().get(0);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(studentInList), model, AddCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"sltsheryl":9,"-":38}},{"path":"src/test/java/seedu/masslinkers/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.GuiSettings;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-29"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-29"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-29"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-29"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public Path getMassLinkersFilePath() {","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setMassLinkersFilePath(Path massLinkersFilePath) {","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setMassLinkers(ReadOnlyMassLinkers newData) {","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ReadOnlyMassLinkers getMassLinkers() {","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public boolean hasTelegram(Telegram telegram) {","lastModifiedDate":"2022-10-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean hasGitHub(GitHub gitHub) {","lastModifiedDate":"2022-10-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public boolean hasEmail(Email email) {","lastModifiedDate":"2022-10-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public boolean hasPhone(Phone phone) {","lastModifiedDate":"2022-10-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private final Student student;","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.student \u003d student;","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public ReadOnlyMassLinkers getMassLinkers() {","lastModifiedDate":"2022-10-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return new MassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"sltsheryl":10,"chm252":4,"carriezhengjr":1,"-":199}},{"path":"src/test/java/seedu/masslinkers/logic/commands/AddInterestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"//@@author sltsheryl","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"public class AddInterestCommandTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"    private static final Interest VALID_INTEREST_AI \u003d new Interest(\"AI\");","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"    private static final Interest VALID_INTEREST_SWE \u003d new Interest(\"SWE\");","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    private static Model model;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"        model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"     * Test constructor to throw an exception when null index is provided.","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddInterestCommand(null,","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"     * Test constructor to throw an exception when null interest is provided.","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"    public void constructor_nullMods_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddInterestCommand(INDEX_FIRST_STUDENT, null));","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"     * Test the {@code execute} method to add interests to a student.","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"    public void execute_saveToModels_success() throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"        // adds a test student to model","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"        Student toAdd \u003d new StudentBuilder(BOB).withInterests(VALID_INTEREST_AI.interestName).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"        // execute AddInterestCommand on the test student","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"        HashSet\u003cInterest\u003e currentInterestSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"        currentInterestSet.add(VALID_INTEREST_AI);","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"        AddInterestCommand commandToExecute \u003d new AddInterestCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"                currentInterestSet);","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"        // get the edited student from AddInterestCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"sltsheryl"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"sltsheryl"},"content":"        // expected edited student","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"        Student editedStudentExpected \u003d new StudentBuilder(BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"                .withInterests(VALID_INTEREST_AI.interestName, VALID_INTEREST_AI.interestName)","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"sltsheryl"},"content":"                .build();","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"sltsheryl"},"content":"        assertEquals(String.format(AddInterestCommand.MESSAGE_SUCCESS, editedStudent),","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"sltsheryl"},"content":"        assertEquals(editedStudent, editedStudentExpected);","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"sltsheryl"},"content":"     * Test the {@code execute} method to add a pre-existing interest.","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"sltsheryl"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"sltsheryl"},"content":"    public void execute_saveDuplicateInterests_success() throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"sltsheryl"},"content":"        // adds a test student to model","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"sltsheryl"},"content":"        Student toAdd \u003d new StudentBuilder(BOB).withInterests(VALID_INTEREST_SWE.interestName).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"sltsheryl"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"sltsheryl"},"content":"        // execute AddInterestCommand on the test student with existing mod","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"sltsheryl"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"sltsheryl"},"content":"        HashSet\u003cInterest\u003e currentInterestSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"sltsheryl"},"content":"        currentInterestSet.add(VALID_INTEREST_SWE);","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"sltsheryl"},"content":"        AddInterestCommand commandToExecute \u003d new AddInterestCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"sltsheryl"},"content":"                currentInterestSet);","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"sltsheryl"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"sltsheryl"},"content":"        // get the edited student from AddInterestCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"sltsheryl"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"sltsheryl"},"content":"        // expected edited student","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"sltsheryl"},"content":"        Student editedStudentExpected \u003d new StudentBuilder(BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"sltsheryl"},"content":"                .withInterests(VALID_INTEREST_SWE.interestName)","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"sltsheryl"},"content":"                .build();","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"sltsheryl"},"content":"        assertEquals(String.format(AddInterestCommand.MESSAGE_SUCCESS, editedStudent),","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"sltsheryl"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"sltsheryl"},"content":"        assertEquals(editedStudent, editedStudentExpected);","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"sltsheryl"},"content":"     * Test the {@code execute} method to throw an exception when index provided","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"sltsheryl"},"content":"     * is out of bounds.","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"sltsheryl"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"sltsheryl"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"sltsheryl"},"content":"        Index indexOutOfBounds \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"sltsheryl"},"content":"        HashSet\u003cInterest\u003e currentInterestSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"sltsheryl"},"content":"        currentInterestSet.add(VALID_INTEREST_SWE);","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"sltsheryl"},"content":"        AddInterestCommand invalidCommand \u003d new AddInterestCommand(indexOutOfBounds,","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"sltsheryl"},"content":"                currentInterestSet);","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"sltsheryl"},"content":"        assertCommandFailure(invalidCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"sltsheryl":126,"carriezhengjr":1}},{"path":"src/test/java/seedu/masslinkers/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyMassLinkers_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyMassLinkers_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.setMassLinkers(new MassLinkers());","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"sltsheryl":7,"carriezhengjr":1,"-":27}},{"path":"src/test/java/seedu/masslinkers/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false)));","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false)));","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, false)));","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different resetModel value -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true, false)));","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different updatedStudentPanel value -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, false, true)));","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false, false).hashCode());","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false, false).hashCode());","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"sltsheryl":1,"-":60}},{"path":"src/test/java/seedu/masslinkers/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.DetailsContainKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"//@@author sltsheryl","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"//@@author chm252","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"//@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_PHONE_AMY \u003d \"+11111111\"; // this is a valid number now","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_PHONE_BOB \u003d \"12345678\"; // valid","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_PHONE_BOB_WARN \u003d \"this is a phone\"; // valid but warn","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"amy123\";","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"bobby\";","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_GITHUB_AMY \u003d \"amybee\";","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_GITHUB_BOB \u003d \"bobbychoo\";","lastModifiedDate":"2022-10-29"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_INTEREST_SWE \u003d \"SWE\";","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_INTEREST_AI \u003d \"AI\";","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_MOD_CS2100 \u003d \"CS2100\";","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"    public static final String VALID_MOD_CS2103 \u003d \"CS2103\";","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"    public static final String INVALID_MOD_CS2103 \u003d \"#CS2103\";","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"    public static final String GITHUB_DESC_AMY \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"    public static final String GITHUB_DESC_BOB \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"    public static final String INTEREST_DESC_AI \u003d \" \" + PREFIX_INTEREST + VALID_INTEREST_AI;","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"    public static final String INTEREST_DESC_SWE \u003d \" \" + PREFIX_INTEREST + VALID_INTEREST_SWE;","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"    public static final String MOD_DESC_CS2100 \u003d \" \" + PREFIX_MOD + VALID_MOD_CS2100;","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"    public static final String MOD_DESC_CS2103 \u003d \" \" + PREFIX_MOD + VALID_MOD_CS2103;","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"    public static final String INVALID_MOD_DESC_CS2103 \u003d \" \" + PREFIX_MOD + INVALID_MOD_CS2103;","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"  \"; // Blank phone numbers are not allowed","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"    public static final String INVALID_GITHUB_DESC \u003d \" \" + PREFIX_GITHUB;","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"    // empty string not allowed for GitHub usernames","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"    public static final String INVALID_TELEGRAM_DESC \u003d \" \" + PREFIX_TELEGRAM; // empty string not allowed for telegram","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"    public static final String INVALID_INTEREST_DESC \u003d \" \" + PREFIX_INTEREST + \"AI*\"; //\u0027*\u0027 not allowed in interests","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"                .withGitHub(VALID_GITHUB_AMY).withInterests(VALID_INTEREST_AI).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"                .withGitHub(VALID_GITHUB_BOB).withInterests(VALID_INTEREST_SWE, VALID_INTEREST_AI).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"jonasgwt"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"jonasgwt"},"content":"                                            Model expectedModel, boolean showHelp, boolean exit,","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"jonasgwt"},"content":"                                            boolean resetModPanel, boolean updateStudentPanel) {","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"jonasgwt"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, showHelp,","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"jonasgwt"},"content":"                exit, resetModPanel, updateStudentPanel);","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"jonasgwt"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"jonasgwt"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"jonasgwt"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"jonasgwt"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"jonasgwt"},"content":"     * - the mass linkers, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"jonasgwt"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"jonasgwt"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"jonasgwt"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"jonasgwt"},"content":"        MassLinkers expectedMassLinkers \u003d new MassLinkers(actualModel.getMassLinkers());","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"jonasgwt"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":131,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(expectedMassLinkers, actualModel.getMassLinkers());","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"jonasgwt"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"jonasgwt"},"content":"     * {@code model}\u0027s mass linkers.","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"jonasgwt"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"jonasgwt"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"jonasgwt"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"jonasgwt"},"content":"        model.updateFilteredStudentList(new DetailsContainKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-11-06"},{"lineNumber":145,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"sltsheryl":16,"jonasgwt":122,"chm252":2,"carriezhengjr":1,"-":8}},{"path":"src/test/java/seedu/masslinkers/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel, false,","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoStudent(expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel, false,","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of mass linkers list","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getMassLinkers().getStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"sltsheryl":13,"carriezhengjr":1,"-":98}},{"path":"src/test/java/seedu/masslinkers/logic/commands/DeleteInterestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"ElijahS67"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BOB_WITHOUT_AI;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"ElijahS67"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BOB_WITHOUT_INTERESTS;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"ElijahS67"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"//@@author ElijahS67","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"public class DeleteInterestCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"    private static final Interest INTEREST_AI \u003d new Interest(\"AI\");","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"    private static final Interest INTEREST_SWE \u003d new Interest(\"SWE\");","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"    private static final Interest INTEREST_ALGO \u003d new Interest(\"algo\");","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"    private static Model model;","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"        model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"     * Test constructor to throw an exception when null index is provided.","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteInterestCommand(null,","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"ElijahS67"},"content":"     * Test constructor to throw an exception when null interest is provided.","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"ElijahS67"},"content":"    public void constructor_nullMods_throwsNullPointerException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"ElijahS67"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteInterestCommand(INDEX_FIRST_STUDENT, null));","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of DeleteInterestCommand when the student wants to delete 1 existing interest","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"ElijahS67"},"content":"     * from a batchmate.","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"ElijahS67"},"content":"    public void execute_deleteOneInterest_success() throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"ElijahS67"},"content":"        // adds a test student to model (Bob has interests: AI, SWE)","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"ElijahS67"},"content":"        Student toAdd \u003d new StudentBuilder(BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"ElijahS67"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"ElijahS67"},"content":"        // execute DeleteInterestCommand on the test student","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"ElijahS67"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"ElijahS67"},"content":"        HashSet\u003cInterest\u003e interestsToBeDeleted \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"ElijahS67"},"content":"        interestsToBeDeleted.add(INTEREST_AI);","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"ElijahS67"},"content":"        DeleteInterestCommand commandToExecute \u003d new DeleteInterestCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"ElijahS67"},"content":"                interestsToBeDeleted);","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"ElijahS67"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"ElijahS67"},"content":"        // get the edited student from the model after executing DeleteInterestCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"ElijahS67"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"ElijahS67"},"content":"        // expected edited student","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"ElijahS67"},"content":"        Student editedStudentExpected \u003d new StudentBuilder(BOB_WITHOUT_AI).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(String.format(DeleteInterestCommand.MESSAGE_SUCCESS, editedStudent),","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"ElijahS67"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(editedStudent, editedStudentExpected);","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of DeleteInterestCommand when the student wants to delete multiple existing interests","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"ElijahS67"},"content":"     * from a batchmate.","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"ElijahS67"},"content":"    public void execute_deleteMultipleInterests_success() throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"ElijahS67"},"content":"        // adds a test student to model (Bob has interests: AI, SWE)","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"ElijahS67"},"content":"        Student toAdd \u003d new StudentBuilder(BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"ElijahS67"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"ElijahS67"},"content":"        // execute DeleteInterestCommand on the test student","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"ElijahS67"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"ElijahS67"},"content":"        HashSet\u003cInterest\u003e interestsToBeDeleted \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"ElijahS67"},"content":"        interestsToBeDeleted.add(INTEREST_AI);","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"ElijahS67"},"content":"        interestsToBeDeleted.add(INTEREST_SWE);","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"ElijahS67"},"content":"        DeleteInterestCommand commandToExecute \u003d new DeleteInterestCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"ElijahS67"},"content":"                interestsToBeDeleted);","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"ElijahS67"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"ElijahS67"},"content":"        // get the edited student from the model after executing DeleteInterestCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"ElijahS67"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"ElijahS67"},"content":"        // expected edited student","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"ElijahS67"},"content":"        Student editedStudentExpected \u003d new StudentBuilder(BOB_WITHOUT_INTERESTS).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(String.format(DeleteInterestCommand.MESSAGE_SUCCESS, editedStudent),","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"ElijahS67"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(editedStudent, editedStudentExpected);","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of DeleteInterestCommand when the student wants to delete 1 non-existing interest","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"ElijahS67"},"content":"     * from a batchmate.","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"ElijahS67"},"content":"    public void execute_delete1NonExistingInterest_throwsCommandException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"ElijahS67"},"content":"        // adds a test student to model (Bob has interests: AI, SWE)","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"ElijahS67"},"content":"        Student toAdd \u003d new StudentBuilder(BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"ElijahS67"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"ElijahS67"},"content":"        // execute DeleteInterestCommand on the test student","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"ElijahS67"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"ElijahS67"},"content":"        HashSet\u003cInterest\u003e interestsToBeDeleted \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"ElijahS67"},"content":"        interestsToBeDeleted.add(INTEREST_ALGO);","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"ElijahS67"},"content":"        try {","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"ElijahS67"},"content":"            DeleteInterestCommand commandToExecute \u003d new DeleteInterestCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"ElijahS67"},"content":"                    interestsToBeDeleted);","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"ElijahS67"},"content":"            commandToExecute.execute(model); // Should jump to catch block","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"ElijahS67"},"content":"            fail(); // Test should not reach this line","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"ElijahS67"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-25"},{"lineNumber":138,"author":{"gitId":"ElijahS67"},"content":"            assertEquals(DeleteInterestCommand.MESSAGE_INVALID_INTEREST, e.getMessage());","lastModifiedDate":"2022-10-25"},{"lineNumber":139,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of DeleteInterestCommand when the student wants to delete multiple interests containing","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"ElijahS67"},"content":"     * a mix of existing and non-existing interests from a batchmate.","lastModifiedDate":"2022-10-25"},{"lineNumber":145,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"ElijahS67"},"content":"    public void execute_deleteMixedInterests_throwsCommandException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":148,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"ElijahS67"},"content":"        // adds a test student to model (Bob has interests: AI, SWE)","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"ElijahS67"},"content":"        Student toAdd \u003d new StudentBuilder(BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"ElijahS67"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":153,"author":{"gitId":"ElijahS67"},"content":"        // execute DeleteInterestCommand on the test student","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"ElijahS67"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"ElijahS67"},"content":"        HashSet\u003cInterest\u003e interestsToBeDeleted \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"ElijahS67"},"content":"        interestsToBeDeleted.add(INTEREST_AI);","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"ElijahS67"},"content":"        interestsToBeDeleted.add(INTEREST_ALGO);","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"ElijahS67"},"content":"        try {","lastModifiedDate":"2022-10-25"},{"lineNumber":160,"author":{"gitId":"ElijahS67"},"content":"            DeleteInterestCommand commandToExecute \u003d new DeleteInterestCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"ElijahS67"},"content":"                    interestsToBeDeleted);","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"ElijahS67"},"content":"            commandToExecute.execute(model); // Should jump to catch block","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"ElijahS67"},"content":"            fail(); // Test should not reach this line","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"ElijahS67"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"ElijahS67"},"content":"            assertEquals(DeleteInterestCommand.MESSAGE_INVALID_INTEREST, e.getMessage());","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":167,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":168,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"ElijahS67":167,"chm252":1,"carriezhengjr":1}},{"path":"src/test/java/seedu/masslinkers/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_INTEREST_SWE;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_PHONE_BOB_WARN;","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Student editedStudent \u003d studentInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).withEmail(VALID_EMAIL_BOB).withGitHub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .withInterests(VALID_INTEREST_SWE).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTelegram(VALID_TELEGRAM_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .withGitHub(VALID_GITHUB_BOB).withInterests(VALID_INTEREST_SWE).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStudent, descriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new MassLinkers(model.getMassLinkers()), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Student editedStudent \u003d studentInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withInterests(VALID_INTEREST_SWE).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withInterests(VALID_INTEREST_SWE).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStudent, descriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new MassLinkers(model.getMassLinkers()), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    //correct phone number edit to another correct phone number","lastModifiedDate":"2022-10-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //do not expect warning","lastModifiedDate":"2022-10-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_correctPhoneUnfilteredList_success() {","lastModifiedDate":"2022-10-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-10-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Student editedStudent \u003d studentInList.withPhone(VALID_PHONE_AMY).build(); //expected student","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStudent, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new MassLinkers(model.getMassLinkers()), new UserPrefs());","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    //correct phone number edit to incorrect phone number (but still valid)","lastModifiedDate":"2022-10-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    //expected warning","lastModifiedDate":"2022-10-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_incorrectPhoneUnfilteredList_warn() {","lastModifiedDate":"2022-10-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-10-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Student editedStudent \u003d studentInList.withPhone(VALID_PHONE_BOB_WARN).build(); //expected student","lastModifiedDate":"2022-10-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB_WARN).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStudent, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS_WARN, editedStudent);","lastModifiedDate":"2022-10-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new MassLinkers(model.getMassLinkers()), new UserPrefs());","lastModifiedDate":"2022-10-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, new EditStudentDescriptor());","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new MassLinkers(model.getMassLinkers()), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new MassLinkers(model.getMassLinkers()), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void execute_duplicateStudentUnfilteredList_failure() {","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_STUDENT, descriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void execute_duplicateStudentFilteredList_failure() {","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // edit student in filtered list into a duplicate in mass linkers","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Student studentInList \u003d model.getMassLinkers().getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * but smaller than size of mass linkers","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of mass linkers list","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getMassLinkers().getStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, DESC_AMY);","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_STUDENT, copyDescriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_STUDENT, DESC_AMY)));","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_STUDENT, DESC_BOB)));","lastModifiedDate":"2022-10-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"ElijahS67":2,"sltsheryl":24,"chm252":1,"carriezhengjr":1,"-":208}},{"path":"src/test/java/seedu/masslinkers/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_INTEREST_SWE;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different interests -\u003e returns false","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withInterests(VALID_INTEREST_SWE).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"sltsheryl":9,"chm252":1,"carriezhengjr":1,"-":48}},{"path":"src/test/java/seedu/masslinkers/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"sltsheryl":5,"-":16}},{"path":"src/test/java/seedu/masslinkers/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.CARL;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.DetailsContainKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"//@@author chm252","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"    private Model model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"        DetailsContainKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"                new DetailsContainKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"        DetailsContainKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"                new DetailsContainKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"chm252"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"chm252"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"chm252"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"chm252"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"chm252"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"chm252"},"content":"        DetailsContainKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"        DetailsContainKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"chm252"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"chm252"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"chm252"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"chm252"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"chm252"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"chm252"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"chm252"},"content":"    private DetailsContainKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"chm252"},"content":"        return new DetailsContainKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"chm252"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"sltsheryl":10,"chm252":65,"carriezhengjr":1,"-":10}},{"path":"src/test/java/seedu/masslinkers/logic/commands/FindInterestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ElijahS67"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_ONE_STUDENT_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.DANIEL;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"ElijahS67"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.StudentContainsInterestPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"//@@author chm252","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":" * Contains integration tests (interaction with the Model) for {@code FindInterestCommandTest}.","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"public class FindInterestCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"    private Model model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"        StudentContainsInterestPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"                new StudentContainsInterestPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"        StudentContainsInterestPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"                new StudentContainsInterestPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"        FindInterestCommand findInterestFirstCommand \u003d new FindInterestCommand(firstPredicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"        FindInterestCommand findInterestSecondCommand \u003d new FindInterestCommand(secondPredicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"chm252"},"content":"        assertTrue(findInterestFirstCommand.equals(findInterestFirstCommand));","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"chm252"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"        FindInterestCommand findFirstCommandCopy \u003d new FindInterestCommand(firstPredicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"chm252"},"content":"        assertTrue(findInterestFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"chm252"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"chm252"},"content":"        assertFalse(findInterestFirstCommand.equals(1));","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"        assertFalse(findInterestFirstCommand.equals(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"        // different interest -\u003e returns false","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"        assertFalse(findInterestFirstCommand.equals(findInterestSecondCommand));","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"chm252"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"        StudentContainsInterestPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"        FindInterestCommand command \u003d new FindInterestCommand(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"    public void execute_oneKeyword_multipleStudentsFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"chm252"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"chm252"},"content":"        StudentContainsInterestPredicate predicate \u003d preparePredicate(\"AI\");","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"chm252"},"content":"        FindInterestCommand command \u003d new FindInterestCommand(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"chm252"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"chm252"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"chm252"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"chm252"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"chm252"},"content":"    public void execute_multipleKeywords_oneStudentFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"chm252"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_STUDENT_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-29"},{"lineNumber":85,"author":{"gitId":"chm252"},"content":"        StudentContainsInterestPredicate predicate \u003d preparePredicate(\"AI SWE\");","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"chm252"},"content":"        FindInterestCommand command \u003d new FindInterestCommand(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"chm252"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"chm252"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"chm252"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"chm252"},"content":"        assertEquals(List.of(BENSON), model.getFilteredStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"chm252"},"content":"    public void execute_multipleCasingKeywords_multipleStudentsFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"chm252"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"chm252"},"content":"        StudentContainsInterestPredicate predicate \u003d preparePredicate(\"ai AI Ai\");","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"chm252"},"content":"        FindInterestCommand command \u003d new FindInterestCommand(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"chm252"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"chm252"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"chm252"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"chm252"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"chm252"},"content":"     * Parses {@code userInput} into a {@code StudentContainsInterestPredicate}.","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"chm252"},"content":"    private StudentContainsInterestPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"chm252"},"content":"        return new StudentContainsInterestPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"chm252"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ElijahS67":11,"sltsheryl":12,"carriezhengjr":1,"chm252":86}},{"path":"src/test/java/seedu/masslinkers/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"sltsheryl":5,"-":16}},{"path":"src/test/java/seedu/masslinkers/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"sltsheryl":8,"carriezhengjr":1,"-":33}},{"path":"src/test/java/seedu/masslinkers/logic/commands/ModAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"//@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"public class ModAddCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"    private static final Mod VALID_MOD_CS2100 \u003d new Mod(\"CS2100\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"    private static final Mod VALID_MOD_CS2101 \u003d new Mod(\"CS2101\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"    private static Model model;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"        model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"     * Test constructor to throw an exception when null index is provided.","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModAddCommand(null, FXCollections.observableArrayList()));","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"     * Test constructor to throw an exception when null mods is provided.","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"    public void constructor_nullMods_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModAddCommand(INDEX_FIRST_STUDENT, null));","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"     * Test the {@code execute} method to add mods to a student.","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"    public void execute_saveToModels_success() throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"        // adds a test student to model","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"        Student toAdd \u003d new StudentBuilder(BOB).withMods(VALID_MOD_CS2100.getModName()).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"        // execute ModAddCommand on the test student","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"        ModAddCommand commandToExecute \u003d new ModAddCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2101));","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"        // get the edited student from ModAddCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"        // expected edited student","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"        Student editedStudentExpected \u003d new StudentBuilder(BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"                .withMods(VALID_MOD_CS2100.getModName(), VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"                .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(String.format(ModAddCommand.MESSAGE_SUCCESS, editedStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(editedStudent, editedStudentExpected);","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"     * Test the {@code execute} method to add a pre-existing mod.","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"    public void execute_saveDuplicateMods_success() throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"        // adds a test student to model","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"        Student toAdd \u003d new StudentBuilder(BOB).withMods(VALID_MOD_CS2100.getModName()).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"        // execute ModAddCommand on the test student with existing mod","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"        ModAddCommand commandToExecute \u003d new ModAddCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"        // get the edited student from ModAddCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"        // expected edited student","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"        Student editedStudentExpected \u003d new StudentBuilder(BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"                .withMods(VALID_MOD_CS2100.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"                .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(String.format(ModAddCommand.MESSAGE_SUCCESS, editedStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(editedStudent, editedStudentExpected);","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"     * Test the {@code execute} method to throw an exception when index provided","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"     * is out of bounds.","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"jonasgwt"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"jonasgwt"},"content":"        Index indexOutOfBounds \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"jonasgwt"},"content":"        ModAddCommand invalidCommand \u003d new ModAddCommand(indexOutOfBounds,","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"jonasgwt"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"jonasgwt"},"content":"        assertCommandFailure(invalidCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":16,"jonasgwt":101,"carriezhengjr":1}},{"path":"src/test/java/seedu/masslinkers/logic/commands/ModDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"ElijahS67"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"ElijahS67"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"ElijahS67"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"ElijahS67"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"//@@author ElijahS67","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":" * Test class for ModDeleteCommand.","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"public class ModDeleteCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"    private static final Mod VALID_MOD_CS2100 \u003d new Mod(\"CS2100\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"    private static final Mod VALID_MOD_CS2101 \u003d new Mod(\"CS2101\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"    private static final Mod VALID_MOD_CS2103 \u003d new Mod(\"CS2103\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"    private static final Mod MOD_NOT_FOUND_CS2105 \u003d new Mod(\"CS2105\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"    private static Model model;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"     * Sets up the model before each test.","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"        model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when index is not entered.","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"ElijahS67"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"ElijahS67"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModDeleteCommand(null, FXCollections.observableArrayList()));","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when mod is not entered.","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"ElijahS67"},"content":"    public void constructor_nullMods_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"ElijahS67"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModDeleteCommand(INDEX_FIRST_STUDENT, null));","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when the student wants to delete 1 existing mod","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"ElijahS67"},"content":"     * from the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"ElijahS67"},"content":"     * @throws CommandException If an error occurs during execution of ModDeleteCommand.","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"ElijahS67"},"content":"    public void execute_deleteOneMod_success() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"ElijahS67"},"content":"        Student batchmate \u003d new StudentBuilder(BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"ElijahS67"},"content":"                .withMods(VALID_MOD_CS2100.getModName(), VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"ElijahS67"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"ElijahS67"},"content":"        model.addStudent(batchmate);","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"ElijahS67"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"ElijahS67"},"content":"        ModDeleteCommand commandToExecute \u003d new ModDeleteCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"ElijahS67"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"ElijahS67"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"ElijahS67"},"content":"        String actualModList \u003d batchmate.getMods().toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"ElijahS67"},"content":"        String expectedModList \u003d \"[[CS2101: false]]\";","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(actualModList, expectedModList);","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(ModDeleteCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when the student wants to delete 2 existing mods","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"ElijahS67"},"content":"     * from the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"ElijahS67"},"content":"     * @throws CommandException If an error occurs during execution of ModDeleteCommand.","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"ElijahS67"},"content":"    public void execute_deleteMultipleMods_success() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"ElijahS67"},"content":"        Student batchmate \u003d new StudentBuilder(BOB).withMods(","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"ElijahS67"},"content":"                VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"ElijahS67"},"content":"                VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"ElijahS67"},"content":"                VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"ElijahS67"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"ElijahS67"},"content":"        model.addStudent(batchmate);","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"ElijahS67"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"ElijahS67"},"content":"        ModDeleteCommand commandToExecute \u003d new ModDeleteCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"ElijahS67"},"content":"                FXCollections.observableArrayList(VALID_MOD_CS2101, VALID_MOD_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"ElijahS67"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"ElijahS67"},"content":"        String actualModList \u003d batchmate.getMods().toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"ElijahS67"},"content":"        String expectedModList \u003d \"[[CS2103: false]]\";","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(actualModList, expectedModList);","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"ElijahS67"},"content":"        assertEquals(ModDeleteCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when the student wants to delete 1 non-existing mod","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"ElijahS67"},"content":"     * from the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"ElijahS67"},"content":"    public void execute_delete1NonExistingMod_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"ElijahS67"},"content":"        Student batchmate \u003d new StudentBuilder(BOB).withMods(","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"ElijahS67"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"ElijahS67"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"ElijahS67"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"ElijahS67"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"ElijahS67"},"content":"        model.addStudent(batchmate);","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"ElijahS67"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"ElijahS67"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"ElijahS67"},"content":"            ModDeleteCommand commandToExecute \u003d new ModDeleteCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"ElijahS67"},"content":"                    FXCollections.observableArrayList(MOD_NOT_FOUND_CS2105));","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"ElijahS67"},"content":"            commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"ElijahS67"},"content":"            fail(); // Test should not reach this line.","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"ElijahS67"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"ElijahS67"},"content":"            assertEquals(ModDeleteCommand.MESSAGE_INVALID_MOD, e.getMessage());","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when the student wants to delete multiple mods containing","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"ElijahS67"},"content":"     * a mix of existing and non-existing mods from the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"ElijahS67"},"content":"    public void execute_deleteMixExistingAndNonExistingMods_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"ElijahS67"},"content":"        Student batchmate \u003d new StudentBuilder(BOB).withMods(","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"ElijahS67"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"ElijahS67"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"ElijahS67"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"ElijahS67"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"ElijahS67"},"content":"        model.addStudent(batchmate);","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"ElijahS67"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"ElijahS67"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":159,"author":{"gitId":"ElijahS67"},"content":"            ModDeleteCommand commandToExecute \u003d new ModDeleteCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"ElijahS67"},"content":"                    FXCollections.observableArrayList(VALID_MOD_CS2101, VALID_MOD_CS2103, MOD_NOT_FOUND_CS2105));","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"ElijahS67"},"content":"            commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"ElijahS67"},"content":"            fail(); // Test should not reach this line. Goes to Catch block.","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"ElijahS67"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"ElijahS67"},"content":"            assertEquals(ModDeleteCommand.MESSAGE_INVALID_MOD, e.getMessage());","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"ElijahS67"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"ElijahS67"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"ElijahS67"},"content":"     * Tests the behaviour of ModDeleteCommand when index is out of range.","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"ElijahS67"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"ElijahS67"},"content":"     * @throws CommandException If an error occurs during execution of ModDeleteCommand.","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"ElijahS67"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"ElijahS67"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"ElijahS67"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"ElijahS67"},"content":"        Index indexOutOfBounds \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"ElijahS67"},"content":"        ModDeleteCommand invalidCommand \u003d new ModDeleteCommand(indexOutOfBounds,","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"ElijahS67"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"ElijahS67"},"content":"        assertCommandFailure(invalidCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"ElijahS67"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":181,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":182,"author":{"gitId":"ElijahS67"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"ElijahS67":166,"sltsheryl":15,"carriezhengjr":1}},{"path":"src/test/java/seedu/masslinkers/logic/commands/ModFindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"chm252"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"chm252"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"chm252"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"chm252"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.ModContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"//@@author chm252","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":" * Contains integration tests (interaction with the Model) for {@code ModFindCommand}.","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"public class ModFindCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"    private Model model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"        ModContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"                new ModContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"        ModContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"                new ModContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"        ModFindCommand modFindFirstCommand \u003d new ModFindCommand(firstPredicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"        ModFindCommand modFindSecondCommand \u003d new ModFindCommand(secondPredicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"        assertTrue(modFindFirstCommand.equals(modFindFirstCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"chm252"},"content":"        ModFindCommand modFindFirstCommandCopy \u003d new ModFindCommand(firstPredicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"        assertTrue(modFindFirstCommand.equals(modFindFirstCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"chm252"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"chm252"},"content":"        assertFalse(modFindFirstCommand.equals(1));","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"        assertFalse(modFindFirstCommand.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"        assertFalse(modFindFirstCommand.equals(modFindSecondCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"chm252"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"        ModContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"        ModFindCommand command \u003d new ModFindCommand(predicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"    public void execute_keywords_multipleStudentsFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"chm252"},"content":"        ModContainsKeywordsPredicate predicate \u003d preparePredicate(\"cs1231s\");","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"chm252"},"content":"        ModFindCommand command \u003d new ModFindCommand(predicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"chm252"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"chm252"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel,","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"chm252"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"chm252"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, ELLE), model.getFilteredStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"chm252"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"chm252"},"content":"     * Parses {@code userInput} into a {@code ModContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"chm252"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"chm252"},"content":"    private ModContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"chm252"},"content":"        return new ModContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"chm252"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"sltsheryl":11,"chm252":77,"carriezhengjr":1}},{"path":"src/test/java/seedu/masslinkers/logic/commands/ModMarkAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"//@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":" * Test class for ModMarkCommand.","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"public class ModMarkAllCommandTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2100_TAKING \u003d new Mod(\"CS2100\", false);","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2101_TAKING \u003d new Mod(\"CS2101\", false);","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2103_TAKING \u003d new Mod(\"CS2103\", false);","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"    private static Model model;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"     * Sets up the model before each test.","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"        model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkAllCommand when the student wants to mark all mods of every batchmate,","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"     * where all mods initially have \"is taking\" as mod status.","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error occurs during execution of ModMarkAllCommand.","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_markAllTaking_success() throws CommandException {","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"        Student batchmate1 \u003d new StudentBuilder(AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"                .withMods(","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2100_TAKING.getModName(),","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2101_TAKING.getModName())","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"        Student batchmate2 \u003d new StudentBuilder(BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"                .withMods(","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2100_TAKING.getModName(),","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2103_TAKING.getModName())","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"        model.addStudent(batchmate1);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"        model.addStudent(batchmate2);","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkAllCommand commandToExecute \u003d new ModMarkAllCommand();","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods1 \u003d batchmate1.getMods();","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"        for (Mod mod : mods1) {","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"            boolean expectedModStatus1 \u003d true;","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"            boolean actualModStatus1 \u003d mod.getModStatus();","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"            assertEquals(expectedModStatus1, actualModStatus1);","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods2 \u003d batchmate2.getMods();","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"        for (Mod mod : mods2) {","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"            boolean expectedModStatus2 \u003d true;","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"            boolean actualModStatus2 \u003d mod.getModStatus();","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"            assertEquals(expectedModStatus2, actualModStatus2);","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"        String expectedMsg \u003d String.format(ModMarkAllCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"        String actualMsg \u003d commandResult.getFeedbackToUser();","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(expectedMsg, actualMsg);","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"sltsheryl":11,"carriezhengjr":72}},{"path":"src/test/java/seedu/masslinkers/logic/commands/ModMarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"//@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":" * Test class for ModMarkCommand.","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"public class ModMarkCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2100 \u003d new Mod(\"CS2100\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2101 \u003d new Mod(\"CS2101\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2103 \u003d new Mod(\"CS2103\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod MOD_NOT_FOUND_CS2105 \u003d new Mod(\"CS2105\", false);","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"    private static Model model;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"     * Sets up the model before each test.","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"        model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when index is not entered.","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModMarkCommand(null, FXCollections.observableArrayList()));","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when mod is not entered.","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"    public void constructor_nullMods_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModMarkCommand(INDEX_FIRST_STUDENT, null));","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when the student wants to mark 1 existing mod","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"     * in the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error occurs during execution of ModMarkCommand.","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_markOneMod_success() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"        Student batchmate \u003d new StudentBuilder(BOB).withMods(VALID_MOD_CS2100.getModName()).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"        model.addStudent(batchmate);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand commandToExecute \u003d new ModMarkCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"        String actualModStatus \u003d batchmate.getMods().get(0).toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"        String expectedModStatus \u003d \"[CS2100: true]\";","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(expectedModStatus, actualModStatus);","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(ModMarkCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when the student wants to mark 2 existing mods","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"     * in the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error occurs during execution of ModMarkCommand.","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_markMultipleMod_success() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"carriezhengjr"},"content":"        Student batchmate \u003d new StudentBuilder(BOB).withMods(","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"carriezhengjr"},"content":"                VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"carriezhengjr"},"content":"                VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"carriezhengjr"},"content":"                VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"carriezhengjr"},"content":"        model.addStudent(batchmate);","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand commandToExecute \u003d new ModMarkCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"carriezhengjr"},"content":"                FXCollections.observableArrayList(VALID_MOD_CS2101, VALID_MOD_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"carriezhengjr"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"carriezhengjr"},"content":"        String actualFirstModStatus \u003d batchmate.getMods().get(0).toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"carriezhengjr"},"content":"        String actualSecondModStatus \u003d batchmate.getMods().get(1).toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"carriezhengjr"},"content":"        String actualThirdModStatus \u003d batchmate.getMods().get(2).toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"carriezhengjr"},"content":"        String actualModStatus \u003d actualFirstModStatus + actualSecondModStatus + actualThirdModStatus;","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"carriezhengjr"},"content":"        String expectedModStatus \u003d \"[CS2103: false]\" + \"[CS2100: true]\" + \"[CS2101: true]\";","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(expectedModStatus, actualModStatus);","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(ModMarkCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when the student wants to mark 1 non-existing mod","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"carriezhengjr"},"content":"     * in the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_markNonExistingMod1_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"carriezhengjr"},"content":"        Student batchmate \u003d new StudentBuilder(BOB).withMods(","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"carriezhengjr"},"content":"        model.addStudent(batchmate);","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"carriezhengjr"},"content":"            ModMarkCommand commandToExecute \u003d new ModMarkCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"carriezhengjr"},"content":"                    FXCollections.observableArrayList(MOD_NOT_FOUND_CS2105));","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"carriezhengjr"},"content":"            commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"carriezhengjr"},"content":"            fail(); // Test should not reach this line.","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"carriezhengjr"},"content":"            assertEquals(ModMarkCommand.MESSAGE_INVALID_MOD, e.getMessage());","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when the student wants to mark multiple mods containing","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"carriezhengjr"},"content":"     * 1 non-existing mod in the list of modules of a batchmate.","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_markNonExistingMod2_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"carriezhengjr"},"content":"        Student batchmate \u003d new StudentBuilder(BOB).withMods(","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"carriezhengjr"},"content":"        model.addStudent(batchmate);","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":160,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"carriezhengjr"},"content":"            ModMarkCommand commandToExecute \u003d new ModMarkCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"carriezhengjr"},"content":"                    FXCollections.observableArrayList(VALID_MOD_CS2101, VALID_MOD_CS2103, MOD_NOT_FOUND_CS2105));","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"carriezhengjr"},"content":"            commandToExecute.execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"carriezhengjr"},"content":"            fail(); // Test should not reach this line.","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"carriezhengjr"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"carriezhengjr"},"content":"            assertEquals(ModMarkCommand.MESSAGE_INVALID_MOD, e.getMessage());","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModMarkCommand when index is out of range.","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error occurs during execution of ModMarkCommand.","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":177,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"carriezhengjr"},"content":"        Index indexOutOfBounds \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand invalidCommand \u003d new ModMarkCommand(indexOutOfBounds,","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"carriezhengjr"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":181,"author":{"gitId":"carriezhengjr"},"content":"        assertCommandFailure(invalidCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":183,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":184,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"sltsheryl":15,"carriezhengjr":169}},{"path":"src/test/java/seedu/masslinkers/logic/commands/ModUnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"//@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":" * Test class for ModUnmarkCommand.","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"public class ModUnmarkCommandTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2100 \u003d new Mod(\"CS2100\", true);","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2101 \u003d new Mod(\"CS2101\", true);","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod VALID_MOD_CS2103 \u003d new Mod(\"CS2103\", true);","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"    private static final Mod MOD_NOT_FOUND_CS2105 \u003d new Mod(\"CS2105\", true);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"    private static Model model;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"     * Sets up the model before each test.","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"        model \u003d new ModelManager(getTypicalMassLinkers(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when index is not entered.","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModUnmarkCommand(null, FXCollections.observableArrayList()));","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when mod is not entered.","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"    public void constructor_nullMods_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModUnmarkCommand(INDEX_FIRST_STUDENT, null));","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when the student wants to unmark 1 existing mod","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"     * in the list of taken modules of a batchmate.","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error which occurs during execution of ModUnmarkCommand.","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_unmarkOneMod_success() throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"        Student batchmate \u003d new StudentBuilder(BOB).withMods(VALID_MOD_CS2100.getModName()).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"        model.addStudent(batchmate);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(0).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand commandToExecute \u003d new ModUnmarkCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"        String actualModStatus \u003d batchmate.getMods().get(0).toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"        String expectedModStatus \u003d \"[CS2100: false]\";","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(expectedModStatus, actualModStatus);","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(ModUnmarkCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when the student wants to unmark 2 existing mods","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"     * in the list of taken modules of a batchmate.","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error which occurs during execution of ModUnmarkCommand.","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_unmarkMultipleMod_success() throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"carriezhengjr"},"content":"        Student batchmate \u003d new StudentBuilder(BOB).withMods(","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"carriezhengjr"},"content":"        model.addStudent(batchmate);","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(0).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(1).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(2).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand commandToExecute \u003d new ModUnmarkCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"carriezhengjr"},"content":"                FXCollections.observableArrayList(VALID_MOD_CS2101, VALID_MOD_CS2100));","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"carriezhengjr"},"content":"        CommandResult commandResult \u003d commandToExecute.execute(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"carriezhengjr"},"content":"        String actualFirstModStatus \u003d batchmate.getMods().get(0).toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"carriezhengjr"},"content":"        String actualSecondModStatus \u003d batchmate.getMods().get(1).toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"carriezhengjr"},"content":"        String actualThirdModStatus \u003d batchmate.getMods().get(2).toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"carriezhengjr"},"content":"        String actualModStatus \u003d actualFirstModStatus + actualSecondModStatus + actualThirdModStatus;","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"carriezhengjr"},"content":"        String expectedModStatus \u003d \"[CS2100: false]\" + \"[CS2101: false]\" + \"[CS2103: true]\";","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(expectedModStatus, actualModStatus);","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"carriezhengjr"},"content":"        assertEquals(ModUnmarkCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when the student wants to unmark 1 non-existing mod","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"carriezhengjr"},"content":"     * in the list of taken modules of a batchmate.","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_unmarkNonExistingMod1_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"carriezhengjr"},"content":"        Student batchmate \u003d new StudentBuilder(BOB).withMods(","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"carriezhengjr"},"content":"        model.addStudent(batchmate);","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(0).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(1).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(2).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"carriezhengjr"},"content":"            ModUnmarkCommand commandToExecute \u003d new ModUnmarkCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"carriezhengjr"},"content":"                    FXCollections.observableArrayList(MOD_NOT_FOUND_CS2105));","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"carriezhengjr"},"content":"            commandToExecute.execute(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"carriezhengjr"},"content":"            fail(); // Test should not reach this line.","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"carriezhengjr"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"carriezhengjr"},"content":"            assertEquals(ModUnmarkCommand.MESSAGE_INVALID_MOD, e.getMessage());","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when the student wants to unmark multiple mods containing","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"carriezhengjr"},"content":"     * 1 non-existing mod in the list of taken modules of a batchmate.","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_unmarkNonExistingMod2_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"carriezhengjr"},"content":"        Student batchmate \u003d new StudentBuilder(BOB).withMods(","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2100.getModName(),","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2103.getModName(),","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"carriezhengjr"},"content":"                        VALID_MOD_CS2101.getModName())","lastModifiedDate":"2022-10-17"},{"lineNumber":165,"author":{"gitId":"carriezhengjr"},"content":"                .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"carriezhengjr"},"content":"        model.addStudent(batchmate);","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(0).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(1).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"carriezhengjr"},"content":"        batchmate.getMods().get(2).markMod();","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"carriezhengjr"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"carriezhengjr"},"content":"            ModUnmarkCommand commandToExecute \u003d new ModUnmarkCommand(indexLastStudent,","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"carriezhengjr"},"content":"                    FXCollections.observableArrayList(VALID_MOD_CS2101, VALID_MOD_CS2103, MOD_NOT_FOUND_CS2105));","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"carriezhengjr"},"content":"            commandToExecute.execute(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"carriezhengjr"},"content":"            fail(); // Test should not reach this line.","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"carriezhengjr"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"carriezhengjr"},"content":"            assertEquals(ModUnmarkCommand.MESSAGE_INVALID_MOD, e.getMessage());","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":186,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of ModUnmarkCommand when index is out of range.","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"carriezhengjr"},"content":"     * @throws CommandException If an error which occurs during execution of ModUnmarkCommand.","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"carriezhengjr"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"carriezhengjr"},"content":"        Index indexOutOfBounds \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand invalidCommand \u003d new ModUnmarkCommand(indexOutOfBounds,","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"carriezhengjr"},"content":"                FXCollections.singletonObservableList(VALID_MOD_CS2100));","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"carriezhengjr"},"content":"        assertCommandFailure(invalidCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"sltsheryl":15,"carriezhengjr":183}},{"path":"src/test/java/seedu/masslinkers/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_ARGUMENTS;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.GITHUB_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INTEREST_DESC_AI;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INTEREST_DESC_SWE;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INVALID_GITHUB_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INVALID_INTEREST_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INVALID_MOD_DESC_CS2103;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.MOD_DESC_CS2100;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.MOD_DESC_CS2103;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_INTEREST_AI;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_INTEREST_SWE;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_MOD_CS2100;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_MOD_CS2103;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.AddCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).withInterests(VALID_INTEREST_AI).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + INTEREST_DESC_AI + MOD_DESC_CS2100,","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + INTEREST_DESC_AI + MOD_DESC_CS2100,","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + INTEREST_DESC_AI + MOD_DESC_CS2100,","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + INTEREST_DESC_AI + MOD_DESC_CS2100,","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple telegram - last telegram accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_AMY","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + INTEREST_DESC_AI + MOD_DESC_CS2100,","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple interests - all accepted","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Student expectedStudentMultipleInterests \u003d new StudentBuilder(BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .withInterests(VALID_INTEREST_AI, VALID_INTEREST_SWE)","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                + GITHUB_DESC_BOB + INTEREST_DESC_SWE + INTEREST_DESC_AI + MOD_DESC_CS2100,","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new AddCommand(expectedStudentMultipleInterests));","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple mods - all accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Student expectedStudentMultipleMods \u003d new StudentBuilder(BOB).withMods(VALID_MOD_CS2100, VALID_MOD_CS2103)","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                        + GITHUB_DESC_BOB + INTEREST_DESC_SWE + INTEREST_DESC_AI","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                        + MOD_DESC_CS2100 + MOD_DESC_CS2103,","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                new AddCommand(expectedStudentMultipleMods));","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MISSING_ARGUMENTS, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-11-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                        + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB,","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_ARGUMENTS, VALID_NAME_BOB));","lastModifiedDate":"2022-11-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // missing telegram prefix","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                        + VALID_TELEGRAM_BOB + GITHUB_DESC_BOB,","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                        + VALID_TELEGRAM_BOB + VALID_GITHUB_BOB,","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_ARGUMENTS, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2022-11-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                        + VALID_TELEGRAM_BOB + VALID_GITHUB_BOB));","lastModifiedDate":"2022-11-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                + GITHUB_DESC_BOB + INTEREST_DESC_SWE + INTEREST_DESC_AI, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + GITHUB_DESC_BOB + INTEREST_DESC_SWE + INTEREST_DESC_AI, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                + GITHUB_DESC_BOB + INTEREST_DESC_SWE + INTEREST_DESC_AI, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid interest","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + GITHUB_DESC_BOB + INVALID_INTEREST_DESC + VALID_INTEREST_AI, Interest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid gitHub","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + INVALID_GITHUB_DESC + INTEREST_DESC_SWE + VALID_INTEREST_AI, GitHub.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // invalid telegram","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_TELEGRAM_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + GITHUB_DESC_BOB + INTEREST_DESC_SWE + VALID_INTEREST_AI, Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid mod","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + GITHUB_DESC_BOB + INTEREST_DESC_SWE + VALID_INTEREST_AI","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                + INVALID_MOD_DESC_CS2103, Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                        + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + INTEREST_DESC_AI,","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB + INTEREST_DESC_SWE + INTEREST_DESC_AI,","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_ARGUMENTS, PREAMBLE_NON_EMPTY));","lastModifiedDate":"2022-11-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"sltsheryl":41,"jonasgwt":2,"chm252":4,"carriezhengjr":1,"-":116}},{"path":"src/test/java/seedu/masslinkers/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /i interest with leading and trailing spaces \";","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"sltsheryl":1,"-":150}},{"path":"src/test/java/seedu/masslinkers/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.Command;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"sltsheryl":3,"-":37}},{"path":"src/test/java/seedu/masslinkers/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-11-03"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"sltsheryl":5,"jonasgwt":1,"-":27}},{"path":"src/test/java/seedu/masslinkers/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_ARGUMENTS;","lastModifiedDate":"2022-11-03"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-11-03"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_UNEXPECTED_PREFIX;","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INTEREST_DESC_AI;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INTEREST_DESC_SWE;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INVALID_INTEREST_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_INTEREST_AI;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_INTEREST_SWE;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.EditCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"//@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"//@@author sltsheryl","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"ElijahS67"},"content":"//@@author ElijahS67","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"//@@author chm252","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"    private static final String INTEREST_EMPTY \u003d \" \" + PREFIX_INTEREST;","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"    private static final String MOD_EMPTY \u003d \" \" + PREFIX_MOD;","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"            String.format(MESSAGE_MISSING_ARGUMENTS, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, String.format(MESSAGE_INVALID_ARGUMENTS,","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"                VALID_NAME_AMY.split(\"\\\\s+\")[0]));","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"chm252"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_MISSING_ARGUMENTS, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"chm252"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"chm252"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"chm252"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"chm252"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1 some random string\", String.format(MESSAGE_INVALID_ARGUMENTS,","lastModifiedDate":"2022-11-03"},{"lineNumber":87,"author":{"gitId":"chm252"},"content":"                \"some\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":89,"author":{"gitId":"chm252"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1 o/ string\", String.format(MESSAGE_UNEXPECTED_PREFIX, \"o/\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"chm252"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_DESC, Telegram.MESSAGE_CONSTRAINTS); //invalid address","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1\" + INVALID_INTEREST_DESC, Interest.MESSAGE_CONSTRAINTS); //invalid interest","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"chm252"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"chm252"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"chm252"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"chm252"},"content":"        // while parsing {@code PREFIX_INTEREST} alone will reset the interests of the {@code Student} being edited,","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"chm252"},"content":"        // parsing it together with a valid interest results in error","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1\" + INTEREST_DESC_AI + INTEREST_DESC_SWE + INTEREST_EMPTY,","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"chm252"},"content":"                Interest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1\" + INTEREST_DESC_AI + INTEREST_EMPTY + INTEREST_DESC_SWE,","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"chm252"},"content":"                Interest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1\" + INTEREST_EMPTY + INTEREST_DESC_AI + INTEREST_DESC_SWE,","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"chm252"},"content":"                Interest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"chm252"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_TELEGRAM_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"chm252"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"chm252"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"chm252"},"content":"        Index targetIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"chm252"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INTEREST_DESC_SWE","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"chm252"},"content":"                + EMAIL_DESC_AMY + TELEGRAM_DESC_AMY + NAME_DESC_AMY + INTEREST_DESC_AI;","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"chm252"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"chm252"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"chm252"},"content":"                .withInterests(VALID_INTEREST_SWE, VALID_INTEREST_AI).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"chm252"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"chm252"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"chm252"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"chm252"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"chm252"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"chm252"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"chm252"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"chm252"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":150,"author":{"gitId":"chm252"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"chm252"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"chm252"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"chm252"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"chm252"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"chm252"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"chm252"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"chm252"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"chm252"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"chm252"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"chm252"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"chm252"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"chm252"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"chm252"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"chm252"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":171,"author":{"gitId":"chm252"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"chm252"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":174,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"chm252"},"content":"        // interests","lastModifiedDate":"2022-10-18"},{"lineNumber":176,"author":{"gitId":"chm252"},"content":"        userInput \u003d targetIndex.getOneBased() + INTEREST_DESC_AI;","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"chm252"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withInterests(VALID_INTEREST_AI).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"chm252"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":180,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"chm252"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":184,"author":{"gitId":"chm252"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"chm252"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + TELEGRAM_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-09"},{"lineNumber":186,"author":{"gitId":"chm252"},"content":"                + INTEREST_DESC_AI + PHONE_DESC_AMY + TELEGRAM_DESC_AMY + EMAIL_DESC_AMY + INTEREST_DESC_AI","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"chm252"},"content":"                + PHONE_DESC_BOB + TELEGRAM_DESC_BOB + EMAIL_DESC_BOB + INTEREST_DESC_SWE;","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"chm252"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"chm252"},"content":"                .withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"chm252"},"content":"                .withInterests(VALID_INTEREST_AI, VALID_INTEREST_SWE)","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"chm252"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"chm252"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"chm252"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"chm252"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"chm252"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"chm252"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"chm252"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"chm252"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"chm252"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"chm252"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":209,"author":{"gitId":"chm252"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"chm252"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":211,"author":{"gitId":"chm252"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":212,"author":{"gitId":"chm252"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":214,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"chm252"},"content":"    public void parse_resetInterests_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":218,"author":{"gitId":"chm252"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"chm252"},"content":"        String userInput \u003d targetIndex.getOneBased() + INTEREST_EMPTY;","lastModifiedDate":"2022-10-15"},{"lineNumber":220,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"chm252"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withInterests().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"chm252"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":225,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"chm252"},"content":"    public void parse_resetMods_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":229,"author":{"gitId":"chm252"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":230,"author":{"gitId":"chm252"},"content":"        String userInput \u003d targetIndex.getOneBased() + MOD_EMPTY;","lastModifiedDate":"2022-10-12"},{"lineNumber":231,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"chm252"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withMods().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":233,"author":{"gitId":"chm252"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"chm252"},"content":"                String.format(MESSAGE_MISSING_ARGUMENTS, EditCommand.MODS_PASSED_TO_EDIT));","lastModifiedDate":"2022-11-02"},{"lineNumber":237,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"chm252"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"ElijahS67":1,"sltsheryl":37,"jonasgwt":5,"chm252":190,"-":5}},{"path":"src/test/java/seedu/masslinkers/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.FindCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.DetailsContainKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"//@@author chm252","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"chm252"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"chm252"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"                String.format(MESSAGE_MISSING_ARGUMENTS, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"                new FindCommand(new DetailsContainKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"sltsheryl":4,"jonasgwt":1,"chm252":24,"carriezhengjr":1,"-":6}},{"path":"src/test/java/seedu/masslinkers/logic/parser/MassLinkersParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_MOD_CS2100;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.AddCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.EditCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.FindCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ListCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModAddCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.DetailsContainKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class MassLinkersParserTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final MassLinkersParser parser \u003d new MassLinkersParser();","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + StudentUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_STUDENT, descriptor), command);","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new DetailsContainKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_mod() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                ModCommand.COMMAND_WORD + \" \" + ModAddCommand.COMMAND_WORD","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                        + \" \" + INDEX_FIRST_STUDENT.getOneBased() + \" \" + VALID_MOD_CS2100) instanceof ModAddCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // TODO: Update to include other mod commands","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"sltsheryl":22,"chm252":1,"carriezhengjr":1,"-":89}},{"path":"src/test/java/seedu/masslinkers/logic/parser/ModCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INCOMPLETE_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-29"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModAddCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModDeleteCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModFindCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModMarkCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.ModUnmarkCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.ModContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.ModTakenContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.ModTakingContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"public class ModCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_MOD_COMMAND \u003d \"bad\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_MOD_STRING \u003d \"#CS2103T\";","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_MOD_STRING_CS2103T \u003d \"CS2103T\";","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_MOD_STRING_CS2101 \u003d \"CS2101\";","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_MOD_STRING_CS2100 \u003d \"CS2100\";","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"    private static final String WHITESPACE \u003d \" \";","lastModifiedDate":"2022-10-29"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"    private final ModCommandParser parser \u003d new ModCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"    //@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of mod commands when there is an empty command input by user.","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"    public void parse_emptyArg_throwParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INCOMPLETE_COMMAND_FORMAT,","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"                ModCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of mod commands when there is an unknown command input by user.","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"    public void parse_unknownCommand_throwParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"                INVALID_MOD_COMMAND + WHITESPACE + INDEX_FIRST_STUDENT.getOneBased() + WHITESPACE","lastModifiedDate":"2022-10-29"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"                        + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-29"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"                ModCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"    //// ------------------------------------ MOD ADD COMMAND -----------------------------------------------////","lastModifiedDate":"2022-10-29"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of mod add when index is absent.","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"    public void parse_noIndex_throwParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser, ModAddCommand.COMMAND_WORD + WHITESPACE + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-29"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"                ModCommand.MESSAGE_INDEX_EMPTY);","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of mod add when mod is absent.","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"    public void parse_noMods_throwParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser, ModAddCommand.COMMAND_WORD + WHITESPACE + INDEX_FIRST_STUDENT.getOneBased(),","lastModifiedDate":"2022-10-29"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"                ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of mod add when mod is invalid.","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"    public void parse_invalidMod_throwParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"                ModAddCommand.COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"                        + WHITESPACE + INDEX_FIRST_STUDENT.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"                        + WHITESPACE + INVALID_MOD_STRING,","lastModifiedDate":"2022-10-29"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"                Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of mod add when index is invalid.","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"    public void parse_invalidIndex_throwParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"        assertParseFailure(parser, ModAddCommand.COMMAND_WORD + \" -1 \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"                MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-03"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of adding 1 mod.","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"jonasgwt"},"content":"    public void parse_oneMod_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"        String userInput \u003d ModAddCommand.COMMAND_WORD + WHITESPACE + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2103T;","lastModifiedDate":"2022-10-29"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":109,"author":{"gitId":"jonasgwt"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.singletonObservableList(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-29"},{"lineNumber":110,"author":{"gitId":"jonasgwt"},"content":"        ModAddCommand expectedCommand \u003d new ModAddCommand(targetIndex, mods);","lastModifiedDate":"2022-10-29"},{"lineNumber":111,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":112,"author":{"gitId":"jonasgwt"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-29"},{"lineNumber":113,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":114,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":115,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":116,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of adding 1 mod with additional whitespace.","lastModifiedDate":"2022-10-29"},{"lineNumber":117,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":118,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":119,"author":{"gitId":"jonasgwt"},"content":"    public void parse_oneModWithExtraWhitespace_success() {","lastModifiedDate":"2022-10-29"},{"lineNumber":120,"author":{"gitId":"jonasgwt"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-29"},{"lineNumber":121,"author":{"gitId":"jonasgwt"},"content":"        String userInput \u003d ModAddCommand.COMMAND_WORD + WHITESPACE + WHITESPACE + WHITESPACE","lastModifiedDate":"2022-10-29"},{"lineNumber":122,"author":{"gitId":"jonasgwt"},"content":"                + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":123,"author":{"gitId":"jonasgwt"},"content":"                + WHITESPACE + WHITESPACE + WHITESPACE","lastModifiedDate":"2022-10-29"},{"lineNumber":124,"author":{"gitId":"jonasgwt"},"content":"                + VALID_MOD_STRING_CS2103T;","lastModifiedDate":"2022-10-29"},{"lineNumber":125,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"jonasgwt"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.singletonObservableList(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"jonasgwt"},"content":"        ModAddCommand expectedCommand \u003d new ModAddCommand(targetIndex, mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"jonasgwt"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of adding multiple mods.","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"jonasgwt"},"content":"    public void parse_manyMods_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"jonasgwt"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"jonasgwt"},"content":"        String userInput \u003d ModAddCommand.COMMAND_WORD + WHITESPACE + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":139,"author":{"gitId":"jonasgwt"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2103T","lastModifiedDate":"2022-10-29"},{"lineNumber":140,"author":{"gitId":"jonasgwt"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2101","lastModifiedDate":"2022-10-29"},{"lineNumber":141,"author":{"gitId":"jonasgwt"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-29"},{"lineNumber":142,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":143,"author":{"gitId":"jonasgwt"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-29"},{"lineNumber":144,"author":{"gitId":"jonasgwt"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2100));","lastModifiedDate":"2022-10-29"},{"lineNumber":145,"author":{"gitId":"jonasgwt"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-29"},{"lineNumber":146,"author":{"gitId":"jonasgwt"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2101));","lastModifiedDate":"2022-10-29"},{"lineNumber":147,"author":{"gitId":"jonasgwt"},"content":"        ModAddCommand expectedCommand \u003d new ModAddCommand(targetIndex, mods);","lastModifiedDate":"2022-10-29"},{"lineNumber":148,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":149,"author":{"gitId":"jonasgwt"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-29"},{"lineNumber":150,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":151,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":152,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":153,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of adding multiple mods with additional whitespace","lastModifiedDate":"2022-10-29"},{"lineNumber":154,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":155,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":156,"author":{"gitId":"jonasgwt"},"content":"    public void parse_manyModsWithExtraWhitespace_success() {","lastModifiedDate":"2022-10-29"},{"lineNumber":157,"author":{"gitId":"jonasgwt"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-29"},{"lineNumber":158,"author":{"gitId":"jonasgwt"},"content":"        String userInput \u003d ModAddCommand.COMMAND_WORD + WHITESPACE + WHITESPACE","lastModifiedDate":"2022-10-29"},{"lineNumber":159,"author":{"gitId":"jonasgwt"},"content":"                + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":160,"author":{"gitId":"jonasgwt"},"content":"                + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2103T","lastModifiedDate":"2022-10-29"},{"lineNumber":161,"author":{"gitId":"jonasgwt"},"content":"                + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2101","lastModifiedDate":"2022-10-29"},{"lineNumber":162,"author":{"gitId":"jonasgwt"},"content":"                + WHITESPACE + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-29"},{"lineNumber":163,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"jonasgwt"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"jonasgwt"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2100));","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"jonasgwt"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"jonasgwt"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2101));","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"jonasgwt"},"content":"        ModAddCommand expectedCommand \u003d new ModAddCommand(targetIndex, mods);","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"jonasgwt"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":174,"author":{"gitId":"jonasgwt"},"content":"    //// ------------------------------------ MOD DELETE COMMAND -----------------------------------------------////","lastModifiedDate":"2022-10-29"},{"lineNumber":175,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":176,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":177,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod delete when index is absent.","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":181,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_noIndexModDelete_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":182,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModDeleteCommand.COMMAND_WORD + WHITESPACE + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-29"},{"lineNumber":183,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_INDEX_EMPTY);","lastModifiedDate":"2022-11-05"},{"lineNumber":184,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":185,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":186,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":187,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":188,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod delete when mod is absent.","lastModifiedDate":"2022-10-15"},{"lineNumber":189,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":190,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":191,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_noModsModDelete_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":192,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModDeleteCommand.COMMAND_WORD + WHITESPACE + INDEX_FIRST_STUDENT.getOneBased(),","lastModifiedDate":"2022-10-29"},{"lineNumber":193,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-11-05"},{"lineNumber":194,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":195,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":196,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":197,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":198,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod delete when mod is invalid.","lastModifiedDate":"2022-10-15"},{"lineNumber":199,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":200,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":201,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_invalidModModDelete_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":202,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-15"},{"lineNumber":203,"author":{"gitId":"carriezhengjr"},"content":"                ModDeleteCommand.COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"carriezhengjr"},"content":"                        + WHITESPACE + INDEX_FIRST_STUDENT.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":205,"author":{"gitId":"carriezhengjr"},"content":"                        + WHITESPACE + INVALID_MOD_STRING,","lastModifiedDate":"2022-10-29"},{"lineNumber":206,"author":{"gitId":"carriezhengjr"},"content":"                Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-05"},{"lineNumber":207,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":208,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":209,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":210,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":211,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod delete when index is invalid.","lastModifiedDate":"2022-10-15"},{"lineNumber":212,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":213,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":214,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_invalidIndexModDelete_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":215,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModDeleteCommand.COMMAND_WORD + \" -1 \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-15"},{"lineNumber":216,"author":{"gitId":"carriezhengjr"},"content":"                MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":217,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":218,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":219,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":220,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":221,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of deleting 1 mod.","lastModifiedDate":"2022-10-15"},{"lineNumber":222,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":223,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":224,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_deleteOneMod_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":225,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModDeleteCommand.COMMAND_WORD + WHITESPACE + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":227,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2103T;","lastModifiedDate":"2022-10-29"},{"lineNumber":228,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":229,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.singletonObservableList(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-15"},{"lineNumber":230,"author":{"gitId":"carriezhengjr"},"content":"        ModDeleteCommand expectedCommand \u003d new ModDeleteCommand(targetIndex, mods);","lastModifiedDate":"2022-10-15"},{"lineNumber":231,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":232,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":233,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":234,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":235,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":236,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":237,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of deleting multiple mods.","lastModifiedDate":"2022-10-15"},{"lineNumber":238,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":239,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":240,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_deleteMultipleMods_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":241,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModDeleteCommand.COMMAND_WORD + WHITESPACE + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":243,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2103T","lastModifiedDate":"2022-10-29"},{"lineNumber":244,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2101","lastModifiedDate":"2022-10-29"},{"lineNumber":245,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-29"},{"lineNumber":246,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":247,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-29"},{"lineNumber":248,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2100));","lastModifiedDate":"2022-10-29"},{"lineNumber":249,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-29"},{"lineNumber":250,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2101));","lastModifiedDate":"2022-10-29"},{"lineNumber":251,"author":{"gitId":"carriezhengjr"},"content":"        ModDeleteCommand expectedCommand \u003d new ModDeleteCommand(targetIndex, mods);","lastModifiedDate":"2022-10-29"},{"lineNumber":252,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":253,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-29"},{"lineNumber":254,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":255,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":256,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":257,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of deleting multiple mods with additional whitespace.","lastModifiedDate":"2022-10-29"},{"lineNumber":258,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":259,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":260,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_deleteMultipleModsWithExtraWhitespace_success() {","lastModifiedDate":"2022-10-29"},{"lineNumber":261,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-29"},{"lineNumber":262,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModDeleteCommand.COMMAND_WORD + WHITESPACE + WHITESPACE","lastModifiedDate":"2022-10-29"},{"lineNumber":263,"author":{"gitId":"carriezhengjr"},"content":"                + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":264,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2103T","lastModifiedDate":"2022-10-29"},{"lineNumber":265,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2101","lastModifiedDate":"2022-10-29"},{"lineNumber":266,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-29"},{"lineNumber":267,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":268,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-15"},{"lineNumber":269,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":270,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-15"},{"lineNumber":271,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2101));","lastModifiedDate":"2022-10-15"},{"lineNumber":272,"author":{"gitId":"carriezhengjr"},"content":"        ModDeleteCommand expectedCommand \u003d new ModDeleteCommand(targetIndex, mods);","lastModifiedDate":"2022-10-15"},{"lineNumber":273,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":274,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":275,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":276,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":277,"author":{"gitId":"carriezhengjr"},"content":"    //// ------------------------------------ MOD FIND COMMAND -----------------------------------------------////","lastModifiedDate":"2022-10-29"},{"lineNumber":278,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":279,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":280,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod find when no module is entered.","lastModifiedDate":"2022-10-18"},{"lineNumber":281,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":282,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":283,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_findEmptyString_throwsParseException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":284,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModFindCommand.COMMAND_WORD + WHITESPACE, String.format(","lastModifiedDate":"2022-10-29"},{"lineNumber":285,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_MODS_EMPTY));","lastModifiedDate":"2022-10-18"},{"lineNumber":286,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":287,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":288,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":289,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod find taken when no module is entered.","lastModifiedDate":"2022-10-22"},{"lineNumber":290,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":291,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":292,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_findTakenEmptyString_throwsParseException() {","lastModifiedDate":"2022-10-22"},{"lineNumber":293,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModFindCommand.COMMAND_WORD + WHITESPACE + ModFindCommand.COMMAND_WORD_TAKEN","lastModifiedDate":"2022-10-29"},{"lineNumber":294,"author":{"gitId":"carriezhengjr"},"content":"                + \"     \", String.format(ModCommand.MESSAGE_MODS_EMPTY));","lastModifiedDate":"2022-10-22"},{"lineNumber":295,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":296,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":297,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":298,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod find.","lastModifiedDate":"2022-10-22"},{"lineNumber":299,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":300,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":301,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_modFind_success() {","lastModifiedDate":"2022-10-22"},{"lineNumber":302,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModFindCommand.COMMAND_WORD","lastModifiedDate":"2022-10-22"},{"lineNumber":303,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-29"},{"lineNumber":304,"author":{"gitId":"carriezhengjr"},"content":"        ModFindCommand expectedCommand \u003d new ModFindCommand(","lastModifiedDate":"2022-10-22"},{"lineNumber":305,"author":{"gitId":"carriezhengjr"},"content":"                new ModContainsKeywordsPredicate(Arrays.asList(VALID_MOD_STRING_CS2100)));","lastModifiedDate":"2022-10-22"},{"lineNumber":306,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2022-10-22"},{"lineNumber":307,"author":{"gitId":"carriezhengjr"},"content":"                expectedCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":308,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":309,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":310,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":311,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod find taken.","lastModifiedDate":"2022-10-22"},{"lineNumber":312,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":313,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":314,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_modFindTaken_success() {","lastModifiedDate":"2022-10-22"},{"lineNumber":315,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModFindCommand.COMMAND_WORD","lastModifiedDate":"2022-10-22"},{"lineNumber":316,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + ModFindCommand.COMMAND_WORD_TAKEN","lastModifiedDate":"2022-10-29"},{"lineNumber":317,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-29"},{"lineNumber":318,"author":{"gitId":"carriezhengjr"},"content":"        ModFindCommand expectedCommand \u003d new ModFindCommand(","lastModifiedDate":"2022-10-29"},{"lineNumber":319,"author":{"gitId":"carriezhengjr"},"content":"                new ModTakenContainsKeywordsPredicate(Arrays.asList(VALID_MOD_STRING_CS2100)));","lastModifiedDate":"2022-10-29"},{"lineNumber":320,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2022-10-29"},{"lineNumber":321,"author":{"gitId":"carriezhengjr"},"content":"                expectedCommand);","lastModifiedDate":"2022-10-29"},{"lineNumber":322,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":323,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":324,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":325,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod find taken with whitespace.","lastModifiedDate":"2022-10-29"},{"lineNumber":326,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":327,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":328,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_modFindTakenWithWhitespace_success() {","lastModifiedDate":"2022-10-29"},{"lineNumber":329,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModFindCommand.COMMAND_WORD","lastModifiedDate":"2022-10-29"},{"lineNumber":330,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + ModFindCommand.COMMAND_WORD_TAKEN","lastModifiedDate":"2022-10-29"},{"lineNumber":331,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2100 + WHITESPACE;","lastModifiedDate":"2022-10-29"},{"lineNumber":332,"author":{"gitId":"carriezhengjr"},"content":"        ModFindCommand expectedCommand \u003d new ModFindCommand(","lastModifiedDate":"2022-10-22"},{"lineNumber":333,"author":{"gitId":"carriezhengjr"},"content":"                new ModTakenContainsKeywordsPredicate(Arrays.asList(VALID_MOD_STRING_CS2100)));","lastModifiedDate":"2022-10-22"},{"lineNumber":334,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2022-10-22"},{"lineNumber":335,"author":{"gitId":"carriezhengjr"},"content":"                expectedCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":336,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":337,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":338,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":339,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod find taking.","lastModifiedDate":"2022-10-22"},{"lineNumber":340,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":341,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":342,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_modFindTaking_success() {","lastModifiedDate":"2022-10-22"},{"lineNumber":343,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModFindCommand.COMMAND_WORD","lastModifiedDate":"2022-10-22"},{"lineNumber":344,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + ModFindCommand.COMMAND_WORD_TAKING","lastModifiedDate":"2022-10-29"},{"lineNumber":345,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-29"},{"lineNumber":346,"author":{"gitId":"carriezhengjr"},"content":"        ModFindCommand expectedCommand \u003d new ModFindCommand(","lastModifiedDate":"2022-10-22"},{"lineNumber":347,"author":{"gitId":"carriezhengjr"},"content":"                new ModTakingContainsKeywordsPredicate(Arrays.asList(VALID_MOD_STRING_CS2100)));","lastModifiedDate":"2022-10-22"},{"lineNumber":348,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2022-10-22"},{"lineNumber":349,"author":{"gitId":"carriezhengjr"},"content":"                expectedCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":350,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":351,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":352,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":353,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod find taking with whitespace.","lastModifiedDate":"2022-10-29"},{"lineNumber":354,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":355,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":356,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_modFindTakingWithWhitespace_success() {","lastModifiedDate":"2022-10-29"},{"lineNumber":357,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModFindCommand.COMMAND_WORD","lastModifiedDate":"2022-10-29"},{"lineNumber":358,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + ModFindCommand.COMMAND_WORD_TAKING","lastModifiedDate":"2022-10-29"},{"lineNumber":359,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2100 + WHITESPACE;","lastModifiedDate":"2022-10-29"},{"lineNumber":360,"author":{"gitId":"carriezhengjr"},"content":"        ModFindCommand expectedCommand \u003d new ModFindCommand(","lastModifiedDate":"2022-10-29"},{"lineNumber":361,"author":{"gitId":"carriezhengjr"},"content":"                new ModTakingContainsKeywordsPredicate(Arrays.asList(VALID_MOD_STRING_CS2100)));","lastModifiedDate":"2022-10-29"},{"lineNumber":362,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2022-10-29"},{"lineNumber":363,"author":{"gitId":"carriezhengjr"},"content":"                expectedCommand);","lastModifiedDate":"2022-10-29"},{"lineNumber":364,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":365,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":366,"author":{"gitId":"carriezhengjr"},"content":"    //// ------------------------------------ MOD MARK COMMAND -----------------------------------------------////","lastModifiedDate":"2022-10-29"},{"lineNumber":367,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":368,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":369,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":370,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod mark when index is absent.","lastModifiedDate":"2022-10-15"},{"lineNumber":371,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":372,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":373,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_noIndexModMark_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":374,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModMarkCommand.COMMAND_WORD + WHITESPACE + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-29"},{"lineNumber":375,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_INDEX_EMPTY);","lastModifiedDate":"2022-11-05"},{"lineNumber":376,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":377,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":378,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":379,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":380,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod mark when mod is absent.","lastModifiedDate":"2022-10-15"},{"lineNumber":381,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":382,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":383,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_noModsModMark_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":384,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModMarkCommand.COMMAND_WORD + WHITESPACE + INDEX_FIRST_STUDENT.getOneBased(),","lastModifiedDate":"2022-10-29"},{"lineNumber":385,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-11-05"},{"lineNumber":386,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":387,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":388,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":389,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":390,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod mark when mod is invalid.","lastModifiedDate":"2022-10-15"},{"lineNumber":391,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":392,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":393,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_invalidModModMark_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":394,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-15"},{"lineNumber":395,"author":{"gitId":"carriezhengjr"},"content":"                ModMarkCommand.COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":396,"author":{"gitId":"carriezhengjr"},"content":"                        + WHITESPACE + INDEX_FIRST_STUDENT.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":397,"author":{"gitId":"carriezhengjr"},"content":"                        + WHITESPACE + INVALID_MOD_STRING,","lastModifiedDate":"2022-10-29"},{"lineNumber":398,"author":{"gitId":"carriezhengjr"},"content":"                Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-05"},{"lineNumber":399,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":400,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":401,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":402,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":403,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod mark when index is invalid.","lastModifiedDate":"2022-10-15"},{"lineNumber":404,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":405,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":406,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_invalidIndexModMark_throwParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":407,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModMarkCommand.COMMAND_WORD + \" -1 \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-15"},{"lineNumber":408,"author":{"gitId":"carriezhengjr"},"content":"                MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":409,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":410,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":411,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":412,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":413,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of marking 1 mod as taken.","lastModifiedDate":"2022-10-15"},{"lineNumber":414,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":415,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":416,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_markOneMod_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":417,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":418,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModMarkCommand.COMMAND_WORD + WHITESPACE + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":419,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2103T;","lastModifiedDate":"2022-10-29"},{"lineNumber":420,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":421,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.singletonObservableList(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-29"},{"lineNumber":422,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand expectedCommand \u003d new ModMarkCommand(targetIndex, mods);","lastModifiedDate":"2022-10-29"},{"lineNumber":423,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":424,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-29"},{"lineNumber":425,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":426,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":427,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":428,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of marking 1 mod as taken with whitespace.","lastModifiedDate":"2022-10-29"},{"lineNumber":429,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":430,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":431,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_markOneModWithWhitespace_success() {","lastModifiedDate":"2022-10-29"},{"lineNumber":432,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-29"},{"lineNumber":433,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModMarkCommand.COMMAND_WORD + WHITESPACE + WHITESPACE","lastModifiedDate":"2022-10-29"},{"lineNumber":434,"author":{"gitId":"carriezhengjr"},"content":"                + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":435,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2103T + WHITESPACE;","lastModifiedDate":"2022-10-29"},{"lineNumber":436,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":437,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.singletonObservableList(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-15"},{"lineNumber":438,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand expectedCommand \u003d new ModMarkCommand(targetIndex, mods);","lastModifiedDate":"2022-10-15"},{"lineNumber":439,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":440,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":441,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":442,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":443,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":444,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":445,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of marking multiple mods as taken.","lastModifiedDate":"2022-10-15"},{"lineNumber":446,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":447,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":448,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_markMultipleMods_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":449,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":450,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModMarkCommand.COMMAND_WORD + WHITESPACE + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":451,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2103T","lastModifiedDate":"2022-10-29"},{"lineNumber":452,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2101","lastModifiedDate":"2022-10-29"},{"lineNumber":453,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-29"},{"lineNumber":454,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":455,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-29"},{"lineNumber":456,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2100));","lastModifiedDate":"2022-10-29"},{"lineNumber":457,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-29"},{"lineNumber":458,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2101));","lastModifiedDate":"2022-10-29"},{"lineNumber":459,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand expectedCommand \u003d new ModMarkCommand(targetIndex, mods);","lastModifiedDate":"2022-10-29"},{"lineNumber":460,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":461,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-29"},{"lineNumber":462,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":463,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":464,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":465,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of marking multiple mods as taken with whitespace.","lastModifiedDate":"2022-10-29"},{"lineNumber":466,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":467,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":468,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_markMultipleModsWithWhitespace_success() {","lastModifiedDate":"2022-10-29"},{"lineNumber":469,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-29"},{"lineNumber":470,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModMarkCommand.COMMAND_WORD + WHITESPACE + WHITESPACE","lastModifiedDate":"2022-10-29"},{"lineNumber":471,"author":{"gitId":"carriezhengjr"},"content":"                + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":472,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2103T","lastModifiedDate":"2022-10-29"},{"lineNumber":473,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2101","lastModifiedDate":"2022-10-29"},{"lineNumber":474,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2100 + WHITESPACE;","lastModifiedDate":"2022-10-29"},{"lineNumber":475,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":476,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-15"},{"lineNumber":477,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2100));","lastModifiedDate":"2022-10-15"},{"lineNumber":478,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-15"},{"lineNumber":479,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2101));","lastModifiedDate":"2022-10-15"},{"lineNumber":480,"author":{"gitId":"carriezhengjr"},"content":"        ModMarkCommand expectedCommand \u003d new ModMarkCommand(targetIndex, mods);","lastModifiedDate":"2022-10-15"},{"lineNumber":481,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":482,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":483,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":484,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":485,"author":{"gitId":"carriezhengjr"},"content":"    //// ------------------------------------ MOD UNMARK COMMAND -----------------------------------------------////","lastModifiedDate":"2022-10-29"},{"lineNumber":486,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":487,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":488,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":489,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod unmark when index is absent.","lastModifiedDate":"2022-10-16"},{"lineNumber":490,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":491,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":492,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_noIndexModUnmark_throwParseException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":493,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModUnmarkCommand.COMMAND_WORD + WHITESPACE + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-29"},{"lineNumber":494,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_INDEX_EMPTY);","lastModifiedDate":"2022-11-05"},{"lineNumber":495,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":496,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":497,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":498,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":499,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod unmark when mod is absent.","lastModifiedDate":"2022-10-16"},{"lineNumber":500,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":501,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":502,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_noModsModUnmark_throwParseException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":503,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModUnmarkCommand.COMMAND_WORD + WHITESPACE + INDEX_FIRST_STUDENT.getOneBased(),","lastModifiedDate":"2022-10-29"},{"lineNumber":504,"author":{"gitId":"carriezhengjr"},"content":"                ModCommand.MESSAGE_MODS_EMPTY);","lastModifiedDate":"2022-11-05"},{"lineNumber":505,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":506,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":507,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":508,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":509,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod unmark when mod is invalid.","lastModifiedDate":"2022-10-16"},{"lineNumber":510,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":511,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":512,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_invalidModModUnmark_throwParseException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":513,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-16"},{"lineNumber":514,"author":{"gitId":"carriezhengjr"},"content":"                ModUnmarkCommand.COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":515,"author":{"gitId":"carriezhengjr"},"content":"                        + WHITESPACE + INDEX_FIRST_STUDENT.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":516,"author":{"gitId":"carriezhengjr"},"content":"                        + WHITESPACE + INVALID_MOD_STRING,","lastModifiedDate":"2022-10-29"},{"lineNumber":517,"author":{"gitId":"carriezhengjr"},"content":"                Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-05"},{"lineNumber":518,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":519,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":520,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":521,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":522,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of mod unmark when index is invalid.","lastModifiedDate":"2022-10-16"},{"lineNumber":523,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":524,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":525,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_invalidIndexModUnmark_throwParseException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":526,"author":{"gitId":"carriezhengjr"},"content":"        assertParseFailure(parser, ModUnmarkCommand.COMMAND_WORD + \" -1 \" + VALID_MOD_STRING_CS2103T,","lastModifiedDate":"2022-10-16"},{"lineNumber":527,"author":{"gitId":"carriezhengjr"},"content":"                MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":528,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":529,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":530,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":531,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":532,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of unmarking 1 mod as not taken.","lastModifiedDate":"2022-10-16"},{"lineNumber":533,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":534,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":535,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_unmarkOneMod_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":536,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":537,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModUnmarkCommand.COMMAND_WORD + WHITESPACE + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":538,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2103T;","lastModifiedDate":"2022-10-29"},{"lineNumber":539,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":540,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.singletonObservableList(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-16"},{"lineNumber":541,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand expectedCommand \u003d new ModUnmarkCommand(targetIndex, mods);","lastModifiedDate":"2022-10-16"},{"lineNumber":542,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":543,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":544,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":545,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":546,"author":{"gitId":"carriezhengjr"},"content":"    //@@author carriezhengjr","lastModifiedDate":"2022-11-02"},{"lineNumber":547,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":548,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of unmarking multiple mods as not taken.","lastModifiedDate":"2022-10-16"},{"lineNumber":549,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":550,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":551,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_unmarkMultipleMods_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":552,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":553,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModUnmarkCommand.COMMAND_WORD + WHITESPACE + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":554,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2103T","lastModifiedDate":"2022-10-29"},{"lineNumber":555,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2101","lastModifiedDate":"2022-10-29"},{"lineNumber":556,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + VALID_MOD_STRING_CS2100;","lastModifiedDate":"2022-10-29"},{"lineNumber":557,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":558,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-29"},{"lineNumber":559,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2100));","lastModifiedDate":"2022-10-29"},{"lineNumber":560,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-29"},{"lineNumber":561,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2101));","lastModifiedDate":"2022-10-29"},{"lineNumber":562,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand expectedCommand \u003d new ModUnmarkCommand(targetIndex, mods);","lastModifiedDate":"2022-10-29"},{"lineNumber":563,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":564,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-29"},{"lineNumber":565,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":566,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":567,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":568,"author":{"gitId":"carriezhengjr"},"content":"     * Tests the behaviour of unmarking multiple mods as not taken with whitespace.","lastModifiedDate":"2022-10-29"},{"lineNumber":569,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":570,"author":{"gitId":"carriezhengjr"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":571,"author":{"gitId":"carriezhengjr"},"content":"    public void parse_unmarkMultipleModsWithWhitespace_success() {","lastModifiedDate":"2022-10-29"},{"lineNumber":572,"author":{"gitId":"carriezhengjr"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-29"},{"lineNumber":573,"author":{"gitId":"carriezhengjr"},"content":"        String userInput \u003d ModUnmarkCommand.COMMAND_WORD + WHITESPACE + WHITESPACE","lastModifiedDate":"2022-10-29"},{"lineNumber":574,"author":{"gitId":"carriezhengjr"},"content":"                + targetIndex.getOneBased()","lastModifiedDate":"2022-10-29"},{"lineNumber":575,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2103T","lastModifiedDate":"2022-10-29"},{"lineNumber":576,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2101","lastModifiedDate":"2022-10-29"},{"lineNumber":577,"author":{"gitId":"carriezhengjr"},"content":"                + WHITESPACE + WHITESPACE + WHITESPACE + VALID_MOD_STRING_CS2100 + WHITESPACE;","lastModifiedDate":"2022-10-29"},{"lineNumber":578,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":579,"author":{"gitId":"carriezhengjr"},"content":"        ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-16"},{"lineNumber":580,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2100));","lastModifiedDate":"2022-10-16"},{"lineNumber":581,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2103T));","lastModifiedDate":"2022-10-16"},{"lineNumber":582,"author":{"gitId":"carriezhengjr"},"content":"        mods.add(new Mod(VALID_MOD_STRING_CS2101));","lastModifiedDate":"2022-10-16"},{"lineNumber":583,"author":{"gitId":"carriezhengjr"},"content":"        ModUnmarkCommand expectedCommand \u003d new ModUnmarkCommand(targetIndex, mods);","lastModifiedDate":"2022-10-16"},{"lineNumber":584,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":585,"author":{"gitId":"carriezhengjr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":586,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":587,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":588,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":20,"jonasgwt":152,"chm252":2,"carriezhengjr":414}},{"path":"src/test/java/seedu/masslinkers/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.commons.core.Messages.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-11-03"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"   \";","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_GITHUB \u003d \"-invalid-\";","lastModifiedDate":"2022-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TELEGRAM \u003d \"s\";","lastModifiedDate":"2022-10-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_INTEREST \u003d \"#tennis\";","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_MOD \u003d \"#CS2103\";","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_GITHUB \u003d \"racheltan\";","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TELEGRAM \u003d \"racheltan\";","lastModifiedDate":"2022-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE_1 \u003d \"12345678\";","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE_2 \u003d \"+14782342\";","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE_3 \u003d \"this is a valid phone\";","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_INTEREST_1 \u003d \"tennis\";","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_INTEREST_2 \u003d \"baking\";","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_MOD_1 \u003d \"CS2103\";","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String VALID_MOD_2 \u003d \"CS2101\";","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //the only time an exception is thrown is when phone is either null or blank after trimming","lastModifiedDate":"2022-10-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    //otherwise all other inputs are considered valid, but a warning will be given if they fail the regex check","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseGitHub_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGitHub(INVALID_GITHUB));","lastModifiedDate":"2022-10-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parsePhone_validSingapore_returnsPhone() throws Exception {","lastModifiedDate":"2022-10-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE_1);","lastModifiedDate":"2022-10-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE_1));","lastModifiedDate":"2022-10-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parsePhone_validInternational_returnsPhone() throws Exception {","lastModifiedDate":"2022-10-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE_2);","lastModifiedDate":"2022-10-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE_2));","lastModifiedDate":"2022-10-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    //An \"incorrect\" number that is still considered a valid input (warning to user issued)","lastModifiedDate":"2022-10-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parsePhone_validButWithWarning_returnsPhone() throws Exception {","lastModifiedDate":"2022-10-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE_3);","lastModifiedDate":"2022-10-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE_3));","lastModifiedDate":"2022-10-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE_1 + WHITESPACE;","lastModifiedDate":"2022-10-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE_1);","lastModifiedDate":"2022-10-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseGitHub_valid_returnsGitHub() throws Exception {","lastModifiedDate":"2022-10-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        GitHub expectedGitHub \u003d new GitHub(VALID_GITHUB);","lastModifiedDate":"2022-10-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedGitHub, ParserUtil.parseGitHub(VALID_GITHUB));","lastModifiedDate":"2022-10-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseTelegram_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTelegram((String) null));","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(INVALID_ADDRESS));","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTelegram_validValueWithoutWhitespace_returnsTelegram() throws Exception {","lastModifiedDate":"2022-10-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Telegram expectedTelegram \u003d new Telegram(VALID_TELEGRAM);","lastModifiedDate":"2022-10-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedTelegram, ParserUtil.parseTelegram(VALID_TELEGRAM));","lastModifiedDate":"2022-10-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTelegram_validValueWithWhitespace_returnsTelegram() throws Exception {","lastModifiedDate":"2022-10-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String telegramWithWhitespace \u003d WHITESPACE + VALID_TELEGRAM + WHITESPACE;","lastModifiedDate":"2022-10-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Telegram expectedTelegram \u003d new Telegram(VALID_TELEGRAM);","lastModifiedDate":"2022-10-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTelegram, ParserUtil.parseTelegram(telegramWithWhitespace));","lastModifiedDate":"2022-10-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTelegram_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_TELEGRAM));","lastModifiedDate":"2022-10-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseInterest_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseInterest(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseInterest_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInterest(INVALID_INTEREST));","lastModifiedDate":"2022-10-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parseInterest_validValueWithoutWhitespace_returnsInterest() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Interest expectedInterest \u003d new Interest(VALID_INTEREST_1);","lastModifiedDate":"2022-10-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertEquals(expectedInterest, ParserUtil.parseInterest(VALID_INTEREST_1));","lastModifiedDate":"2022-10-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parseInterest_validValueWithWhitespace_returnsTrimmedInterest() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        String interestWithWhitespace \u003d WHITESPACE + VALID_INTEREST_1 + WHITESPACE;","lastModifiedDate":"2022-10-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Interest expectedInterest \u003d new Interest(VALID_INTEREST_1);","lastModifiedDate":"2022-10-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertEquals(expectedInterest, ParserUtil.parseInterest(interestWithWhitespace));","lastModifiedDate":"2022-10-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void parseInterests_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseInterests(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void parseInterests_collectionWithInvalidInterests_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInterests(","lastModifiedDate":"2022-10-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                Arrays.asList(VALID_INTEREST_1, INVALID_INTEREST)));","lastModifiedDate":"2022-10-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void parseInterests_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseInterests(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-10-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void parseInterests_collectionWithValidInterests_returnsInterestSet() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        Set\u003cInterest\u003e actualInterestSet \u003d ParserUtil.parseInterests(Arrays.asList(VALID_INTEREST_1, VALID_INTEREST_2));","lastModifiedDate":"2022-10-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Set\u003cInterest\u003e expectedInterestSet \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2022-10-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                Arrays.asList(new Interest(VALID_INTEREST_1), new Interest(VALID_INTEREST_2)));","lastModifiedDate":"2022-10-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertEquals(expectedInterestSet, actualInterestSet);","lastModifiedDate":"2022-10-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public void parseMod_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMod(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public void parseMod_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMod(INVALID_MOD));","lastModifiedDate":"2022-10-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public void parseMod_validValueWithoutWhitespace_returnsInterest() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Mod expectedMod \u003d new Mod(VALID_MOD_1);","lastModifiedDate":"2022-10-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertEquals(expectedMod, ParserUtil.parseMod(VALID_MOD_1));","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void parseMod_validValueWithWhitespace_returnsTrimmedInterest() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        String modWithWhitespace \u003d WHITESPACE + VALID_MOD_1 + WHITESPACE;","lastModifiedDate":"2022-10-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        Mod expectedMod \u003d new Mod(VALID_MOD_1);","lastModifiedDate":"2022-10-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertEquals(expectedMod, ParserUtil.parseMod(modWithWhitespace));","lastModifiedDate":"2022-10-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void parseMods_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMods(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public void parseMods_collectionWithInvalidMods_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMods(Arrays.asList(VALID_MOD_1, INVALID_MOD)));","lastModifiedDate":"2022-10-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public void parseMods_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseMods(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-10-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    @SuppressWarnings(\"checkstyle:SingleSpaceSeparator\")","lastModifiedDate":"2022-10-13"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public void parseMods_collectionWithValidMods_returnsModSet() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        ObservableList\u003cMod\u003e actualModSet \u003d ParserUtil.parseMods(Arrays.asList(VALID_MOD_1, VALID_MOD_2));","lastModifiedDate":"2022-10-13"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        ObservableList\u003cMod\u003e expectedModSet \u003d FXCollections.observableArrayList(Arrays.asList(","lastModifiedDate":"2022-10-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                new Mod(VALID_MOD_2), new Mod(VALID_MOD_1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        assertEquals(expectedModSet, actualModSet);","lastModifiedDate":"2022-10-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    public void parseMods_collectionWithValidDuplicateMods_returnsModSet() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        ObservableList\u003cMod\u003e actualModSet \u003d ParserUtil.parseMods(Arrays.asList(VALID_MOD_1, VALID_MOD_1));","lastModifiedDate":"2022-10-13"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        ObservableList\u003cMod\u003e expectedModSet \u003d FXCollections.observableArrayList(Arrays.asList(new Mod(VALID_MOD_1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        assertEquals(expectedModSet, actualModSet);","lastModifiedDate":"2022-10-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":"     * Tests the behaviour of the {@code parseModsToCategory} method.","lastModifiedDate":"2022-11-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    public void parseMods_correctAssigmentOfCategory() {","lastModifiedDate":"2022-10-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        // CS Mods","lastModifiedDate":"2022-10-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.COMP, ParserUtil.parseModsToCategory(\"CS2100\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.COMP, ParserUtil.parseModsToCategory(\"CS2103T\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.COMP, ParserUtil.parseModsToCategory(\"CP2106\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.COMP, ParserUtil.parseModsToCategory(\"IS1108\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        // Math Mods","lastModifiedDate":"2022-10-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.MATH, ParserUtil.parseModsToCategory(\"ST2334\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.MATH, ParserUtil.parseModsToCategory(\"MA1521\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.MATH, ParserUtil.parseModsToCategory(\"MA2001\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        // Sci Mods","lastModifiedDate":"2022-10-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.SCI, ParserUtil.parseModsToCategory(\"LSM1301\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.SCI, ParserUtil.parseModsToCategory(\"CM1102\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.SCI, ParserUtil.parseModsToCategory(\"PC1202\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        // GE Mods","lastModifiedDate":"2022-10-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.GE, ParserUtil.parseModsToCategory(\"GEA1000\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.GE, ParserUtil.parseModsToCategory(\"UTC1102B\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.GE, ParserUtil.parseModsToCategory(\"GESS1025\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        // COMMS Mods","lastModifiedDate":"2022-10-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.COMMS, ParserUtil.parseModsToCategory(\"ES2660\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        // UE Mods","lastModifiedDate":"2022-10-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        assertEquals(Mod.ModCategory.UE, ParserUtil.parseModsToCategory(\"CFG1002\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"sltsheryl":13,"jonasgwt":1,"-":317}},{"path":"src/test/java/seedu/masslinkers/model/MassLinkersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_INTEREST_SWE;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-29"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-29"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-29"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-29"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"public class MassLinkersTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"    private final MassLinkers massLinkers \u003d new MassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"        assertEquals(Collections.emptyList(), massLinkers.getStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(NullPointerException.class, () -\u003e massLinkers.resetData(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"    public void resetData_withValidReadOnlyMassLinkers_replacesData() {","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"        MassLinkers newData \u003d getTypicalMassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"        massLinkers.resetData(newData);","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"        assertEquals(newData, massLinkers);","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"                .withInterests(VALID_INTEREST_SWE)","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(editedAlice, editedAlice);","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"        MassLinkersStub newData \u003d new MassLinkersStub(newStudents);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e massLinkers.resetData(newData));","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(NullPointerException.class, () -\u003e massLinkers.hasStudent(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"    public void hasStudent_studentNotInMassLinkers_returnsFalse() {","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(massLinkers.hasStudent(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"    public void hasStudent_studentInMassLinkers_returnsTrue() {","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"        massLinkers.addStudent(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(massLinkers.hasStudent(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"chm252"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInMassLinkers_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":81,"author":{"gitId":"sltsheryl"},"content":"        massLinkers.addStudent(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"chm252"},"content":"                .withInterests(VALID_INTEREST_SWE)","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"chm252"},"content":"        //GitHub, email and phone number of editedAlice same as those of ALICE","lastModifiedDate":"2022-10-29"},{"lineNumber":86,"author":{"gitId":"chm252"},"content":"        assertTrue(massLinkers.hasStudent(editedAlice));","lastModifiedDate":"2022-10-29"},{"lineNumber":87,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":88,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":89,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":90,"author":{"gitId":"chm252"},"content":"    public void hasTelegram_studentWithSameTelegramInMassLinkers_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":91,"author":{"gitId":"chm252"},"content":"        Telegram aliceTelegram \u003d ALICE.getTelegram();","lastModifiedDate":"2022-10-29"},{"lineNumber":92,"author":{"gitId":"chm252"},"content":"        massLinkers.addStudent(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":93,"author":{"gitId":"chm252"},"content":"        assertTrue(massLinkers.hasTelegram(aliceTelegram));","lastModifiedDate":"2022-10-29"},{"lineNumber":94,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":95,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":96,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":97,"author":{"gitId":"chm252"},"content":"    public void hasGitHub_studentWithSameGitHubInMassLinkers_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":98,"author":{"gitId":"chm252"},"content":"        GitHub aliceGitHub \u003d ALICE.getGitHub();","lastModifiedDate":"2022-10-29"},{"lineNumber":99,"author":{"gitId":"chm252"},"content":"        massLinkers.addStudent(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":100,"author":{"gitId":"chm252"},"content":"        assertTrue(massLinkers.hasGitHub(aliceGitHub));","lastModifiedDate":"2022-10-29"},{"lineNumber":101,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":102,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":103,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":104,"author":{"gitId":"chm252"},"content":"    public void hasEmail_studentWithSameEmailInMassLinkers_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":105,"author":{"gitId":"chm252"},"content":"        Email aliceEmail \u003d ALICE.getEmail();","lastModifiedDate":"2022-10-29"},{"lineNumber":106,"author":{"gitId":"chm252"},"content":"        massLinkers.addStudent(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":107,"author":{"gitId":"chm252"},"content":"        assertTrue(massLinkers.hasEmail(aliceEmail));","lastModifiedDate":"2022-10-29"},{"lineNumber":108,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":109,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":110,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":111,"author":{"gitId":"chm252"},"content":"    public void hasPhone_studentWithSamePhoneInMassLinkers_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":112,"author":{"gitId":"chm252"},"content":"        Phone alicePhone \u003d ALICE.getPhone();","lastModifiedDate":"2022-10-29"},{"lineNumber":113,"author":{"gitId":"chm252"},"content":"        massLinkers.addStudent(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":114,"author":{"gitId":"chm252"},"content":"        assertTrue(massLinkers.hasPhone(alicePhone));","lastModifiedDate":"2022-10-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"sltsheryl"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e massLinkers.getStudentList().remove(0));","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"sltsheryl"},"content":"     * A stub ReadOnlyMassLinkers whose students list can violate interface constraints.","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"sltsheryl"},"content":"    private static class MassLinkersStub implements ReadOnlyMassLinkers {","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"sltsheryl"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"sltsheryl"},"content":"        private final ObservableList\u003cMod\u003e mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"sltsheryl"},"content":"        MassLinkersStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"sltsheryl"},"content":"            this.students.setAll(students);","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"sltsheryl"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"sltsheryl"},"content":"            return students;","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"sltsheryl":42,"chm252":38,"-":59}},{"path":"src/test/java/seedu/masslinkers/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.GuiSettings;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.student.DetailsContainKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.MassLinkersBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"//@@author chm252","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"        assertEquals(new MassLinkers(), new MassLinkers(modelManager.getMassLinkers()));","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"        userPrefs.setMassLinkersFilePath(Paths.get(\"masslinkers/book/file/path\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"chm252"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"        userPrefs.setMassLinkersFilePath(Paths.get(\"new/masslinkers/book/file/path\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"chm252"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"    public void setMassLinkersFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setMassLinkersFilePath(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"    public void setMassLinkersFilePath_validPath_setsMassLinkersFilePath() {","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"        Path path \u003d Paths.get(\"masslinkers/book/file/path\");","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"        modelManager.setMassLinkersFilePath(path);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"        assertEquals(path, modelManager.getMassLinkersFilePath());","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"chm252"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"chm252"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"chm252"},"content":"    public void hasStudent_studentNotInMassLinkers_returnsFalse() {","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"chm252"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"chm252"},"content":"    public void hasStudent_studentInMassLinkers_returnsTrue() {","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"chm252"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"chm252"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":92,"author":{"gitId":"chm252"},"content":"    public void hasTelegram_telegramNotInMassLinkers_returnsFalse() {","lastModifiedDate":"2022-10-29"},{"lineNumber":93,"author":{"gitId":"chm252"},"content":"        assertFalse(modelManager.hasTelegram(BENSON.getTelegram()));","lastModifiedDate":"2022-10-29"},{"lineNumber":94,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":95,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":96,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":97,"author":{"gitId":"chm252"},"content":"    public void hasTelegram_telegramInMassLinkers_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":98,"author":{"gitId":"chm252"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":99,"author":{"gitId":"chm252"},"content":"        assertTrue(modelManager.hasTelegram(ALICE.getTelegram()));","lastModifiedDate":"2022-10-29"},{"lineNumber":100,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":101,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":102,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":103,"author":{"gitId":"chm252"},"content":"    public void hasGitHub_gitHubNotInMassLinkers_returnsFalse() {","lastModifiedDate":"2022-10-29"},{"lineNumber":104,"author":{"gitId":"chm252"},"content":"        assertFalse(modelManager.hasGitHub(BENSON.getGitHub()));","lastModifiedDate":"2022-10-29"},{"lineNumber":105,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":106,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":107,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":108,"author":{"gitId":"chm252"},"content":"    public void hasGitHub_gitHubInMassLinkers_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":109,"author":{"gitId":"chm252"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":110,"author":{"gitId":"chm252"},"content":"        assertTrue(modelManager.hasGitHub(ALICE.getGitHub()));","lastModifiedDate":"2022-10-29"},{"lineNumber":111,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":112,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":113,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":114,"author":{"gitId":"chm252"},"content":"    public void hasEmail_emailNotInMassLinkers_returnsFalse() {","lastModifiedDate":"2022-10-29"},{"lineNumber":115,"author":{"gitId":"chm252"},"content":"        assertFalse(modelManager.hasEmail(BENSON.getEmail()));","lastModifiedDate":"2022-10-29"},{"lineNumber":116,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":117,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":118,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":119,"author":{"gitId":"chm252"},"content":"    public void hasEmail_emailInMassLinkers_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":120,"author":{"gitId":"chm252"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":121,"author":{"gitId":"chm252"},"content":"        assertTrue(modelManager.hasEmail(ALICE.getEmail()));","lastModifiedDate":"2022-10-29"},{"lineNumber":122,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":123,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":124,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":125,"author":{"gitId":"chm252"},"content":"    public void hasPhone_phoneNotInMassLinkers_returnsFalse() {","lastModifiedDate":"2022-10-29"},{"lineNumber":126,"author":{"gitId":"chm252"},"content":"        assertFalse(modelManager.hasPhone(BENSON.getPhone()));","lastModifiedDate":"2022-10-29"},{"lineNumber":127,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":128,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":129,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":130,"author":{"gitId":"chm252"},"content":"    public void hasPhone_phoneInMassLinkers_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":131,"author":{"gitId":"chm252"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":132,"author":{"gitId":"chm252"},"content":"        assertTrue(modelManager.hasPhone(ALICE.getPhone()));","lastModifiedDate":"2022-10-29"},{"lineNumber":133,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":134,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":135,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":136,"author":{"gitId":"chm252"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"chm252"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":139,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"chm252"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"chm252"},"content":"        MassLinkers massLinkers \u003d new MassLinkersBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"chm252"},"content":"        MassLinkers differentMassLinkers \u003d new MassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"chm252"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"chm252"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"chm252"},"content":"        modelManager \u003d new ModelManager(massLinkers, userPrefs);","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"chm252"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(massLinkers, userPrefs);","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"chm252"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"chm252"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"chm252"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"chm252"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"chm252"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"chm252"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"chm252"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"chm252"},"content":"        // different massLinkers -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"chm252"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentMassLinkers, userPrefs)));","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"chm252"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"chm252"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":165,"author":{"gitId":"chm252"},"content":"        modelManager.updateFilteredStudentList(new DetailsContainKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-11-06"},{"lineNumber":166,"author":{"gitId":"chm252"},"content":"        assertFalse(modelManager.equals(new ModelManager(massLinkers, userPrefs)));","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"chm252"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":169,"author":{"gitId":"chm252"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"chm252"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"chm252"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"chm252"},"content":"        differentUserPrefs.setMassLinkersFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"chm252"},"content":"        assertFalse(modelManager.equals(new ModelManager(massLinkers, differentUserPrefs)));","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"chm252"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"sltsheryl":7,"chm252":158,"-":11}},{"path":"src/test/java/seedu/masslinkers/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setMassLinkersFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setMassLinkersFilePath(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"sltsheryl":2,"-":19}},{"path":"src/test/java/seedu/masslinkers/model/interest/InterestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"ElijahS67"},"content":"public class InterestTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"ElijahS67"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Interest(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"ElijahS67"},"content":"    public void constructor_invalidInterestName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"ElijahS67"},"content":"        String invalidInterestName \u003d \"\";","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"ElijahS67"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Interest(invalidInterestName));","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"ElijahS67"},"content":"    public void isValidInterestName() {","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"ElijahS67"},"content":"        // null interest name","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"ElijahS67"},"content":"        assertThrows(NullPointerException.class, () -\u003e Interest.isValidInterest(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"ElijahS67":8,"sltsheryl":2,"-":16}},{"path":"src/test/java/seedu/masslinkers/model/student/DetailsContainKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"public class DetailsContainKeywordsPredicateTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"        DetailsContainKeywordsPredicate firstPredicate \u003d new DetailsContainKeywordsPredicate(","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"        DetailsContainKeywordsPredicate secondPredicate \u003d new DetailsContainKeywordsPredicate(","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"        DetailsContainKeywordsPredicate firstPredicateCopy \u003d new DetailsContainKeywordsPredicate(","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"        DetailsContainKeywordsPredicate predicate \u003d new DetailsContainKeywordsPredicate(","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"chm252"},"content":"                Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"        predicate \u003d new DetailsContainKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"        predicate \u003d new DetailsContainKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"        predicate \u003d new DetailsContainKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"        // Keywords match phone, email, address and github username","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"        predicate \u003d new DetailsContainKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\",","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"                \"AliceInTheWonderLand\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"MainStreet\")","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"AliceInTheWonderLand\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"        // Keywords matching github username","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"        predicate \u003d new DetailsContainKeywordsPredicate(Arrays.asList(\"aliceinthewonderland\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"chm252"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"MainStreet\")","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"AliceInTheWonderLand\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"chm252"},"content":"        // Keywords containing partially-matching github username","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"chm252"},"content":"        predicate \u003d new DetailsContainKeywordsPredicate(Arrays.asList(\"wonderland\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"chm252"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"MainStreet\")","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"AliceInTheWonderLand\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"chm252"},"content":"        // Keywords containing partially-matching telegram handle","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"chm252"},"content":"        predicate \u003d new DetailsContainKeywordsPredicate(Arrays.asList(\"shuai\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Handsome\").withPhone(\"999769\")","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"chm252"},"content":"                .withEmail(\"lengzai@email.com\").withTelegram(\"woShiDaShuaiGe\")","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"handsomelengzai888\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"chm252"},"content":"        // Keywords containing partially-matching telegram handle","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"chm252"},"content":"        predicate \u003d new DetailsContainKeywordsPredicate(Arrays.asList(\"999\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"mata\").withPhone(\"180099969\")","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"chm252"},"content":"                .withEmail(\"polis@email.com\").withTelegram(\"polis\")","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"iamPolis\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"chm252"},"content":"        DetailsContainKeywordsPredicate predicate \u003d new DetailsContainKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"chm252"},"content":"        predicate \u003d new DetailsContainKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"chm252"},"content":"        // Array containing no matching keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"chm252"},"content":"        predicate \u003d new DetailsContainKeywordsPredicate(Arrays.asList(\"jonasGoh\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"chm252"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"MainStreet\")","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"AliceInTheWonderLand\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"chm252"},"content":"        // Array containing no matching keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"chm252"},"content":"        predicate \u003d new DetailsContainKeywordsPredicate(Arrays.asList(\"999\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"chm252"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"MainStreet\")","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"AliceInTheWonderLand\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"sltsheryl":16,"chm252":51,"-":52}},{"path":"src/test/java/seedu/masslinkers/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"sltsheryl":2,"-":66}},{"path":"src/test/java/seedu/masslinkers/model/student/GitHubTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonasgwt"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-29"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-29"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"public class GitHubTest {","lastModifiedDate":"2022-10-29"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-29"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GitHub(null));","lastModifiedDate":"2022-10-29"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"    public void constructor_invalidGithub_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-29"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"        String invalidGithub \u003d \"\";","lastModifiedDate":"2022-10-29"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GitHub(invalidGithub));","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"    public void isValidGitHub() {","lastModifiedDate":"2022-10-29"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"        // null GitHub","lastModifiedDate":"2022-10-29"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e GitHub.isValidGitHub(null));","lastModifiedDate":"2022-10-29"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"        // invalid GitHub","lastModifiedDate":"2022-10-29"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(GitHub.isValidGitHub(\"\")); // empty string","lastModifiedDate":"2022-10-29"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(GitHub.isValidGitHub(\" \")); // spaces only","lastModifiedDate":"2022-10-29"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(GitHub.isValidGitHub(\"-hello\")); // starts with hyphen","lastModifiedDate":"2022-10-29"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(GitHub.isValidGitHub(\"ld--dfk-fesd\")); // \u003e 1 consecutive hyphen","lastModifiedDate":"2022-10-29"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(GitHub.isValidGitHub(\"lddfkfesd--\")); // \u003e 1 consecutive hyphen","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(GitHub.isValidGitHub(\"qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvbnm\")); // \u003e31 chars","lastModifiedDate":"2022-10-29"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(GitHub.isValidGitHub(\"lopi\u0026e\")); // special chars that are not hyphens","lastModifiedDate":"2022-10-29"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"        // valid GitHub","lastModifiedDate":"2022-10-29"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(GitHub.isValidGitHub(\"1\")); // exactly 1 number","lastModifiedDate":"2022-10-29"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(GitHub.isValidGitHub(\"a\")); // exactly 1 letter","lastModifiedDate":"2022-10-29"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(GitHub.isValidGitHub(\"lopie-\")); // legacy github username","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(GitHub.isValidGitHub(\"jammy12\")); // words and numbers","lastModifiedDate":"2022-10-29"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(GitHub.isValidGitHub(\"JAMMdfg\")); // caps","lastModifiedDate":"2022-10-29"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(GitHub.isValidGitHub(\"12345\")); // numbers","lastModifiedDate":"2022-10-29"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(GitHub.isValidGitHub(\"jdf-3wj\")); // one hyphen","lastModifiedDate":"2022-10-29"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(GitHub.isValidGitHub(\"ld-dfk-fesd\")); // \u003e 1 hyphen","lastModifiedDate":"2022-10-29"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-29"}],"authorContributionMap":{"jonasgwt":46}},{"path":"src/test/java/seedu/masslinkers/model/student/ModContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"//@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"public class ModContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"        ModContainsKeywordsPredicate firstPredicate \u003d new ModContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"        ModContainsKeywordsPredicate secondPredicate \u003d new ModContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"        ModContainsKeywordsPredicate firstPredicateCopy \u003d new ModContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"    public void test_modContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"        // One keyword","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"        ModContainsKeywordsPredicate predicate \u003d new ModContainsKeywordsPredicate(Collections.singletonList(\"cs2109s\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Jonas Boyd\").withMods(\"CS2109S\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"        predicate \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"ma2001\", \"ma1521\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Wang Heng Huat Fei\").withMods(\"MA1521\", \"MA2001\",","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"                \"GEA1000\").build()));","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"        // Satisfies all keywords","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"        predicate \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"ma1521\", \"cs2030s\", \"cs2100\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Wee Ming Qing\").withMods(\"CS1231S\", \"CS2100\",","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"                \"MA1521\", \"CS2030S\", \"GEN2001\").build()));","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"    public void test_modDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"        ModContainsKeywordsPredicate predicate \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"ma1521\", \"cs3230\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Chan Huat Heng\").withMods(\"MA1521\")","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"                .build()));","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        predicate \u003d new ModContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Wee Ming Qing\").withMods(\"CS1231S\", \"CS2100\",","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"                \"MA1521\", \"CS2030S\", \"GEN2001\").build()));","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"        predicate \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"cs1101s\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Wee Ming Qing\").withMods(\"CS1231S\", \"CS2100\",","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"                \"MA1521\", \"CS2030S\", \"GEN2001\").build()));","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"        // Array containing no matching keyword","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"        predicate \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"cs2040s\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Jonas Ooi\").withPhone(\"9996969\")","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"                .withEmail(\"jonooi@hotmail.com\").withTelegram(\"jonasg\")","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"                .withGitHub(\"handsomelad\").withMods(\"CS2030S\").build()));","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"        // Student with no module","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"        predicate \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"is1103\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"lalaland\")","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"                .withGitHub(\"AliceInTheWonderLand\").build()));","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"sltsheryl":1,"jonasgwt":86}},{"path":"src/test/java/seedu/masslinkers/model/student/ModTakenContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"chm252"},"content":"//@@author chm252","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"chm252"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"chm252"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"chm252"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"chm252"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"chm252"},"content":"public class ModTakenContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"    public void equals() {","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"chm252"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"        ModTakenContainsKeywordsPredicate firstPredicate \u003d new ModTakenContainsKeywordsPredicate(","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"        ModTakenContainsKeywordsPredicate secondPredicate \u003d new ModTakenContainsKeywordsPredicate(","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"        ModTakenContainsKeywordsPredicate firstPredicateCopy \u003d new ModTakenContainsKeywordsPredicate(","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"chm252"},"content":"    public void test_modTakenContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"        // One keyword","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"chm252"},"content":"        ModTakenContainsKeywordsPredicate predicate \u003d new ModTakenContainsKeywordsPredicate(","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"chm252"},"content":"                Collections.singletonList(\"cs2109s\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"chm252"},"content":"        Student jonasBoyd \u003d new StudentBuilder().withName(\"Jonas Boyd\").withMods(\"CS2109S\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"chm252"},"content":"        jonasBoyd.markMods(jonasBoyd.getMods());","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"        assertTrue(predicate.test(jonasBoyd));","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"        predicate \u003d new ModTakenContainsKeywordsPredicate(Arrays.asList(\"ma2001\", \"ma1521\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"        Student wangHengHuat \u003d new StudentBuilder().withName(\"Wang Heng Huat\").withMods(\"MA2001\", \"MA1521\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"        wangHengHuat.markMods(SampleDataUtil.getModSet(\"MA1521\", \"MA2001\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"        assertTrue(predicate.test(wangHengHuat));","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"        // Satisfies all keywords","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"chm252"},"content":"        predicate \u003d new ModTakenContainsKeywordsPredicate(Arrays.asList(\"ma1521\", \"cs2030s\", \"cs2100\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"        Student weeMingQing \u003d new StudentBuilder().withName(\"Wee Ming Qing\").withMods(\"CS1231S\", \"CS2100\",","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"                \"MA1521\", \"CS2030S\", \"GEN2001\").build();","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"        weeMingQing.markMods(SampleDataUtil.getModSet(\"MA1521\", \"CS2030S\", \"CS2100\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"        assertTrue(predicate.test(weeMingQing));","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"    public void test_modTakenDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"        // Mod not taken","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"        ModTakenContainsKeywordsPredicate predicate \u003d new ModTakenContainsKeywordsPredicate(","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"                Arrays.asList(\"ma1521\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"chm252"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Chan Huat Heng\").withMods(\"MA1521\")","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"chm252"},"content":"                .build()));","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"chm252"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"chm252"},"content":"        predicate \u003d new ModTakenContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"chm252"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Wee Ming Qing\").withMods(\"CS1231S\", \"CS2100\",","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"chm252"},"content":"                \"MA1521\", \"CS2030S\", \"GEN2001\").build()));","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"chm252"},"content":"        // Has not taken all the specified mods by default","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"chm252"},"content":"        predicate \u003d new ModTakenContainsKeywordsPredicate(Arrays.asList(\"cs1231s\", \"cs2100\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":83,"author":{"gitId":"chm252"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Wee Ming Qing\").withMods(\"CS1231S\", \"CS2100\",","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"chm252"},"content":"                \"MA1521\", \"CS2030S\", \"GEN2001\").build()));","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"chm252"},"content":"        // Array containing no matching keyword","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"chm252"},"content":"        predicate \u003d new ModTakenContainsKeywordsPredicate(Arrays.asList(\"cs2040s\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"chm252"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Jonas Ooi\").withPhone(\"9996969\")","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"chm252"},"content":"                .withEmail(\"jonooi@hotmail.com\").withTelegram(\"jonasg\")","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"handsomelad\").withMods(\"CS2030S\").build()));","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"chm252"},"content":"        // Student with no module","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"chm252"},"content":"        predicate \u003d new ModTakenContainsKeywordsPredicate(Arrays.asList(\"CP2106\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"chm252"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Chia Yu Xuan\").withPhone(\"12345\")","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"chm252"},"content":"                .withEmail(\"cyx1909@ymail.com\").withTelegram(\"cyx1909\")","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"cyx1909\").build()));","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"chm252"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"sltsheryl":1,"chm252":97}},{"path":"src/test/java/seedu/masslinkers/model/student/ModTakingContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"chm252"},"content":"//@@author chm252","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"chm252"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"chm252"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"chm252"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"chm252"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"chm252"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"chm252"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"chm252"},"content":"public class ModTakingContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"chm252"},"content":"    public void equals() {","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"chm252"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"chm252"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"chm252"},"content":"        ModTakingContainsKeywordsPredicate firstPredicate \u003d new ModTakingContainsKeywordsPredicate(","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"chm252"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"chm252"},"content":"        ModTakingContainsKeywordsPredicate secondPredicate \u003d new ModTakingContainsKeywordsPredicate(","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"chm252"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"chm252"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"chm252"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"chm252"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"        ModTakingContainsKeywordsPredicate firstPredicateCopy \u003d new ModTakingContainsKeywordsPredicate(","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"chm252"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"chm252"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"chm252"},"content":"    public void test_modTakingContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"        // One keyword","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"chm252"},"content":"        ModTakingContainsKeywordsPredicate predicate \u003d new ModTakingContainsKeywordsPredicate(","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"chm252"},"content":"                Collections.singletonList(\"cs2109s\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"chm252"},"content":"        Student jonasBoyd \u003d new StudentBuilder().withName(\"Jonas Boyd\").withMods(\"CS2109S\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"chm252"},"content":"        jonasBoyd.markMods(jonasBoyd.getMods());","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"        jonasBoyd.unmarkMods(jonasBoyd.getMods());","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"        assertTrue(predicate.test(jonasBoyd));","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"        // Multiple keywords and mods unmarked by default","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"chm252"},"content":"        predicate \u003d new ModTakingContainsKeywordsPredicate(Arrays.asList(\"ma2001\", \"ma1521\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"        Student wangHengHuat \u003d new StudentBuilder().withName(\"Wang Heng Huat\").withMods(\"MA2001\", \"MA1521\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"        assertTrue(predicate.test(wangHengHuat));","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"chm252"},"content":"        // Satisfies all keywords and mods unmarked by default","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"chm252"},"content":"        predicate \u003d new ModTakingContainsKeywordsPredicate(Arrays.asList(\"ma1521\", \"cs2030s\", \"cs2100\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"        Student weeMingQing \u003d new StudentBuilder().withName(\"Wee Ming Qing\").withMods(\"CS1231S\", \"CS2100\",","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"chm252"},"content":"                \"MA1521\", \"CS2030S\", \"GEN2001\").build();","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"        assertTrue(predicate.test(weeMingQing));","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"    public void test_modTakingDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"chm252"},"content":"        // Mod taken","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"chm252"},"content":"        Student chanHuatHeng \u003d new StudentBuilder().withName(\"Chan Huat Heng\").withMods(\"MA1521\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"chm252"},"content":"        chanHuatHeng.markMods(SampleDataUtil.getModSet(\"MA1521\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"        ModTakingContainsKeywordsPredicate predicate \u003d new ModTakingContainsKeywordsPredicate(","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"chm252"},"content":"                Arrays.asList(\"ma1521\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"chm252"},"content":"        assertFalse(predicate.test(chanHuatHeng));","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"chm252"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"chm252"},"content":"        predicate \u003d new ModTakingContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"chm252"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Wee Ming Qing\").withMods(\"CS1231S\", \"CS2100\",","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"chm252"},"content":"                \"MA1521\", \"CS2030S\", \"GEN2001\").build()));","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"chm252"},"content":"        // Some mods have already been taken.","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"chm252"},"content":"        Student weeMingQing \u003d new StudentBuilder().withName(\"Wee Ming Qing\").withMods(\"CS1231S\", \"CS2100\",","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"chm252"},"content":"                \"MA1521\", \"CS2030S\", \"GEN2001\").build();","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"chm252"},"content":"        weeMingQing.markMods(SampleDataUtil.getModSet(\"CS1231S\", \"GEN2001\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"chm252"},"content":"        predicate \u003d new ModTakingContainsKeywordsPredicate(Arrays.asList(\"cs1231s\", \"cs2100\", \"gen2001\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"chm252"},"content":"        assertFalse(predicate.test(weeMingQing));","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"chm252"},"content":"        // Array containing no matching keyword","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"chm252"},"content":"        predicate \u003d new ModTakingContainsKeywordsPredicate(Arrays.asList(\"cs2040s\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"chm252"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Jonas Ooi\").withPhone(\"9996969\")","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"chm252"},"content":"                .withEmail(\"jonooi@hotmail.com\").withTelegram(\"jonasg\")","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"handsomelad\").withMods(\"CS2030S\").build()));","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"chm252"},"content":"        // Student with no module","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"chm252"},"content":"        predicate \u003d new ModTakingContainsKeywordsPredicate(Arrays.asList(\"CP2106\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"chm252"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Chia Yu Xuan\").withPhone(\"12345\")","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"chm252"},"content":"                .withEmail(\"cyx1909@ymail.com\").withTelegram(\"cyx1909\")","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"chm252"},"content":"                .withGitHub(\"cyx1909\").build()));","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"chm252"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"chm252"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"sltsheryl":1,"chm252":99}},{"path":"src/test/java/seedu/masslinkers/model/student/ModTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"public class ModTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of the constructor when {@code modName} is null.","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Mod(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of the constructor when {@code modName} is invalid.","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"    public void constructor_invalidMod_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"        String invalidMod \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Mod(invalidMod));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of the {@code isValidModName} method","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"    public void isValidMod() {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"        // null mod","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e Mod.isValidModName(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"        // invalid mod names","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"\")); // empty string","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\" \")); // spaces only","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"this is a mod\")); // more than 10 chars","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"ALLWORDS\")); // all words","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"1234\")); // all numbers","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"cs2103\")); // not uppercase","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"CS2103t\")); // not uppercase","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Mod.isValidModName(\"#CS@2103\")); // special characters","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"        // valid mod names","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Mod.isValidModName(\"CS1101\")); // regular mod name","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Mod.isValidModName(\"GESS1025\")); // mod with long prefix","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Mod.isValidModName(\"CS2103T\")); // mod name with letter(s) behind","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Mod.isValidModName(\"CS1231S\")); // mod name with letter(s) behind","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of the {@code isSameMod} method","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"    public void isSameMod() {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"        Mod mod \u003d new Mod(\"CS2103T\");","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"        // different mods","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(mod.isSameMod(new Mod(\"CS2103\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(mod.isSameMod(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"        // same mod","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(mod.isSameMod(mod));","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(mod.isSameMod(new Mod(\"CS2103T\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour of the {@code getModCategory} method","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"    public void modCategory_correctAssigment() {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"        // CS Mods","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.COMP, new Mod(\"CS2100\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.COMP, new Mod(\"CS2103T\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.COMP, new Mod(\"CP2106\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.COMP, new Mod(\"IS1103\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"        // Math Mods","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.MATH, new Mod(\"ST2334\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.MATH, new Mod(\"MA1521\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.MATH, new Mod(\"MA2001\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"        // Sci Mods","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.SCI, new Mod(\"LSM1301\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.SCI, new Mod(\"CM1102\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.SCI, new Mod(\"PC1201\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"        // GE Mods","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.GE, new Mod(\"GEA1000\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.GE, new Mod(\"UTC1102B\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.GE, new Mod(\"GESS1025\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"        // COMMS Mods","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.COMMS, new Mod(\"ES2660\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"        // UE Mods","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(Mod.ModCategory.UE, new Mod(\"CFG1002\").getModCategory());","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sltsheryl":2,"jonasgwt":100}},{"path":"src/test/java/seedu/masslinkers/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"sltsheryl":2,"-":38}},{"path":"src/test/java/seedu/masslinkers/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"ElijahS67"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isCorrect(null));","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"ElijahS67"},"content":"        // empty phone numbers (after trimming)","lastModifiedDate":"2022-10-30"},{"lineNumber":28,"author":{"gitId":"ElijahS67"},"content":"        assertTrue(Phone.isEmptyPhone(\"\"));","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"ElijahS67"},"content":"        assertTrue(Phone.isEmptyPhone(\"         \"));","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"ElijahS67"},"content":"        // valid phone numbers which passes the Regex pattern match","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"ElijahS67"},"content":"        assertTrue(Phone.isCorrect(\"12345678\")); // exactly 8 numbers","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"ElijahS67"},"content":"        assertTrue(Phone.isCorrect(\"93121534\"));","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"ElijahS67"},"content":"        assertTrue(Phone.isCorrect(\"+1234567\")); // acceptable international number","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"ElijahS67"},"content":"        assertTrue(Phone.isCorrect(\"+12345674534534\")); // acceptable international number","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"ElijahS67"},"content":"        // blank phone numbers which are not correct and are not valid inputs","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"ElijahS67"},"content":"        assertFalse(Phone.isCorrect(\"\")); // empty string","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"ElijahS67"},"content":"        assertFalse(Phone.isCorrect(\" \")); // spaces only","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"ElijahS67"},"content":"        // \"incorrect\" phone numbers that fail the Regex pattern match but are still considered valid inputs","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"ElijahS67"},"content":"        assertFalse(Phone.isCorrect(\"91\")); // less than 7 digits","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"ElijahS67"},"content":"        assertFalse(Phone.isCorrect(\"93121534444444444\")); // more than 16 characters (length: 17)","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"ElijahS67"},"content":"        assertFalse(Phone.isCorrect(\"+9312153444444444\")); // more than 16 digits (length: 17)","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"ElijahS67"},"content":"        assertFalse(Phone.isCorrect(\"+++++999\"));","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"ElijahS67"},"content":"        assertFalse(Phone.isCorrect(\"this is a phone\")); // non-numeric","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"ElijahS67"},"content":"        assertFalse(Phone.isCorrect(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"ElijahS67"},"content":"        assertFalse(Phone.isCorrect(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"ElijahS67":24,"sltsheryl":2,"-":24}},{"path":"src/test/java/seedu/masslinkers/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_INTEREST_SWE;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"public class StudentTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getInterests().remove(0));","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"    public void isSameStudent() {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"chm252"},"content":"        //different object, with same name and same attribute -\u003e returns true","lastModifiedDate":"2022-10-29"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2022-10-29"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"chm252"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2022-10-29"},{"lineNumber":40,"author":{"gitId":"chm252"},"content":"        editedAlice \u003d new StudentBuilder(ALICE)","lastModifiedDate":"2022-10-29"},{"lineNumber":41,"author":{"gitId":"chm252"},"content":"                .withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-29"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"                .withGitHub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-10-29"},{"lineNumber":43,"author":{"gitId":"chm252"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-29"},{"lineNumber":44,"author":{"gitId":"chm252"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-29"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"                .withInterests(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-29"},{"lineNumber":46,"author":{"gitId":"chm252"},"content":"                .withInterests(VALID_INTEREST_SWE)","lastModifiedDate":"2022-10-29"},{"lineNumber":47,"author":{"gitId":"chm252"},"content":"                .build();","lastModifiedDate":"2022-10-29"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"chm252"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-29"},{"lineNumber":51,"author":{"gitId":"chm252"},"content":"        editedAlice \u003d new StudentBuilder(ALICE)","lastModifiedDate":"2022-10-29"},{"lineNumber":52,"author":{"gitId":"chm252"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-29"},{"lineNumber":53,"author":{"gitId":"chm252"},"content":"                .build();","lastModifiedDate":"2022-10-29"},{"lineNumber":54,"author":{"gitId":"chm252"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2022-10-29"},{"lineNumber":55,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"chm252"},"content":"        Student editedBob \u003d new StudentBuilder(BOB)","lastModifiedDate":"2022-10-29"},{"lineNumber":58,"author":{"gitId":"chm252"},"content":"                .withName(VALID_NAME_BOB.toLowerCase())","lastModifiedDate":"2022-10-29"},{"lineNumber":59,"author":{"gitId":"chm252"},"content":"                .build();","lastModifiedDate":"2022-10-29"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(BOB.isSameStudent(editedBob));","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"chm252"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":64,"author":{"gitId":"chm252"},"content":"        editedBob \u003d new StudentBuilder(BOB)","lastModifiedDate":"2022-10-29"},{"lineNumber":65,"author":{"gitId":"chm252"},"content":"                .withName(nameWithTrailingSpaces)","lastModifiedDate":"2022-10-29"},{"lineNumber":66,"author":{"gitId":"chm252"},"content":"                .build();","lastModifiedDate":"2022-10-29"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":68,"author":{"gitId":"chm252"},"content":"        assertTrue(BOB.isSameStudent(editedBob));","lastModifiedDate":"2022-10-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"sltsheryl"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"sltsheryl"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"sltsheryl"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"sltsheryl"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"sltsheryl"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":105,"author":{"gitId":"ElijahS67"},"content":"        // different interests -\u003e returns false","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"chm252"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withInterests(VALID_INTEREST_SWE).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ElijahS67":1,"sltsheryl":23,"jonasgwt":2,"chm252":29,"-":54}},{"path":"src/test/java/seedu/masslinkers/model/student/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"public class TelegramTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Telegram(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"    public void constructor_invalidTelegram_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-29"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"        String invalidTelegram \u003d \"\";","lastModifiedDate":"2022-10-29"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Telegram(invalidTelegram));","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"    public void isValidTelegram() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"        // null telegram","lastModifiedDate":"2022-10-29"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"        assertThrows(NullPointerException.class, () -\u003e Telegram.isValidTelegram(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"        // invalid telegram","lastModifiedDate":"2022-10-29"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(Telegram.isValidTelegram(\"\")); // empty string","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"        assertFalse(Telegram.isValidTelegram(\" \")); // spaces only","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Telegram.isValidTelegram(\"he\")); // \u003c5 chars","lastModifiedDate":"2022-10-29"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Telegram.isValidTelegram(\"lo-pie\")); // special chars that are not underscores","lastModifiedDate":"2022-10-29"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Telegram.isValidTelegram(\"lo__pie\")); // consecutive underscores","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Telegram.isValidTelegram(\"_lo_pie\")); // starting with underscore","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Telegram.isValidTelegram(\"lo_pie_\")); // end with underscore","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(Telegram.isValidTelegram(\"lopi\u0026e\")); // special chars that are not underscores","lastModifiedDate":"2022-10-29"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"        // valid telegram","lastModifiedDate":"2022-10-29"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Telegram.isValidTelegram(\"fnnnn\")); // exactly 5 chars","lastModifiedDate":"2022-10-29"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Telegram.isValidTelegram(\"jammy12\")); // words and numbers","lastModifiedDate":"2022-10-29"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Telegram.isValidTelegram(\"JAMMdfg\")); // caps","lastModifiedDate":"2022-10-29"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Telegram.isValidTelegram(\"12345\")); // numbers","lastModifiedDate":"2022-10-29"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(Telegram.isValidTelegram(\"lo_pie\")); // an underscore","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"sltsheryl":8,"jonasgwt":18,"-":18}},{"path":"src/test/java/seedu/masslinkers/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-10-29"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_INTEREST_SWE;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-29"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"//@@author sltsheryl","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"//@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"                .withInterests(VALID_INTEREST_SWE)","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"                .build();","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"        //editedAlice contains same GitHub, email and phone number as ALICE.","lastModifiedDate":"2022-10-29"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2022-10-29"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"    public void contains_studentWithSameNameButDifferentIdentityFields_returnsFalse() {","lastModifiedDate":"2022-10-29"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"        Student editedALice \u003d new StudentBuilder(ALICE)","lastModifiedDate":"2022-10-29"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"                .withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-29"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"                .withGitHub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-10-29"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-29"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-29"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"                .build();","lastModifiedDate":"2022-10-29"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(uniqueStudentList.contains(editedALice));","lastModifiedDate":"2022-10-29"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"    public void containsTelegram_listContainsStudentWithGivenTelegram_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"        Telegram aliceTelegram \u003d ALICE.getTelegram();","lastModifiedDate":"2022-10-29"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(uniqueStudentList.containsTelegram(aliceTelegram));","lastModifiedDate":"2022-10-29"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"    public void containsTelegram_listWithoutStudentWithGivenTelegram_returnsFalse() {","lastModifiedDate":"2022-10-29"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"        Telegram bobTelegram \u003d BOB.getTelegram();","lastModifiedDate":"2022-10-29"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(uniqueStudentList.containsTelegram(bobTelegram));","lastModifiedDate":"2022-10-29"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"    public void containsGitHub_listContainsStudentWithGivenGitHub_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"        GitHub aliceGitHub \u003d ALICE.getGitHub();","lastModifiedDate":"2022-10-29"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(uniqueStudentList.containsGitHub(aliceGitHub));","lastModifiedDate":"2022-10-29"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"    public void containsGitHub_listWithoutStudentWithGivenGitHub_returnsFalse() {","lastModifiedDate":"2022-10-29"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"        GitHub bobGitHub \u003d BOB.getGitHub();","lastModifiedDate":"2022-10-29"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(uniqueStudentList.containsGitHub(bobGitHub));","lastModifiedDate":"2022-10-29"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"    public void containsEmail_listContainsStudentWithGivenEmail_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"        Email aliceEmail \u003d ALICE.getEmail();","lastModifiedDate":"2022-10-29"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(uniqueStudentList.containsEmail(aliceEmail));","lastModifiedDate":"2022-10-29"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":104,"author":{"gitId":"jonasgwt"},"content":"    public void containsEmail_listWithoutStudentWithGivenEmail_returnsFalse() {","lastModifiedDate":"2022-10-29"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"        Email bobEmail \u003d BOB.getEmail();","lastModifiedDate":"2022-10-29"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(uniqueStudentList.containsEmail(bobEmail));","lastModifiedDate":"2022-10-29"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":109,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":110,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":111,"author":{"gitId":"jonasgwt"},"content":"    public void containsPhoneNumber_listContainsStudentWithGivenPhoneNumber_returnsTrue() {","lastModifiedDate":"2022-10-29"},{"lineNumber":112,"author":{"gitId":"jonasgwt"},"content":"        Phone alicePhone \u003d ALICE.getPhone();","lastModifiedDate":"2022-10-29"},{"lineNumber":113,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":114,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(uniqueStudentList.containsPhone(alicePhone));","lastModifiedDate":"2022-10-29"},{"lineNumber":115,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":116,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":117,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-29"},{"lineNumber":118,"author":{"gitId":"jonasgwt"},"content":"    public void containsPhoneNumber_listWithoutStudentWithGivenPhoneNumber_returnsFalse() {","lastModifiedDate":"2022-10-29"},{"lineNumber":119,"author":{"gitId":"jonasgwt"},"content":"        Phone bobPhone \u003d BOB.getPhone();","lastModifiedDate":"2022-10-29"},{"lineNumber":120,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-29"},{"lineNumber":121,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(uniqueStudentList.containsPhone(bobPhone));","lastModifiedDate":"2022-10-29"},{"lineNumber":122,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"jonasgwt"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"jonasgwt"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"jonasgwt"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"jonasgwt"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"jonasgwt"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"jonasgwt"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"jonasgwt"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"jonasgwt"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"jonasgwt"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"jonasgwt"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"jonasgwt"},"content":"                .withInterests(VALID_INTEREST_SWE)","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"jonasgwt"},"content":"                .build();","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"jonasgwt"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"jonasgwt"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"jonasgwt"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"jonasgwt"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"jonasgwt"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"jonasgwt"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"jonasgwt"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"jonasgwt"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"jonasgwt"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"jonasgwt"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"jonasgwt"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":210,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":211,"author":{"gitId":"jonasgwt"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"jonasgwt"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"jonasgwt"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"jonasgwt"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":221,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":225,"author":{"gitId":"jonasgwt"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"jonasgwt"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-26"},{"lineNumber":228,"author":{"gitId":"jonasgwt"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"jonasgwt"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-26"},{"lineNumber":230,"author":{"gitId":"jonasgwt"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-26"},{"lineNumber":232,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":233,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":234,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":235,"author":{"gitId":"jonasgwt"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"jonasgwt"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":237,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":239,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":240,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"jonasgwt"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-26"},{"lineNumber":243,"author":{"gitId":"jonasgwt"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-26"},{"lineNumber":244,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":245,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"sltsheryl":20,"jonasgwt":221,"chm252":4}},{"path":"src/test/java/seedu/masslinkers/model/util/ModComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.model.util;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"public class ModComparatorTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"    private final ModComparator comparator \u003d new ModComparator();","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour when both inputs are null.","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"    public void compare_compareBothNull() {","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e comparator.compare(null, null));","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour when one input is null.","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"    public void compare_compareOneNull() {","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e comparator.compare(new Mod(\"CS2103T\"), null));","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e comparator.compare(null, new Mod(\"CS2103T\")));","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour when the 2 mods differ in completion status.","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"    public void compare_completionStatus() {","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(comparator.compare(new Mod(\"CS2103T\", true), new Mod(\"CS2103T\")) \u003e 0);","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(comparator.compare(new Mod(\"CS2103T\"), new Mod(\"CS2103T\", true)) \u003c 0);","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour when the 2 mods differ in their mod name.","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"    public void compare_modName() {","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(comparator.compare(new Mod(\"DS2103T\"), new Mod(\"CS2103T\")) \u003e 0);","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(comparator.compare(new Mod(\"AS2103T\"), new Mod(\"CS2103T\")) \u003c 0);","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"     * Tests the behaviour when the 2 mods differ in completion status and mod name.","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"    public void compare_modNameAndCompletion() {","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(comparator.compare(new Mod(\"DS2103T\", true), new Mod(\"CS2103T\", false)) \u003e 0);","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(comparator.compare(new Mod(\"CS2103T\", true), new Mod(\"DS2103T\", false)) \u003e 0);","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(comparator.compare(new Mod(\"DS2103T\", false), new Mod(\"CS2103T\", true)) \u003c 0);","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"        assertTrue(comparator.compare(new Mod(\"CS2103T\", false), new Mod(\"DS2103T\", true)) \u003c 0);","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"sltsheryl":3,"jonasgwt":56}},{"path":"src/test/java/seedu/masslinkers/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"//@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.TOM;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"import seedu.masslinkers.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"import seedu.masslinkers.model.student.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_PHONE \u003d \"    \";","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_TELEGRAM \u003d \" \";","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_GITHUB \u003d \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_INTEREST \u003d \"#tennis\";","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"    private static final String INVALID_MOD \u003d \"#CS2100\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_GITHUB \u003d BENSON.getGitHub().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"    private static final String VALID_TELEGRAM \u003d BENSON.getTelegram().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"    private static final List\u003cJsonAdaptedInterest\u003e VALID_INTERESTS \u003d BENSON.getInterests().stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"            .map(JsonAdaptedInterest::new)","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"    private static final List\u003cJsonAdaptedMod\u003e VALID_MODS \u003d BENSON.getMods().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"            .map(JsonAdaptedMod::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(BENSON, student.toModelType());","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_nullOptionalFields_returnsStudent() throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(TOM);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(TOM, student.toModelType());","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM,","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"                        VALID_GITHUB, VALID_INTERESTS, VALID_MODS);","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"            VALID_TELEGRAM, VALID_GITHUB, VALID_INTERESTS, VALID_MODS);","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"                        VALID_TELEGRAM, VALID_GITHUB, VALID_INTERESTS, VALID_MODS);","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"                        VALID_TELEGRAM, VALID_GITHUB, VALID_INTERESTS, VALID_MODS);","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_invalidHandle_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"                        INVALID_TELEGRAM, VALID_GITHUB, VALID_INTERESTS, VALID_MODS);","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"        String expectedMessage \u003d Telegram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_invalidUsername_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"jonasgwt"},"content":"                        VALID_TELEGRAM, INVALID_GITHUB, VALID_INTERESTS, VALID_MODS);","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"        String expectedMessage \u003d GitHub.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_invalidInterests_throwsIllegalValueException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"jonasgwt"},"content":"        List\u003cJsonAdaptedInterest\u003e invalidInterests \u003d new ArrayList\u003c\u003e(VALID_INTERESTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"jonasgwt"},"content":"        invalidInterests.add(new JsonAdaptedInterest(INVALID_INTEREST));","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"jonasgwt"},"content":"                        VALID_TELEGRAM, VALID_GITHUB, invalidInterests, VALID_MODS);","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"jonasgwt"},"content":"    public void toModelType_invalidMods_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"jonasgwt"},"content":"        List\u003cJsonAdaptedMod\u003e invalidMods \u003d new ArrayList\u003c\u003e(VALID_MODS);","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"jonasgwt"},"content":"        invalidMods.add(new JsonAdaptedMod(INVALID_MOD, false));","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"jonasgwt"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"jonasgwt"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"jonasgwt"},"content":"                        VALID_TELEGRAM, VALID_GITHUB, VALID_INTERESTS, invalidMods);","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sltsheryl":1,"jonasgwt":128}},{"path":"src/test/java/seedu/masslinkers/storage/JsonMassLinkersStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jonasgwt"},"content":"//@@author jonasgwt","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"jonasgwt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.HOON;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.IDA;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"jonasgwt"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"jonasgwt"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"jonasgwt"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"jonasgwt"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"jonasgwt"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"jonasgwt"},"content":"import seedu.masslinkers.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"jonasgwt"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"jonasgwt"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"jonasgwt"},"content":"public class JsonMassLinkersStorageTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"jonasgwt"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonMassLinkersStorageTest\");","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"jonasgwt"},"content":"    @TempDir","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"jonasgwt"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"jonasgwt"},"content":"    public void readMassLinkers_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e readMassLinkers(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"jonasgwt"},"content":"    private java.util.Optional\u003cReadOnlyMassLinkers\u003e readMassLinkers(String filePath) throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"jonasgwt"},"content":"        return new JsonMassLinkersStorage(Paths.get(filePath)).readMassLinkers(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"jonasgwt"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"jonasgwt"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"jonasgwt"},"content":"                : null;","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"jonasgwt"},"content":"        assertFalse(readMassLinkers(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"jonasgwt"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(DataConversionException.class, () -\u003e readMassLinkers(\"notJsonFormatMassLinkers.json\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"    public void readMassLinkers_invalidStudentMassLinkers_throwDataConversionException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(DataConversionException.class, () -\u003e readMassLinkers(\"invalidStudentMassLinkers.json\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"    public void readMassLinkers_invalidAndValidStudentMassLinkers_throwDataConversionException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(DataConversionException.class, () -\u003e readMassLinkers(\"invalidAndValidStudentMassLinkers.json\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"jonasgwt"},"content":"    public void readAndSaveMassLinkers_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"jonasgwt"},"content":"        Path filePath \u003d testFolder.resolve(\"TempMassLinkers.json\");","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"jonasgwt"},"content":"        MassLinkers original \u003d getTypicalMassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"jonasgwt"},"content":"        JsonMassLinkersStorage jsonMassLinkersStorage \u003d new JsonMassLinkersStorage(filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"jonasgwt"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"jonasgwt"},"content":"        jsonMassLinkersStorage.saveMassLinkers(original, filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"jonasgwt"},"content":"        ReadOnlyMassLinkers readBack \u003d jsonMassLinkersStorage.readMassLinkers(filePath).get();","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(original, new MassLinkers(readBack));","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"jonasgwt"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"jonasgwt"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"jonasgwt"},"content":"        original.removeStudent(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"jonasgwt"},"content":"        jsonMassLinkersStorage.saveMassLinkers(original, filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"jonasgwt"},"content":"        readBack \u003d jsonMassLinkersStorage.readMassLinkers(filePath).get();","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(original, new MassLinkers(readBack));","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"jonasgwt"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"jonasgwt"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"jonasgwt"},"content":"        jsonMassLinkersStorage.saveMassLinkers(original); // file path not specified","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"jonasgwt"},"content":"        readBack \u003d jsonMassLinkersStorage.readMassLinkers().get(); // file path not specified","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"jonasgwt"},"content":"        assertEquals(original, new MassLinkers(readBack));","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"jonasgwt"},"content":"    public void saveMassLinkers_nullMassLinkers_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveMassLinkers(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"jonasgwt"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"jonasgwt"},"content":"     * Saves {@code massLinkers} at the specified {@code filePath}.","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"jonasgwt"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"jonasgwt"},"content":"    private void saveMassLinkers(ReadOnlyMassLinkers massLinkers, String filePath) {","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"jonasgwt"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"jonasgwt"},"content":"            new JsonMassLinkersStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"jonasgwt"},"content":"                    .saveMassLinkers(massLinkers, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"jonasgwt"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"jonasgwt"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"jonasgwt"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"jonasgwt"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"jonasgwt"},"content":"    public void saveMassLinkers_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"jonasgwt"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveMassLinkers(new MassLinkers(), null));","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"jonasgwt"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"jonasgwt"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"sltsheryl":1,"jonasgwt":109}},{"path":"src/test/java/seedu/masslinkers/storage/JsonSerializableMassLinkersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.masslinkers.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.masslinkers.commons.util.JsonUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.masslinkers.testutil.TypicalStudents;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableMassLinkersTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableMassLinkersTest\");","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentsMassLinkers.json\");","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentMassLinkers.json\");","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentMassLinkers.json\");","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableMassLinkers dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableMassLinkers.class).get();","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        MassLinkers massLinkersFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        MassLinkers typicalStudentsMassLinkers \u003d TypicalStudents.getTypicalMassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(massLinkersFromFile, typicalStudentsMassLinkers);","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableMassLinkers dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableMassLinkers.class).get();","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableMassLinkers dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableMassLinkers.class).get();","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableMassLinkers.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sltsheryl":1,"-":46}},{"path":"src/test/java/seedu/masslinkers/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.masslinkers.commons.core.GuiSettings;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.masslinkers.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setMassLinkersFilePath(Paths.get(\"massLinkers.json\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sltsheryl":1,"-":122}},{"path":"src/test/java/seedu/masslinkers/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.masslinkers.testutil.TypicalStudents.getTypicalMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.masslinkers.commons.core.GuiSettings;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.masslinkers.model.ReadOnlyMassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.masslinkers.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonMassLinkersStorage massLinkersStorage \u003d new JsonMassLinkersStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(massLinkersStorage, userPrefsStorage);","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void massLinkersReadSave() throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonMassLinkersStorage} class.","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonMassLinkersStorageTest} class.","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        MassLinkers original \u003d getTypicalMassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveMassLinkers(original);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyMassLinkers retrieved \u003d storageManager.readMassLinkers().get();","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new MassLinkers(retrieved));","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getMassLinkersFilePath() {","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getMassLinkersFilePath());","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":1,"-":67}},{"path":"src/test/java/seedu/masslinkers/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.testutil;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"sltsheryl":1,"-":33}},{"path":"src/test/java/seedu/masslinkers/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.testutil;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"sltsheryl"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"sltsheryl"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"sltsheryl"},"content":"    private EditStudentDescriptor descriptor;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"sltsheryl"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"    public EditStudentDescriptorBuilder(EditStudentDescriptor descriptor) {","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"sltsheryl"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"sltsheryl"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setPhone(student.getPhone());","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setTelegram(student.getTelegram());","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setGitHub(student.getGitHub());","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setInterests(student.getInterests());","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"sltsheryl"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"sltsheryl"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"sltsheryl"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"sltsheryl"},"content":"     * Sets the {@code Phone} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"sltsheryl"},"content":"    public EditStudentDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"sltsheryl"},"content":"     * Sets the {@code Telegram} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"sltsheryl"},"content":"    public EditStudentDescriptorBuilder withTelegram(String handle) {","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setTelegram(new Telegram(handle));","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"sltsheryl"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"sltsheryl"},"content":"     * Sets the {@code Address} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"sltsheryl"},"content":"    public EditStudentDescriptorBuilder withGitHub(String username) {","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setGitHub(new GitHub(username));","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"sltsheryl"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"sltsheryl"},"content":"     * Parses the {@code interests} into a {@code Set\u003cInterest\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"sltsheryl"},"content":"     * that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"sltsheryl"},"content":"    public EditStudentDescriptorBuilder withInterests(String... interests) {","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"sltsheryl"},"content":"        Set\u003cInterest\u003e interestSet \u003d Stream.of(interests).map(Interest::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"sltsheryl"},"content":"        descriptor.setInterests(interestSet);","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"sltsheryl"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"sltsheryl"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"sltsheryl"},"content":"     * Parses the {@code mods} into a {@code Set\u003cMod\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"sltsheryl"},"content":"     * that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"sltsheryl"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"sltsheryl"},"content":"    public EditStudentDescriptorBuilder withMods(String... mods) {","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"sltsheryl"},"content":"        ObservableList\u003cMod\u003e modSet \u003d Stream.of(mods).map(Mod::new).collect(","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"sltsheryl"},"content":"            Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"sltsheryl"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"sltsheryl"},"content":"    public EditStudentDescriptor build() {","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"sltsheryl"},"content":"        return descriptor;","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"sltsheryl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"sltsheryl"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"sltsheryl":110}},{"path":"src/test/java/seedu/masslinkers/testutil/MassLinkersBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.testutil;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building massLinkers objects.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code MassLinkers ab \u003d new MassLinkersBuilder().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class MassLinkersBuilder {","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private MassLinkers massLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public MassLinkersBuilder() {","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        massLinkers \u003d new MassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public MassLinkersBuilder(MassLinkers massLinkers) {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.massLinkers \u003d massLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Student} to the {@code MassLinkers} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public MassLinkersBuilder withStudent(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        massLinkers.addStudent(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public MassLinkers build() {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return massLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"sltsheryl":4,"-":30}},{"path":"src/test/java/seedu/masslinkers/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.testutil;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":1,"-":71}},{"path":"src/test/java/seedu/masslinkers/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.testutil;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.GitHub;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Telegram;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StudentBuilder {","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"amybee\";","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_GITHUB \u003d \"amybee\";","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Telegram handle;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private GitHub username;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cInterest\u003e interests;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ObservableList\u003cMod\u003e mods;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public StudentBuilder() {","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        handle \u003d new Telegram(DEFAULT_TELEGRAM);","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        username \u003d new GitHub(DEFAULT_GITHUB);","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        interests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        mods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d studentToCopy.getPhone();","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        handle \u003d studentToCopy.getTelegram();","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        username \u003d studentToCopy.getGitHub();","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        interests \u003d new HashSet\u003c\u003e(studentToCopy.getInterests());","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        mods \u003d FXCollections.observableArrayList(studentToCopy.getMods());","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses the {@code interests} into a {@code Set\u003cInterest\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public StudentBuilder withInterests(String ... interests) {","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.interests \u003d SampleDataUtil.getInterestsSet(interests);","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses the {@code mods} into a {@code Set\u003cMod\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public StudentBuilder withMods(String ... mods) {","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.mods \u003d SampleDataUtil.getModSet(mods);","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Telegram} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public StudentBuilder withTelegram(String handle) {","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.handle \u003d new Telegram(handle);","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Sets the {@code GitHub} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public StudentBuilder withGitHub(String gitHub) {","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.username \u003d new GitHub(gitHub);","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public Student build() {","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return new Student(name, phone, email, handle, username, interests, mods);","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"sltsheryl":16,"-":106}},{"path":"src/test/java/seedu/masslinkers/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.testutil;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.AddCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.interest.Interest;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Mod;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Student.","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class StudentUtil {","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + student.getPhone().value + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_TELEGRAM + student.getTelegram().handle + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_GITHUB + student.getGitHub().username + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        student.getInterests().stream().forEach(","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_INTEREST + s.interestName + \" \")","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        student.getMods().stream().forEach(","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                s -\u003e sb.append(PREFIX_MOD + s.getModName() + \" \")","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static String getEditStudentDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getTelegram().ifPresent(telegram -\u003e sb.append(PREFIX_TELEGRAM).append(telegram.handle).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getGitHub().ifPresent(github -\u003e sb.append(PREFIX_GITHUB).append(github.username).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (descriptor.getInterests().isPresent()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Set\u003cInterest\u003e interests \u003d descriptor.getInterests().get();","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (interests.isEmpty()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_INTEREST);","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                interests.forEach(s -\u003e sb.append(PREFIX_INTEREST).append(s.interestName).append(\" \"));","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (descriptor.getMods().isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            ObservableList\u003cMod\u003e mods \u003d descriptor.getMods().get();","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            if (mods.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_MOD);","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                mods.forEach(s -\u003e sb.append(PREFIX_MOD).append(s.getModName()).append(\" \"));","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"sltsheryl":14,"-":65}},{"path":"src/test/java/seedu/masslinkers/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.testutil;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sltsheryl":4,"-":51}},{"path":"src/test/java/seedu/masslinkers/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.testutil;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"sltsheryl"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"sltsheryl":5,"-":7}},{"path":"src/test/java/seedu/masslinkers/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElijahS67"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.testutil;","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":4,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_INTEREST_AI;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"chm252"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_INTEREST_SWE;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.MassLinkers;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"sltsheryl"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"sltsheryl"},"content":"public class TypicalStudents {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"sltsheryl"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"sltsheryl"},"content":"            .withTelegram(\"alice\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"chm252"},"content":"            .withPhone(\"94351253\").withGitHub(\"alifur\").withInterests(\"AI\")","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"chm252"},"content":"            .withMods(\"CS2100\", \"CS1231S\").build();","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"sltsheryl"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"sltsheryl"},"content":"            .withTelegram(\"bensonhaha\").withGitHub(\"benji\")","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"chm252"},"content":"            .withInterests(\"AI\", \"SWE\").withMods(\"CS2100\", \"CS1231S\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"sltsheryl"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"sltsheryl"},"content":"            .withEmail(\"heinz@example.com\").withGitHub(\"carl69\")","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jonasgwt"},"content":"            .withTelegram(\"magcarlsen\").withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"sltsheryl"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"sltsheryl"},"content":"            .withEmail(\"cornelia@example.com\").withTelegram(\"dannylim\").withGitHub(\"dashi\")","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"chm252"},"content":"            .withInterests(\"AI\").withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"sltsheryl"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"jonasgwt"},"content":"            .withEmail(\"werner@example.com\").withGitHub(\"goldl8ol\").withTelegram(\"ellie\")","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"chm252"},"content":"            .withMods(\"CS2100\", \"CS1231S\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"sltsheryl"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"jonasgwt"},"content":"            .withEmail(\"lydia@example.com\").withGitHub(\"fiona\").withTelegram(\"fionalim\")","lastModifiedDate":"2022-10-29"},{"lineNumber":48,"author":{"gitId":"jonasgwt"},"content":"            .withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"sltsheryl"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"jonasgwt"},"content":"            .withEmail(\"anna@example.com\").withTelegram(\"georgesim\").withGitHub(\"pizzac0der\")","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jonasgwt"},"content":"            .withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"jonasgwt"},"content":"    // Only optional fields filled","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jonasgwt"},"content":"    public static final Student TOM \u003d new StudentBuilder().withName(\"Tom\").withTelegram(\"tommm\").build();","lastModifiedDate":"2022-10-29"},{"lineNumber":55,"author":{"gitId":"jonasgwt"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"sltsheryl"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"jonasgwt"},"content":"            .withEmail(\"stefan@example.com\").withTelegram(\"hoonmeier\").withGitHub(\"coderhoon\")","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"jonasgwt"},"content":"            .withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"sltsheryl"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"sltsheryl"},"content":"            .withGitHub(\"ida23\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jonasgwt"},"content":"            .withEmail(\"hans@example.com\").withTelegram(\"idamul\").withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"sltsheryl"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"sltsheryl"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"sltsheryl"},"content":"            .withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY).withGitHub(VALID_GITHUB_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"chm252"},"content":"            .withInterests(VALID_INTEREST_AI).withMods(\"CS2100\")","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"sltsheryl"},"content":"            .build();","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"sltsheryl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"sltsheryl"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"sltsheryl"},"content":"            .withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB).withGitHub(VALID_GITHUB_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"chm252"},"content":"            .withInterests(VALID_INTEREST_SWE, VALID_INTEREST_AI).withMods(\"CS2100\")","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"chm252"},"content":"    public static final Student BOB_WITHOUT_AI \u003d new StudentBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"ElijahS67"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"chm252"},"content":"            .withGitHub(VALID_GITHUB_BOB).withInterests(VALID_INTEREST_SWE).withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"ElijahS67"},"content":"    public static final Student BOB_WITHOUT_INTERESTS \u003d new StudentBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"ElijahS67"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"ElijahS67"},"content":"            .withGitHub(VALID_GITHUB_BOB).withMods(\"CS2100\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"sltsheryl"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"sltsheryl"},"content":"     * Returns an {@code MassLinkers} with all the typical students.","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"sltsheryl"},"content":"    public static MassLinkers getTypicalMassLinkers() {","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"sltsheryl"},"content":"        MassLinkers ab \u003d new MassLinkers();","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"sltsheryl"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"sltsheryl"},"content":"            ab.addStudent(student);","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":96,"author":{"gitId":"sltsheryl"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ElijahS67":5,"sltsheryl":44,"jonasgwt":12,"chm252":11,"-":27}},{"path":"src/test/java/seedu/masslinkers/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"sltsheryl":1,"-":34}},{"path":"src/test/java/seedu/masslinkers/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sltsheryl"},"content":"package seedu.masslinkers.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sltsheryl"},"content":"import static seedu.masslinkers.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"sltsheryl"},"content":"import seedu.masslinkers.MainApp;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"sltsheryl":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"\u003c?import seedu.masslinkers.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"sltsheryl":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"sltsheryl"},"content":"\u003cfx:root type\u003d\"seedu.masslinkers.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"sltsheryl":1,"-":5}}]
