[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W09-2/tp/branch/master/graph/badge.svg?token\u003d3BMHR6HHNQ)](https://codecov.io/gh/AY2223S1-CS2103T-W09-2/tp) [![CI Status](https://github.com/AY2223S1-CS2103T-W09-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W09-2/tp/actions)","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"* This is **a project for Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"* **`Financial Advisor Planner` (`FAP` for short)** is a desktop application targetted at Financial Advisors. Financial Advisors often have many potential and current clients to keep track of. Our product will provide an easy way to store, manage, search and view clients information to help Financial Advisors in managing their clients and appoitments.","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"  * As a financial advisor, you can keep track of your clients","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"  * As a financial advisor, you can view your appointments and schedule for the day","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"  * As a financial advisor, you can store important information such as client\u0027s risk appetites and yearly salary","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"* The project simulates an ongoing **brownfield software project** for a desktop application used to managing client information by Financial Advisors.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"  * It is developed by a team of 5 from NUS Computing, you can find out more about us **[here](https://ay2223s1-cs2103t-w09-2.github.io/tp/AboutUs.html)**.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"* It is named `Financial Advisor Planner`  because it allows financial advisors to plan their schedule and appointments with clients","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"* For the detailed documentation of this project, see the **[Financial Advisor Planner Website](https://ay2223s1-cs2103t-w09-2.github.io/tp/)**.","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"jialatteo":4,"rgonslayer":10,"-":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"run {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"task(guiTests)","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"guiTests {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    dependsOn test","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    systemProperty \u0027testfx.setup.timeout\u0027, \u002760000\u0027","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    doFirst {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"        boolean runGuiTests \u003d gradle.taskGraph.hasTask(guiTests)","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        if (!runGuiTests) {","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"            exclude \u0027seedu/address/ui/**\u0027","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"task headless {","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"    doFirst {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"        println \u0027Setting headless mode properties.\u0027","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"        test {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"            systemProperties \u003d [","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"                    \u0027java.awt.headless\u0027: \u0027true\u0027,","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"                    \u0027testfx.robot\u0027: \u0027glass\u0027,","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"                    \u0027testfx.headless\u0027: \u0027true\u0027,","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"                    \u0027prism.order\u0027: \u0027sw\u0027,","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"                    \u0027prism.text\u0027: \u0027t2k\u0027,","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"            ]","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"// Makes sure that headless properties are set before running tests","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"test.mustRunAfter headless","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"run {","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"rgonslayer"},"content":"    String jUnitVersion \u003d \u00275.9.0\u0027","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"    testImplementation \"org.testfx:testfx-core:4.0.16-alpha\"","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"    testImplementation \"org.junit.jupiter:junit-jupiter-api:5.5.1\"","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"    testImplementation \"org.testfx:testfx-junit5:4.0.16-alpha\"","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027headless\u0027","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":46,"rgonslayer":1,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"### Lee Sen Wei","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"\u003cimg src\u003d\"images/senwei01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"[[github](https://github.com/senwei01)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"[[portfolio](team/senwei01.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"### Chew Yew Keng","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"\u003cimg src\u003d\"images/rgonslayer.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"[[github](http://github.com/rgonslayer)]","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"[[portfolio](team/rgonslayer.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"wongyewjon"},"content":"### Wong Yew Jon","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"wongyewjon"},"content":"\u003cimg src\u003d\"images/wongyewjon.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"wongyewjon"},"content":"[[github](http://github.com/wongyewjon)]","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"wongyewjon"},"content":"[[portfolio](team/wongyewjon.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"### Muhammad Mus\u0027ab Bin Mustaffa","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"\u003cimg src\u003d\"images/muhdmusab.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"[[github](http://github.com/muhdmusab)]","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"[[portfolio](team/muhdmusab.md)]","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"### Gerald Teo Jin Wei","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"\u003cimg src\u003d\"images/jialatteo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"[[github](http://github.com/jialatteo)]","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"[[portfolio](team/jialatteo.md)]","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jialatteo":4,"rgonslayer":4,"MuhdMusab":4,"wongyewjon":4,"-":39,"senwei01":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"wongyewjon"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter`, `CalendarDisplay` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"wongyewjon"},"content":"* stores a `CommandHistory` object that represents the user’s command history. This is exposed to the outside as a `ReadOnlyCommandHistory` objects.","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"wongyewjon"},"content":"* can save command history data in text format and read them back into corresponding objects.","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"wongyewjon"},"content":"* inherits from `AddressBookStorage`, `UserPrefStorage` and `CommandHistoryStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"### Appointment feature","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"This feature represents an appointment between a user and a client. An appointment consists of a DateTime and a Location.","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"Overview of implementation for Appointment:","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"* `Appointment`- This is a class that stores information regarding an appointment of a specific client, such as the `DateTime` and `Location`.","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"* `DateTime`- This is a class that stores the Date and Time of an `Appointment`. It has a format of `d-MMM-yyyy hh:mm a` as a `String`.","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"* `Location`- This is a class that stores the location of an `Appointment`. It can take any `String` values, but it must not be blank.","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"* `JsonAdaptedAppointment`- This is a class that acts as a bridge between the `Appointment` class and `Storage` layer. It specifies how an `Appointment` object is converted to a JSON and vice versa.","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"* `AddAppointmentCommandParser`- This is a class that parses user input from a `String` to an `AddAppointmentCommand` object. Validation for the user\u0027s input is performed in this class.","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"* `AddAppointmentCommand`- This is a class where the logic for the Add Appointment command is specified and the `execute` method is called. It will access the `Model` layer to ensure that there will not be a duplicate `Appointment` and the maximum number of `Appointments` for the client has not been reached, followed by adding the `Appointment` to the `Model`.","lastModifiedDate":"2022-10-24"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"* `MaximumSortedList`- This is an abstraction that represents the list of `Appointments` for a specific client. It ensures that the `Appointments` are in sorted order according to chronological order, ensures that there is a maximum number, 3, of `Appointments` for each client and ensures that there are no duplicate `Appointments` for each client.","lastModifiedDate":"2022-10-24"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"The appointment feature currently supports 3 different commands.","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"1. `add appointment`","lastModifiedDate":"2022-10-24"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"2. `edit appointment`","lastModifiedDate":"2022-10-24"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"3. `delete appointment`","lastModifiedDate":"2022-10-24"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"#### Add Appointment Command","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"Step 1. When the user inputs an appropriate command `String` into the `CommandBox`, `LogicManager##execute(commandText)` is called. The command `String` is logged and then passed to `AddressBookParser##parseCommand(userInput)` which parses the command.","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"Step 2. If the user input matches the format for the command word for the `AddAppointmentCommand`, `AddressBookParser` will create an `AddAppointmentCommandParser` and will call the `AddAppointmentCommandParser##parse(args)` to parse the command.","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"Step 3. Validation for the user input is performed, such as validating the client\u0027s `Index`, the format of the `DateTime` and `Location`.","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"MuhdMusab"},"content":"Step 4. If the user input is valid, a new `AddAppointmentCommand` object is created and returned to the `LogicManager`.","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"MuhdMusab"},"content":"Step 5. `LogicManager` will call `AddAppointmentCommand##execute(model)` method. Further validation is performed, such as checking whether a duplicate `Appointment` exists and whether the user has already scheduled the maximum number, 3, of `Appointments` for the specified client.","lastModifiedDate":"2022-10-24"},{"lineNumber":186,"author":{"gitId":"MuhdMusab"},"content":"Step 6. If the command is valid, the `add` method of the `MaximumSortedList` containing the client\u0027s `Appointments` is called, which will update the `Person` and `Model`.","lastModifiedDate":"2022-10-24"},{"lineNumber":187,"author":{"gitId":"MuhdMusab"},"content":"Step 7. `AddAppointmentCommand` will create a `CommandResult` object and will return this created object back to `LogicManager`.","lastModifiedDate":"2022-10-24"},{"lineNumber":188,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"This is shown in the diagram below:","lastModifiedDate":"2022-10-24"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"MuhdMusab"},"content":"![Add Appointment Sequence Diagram](images/AddAppointmentCommandSequenceDiagram.png)","lastModifiedDate":"2022-10-24"},{"lineNumber":192,"author":{"gitId":"MuhdMusab"},"content":"\u003cbr\u003e *Figure xx: Add Appointment Command Sequence Diagram*","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"MuhdMusab"},"content":"**Aspect: How many `Appointments` can be added for each command**","lastModifiedDate":"2022-10-24"},{"lineNumber":196,"author":{"gitId":"MuhdMusab"},"content":"* **Alternative 1 (current choice):** Add only one `Appointment` in each command.","lastModifiedDate":"2022-10-24"},{"lineNumber":197,"author":{"gitId":"MuhdMusab"},"content":"  * Pros: Simpler input validation and length of user input is shorter, as the presence of multiple `DateTime` and `Location` fields has the potential to be very lengthy","lastModifiedDate":"2022-10-24"},{"lineNumber":198,"author":{"gitId":"MuhdMusab"},"content":"  * Cons: User has to execute the `aa` command multiple times to add all their desired `Appointments`","lastModifiedDate":"2022-10-24"},{"lineNumber":199,"author":{"gitId":"MuhdMusab"},"content":"* **Alternative 2**: Multiple `Appointments` can be added in each command","lastModifiedDate":"2022-10-24"},{"lineNumber":200,"author":{"gitId":"MuhdMusab"},"content":"  * Pros: Lower number of commands needed to be executed to add all the desired `Appointments`","lastModifiedDate":"2022-10-24"},{"lineNumber":201,"author":{"gitId":"MuhdMusab"},"content":"  * Cons: Complex input validation as unique `DateTimes` and `Locations` must be enforced within the command and alongside the existing `Appointments`. The maximum number of `Appointments` must also be enforced. Also, length of user input may be very long","lastModifiedDate":"2022-10-24"},{"lineNumber":202,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":203,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"rgonslayer"},"content":"### \\[Proposed\\] Filter feature","lastModifiedDate":"2022-10-22"},{"lineNumber":285,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":286,"author":{"gitId":"rgonslayer"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-22"},{"lineNumber":287,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":288,"author":{"gitId":"rgonslayer"},"content":"The proposed filter mechanism is facilitated by `FilteredAddressBook`. It extends `AddressBook` with a temporary history, stored internally as an `savedAddressBook`, with a `currentStatePointer` showing if the filtered list or the original list is shown. Additionally, it implements the following operations:","lastModifiedDate":"2022-10-22"},{"lineNumber":289,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":290,"author":{"gitId":"rgonslayer"},"content":"* `FilteredAddressBook#filter()` — Filters and saves the filtered address book state from the current address book state.","lastModifiedDate":"2022-10-22"},{"lineNumber":291,"author":{"gitId":"rgonslayer"},"content":"* `FilteredAddressBook#restore()` — Restores and shows the current address book state.","lastModifiedDate":"2022-10-22"},{"lineNumber":292,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":293,"author":{"gitId":"rgonslayer"},"content":"These operations are exposed in the `Model` interface as `Model#filterAddressBook()` and `Model#restoreAddressBook()` respectively.","lastModifiedDate":"2022-10-22"},{"lineNumber":294,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":295,"author":{"gitId":"rgonslayer"},"content":"Given below is an example usage scenario and how the filter mechanism behaves at each step.","lastModifiedDate":"2022-10-22"},{"lineNumber":296,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":297,"author":{"gitId":"rgonslayer"},"content":"Step 1. The user launches the application for the first time. The `FilteredAddressBook` will be initialized with the current address book state.","lastModifiedDate":"2022-10-22"},{"lineNumber":298,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":299,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":300,"author":{"gitId":"rgonslayer"},"content":"Step 2. The user executes `filter LOW` command to show only contacts with risk tag LOW in the address book. The `filter` command calls `Model#filterAddressBook()`, causing the modified state of the address book after the `filter LOW` command executes to be saved in the `savedAddressBook`, and the `currentStatePointer` is shifted to the filtered address book state.","lastModifiedDate":"2022-10-22"},{"lineNumber":301,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":302,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":303,"author":{"gitId":"rgonslayer"},"content":"The `clear` command does the opposite — it calls `Model#restoreAddressBook()`, which shifts the `currentStatePointer` to the current address book state, and restores the address book to that state.","lastModifiedDate":"2022-10-22"},{"lineNumber":304,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":305,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":306,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":307,"author":{"gitId":"rgonslayer"},"content":"Step 3. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#filterAddressBook()` or `Model#restoreAddressBook()`. Thus, the `savedAddressBook` remains unchanged.","lastModifiedDate":"2022-10-22"},{"lineNumber":308,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":309,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":310,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":311,"author":{"gitId":"rgonslayer"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-22"},{"lineNumber":312,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":313,"author":{"gitId":"rgonslayer"},"content":"**Aspect: How filter executes:**","lastModifiedDate":"2022-10-22"},{"lineNumber":314,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":315,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":316,"author":{"gitId":"rgonslayer"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2022-10-22"},{"lineNumber":317,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":318,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"jialatteo"},"content":"#### Parameter hint feature","lastModifiedDate":"2022-10-22"},{"lineNumber":324,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":325,"author":{"gitId":"jialatteo"},"content":"The feature allows a user to view the correct prefixes and arguments of a command before entering the command.","lastModifiedDate":"2022-10-22"},{"lineNumber":326,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":327,"author":{"gitId":"jialatteo"},"content":"The parameter hints for the command will be shown in the ResultDisplay once the command word is typed out.","lastModifiedDate":"2022-10-22"},{"lineNumber":328,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":329,"author":{"gitId":"MuhdMusab"},"content":"### Calendar features","lastModifiedDate":"2022-10-22"},{"lineNumber":330,"author":{"gitId":"wongyewjon"},"content":"The calendar feature allows a calendar to display with the corresponding appointments of the month in a calendar format. The feature consists of the following features:","lastModifiedDate":"2022-10-27"},{"lineNumber":331,"author":{"gitId":"wongyewjon"},"content":"* `Calendar Display` — Can display appointments of a month in a calendar format.","lastModifiedDate":"2022-10-27"},{"lineNumber":332,"author":{"gitId":"wongyewjon"},"content":"* `Calendar Navigation` — Can navigate between months with/without a mouse.","lastModifiedDate":"2022-10-27"},{"lineNumber":333,"author":{"gitId":"wongyewjon"},"content":"* `Calendar Pop-Up` — Can view the details of each appointment.","lastModifiedDate":"2022-10-27"},{"lineNumber":334,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":335,"author":{"gitId":"wongyewjon"},"content":"**Calendar Display**","lastModifiedDate":"2022-10-27"},{"lineNumber":336,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":337,"author":{"gitId":"wongyewjon"},"content":"Implementation:","lastModifiedDate":"2022-10-27"},{"lineNumber":338,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":339,"author":{"gitId":"wongyewjon"},"content":"The following is a more detailed explanation on how `Calendar Display` works.","lastModifiedDate":"2022-10-27"},{"lineNumber":340,"author":{"gitId":"wongyewjon"},"content":"1. When the app first launches, `MainWindow#fillInnerParts()` is called, which then initialises the `Calendar Display`. This then initialises the `CalendarLogic` and the relevant methods to build the the `Calendar Display`.","lastModifiedDate":"2022-10-27"},{"lineNumber":341,"author":{"gitId":"wongyewjon"},"content":"2. Following which, when appointments are added,`Model#updateCalendarEventList()` is called which then updates the `Calendar Display` as well.","lastModifiedDate":"2022-10-27"},{"lineNumber":342,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":343,"author":{"gitId":"wongyewjon"},"content":"The following activity diagram summarizes what happens when a user selects the Calendar tab:","lastModifiedDate":"2022-10-27"},{"lineNumber":344,"author":{"gitId":"wongyewjon"},"content":"![Calendar Display Activity](images/CalendarDisplayActivityDiagram.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":345,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":346,"author":{"gitId":"wongyewjon"},"content":"**Calendar Navigation**","lastModifiedDate":"2022-10-27"},{"lineNumber":347,"author":{"gitId":"MuhdMusab"},"content":"The Calendar navigation allows a user to navigate between different months in the calendar and also navigate between the different appointments within the current month.","lastModifiedDate":"2022-10-22"},{"lineNumber":348,"author":{"gitId":"MuhdMusab"},"content":"This feature uses JavaFX\u0027s FocusModel features to obtain different behaviours when a Ui component is focused.","lastModifiedDate":"2022-10-22"},{"lineNumber":349,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":350,"author":{"gitId":"wongyewjon"},"content":"Implementation:","lastModifiedDate":"2022-10-27"},{"lineNumber":351,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":352,"author":{"gitId":"wongyewjon"},"content":"The following is a more detailed explanation on how `Calendar Navigation` works.","lastModifiedDate":"2022-10-27"},{"lineNumber":353,"author":{"gitId":"MuhdMusab"},"content":"1. Clicking on the Next/Prev buttons to view the next/previous month in the calendar","lastModifiedDate":"2022-10-22"},{"lineNumber":354,"author":{"gitId":"MuhdMusab"},"content":"2. Pressing N or B key to view the next/previous month in the calendar","lastModifiedDate":"2022-10-22"},{"lineNumber":355,"author":{"gitId":"MuhdMusab"},"content":"3. Pressing the ENTER key when the Next/Prev button is focused to view the next/previous month in the calendar","lastModifiedDate":"2022-10-22"},{"lineNumber":356,"author":{"gitId":"wongyewjon"},"content":"4. Typing the date in the Jump Box and pressing the ENTER key to view the input month and year of the date.","lastModifiedDate":"2022-10-27"},{"lineNumber":357,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":358,"author":{"gitId":"wongyewjon"},"content":"The following activity diagram summarizes what happens when a user selects a navigation feature:","lastModifiedDate":"2022-10-27"},{"lineNumber":359,"author":{"gitId":"wongyewjon"},"content":"![Calendar Navigation Activity](images/CalendarNavigationActivityDiagram.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":360,"author":{"gitId":"wongyewjon"},"content":"#### Calendar Pop-up","lastModifiedDate":"2022-10-27"},{"lineNumber":361,"author":{"gitId":"wongyewjon"},"content":"The calendar Pop-up allows user to view the details of the appointment in the calendar","lastModifiedDate":"2022-10-27"},{"lineNumber":362,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":363,"author":{"gitId":"wongyewjon"},"content":"Implementation:","lastModifiedDate":"2022-10-27"},{"lineNumber":364,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":365,"author":{"gitId":"wongyewjon"},"content":"The following is a more detailed explanation on how `Calendar Pop-Up` works.","lastModifiedDate":"2022-10-27"},{"lineNumber":366,"author":{"gitId":"MuhdMusab"},"content":"1. Clicking on the Up/Down/Left/Right keys to view adjacent appointments oriented in space in the calendar","lastModifiedDate":"2022-10-22"},{"lineNumber":367,"author":{"gitId":"MuhdMusab"},"content":"2. Pressing SHIFT or SHIFT + TAB key to view the next/previous appointment in the calendar","lastModifiedDate":"2022-10-22"},{"lineNumber":368,"author":{"gitId":"MuhdMusab"},"content":"3. Clicking on a desired appointment to view the appointment in the calendar","lastModifiedDate":"2022-10-22"},{"lineNumber":369,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":370,"author":{"gitId":"wongyewjon"},"content":"The following activity diagram summarizes what happens when a user selects an appointment in the calendar tab:","lastModifiedDate":"2022-10-27"},{"lineNumber":371,"author":{"gitId":"wongyewjon"},"content":"![Calendar Pop-Up Activity](images/CalendarPopUpActivityDiagram.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":373,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":378,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":380,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"MuhdMusab"},"content":"* has a need to manage a significant number of clients","lastModifiedDate":"2022-09-21"},{"lineNumber":392,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":395,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"MuhdMusab"},"content":"* requires a secure app to store sensitive client details","lastModifiedDate":"2022-09-21"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"MuhdMusab"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app while ensuring that client details are safe and secure.","lastModifiedDate":"2022-09-21"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"| Priority | As a …​           | I want to …​                                                           | So that I can…​                                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"MuhdMusab"},"content":"|----------|-------------------|------------------------------------------------------------------------|------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-20"},{"lineNumber":407,"author":{"gitId":"wongyewjon"},"content":"| `* * *`  | financial advisor | add new client                                                         | keep track of the client\u0027s profile                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":408,"author":{"gitId":"wongyewjon"},"content":"| `* * *`  | financial advisor | delete a client                                                        | remove entries that are no longer needed                                           |","lastModifiedDate":"2022-09-28"},{"lineNumber":409,"author":{"gitId":"wongyewjon"},"content":"| `* * *`  | financial advisor | edit a client\u0027s profile                                                | update relevant and up-to-date information of the client                           |","lastModifiedDate":"2022-09-28"},{"lineNumber":410,"author":{"gitId":"wongyewjon"},"content":"| `* * *`  | financial advisor | search clients by name                                                 | retrieve information of clients without having to go through the entire list       |","lastModifiedDate":"2022-09-28"},{"lineNumber":411,"author":{"gitId":"wongyewjon"},"content":"| `* * *`  | financial advisor | sort clients by alphabetical order                                     | have an organised list of contacts                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":412,"author":{"gitId":"wongyewjon"},"content":"| `* * *`  | financial advisor | store important information of clients                                 | make pivotal decisions on how to better suit the clients\u0027 needs based on their information |","lastModifiedDate":"2022-09-28"},{"lineNumber":413,"author":{"gitId":"MuhdMusab"},"content":"| `* * *`  | financial advisor | store upcoming appointments for each client                            | keep track of all my upcoming appointments                                         |","lastModifiedDate":"2022-10-20"},{"lineNumber":414,"author":{"gitId":"wongyewjon"},"content":"| `* * `   | financial advisor | view the list of clients that are scheduled for meeting on a given day | be reminded and keep track of the scheduled meetings                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":415,"author":{"gitId":"wongyewjon"},"content":"| `* *`    | financial advisor | have an image of my client                                             | remember and recognise the clients during the meetings                             |","lastModifiedDate":"2022-09-28"},{"lineNumber":416,"author":{"gitId":"MuhdMusab"},"content":"| `* *`    | fast-typist       | navigate through the calendar with my keyboard                         | view all my appointments in the calendar quickly                                   |","lastModifiedDate":"2022-10-20"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"jialatteo"},"content":"(For all use cases below, the **System** is the `Financial Advisor Planner` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-24"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"wongyewjon"},"content":"**Use case: UC1 - Add a client**","lastModifiedDate":"2022-10-22"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"MuhdMusab"},"content":"1.  User inputs add command with the client\u0027s information","lastModifiedDate":"2022-09-21"},{"lineNumber":429,"author":{"gitId":"jialatteo"},"content":"2.  Financial Advisor Planner adds the client and their information to the list","lastModifiedDate":"2022-09-24"},{"lineNumber":430,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":431,"author":{"gitId":"MuhdMusab"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":432,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":433,"author":{"gitId":"MuhdMusab"},"content":"**Extensions**","lastModifiedDate":"2022-09-21"},{"lineNumber":434,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":435,"author":{"gitId":"MuhdMusab"},"content":"* 1a. Input fields are invalid","lastModifiedDate":"2022-09-21"},{"lineNumber":436,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":437,"author":{"gitId":"jialatteo"},"content":"  * 1a1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-09-24"},{"lineNumber":438,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":439,"author":{"gitId":"MuhdMusab"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":440,"author":{"gitId":"MuhdMusab"},"content":"* 1b. Any of the mandatory fields are not input by the user","lastModifiedDate":"2022-09-22"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":442,"author":{"gitId":"jialatteo"},"content":"    * 1b1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-09-24"},{"lineNumber":443,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":444,"author":{"gitId":"MuhdMusab"},"content":"      Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":445,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":446,"author":{"gitId":"wongyewjon"},"content":"**Use case: UC2 - Delete a client**","lastModifiedDate":"2022-10-22"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"MuhdMusab"},"content":"1.  User requests to list clients","lastModifiedDate":"2022-09-22"},{"lineNumber":451,"author":{"gitId":"jialatteo"},"content":"2.  Financial Advisor Planner shows a list of clients","lastModifiedDate":"2022-09-24"},{"lineNumber":452,"author":{"gitId":"MuhdMusab"},"content":"3.  User requests to delete a specific client in the list","lastModifiedDate":"2022-09-22"},{"lineNumber":453,"author":{"gitId":"jialatteo"},"content":"4.  Financial Advisor Planner deletes the client","lastModifiedDate":"2022-09-24"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"jialatteo"},"content":"    * 3a1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-09-24"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"wongyewjon"},"content":"**Use case: UC3 - Edit client details**","lastModifiedDate":"2022-10-22"},{"lineNumber":470,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":471,"author":{"gitId":"MuhdMusab"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":472,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":473,"author":{"gitId":"MuhdMusab"},"content":"1. User requests to list clients","lastModifiedDate":"2022-09-22"},{"lineNumber":474,"author":{"gitId":"jialatteo"},"content":"2. Financial Advisor Planner shows a list of clients","lastModifiedDate":"2022-09-24"},{"lineNumber":475,"author":{"gitId":"MuhdMusab"},"content":"3. User requests to edit the details of a client at the specified index","lastModifiedDate":"2022-09-22"},{"lineNumber":476,"author":{"gitId":"jialatteo"},"content":"4. Financial Advisor Planner edits the details of the specified client in the list","lastModifiedDate":"2022-09-24"},{"lineNumber":477,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":478,"author":{"gitId":"MuhdMusab"},"content":"    Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":479,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":480,"author":{"gitId":"MuhdMusab"},"content":"**Extensions**","lastModifiedDate":"2022-09-22"},{"lineNumber":481,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":482,"author":{"gitId":"MuhdMusab"},"content":"* 3a. User did not input any arguments.","lastModifiedDate":"2022-09-22"},{"lineNumber":483,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":484,"author":{"gitId":"jialatteo"},"content":"    * 3a1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-09-24"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"MuhdMusab"},"content":"* 3b. The given index is invalid.","lastModifiedDate":"2022-09-22"},{"lineNumber":489,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":490,"author":{"gitId":"jialatteo"},"content":"    * 3b1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-09-24"},{"lineNumber":491,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":492,"author":{"gitId":"MuhdMusab"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-22"},{"lineNumber":493,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":494,"author":{"gitId":"wongyewjon"},"content":"**Use case: UC4 - Clear Financial Advisor Planner**","lastModifiedDate":"2022-10-22"},{"lineNumber":495,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":496,"author":{"gitId":"MuhdMusab"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":497,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":498,"author":{"gitId":"MuhdMusab"},"content":"1.  User requests to clear the list of clients","lastModifiedDate":"2022-09-22"},{"lineNumber":499,"author":{"gitId":"jialatteo"},"content":"2.  Financial Advisor Planner shows a success message","lastModifiedDate":"2022-09-24"},{"lineNumber":500,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":501,"author":{"gitId":"MuhdMusab"},"content":"    Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":502,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":503,"author":{"gitId":"wongyewjon"},"content":"**Use case: UC5 - Find client**","lastModifiedDate":"2022-10-22"},{"lineNumber":504,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":505,"author":{"gitId":"MuhdMusab"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":506,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":507,"author":{"gitId":"MuhdMusab"},"content":"1. User requests to find clients containing input keyword(s)","lastModifiedDate":"2022-09-22"},{"lineNumber":508,"author":{"gitId":"jialatteo"},"content":"2. Financial Advisor Planner shows a list of clients with the matching keyword(s)","lastModifiedDate":"2022-09-24"},{"lineNumber":509,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":510,"author":{"gitId":"MuhdMusab"},"content":"    Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":511,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":512,"author":{"gitId":"wongyewjon"},"content":"**Use case: UC6 - Add an appointment**","lastModifiedDate":"2022-10-22"},{"lineNumber":513,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":514,"author":{"gitId":"MuhdMusab"},"content":"**MSS**","lastModifiedDate":"2022-10-20"},{"lineNumber":515,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":516,"author":{"gitId":"MuhdMusab"},"content":"1. User inputs add appointment command with the appointment details for a specific client","lastModifiedDate":"2022-10-20"},{"lineNumber":517,"author":{"gitId":"MuhdMusab"},"content":"2. Financial Advisor Planner adds the appointment to the list of appointments for the specified client","lastModifiedDate":"2022-10-20"},{"lineNumber":518,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":519,"author":{"gitId":"MuhdMusab"},"content":"    Use case ends.","lastModifiedDate":"2022-10-20"},{"lineNumber":520,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":521,"author":{"gitId":"MuhdMusab"},"content":"   **Extensions**","lastModifiedDate":"2022-10-20"},{"lineNumber":522,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":523,"author":{"gitId":"MuhdMusab"},"content":"* 1a. User did not input any arguments.","lastModifiedDate":"2022-10-20"},{"lineNumber":524,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":525,"author":{"gitId":"MuhdMusab"},"content":"    * 1a1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-20"},{"lineNumber":526,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":527,"author":{"gitId":"MuhdMusab"},"content":"      Use case ends.","lastModifiedDate":"2022-10-20"},{"lineNumber":528,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":529,"author":{"gitId":"MuhdMusab"},"content":"* 1b. The given index is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":530,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":531,"author":{"gitId":"MuhdMusab"},"content":"    * 1b1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-20"},{"lineNumber":532,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":533,"author":{"gitId":"MuhdMusab"},"content":"      Use case ends.","lastModifiedDate":"2022-10-20"},{"lineNumber":534,"author":{"gitId":"MuhdMusab"},"content":"    ","lastModifiedDate":"2022-10-20"},{"lineNumber":535,"author":{"gitId":"MuhdMusab"},"content":"* 1c. The given date and time has an incorrect format.","lastModifiedDate":"2022-10-20"},{"lineNumber":536,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":537,"author":{"gitId":"MuhdMusab"},"content":"    * 1c1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-20"},{"lineNumber":538,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":539,"author":{"gitId":"MuhdMusab"},"content":"      Use case ends.","lastModifiedDate":"2022-10-20"},{"lineNumber":540,"author":{"gitId":"MuhdMusab"},"content":"    ","lastModifiedDate":"2022-10-20"},{"lineNumber":541,"author":{"gitId":"MuhdMusab"},"content":"* 1d. The input appointment already exists for the specified client","lastModifiedDate":"2022-10-20"},{"lineNumber":542,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":543,"author":{"gitId":"MuhdMusab"},"content":"    * 1d1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-20"},{"lineNumber":544,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":545,"author":{"gitId":"MuhdMusab"},"content":"      Use case ends.","lastModifiedDate":"2022-10-20"},{"lineNumber":546,"author":{"gitId":"MuhdMusab"},"content":"    ","lastModifiedDate":"2022-10-20"},{"lineNumber":547,"author":{"gitId":"MuhdMusab"},"content":"* 1e. The specified client already has the maximum number of appointments","lastModifiedDate":"2022-10-20"},{"lineNumber":548,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":549,"author":{"gitId":"MuhdMusab"},"content":"    * 1e1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-20"},{"lineNumber":550,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":551,"author":{"gitId":"MuhdMusab"},"content":"      Use case ends.","lastModifiedDate":"2022-10-20"},{"lineNumber":552,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":553,"author":{"gitId":"jialatteo"},"content":"**Use case: UC7 - Edit an appointment**","lastModifiedDate":"2022-10-22"},{"lineNumber":554,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":555,"author":{"gitId":"jialatteo"},"content":"**MSS**","lastModifiedDate":"2022-10-22"},{"lineNumber":556,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":557,"author":{"gitId":"jialatteo"},"content":"1. User inputs edit appointment command with the new field/s (location, datetime) for a specific client","lastModifiedDate":"2022-10-22"},{"lineNumber":558,"author":{"gitId":"jialatteo"},"content":"2. Financial Advisor Planner edits the appointment for the specified client","lastModifiedDate":"2022-10-22"},{"lineNumber":559,"author":{"gitId":"jialatteo"},"content":"3. The client\u0027s list of appointments is reordered using the date time of each appointment","lastModifiedDate":"2022-10-22"},{"lineNumber":560,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":561,"author":{"gitId":"jialatteo"},"content":"   Use case ends.","lastModifiedDate":"2022-10-22"},{"lineNumber":562,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":563,"author":{"gitId":"jialatteo"},"content":"   **Extensions**","lastModifiedDate":"2022-10-22"},{"lineNumber":564,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":565,"author":{"gitId":"jialatteo"},"content":"* 1a. User did not input any arguments.","lastModifiedDate":"2022-10-22"},{"lineNumber":566,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":567,"author":{"gitId":"jialatteo"},"content":"    * 1a1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-22"},{"lineNumber":568,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":569,"author":{"gitId":"jialatteo"},"content":"      Use case ends.","lastModifiedDate":"2022-10-22"},{"lineNumber":570,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":571,"author":{"gitId":"jialatteo"},"content":"* 1b. The given person/appointment index is invalid.","lastModifiedDate":"2022-10-22"},{"lineNumber":572,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":573,"author":{"gitId":"jialatteo"},"content":"    * 1b1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-22"},{"lineNumber":574,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":575,"author":{"gitId":"jialatteo"},"content":"      Use case ends.","lastModifiedDate":"2022-10-22"},{"lineNumber":576,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":577,"author":{"gitId":"jialatteo"},"content":"* 1c. The given date and time has an incorrect format.","lastModifiedDate":"2022-10-22"},{"lineNumber":578,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":579,"author":{"gitId":"jialatteo"},"content":"    * 1c1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-22"},{"lineNumber":580,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":581,"author":{"gitId":"jialatteo"},"content":"      Use case ends.","lastModifiedDate":"2022-10-22"},{"lineNumber":582,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":583,"author":{"gitId":"jialatteo"},"content":"* 1d. The given location has an incorrect format","lastModifiedDate":"2022-10-22"},{"lineNumber":584,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":585,"author":{"gitId":"jialatteo"},"content":"    * 1d1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-22"},{"lineNumber":586,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":587,"author":{"gitId":"jialatteo"},"content":"      Use case ends.","lastModifiedDate":"2022-10-22"},{"lineNumber":588,"author":{"gitId":"jialatteo"},"content":"    ","lastModifiedDate":"2022-10-22"},{"lineNumber":589,"author":{"gitId":"jialatteo"},"content":"* 1e. The newly edited appointment already exists for the specified client","lastModifiedDate":"2022-10-22"},{"lineNumber":590,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":591,"author":{"gitId":"jialatteo"},"content":"    * 1e1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-22"},{"lineNumber":592,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":593,"author":{"gitId":"jialatteo"},"content":"      Use case ends.","lastModifiedDate":"2022-10-22"},{"lineNumber":594,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":595,"author":{"gitId":"jialatteo"},"content":"    ","lastModifiedDate":"2022-10-22"},{"lineNumber":596,"author":{"gitId":"jialatteo"},"content":"**Use case: UC8 - Sort contacts by keywords**","lastModifiedDate":"2022-10-22"},{"lineNumber":597,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":598,"author":{"gitId":"senwei01"},"content":"**MSS**","lastModifiedDate":"2022-10-21"},{"lineNumber":599,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":600,"author":{"gitId":"senwei01"},"content":"1.  User requests to sort clients by keyword(s)","lastModifiedDate":"2022-10-21"},{"lineNumber":601,"author":{"gitId":"senwei01"},"content":"2.  Financial Advisor Planner shows a list of clients sorted by the matching keyword(s)","lastModifiedDate":"2022-10-21"},{"lineNumber":602,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":603,"author":{"gitId":"senwei01"},"content":"    Use case ends.","lastModifiedDate":"2022-10-21"},{"lineNumber":604,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":605,"author":{"gitId":"senwei01"},"content":"    **Extensions**","lastModifiedDate":"2022-10-21"},{"lineNumber":606,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":607,"author":{"gitId":"senwei01"},"content":"* 1a. User did not input any arguments.","lastModifiedDate":"2022-10-21"},{"lineNumber":608,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":609,"author":{"gitId":"senwei01"},"content":"    * 1a1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-21"},{"lineNumber":610,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":611,"author":{"gitId":"senwei01"},"content":"      Use case ends.","lastModifiedDate":"2022-10-21"},{"lineNumber":612,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":613,"author":{"gitId":"senwei01"},"content":"* 1b. The given keyword is invalid.","lastModifiedDate":"2022-10-21"},{"lineNumber":614,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":615,"author":{"gitId":"senwei01"},"content":"    * 1b1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-21"},{"lineNumber":616,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":617,"author":{"gitId":"senwei01"},"content":"      Use case ends.","lastModifiedDate":"2022-10-21"},{"lineNumber":618,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":619,"author":{"gitId":"senwei01"},"content":"* 1c. User did not input any keywords.","lastModifiedDate":"2022-10-21"},{"lineNumber":620,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":621,"author":{"gitId":"senwei01"},"content":"    * 1c1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-10-21"},{"lineNumber":622,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":623,"author":{"gitId":"senwei01"},"content":"      Use case ends.","lastModifiedDate":"2022-10-21"},{"lineNumber":624,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":625,"author":{"gitId":"jialatteo"},"content":"**Use case: UC9 - Display appointments of the current month in a calendar view**","lastModifiedDate":"2022-10-22"},{"lineNumber":626,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":627,"author":{"gitId":"wongyewjon"},"content":"**MSS**","lastModifiedDate":"2022-10-22"},{"lineNumber":628,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":629,"author":{"gitId":"wongyewjon"},"content":"1. User \u003cins\u003eadd an appointment(UC6)\u003c/ins\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":630,"author":{"gitId":"wongyewjon"},"content":"2. User requests to view all the appointments in a calendar view of the current month","lastModifiedDate":"2022-10-22"},{"lineNumber":631,"author":{"gitId":"wongyewjon"},"content":"3. Financial Advisor Planner shows all the appointments in a given month according to their dates","lastModifiedDate":"2022-10-22"},{"lineNumber":632,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":633,"author":{"gitId":"wongyewjon"},"content":"    Use case ends.","lastModifiedDate":"2022-10-22"},{"lineNumber":634,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":635,"author":{"gitId":"wongyewjon"},"content":"    **Extensions**","lastModifiedDate":"2022-10-22"},{"lineNumber":636,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":637,"author":{"gitId":"wongyewjon"},"content":"* 1a. User \u003cins\u003efind clients with matching keyword(s)(UC5)\u003c/ins\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":638,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":639,"author":{"gitId":"wongyewjon"},"content":"    * 1a1. Financial Advisor Planner shows the appointments of the all the clients in a calendar view.","lastModifiedDate":"2022-10-22"},{"lineNumber":640,"author":{"gitId":"wongyewjon"},"content":"    * 1a2. User refreshes the calendar display.","lastModifiedDate":"2022-10-22"},{"lineNumber":641,"author":{"gitId":"wongyewjon"},"content":"    * 1a3. Financial Advisor Planner shows the appointments of the given clients in a calendar view.","lastModifiedDate":"2022-10-22"},{"lineNumber":642,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":643,"author":{"gitId":"wongyewjon"},"content":"      Use case ends.","lastModifiedDate":"2022-10-22"},{"lineNumber":644,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":645,"author":{"gitId":"wongyewjon"},"content":"* 2a. User could not see the appointment that was recently added.","lastModifiedDate":"2022-10-22"},{"lineNumber":646,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":647,"author":{"gitId":"wongyewjon"},"content":"    * 2a1. User refreshes the calendar display.","lastModifiedDate":"2022-10-22"},{"lineNumber":648,"author":{"gitId":"wongyewjon"},"content":"    * 2a2. Financial Advisor Planner shows the appointments of the all clients in a calendar view, including the recently added appointment.","lastModifiedDate":"2022-10-22"},{"lineNumber":649,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":650,"author":{"gitId":"wongyewjon"},"content":"      Use case ends.","lastModifiedDate":"2022-10-22"},{"lineNumber":651,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":652,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":653,"author":{"gitId":"jialatteo"},"content":"**Use case: UC10 - Display appointments of a new month in a calendar view**","lastModifiedDate":"2022-10-22"},{"lineNumber":654,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":655,"author":{"gitId":"wongyewjon"},"content":"**MSS**","lastModifiedDate":"2022-10-22"},{"lineNumber":656,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":657,"author":{"gitId":"wongyewjon"},"content":"1. User requests to view all the appointments of a new month in a calendar view","lastModifiedDate":"2022-10-22"},{"lineNumber":658,"author":{"gitId":"wongyewjon"},"content":"2. Financial Advisor Planner shows all the appointments in the given new month according to their dates","lastModifiedDate":"2022-10-22"},{"lineNumber":659,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":660,"author":{"gitId":"wongyewjon"},"content":"    Use case ends.","lastModifiedDate":"2022-10-22"},{"lineNumber":661,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":662,"author":{"gitId":"-"},"content":"    *{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"jialatteo"},"content":"4. Should execute command within 1 second","lastModifiedDate":"2022-09-24"},{"lineNumber":670,"author":{"gitId":"jialatteo"},"content":"5. Should work without an internet connection","lastModifiedDate":"2022-09-24"},{"lineNumber":671,"author":{"gitId":"jialatteo"},"content":"6. Should be reliable and bug free","lastModifiedDate":"2022-09-24"},{"lineNumber":672,"author":{"gitId":"jialatteo"},"content":"7. Stored data should be backwards compatible with older versions","lastModifiedDate":"2022-09-24"},{"lineNumber":673,"author":{"gitId":"jialatteo"},"content":"8. Stored data should be secure and only accessible by user","lastModifiedDate":"2022-09-24"},{"lineNumber":674,"author":{"gitId":"jialatteo"},"content":"9. User interface should be usable for beginners","lastModifiedDate":"2022-09-24"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":676,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"jialatteo"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2022-09-24"},{"lineNumber":683,"author":{"gitId":"jialatteo"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2022-09-24"},{"lineNumber":684,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":685,"author":{"gitId":"jialatteo"},"content":"*{More to be added}*","lastModifiedDate":"2022-09-24"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":690,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"jialatteo"},"content":"### Adding an appointment","lastModifiedDate":"2022-10-21"},{"lineNumber":717,"author":{"gitId":"jialatteo"},"content":"1. Adding valid appointments until maximum appointment limit for a client is reached while all persons are being shown","lastModifiedDate":"2022-10-21"},{"lineNumber":718,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":719,"author":{"gitId":"jialatteo"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list. No person has existing appointments scheduled.","lastModifiedDate":"2022-10-21"},{"lineNumber":720,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":721,"author":{"gitId":"jialatteo"},"content":"    1. Test case: `aa 1 d/21-Jan-2023 12:30 PM l/Jurong Point, Starbucks`\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":722,"author":{"gitId":"jialatteo"},"content":"       Expected: Person at index 1 has an appointment added. Details of the newly added appointment is shown in the status message.","lastModifiedDate":"2022-10-21"},{"lineNumber":723,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":724,"author":{"gitId":"jialatteo"},"content":"    1. Test case: `aa 1 d/23-Jan-2023 12:30 PM l/Jurong Point, Starbucks`\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":725,"author":{"gitId":"jialatteo"},"content":"       Expected: Person at index 1 has an appointment added. Details of the newly added appointment is shown in the status message.","lastModifiedDate":"2022-10-21"},{"lineNumber":726,"author":{"gitId":"jialatteo"},"content":"       The GUI correctly reorders the appointment list by date and time.","lastModifiedDate":"2022-10-21"},{"lineNumber":727,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":728,"author":{"gitId":"jialatteo"},"content":"    1. Test case: `aa 1 d/22-Jan-2023 12:30 PM l/Jurong Point, Starbucks`\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":729,"author":{"gitId":"jialatteo"},"content":"      Expected: Person at index 1 has an appointment added. Details of the newly added appointment is shown in the status message.","lastModifiedDate":"2022-10-21"},{"lineNumber":730,"author":{"gitId":"jialatteo"},"content":"      The GUI correctly reorders the appointment list by date and time.","lastModifiedDate":"2022-10-21"},{"lineNumber":731,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":732,"author":{"gitId":"jialatteo"},"content":"    1. Test case: `aa 1 d/24-Jan-2023 12:30 PM l/Jurong Point, Starbucks`\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":733,"author":{"gitId":"jialatteo"},"content":"       Expected: No appointment is added. Error details will show that the user has reached the maximum number of appointments(3) scheduled for this client","lastModifiedDate":"2022-10-21"},{"lineNumber":734,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":735,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jialatteo":95,"MuhdMusab":155,"rgonslayer":35,"wongyewjon":80,"-":366,"senwei01":27}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"## 1. Introduction","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"Financial Advisor Planner (FAP) is a **desktop app for Financial Advisors (FA) to manage their clients, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FAP can get your client management tasks done faster than traditional GUI apps. With FAP, you can now ","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"## 2. About","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"### 2.1 Navigating the User Guide","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"This section aims to help you navigate the user guide.","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"1. The next subsection [Section 2.2, Tips for reading the User Guide](#22-tips-for-reading-the-user-guide), provides some tips on reading this document.","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"2. [Section 3, Quick start](#3-quick-start) has been provided to help you set up **Financial Advisor Planner**.","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"3. [Section 4, Prefixes](#4-prefixes) has been provided where the prefixes are documented.","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"4. [Section 5, Features](#5-features) has been provided where the main features and their commands are documented.","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"5. [Section 8, Glossary](#8-glossary) has been provided where certain terms that are used in this document are defined.","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"### 2.2 Tips for reading the User Guide","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"#### 2.2.1 General Symbols and Syntax","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"Symbol/Syntax        | Meaning","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"---------------------|------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"`command`            | indicates commands or keywords related to commands that can be executed by the application.","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":":bulb:               | indicates that the enclosed text is a tip","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":":exclamation:        | indicates that the enclosed text is a warning and usually gives details about potential errors.","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":":information_source: | indicates that the enclosed text are extra notes and information regarding the topic.","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"## 3. Quick start","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"2. Download the latest `FAP.jar` from [here](https://github.com/AY2223S1-CS2103T-W09-2/tp/releases).","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your FAP.","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"senwei01"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 i/60000 r/LOW m/1000 c/POTENTIAL` : Adds a contact named `John Doe` to the list of clients.","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"   * **`aa`** `1 d/21-Jan-2023 12:30 PM l/Jurong Point, Starbucks` : Adds an appointment to the client in index 1 of the contact book with the date, time and location of the appointment.","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"senwei01"},"content":"   * **`sort KEYWORD`** : Sorts the contacts based on the `KEYWORD`.","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"senwei01"},"content":"   * **`find`** `n/John`: looks for contact that matches keyword ‘John’","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"senwei01"},"content":"6. Refer to the [Features](#5-features) below for details of each command.","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"senwei01"},"content":"#### 3.1 Graphical User Interface overview","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"senwei01"},"content":"The following figures show the overall GUI of **FAP**","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"senwei01"},"content":"![ContactsTabGraphic](images/ContactsTabGraphic.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"senwei01"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"senwei01"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"senwei01"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"senwei01"},"content":"![CalendarTabGraphic](images/CalendarTabGraphic.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"            :bulb: **Tip:** Use the `clear` command to delete the sample data when using the application for the first time.","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"senwei01"},"content":"## 4. Prefixes","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"senwei01"},"content":"Prefixes are an indicator for a specific type of parameter to be input during any command. The following section shows the type of prefixes that are used in the app.","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"senwei01"},"content":"Format: `Prefix/Parameter`","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"senwei01"},"content":"1. n/NAME","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"senwei01"},"content":"2. p/PHONE","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"senwei01"},"content":"3. e/EMAIL","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"senwei01"},"content":"4. a/ADDRESS","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"senwei01"},"content":"5. i/YEARLY_INCOME","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"senwei01"},"content":"6. m/MONTHLY_CONTRIBUTIONS","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"rgonslayer"},"content":"7. c/CLIENT_TYPE","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"rgonslayer"},"content":"8. r/RISK_APPETITE","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"rgonslayer"},"content":"9. ip/INVESTMENT_PLAN","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"rgonslayer"},"content":"10. t/TAG","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"senwei01"},"content":"11. l/Location ","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"senwei01"},"content":"12. d/DATE_AND_TIME","lastModifiedDate":"2022-11-01"},{"lineNumber":102,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":103,"author":{"gitId":"senwei01"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-11-01"},{"lineNumber":104,"author":{"gitId":"senwei01"},"content":"Prefix l/Location is a lower case L, and not an I. \u003c/div\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"senwei01"},"content":"## 5. Features","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"senwei01"},"content":"This section contains all the information pertaining to the features of **FAP**","lastModifiedDate":"2022-11-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"rgonslayer"},"content":"* If a parameter is expected only once in the command but if you specify it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"* Parameter hints will be shown after a command action.","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"**:warning: Warning regarding the use of the application:**\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"senwei01"},"content":"Other crucial files will be created and stored in the same folder that contains **FAP.jar**. These files are responsible for storing your data, hence it is advised to not delete or modify these files.","lastModifiedDate":"2022-11-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"senwei01"},"content":"### 5.1 General command features","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"senwei01"},"content":"For more information on the command features, take a look at [Section 6, FAQ](#6-faq).","lastModifiedDate":"2022-11-01"},{"lineNumber":147,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":148,"author":{"gitId":"senwei01"},"content":"#### 5.1.1 Viewing help : `help`","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"senwei01"},"content":"#### 5.1.2 Adding a client: `add`","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"Adds a client to the list of clients. ","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"senwei01"},"content":"This command is case-sensitive for the parameter NAME.","lastModifiedDate":"2022-11-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"senwei01"},"content":"Format: `add n/NAME p/PHONE e/EMAIL a/ADDRESS i/YEARLY_INCOME m/MONTHLY_CONTRIBUTIONS r/RISK_APPETITE ip/INVESTMENT_PLAN c/CLIENT_TYPE [t/TAG]…​`","lastModifiedDate":"2022-11-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** ","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"RISK_APPETITE can only have the values ‘HIGH’, ‘MEDIUM’ or ‘LOW’","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"senwei01"},"content":"INVESTMENT_PLAN must end with the word Plan","lastModifiedDate":"2022-11-01"},{"lineNumber":171,"author":{"gitId":"senwei01"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":172,"author":{"gitId":"senwei01"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"CLIENT_TYPE can only have the values ‘POTENTIAL’ or ‘CURRENT’","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"senwei01"},"content":"Do note that t/TAG is an OPTIONAL TAG, the rest are compulsory. That is to say that a client can have any number of tags, including 0.","lastModifiedDate":"2022-11-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"rgonslayer"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 i/$200000 m/$5000 c/POTENTIAL r/Medium ip/Savings Plan`","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"senwei01"},"content":"#### 5.1.3 Listing all clients : `list`","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"MuhdMusab"},"content":"Shows a list of all clients in the client list.","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"senwei01"},"content":"#### 5.1.4 Editing a client : `edit`","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"Edits an existing client in the list of clients.","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"senwei01"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [i/YEARLY_INCOME] [m/MONTHLY_CONTRIBUTIONS] [r/RISK_APPETITE] [ip/INVESTMENT PLAN] [c/CLIENT_TYPE] [t/TAG]…​`","lastModifiedDate":"2022-11-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"* Edits the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3,…​","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"senwei01"},"content":"* At least one of the fields must be provided.","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"MuhdMusab"},"content":"* When editing tags, the existing tags of the client will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"MuhdMusab"},"content":"* You can remove all the client’s tags by typing `t/` without","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"MuhdMusab"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st client to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"MuhdMusab"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd client to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"senwei01"},"content":"#### 5.1.5 Filtering persons by keyword: `find`","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"MuhdMusab"},"content":"Finds clients whose names contain any of the given keywords.","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"senwei01"},"content":"Format: `find [PREFIX] KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-11-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"senwei01"},"content":"Refer to [Prefixes](#4-prefixes) for the types of prefixes.","lastModifiedDate":"2022-11-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"MuhdMusab"},"content":"* The search is case-insensitive. e.g hans will match Hans","lastModifiedDate":"2022-09-29"},{"lineNumber":214,"author":{"gitId":"MuhdMusab"},"content":"* The order of the keywords does not matter. e.g. Hans Bo will match Bo Hans","lastModifiedDate":"2022-09-29"},{"lineNumber":215,"author":{"gitId":"MuhdMusab"},"content":"* Only full words will be matched e.g. Han will not match Hans","lastModifiedDate":"2022-09-29"},{"lineNumber":216,"author":{"gitId":"MuhdMusab"},"content":"* Clients matching at least one keyword will be returned (i.e. OR search). e.g. Hans Bo will return Hans Gruber, Bo Yang","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"MuhdMusab"},"content":"* The search also applies to other information available such as mobile number or policy numbers.","lastModifiedDate":"2022-09-29"},{"lineNumber":218,"author":{"gitId":"MuhdMusab"},"content":"  E.g John Doe has the mobile number 87438807","lastModifiedDate":"2022-09-29"},{"lineNumber":219,"author":{"gitId":"senwei01"},"content":"    * find p/87438807 will return John Doe","lastModifiedDate":"2022-11-01"},{"lineNumber":220,"author":{"gitId":"MuhdMusab"},"content":"* The search can be limited to certain categories by using find [CATEGORY] KEYWORD instead.","lastModifiedDate":"2022-09-29"},{"lineNumber":221,"author":{"gitId":"senwei01"},"content":"  * E.g find p/87438807 will return John Doe","lastModifiedDate":"2022-11-01"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"senwei01"},"content":"john - `HIGH`, Alex Yeoh - `HIGH`, David Li - `MEDIUM`, John Doe - `LOW` ","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"senwei01"},"content":"* `find n/ John` returns `john` and `John Doe`","lastModifiedDate":"2022-10-26"},{"lineNumber":228,"author":{"gitId":"senwei01"},"content":"* `find n/ alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"senwei01"},"content":"* `find r/ high` returns `john` and `Alex Yeoh`\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":230,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"senwei01"},"content":"#### 5.1.6 Deleting a client : `delete`","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"MuhdMusab"},"content":"Deletes the specified client from the list of clients.","lastModifiedDate":"2022-10-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"MuhdMusab"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"MuhdMusab"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2022-10-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"MuhdMusab"},"content":"* `list` followed by `delete 2` deletes the 2nd client in the list of clients.","lastModifiedDate":"2022-10-26"},{"lineNumber":243,"author":{"gitId":"senwei01"},"content":"* `find n/Betsy` followed by `delete 1` deletes the 1st client in the results of the `find` command.","lastModifiedDate":"2022-11-01"},{"lineNumber":244,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":245,"author":{"gitId":"senwei01"},"content":"#### 5.1.7 Sorting: `sort KEYWORD`/  `sort KEYWORD desc`","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":247,"author":{"gitId":"senwei01"},"content":"* Sorts the contacts shown in the list of clients by alphabetical order. It is ascending by default.","lastModifiedDate":"2022-11-02"},{"lineNumber":248,"author":{"gitId":"senwei01"},"content":"* You can sort the contacts in descending order by adding `desc` behind the `KEYWORD`.","lastModifiedDate":"2022-11-02"},{"lineNumber":249,"author":{"gitId":"senwei01"},"content":"* The `KEYWORD` is case-insensitive. e.g. sort NaME is the same as sort name. However, do note that the command word sort is case sensitive and must be in lower case.","lastModifiedDate":"2022-11-02"},{"lineNumber":250,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":251,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":252,"author":{"gitId":"senwei01"},"content":"Format: sort `KEYWORD` / sort `KEYWORD desc`","lastModifiedDate":"2022-10-19"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":254,"author":{"gitId":"rgonslayer"},"content":"Types of `KEYWORD`: `name`, `appt`, `risk`, `income`, `monthly`","lastModifiedDate":"2022-10-27"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":256,"author":{"gitId":"senwei01"},"content":"* Returns all the contacts sorted by the given `KEYWORD`","lastModifiedDate":"2022-10-10"},{"lineNumber":257,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":258,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":259,"author":{"gitId":"senwei01"},"content":"#### 5.1.8 Clearing all entries : `clear`","lastModifiedDate":"2022-10-27"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"MuhdMusab"},"content":"Clears all entries from the list of clients.","lastModifiedDate":"2022-09-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"senwei01"},"content":"#### 5.1.9 Exiting the program : `exit`","lastModifiedDate":"2022-10-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"senwei01"},"content":"### 5.2 Appointment command features","lastModifiedDate":"2022-10-27"},{"lineNumber":272,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":273,"author":{"gitId":"senwei01"},"content":"#### 5.2.1 Adding an appointment : `aa`","lastModifiedDate":"2022-10-27"},{"lineNumber":274,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":275,"author":{"gitId":"jialatteo"},"content":"Adds an appointment with inputs DATE_AND_TIME and LOCATION for an existing client in the list of clients. This will also update the Calendar and the appointment will be shown in the matching month in the Calendar.","lastModifiedDate":"2022-10-26"},{"lineNumber":276,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":277,"author":{"gitId":"jialatteo"},"content":"Format: `aa INDEX d/DATE_AND_TIME l/LOCATION`","lastModifiedDate":"2022-10-26"},{"lineNumber":278,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":279,"author":{"gitId":"MuhdMusab"},"content":"Example: `aa 1 d/21-Jan-2023 12:30 PM l/Jurong Point, Starbucks`","lastModifiedDate":"2022-10-26"},{"lineNumber":280,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":281,"author":{"gitId":"MuhdMusab"},"content":"The appointment details will be added to the specified client\u0027s information.","lastModifiedDate":"2022-10-26"},{"lineNumber":282,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":283,"author":{"gitId":"MuhdMusab"},"content":"![Add Appointment Calendar Change](images/AddAppointmentContactsChange.png)","lastModifiedDate":"2022-10-26"},{"lineNumber":284,"author":{"gitId":"MuhdMusab"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":285,"author":{"gitId":"MuhdMusab"},"content":"Also, the appointment details will be added to the calendar.","lastModifiedDate":"2022-10-26"},{"lineNumber":286,"author":{"gitId":"MuhdMusab"},"content":"![Add Appointment Contacts Change](images/AddAppointmentCalendarChange.png)","lastModifiedDate":"2022-10-26"},{"lineNumber":287,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":288,"author":{"gitId":"MuhdMusab"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-26"},{"lineNumber":289,"author":{"gitId":"senwei01"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":290,"author":{"gitId":"senwei01"},"content":"* DATE_AND_TIME has the format `d-MMM-yyyy hh:mm a` ","lastModifiedDate":"2022-11-01"},{"lineNumber":291,"author":{"gitId":"senwei01"},"content":"* The PM/AM in TIME is case-sensitive, and whitespace sensitive as well.","lastModifiedDate":"2022-11-01"},{"lineNumber":292,"author":{"gitId":"senwei01"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":293,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":294,"author":{"gitId":"MuhdMusab"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Input DATE_AND_TIME must be valid in order for the command to be executed.","lastModifiedDate":"2022-10-26"},{"lineNumber":295,"author":{"gitId":"MuhdMusab"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":296,"author":{"gitId":"senwei01"},"content":"* Each client can have a maximum of 3 appointments, and there cannot be appointments with the same DATE_AND_TIME in the overall list of appointments.","lastModifiedDate":"2022-11-01"},{"lineNumber":297,"author":{"gitId":"senwei01"},"content":"* We allow the adding of appointments that are in the past, this is similar to any calendar apps where you can add events to dates that are in the past.","lastModifiedDate":"2022-11-01"},{"lineNumber":298,"author":{"gitId":"MuhdMusab"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":299,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":300,"author":{"gitId":"MuhdMusab"},"content":"Examples:","lastModifiedDate":"2022-10-26"},{"lineNumber":301,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":302,"author":{"gitId":"MuhdMusab"},"content":"* `aa 1 d/21-Jan-2023 12:30 PM l/Jurong Point, Starbucks`","lastModifiedDate":"2022-10-26"},{"lineNumber":303,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":304,"author":{"gitId":"senwei01"},"content":"#### 5.2.2 Editing an appointment : `ea`","lastModifiedDate":"2022-10-27"},{"lineNumber":305,"author":{"gitId":"jialatteo"},"content":"Edits an appointment for an existing client in the list of clients. This will also update the Calendar and the appointment will be shown in the matching month in the Calendar.","lastModifiedDate":"2022-10-26"},{"lineNumber":306,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":307,"author":{"gitId":"jialatteo"},"content":"Format: `ea PERSON_INDEX.APPOINTMENT_INDEX [d/DATE_AND_TIME] [l/LOCATION]`","lastModifiedDate":"2022-10-26"},{"lineNumber":308,"author":{"gitId":"jialatteo"},"content":"* Edits the client\u0027s appointment using specified PERSON_INDEX and APPOINTMENT_INDEX.","lastModifiedDate":"2022-10-26"},{"lineNumber":309,"author":{"gitId":"jialatteo"},"content":"* The PERSON_INDEX refers to the index number shown in the displayed client list. The index must be a positive integer 1, 2, 3,…​","lastModifiedDate":"2022-10-26"},{"lineNumber":310,"author":{"gitId":"jialatteo"},"content":"* The APPOINTMENT_INDEX refers to the index number shown in the displayed client\u0027s appointment list. The index can only be 1, 2, or 3.","lastModifiedDate":"2022-10-26"},{"lineNumber":311,"author":{"gitId":"jialatteo"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-10-26"},{"lineNumber":312,"author":{"gitId":"jialatteo"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-10-26"},{"lineNumber":313,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":314,"author":{"gitId":"jialatteo"},"content":"Examples:","lastModifiedDate":"2022-10-26"},{"lineNumber":315,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":316,"author":{"gitId":"jialatteo"},"content":"* `ea 1.1 d/21-Jan-2023 12:30 PM l/West Mall, Starbucks` Edits both the date and location of the 1st client\u0027s 1st appointment to be `21-Jan-2023 12:30 PM` and `West Mall, Starbucks` respectively.","lastModifiedDate":"2022-10-26"},{"lineNumber":317,"author":{"gitId":"jialatteo"},"content":"* `ea 2.3 l/NUS, TechnoEdge` Edits the location of the 2nd client\u0027s 3rd appointment to be `NUS, TechnoEdge`","lastModifiedDate":"2022-10-26"},{"lineNumber":318,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":319,"author":{"gitId":"senwei01"},"content":"#### 5.2.3 Deleting an appointment : `da`","lastModifiedDate":"2022-10-27"},{"lineNumber":320,"author":{"gitId":"jialatteo"},"content":"Deletes an appointment for an existing client in the list of clients. This will also update the Calendar and the appointment will be shown in the matching month in the Calendar.","lastModifiedDate":"2022-10-26"},{"lineNumber":321,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":322,"author":{"gitId":"jialatteo"},"content":"Format: `da PERSON_INDEX.APPOINTMENT_INDEX`","lastModifiedDate":"2022-10-26"},{"lineNumber":323,"author":{"gitId":"jialatteo"},"content":"* Deletes the client\u0027s appointment using specified PERSON_INDEX and APPOINTMENT_INDEX.","lastModifiedDate":"2022-10-26"},{"lineNumber":324,"author":{"gitId":"jialatteo"},"content":"* The PERSON_INDEX refers to the index number shown in the displayed client list. The index must be a positive integer 1, 2, 3,…​","lastModifiedDate":"2022-10-26"},{"lineNumber":325,"author":{"gitId":"jialatteo"},"content":"* The APPOINTMENT_INDEX refers to the index number shown in the displayed client\u0027s appointment list. The index can only be 1, 2, or 3.","lastModifiedDate":"2022-10-26"},{"lineNumber":326,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":327,"author":{"gitId":"jialatteo"},"content":"Examples:","lastModifiedDate":"2022-10-26"},{"lineNumber":328,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":329,"author":{"gitId":"jialatteo"},"content":"* `da 1.1` Deletes the 1st client\u0027s 1st appointment","lastModifiedDate":"2022-10-26"},{"lineNumber":330,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":331,"author":{"gitId":"senwei01"},"content":"### 5.3 Calendar features","lastModifiedDate":"2022-10-27"},{"lineNumber":332,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":333,"author":{"gitId":"MuhdMusab"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":334,"author":{"gitId":"MuhdMusab"},"content":"**:information_source: Notes about the switching between Contacts and Calendar Tabs:**","lastModifiedDate":"2022-10-27"},{"lineNumber":335,"author":{"gitId":"MuhdMusab"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":336,"author":{"gitId":"MuhdMusab"},"content":"* `CTRL + 1` keys will switch the current tab to the Contacts tab","lastModifiedDate":"2022-10-27"},{"lineNumber":337,"author":{"gitId":"MuhdMusab"},"content":"* `CTRL + 2` keys will switch the current tab to the Calendar tab","lastModifiedDate":"2022-10-27"},{"lineNumber":338,"author":{"gitId":"MuhdMusab"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":339,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":340,"author":{"gitId":"senwei01"},"content":"#### 5.3.1 Calendar Display","lastModifiedDate":"2022-10-27"},{"lineNumber":341,"author":{"gitId":"wongyewjon"},"content":"Displays a calendar format for the current month which shows all the appointments separated into their matching dates for that month. The appointments that are displayed for each day are also sorted in ascending order, which follows the time convention.","lastModifiedDate":"2022-10-27"},{"lineNumber":342,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":343,"author":{"gitId":"MuhdMusab"},"content":"The following figure shows an empty Calendar Display:","lastModifiedDate":"2022-10-27"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":345,"author":{"gitId":"MuhdMusab"},"content":"![empty calendar display](images/EmptyCalendar.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":347,"author":{"gitId":"MuhdMusab"},"content":"The Calendar Display can be filled by adding appointments. [View Section 4.2.1 for information on how to add appointments](#421-adding-an-appointment--aa)","lastModifiedDate":"2022-10-27"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":349,"author":{"gitId":"MuhdMusab"},"content":"The following figure shows the Calendar Display with several appointments:","lastModifiedDate":"2022-10-27"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":351,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":352,"author":{"gitId":"MuhdMusab"},"content":"![calendar display with appointments](images/CalendarWithAppointments.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":353,"author":{"gitId":"senwei01"},"content":"#### 5.3.2 Calendar Navigation","lastModifiedDate":"2022-10-27"},{"lineNumber":354,"author":{"gitId":"wongyewjon"},"content":"There are 3 ways to ease navigation between months that are displayed.","lastModifiedDate":"2022-10-27"},{"lineNumber":355,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":356,"author":{"gitId":"senwei01"},"content":"##### 5.3.2.1 Next Button","lastModifiedDate":"2022-10-27"},{"lineNumber":357,"author":{"gitId":"MuhdMusab"},"content":"Clicking the Next button or pressing the \"N\" key will display the next month.","lastModifiedDate":"2022-10-27"},{"lineNumber":358,"author":{"gitId":"wongyewjon"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":359,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":360,"author":{"gitId":"MuhdMusab"},"content":"![next button](images/NextButton.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":361,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":362,"author":{"gitId":"senwei01"},"content":"##### 5.3.2.2 Prev Button","lastModifiedDate":"2022-10-27"},{"lineNumber":363,"author":{"gitId":"MuhdMusab"},"content":"Clicking the Prev button or pressing the \"B\" key will display the previous month.","lastModifiedDate":"2022-10-27"},{"lineNumber":364,"author":{"gitId":"wongyewjon"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":365,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":366,"author":{"gitId":"MuhdMusab"},"content":"![previous button](images/PreviousButton.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":367,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":368,"author":{"gitId":"senwei01"},"content":"##### 5.3.2.1 Jump Box","lastModifiedDate":"2022-10-27"},{"lineNumber":369,"author":{"gitId":"MuhdMusab"},"content":"Typing in the desired date in the provided text field followed by pressing the \"ENTER\" key will show the given calendar of the month and year.","lastModifiedDate":"2022-10-27"},{"lineNumber":370,"author":{"gitId":"wongyewjon"},"content":"Format: DATE","lastModifiedDate":"2022-10-27"},{"lineNumber":371,"author":{"gitId":"MuhdMusab"},"content":"Examples: `1-Oct-2022`","lastModifiedDate":"2022-10-27"},{"lineNumber":372,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":373,"author":{"gitId":"MuhdMusab"},"content":"![jump box](images/JumpBox.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":374,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":375,"author":{"gitId":"senwei01"},"content":"#### 5.3.3 Calendar Pop-ups","lastModifiedDate":"2022-10-27"},{"lineNumber":376,"author":{"gitId":"wongyewjon"},"content":"Displays more detailed information of the selected appointment on the calendar which includes the name of the client, date, time and location of the scheduled appointment.","lastModifiedDate":"2022-10-27"},{"lineNumber":377,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":378,"author":{"gitId":"MuhdMusab"},"content":"There are 3 ways to activate the Calendar Popup:","lastModifiedDate":"2022-10-27"},{"lineNumber":379,"author":{"gitId":"MuhdMusab"},"content":"1. Clicking on the client\u0027s appointment button.","lastModifiedDate":"2022-10-27"},{"lineNumber":380,"author":{"gitId":"MuhdMusab"},"content":"2. Pressing TAB/SHIFT + TAB key within the Calendar View to focus on the desired client\u0027s appointment button.","lastModifiedDate":"2022-10-27"},{"lineNumber":381,"author":{"gitId":"MuhdMusab"},"content":"3. Pressing UP/DOWN/LEFT/RIGHT key within the Calendar View to focus on the desired client\u0027s appointment button.","lastModifiedDate":"2022-10-27"},{"lineNumber":382,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":383,"author":{"gitId":"MuhdMusab"},"content":"The following figure shows the Calendar Popup being activated within the Calendar View:","lastModifiedDate":"2022-10-27"},{"lineNumber":384,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":385,"author":{"gitId":"wongyewjon"},"content":"![result for \u0027calendar popup\u0027](images/CalendarPopupExample.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":386,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":387,"author":{"gitId":"senwei01"},"content":"### 5.4 Command Line tools","lastModifiedDate":"2022-10-27"},{"lineNumber":388,"author":{"gitId":"senwei01"},"content":"#### 5.4.1 Parameter hints","lastModifiedDate":"2022-10-27"},{"lineNumber":389,"author":{"gitId":"jialatteo"},"content":"After typing in the command word, the command\u0027s parameters and their respective prefixes are shown. An example of a valid command will also be shown.","lastModifiedDate":"2022-10-26"},{"lineNumber":390,"author":{"gitId":"jialatteo"},"content":"![result for \u0027parameter_hints\u0027](images/ParameterHintsExample.png)","lastModifiedDate":"2022-10-26"},{"lineNumber":391,"author":{"gitId":"senwei01"},"content":"#### 5.4.2 Command history","lastModifiedDate":"2022-10-27"},{"lineNumber":392,"author":{"gitId":"jialatteo"},"content":"Use the up and down keys to navigate through previously typed commands. Users can edit the command first or press enter to execute the command. ","lastModifiedDate":"2022-10-26"},{"lineNumber":393,"author":{"gitId":"jialatteo"},"content":"* Only valid commands will be saved in the command history","lastModifiedDate":"2022-10-26"},{"lineNumber":394,"author":{"gitId":"jialatteo"},"content":"* Command history will only save up to 20 previously typed valid commands","lastModifiedDate":"2022-10-26"},{"lineNumber":395,"author":{"gitId":"jialatteo"},"content":"* Consecutive duplicate commands will not be saved (e.g entering \"list\" 3 times in a row will only add \"list\" to command history once)","lastModifiedDate":"2022-10-28"},{"lineNumber":396,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":397,"author":{"gitId":"senwei01"},"content":"### 5.5 Miscellaneous commands","lastModifiedDate":"2022-10-27"},{"lineNumber":398,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":399,"author":{"gitId":"senwei01"},"content":"#### 5.5.1 Saving the data","lastModifiedDate":"2022-10-27"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"senwei01"},"content":"FAP data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-11-01"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"senwei01"},"content":"#### 5.5.2 Editing the data file","lastModifiedDate":"2022-10-27"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":405,"author":{"gitId":"senwei01"},"content":"FAP data are saved as a JSON file `[JAR file location]/data/FAP.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-11-01"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":407,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":408,"author":{"gitId":"senwei01"},"content":"If your changes to the data file makes its format invalid, FAP will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-11-01"},{"lineNumber":409,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":411,"author":{"gitId":"senwei01"},"content":"### 5.6 Future features","lastModifiedDate":"2022-10-27"},{"lineNumber":412,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":413,"author":{"gitId":"senwei01"},"content":"#### 5.6.1 Archiving data files `[coming in v2.0]`","lastModifiedDate":"2022-10-27"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"senwei01"},"content":"## 6. FAQ","lastModifiedDate":"2022-10-27"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"senwei01"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FAP home folder.\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":423,"author":{"gitId":"senwei01"},"content":"**Q**: Why do you allow duplicate email and phone number in your add command, given that there won\u0027t be two people with the same email or number?\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":424,"author":{"gitId":"senwei01"},"content":"**A**: Currently we only have duplicate checks for name. We will implement duplicate checks for email and phone number in the future.\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":425,"author":{"gitId":"senwei01"},"content":"**Q**: Why can\u0027t I add appointments even though I typed the date_time correctly?\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":426,"author":{"gitId":"senwei01"},"content":"**A**: Check that you have typed the date_time in the correct case with the correct spacing. We apologise for the strict requirement and we promise we are working on relaxing the requirements!\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"senwei01"},"content":"## 7. Command summary","lastModifiedDate":"2022-10-27"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"rgonslayer"},"content":"**Add client** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS i/YEARLY_INCOME r/RISK_APPETITE m/MONTHLY_CONTRIBUTIONS c/CLIENT_TYPE [t/TAG]…​ ` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 i/60000 r/Low s/1000 t/friend t/colleague`","lastModifiedDate":"2022-10-28"},{"lineNumber":435,"author":{"gitId":"jialatteo"},"content":"**Add Appointment** | `aa INDEX d/DATE_AND_TIME l/LOCATION` \u003cbr\u003e e.g., `aa 1 d/21-Jan-2023 12:30 PM l/Jurong Point, Starbucks`","lastModifiedDate":"2022-10-27"},{"lineNumber":436,"author":{"gitId":"jialatteo"},"content":"**Edit Appointment** | `ea PERSON_INDEX.APPOINTMENT_INDEX [d/DATE_AND_TIME] [l/LOCATION]` \u003cbr\u003e e.g., `ea 1.2 d/21-Jan-2023 12:30 PM l/NUS, TechnoEdge`","lastModifiedDate":"2022-10-26"},{"lineNumber":437,"author":{"gitId":"jialatteo"},"content":"**Delete Appointment** | `da PERSON_INDEX.APPOINTMENT_INDEX` \u003cbr\u003e e.g, `da 1.2`","lastModifiedDate":"2022-10-26"},{"lineNumber":438,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"rgonslayer"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [i/YEARLY_INCOME] [r/RISK_APPETITE] [m/MONTHLY_CONTRIBUTIONS] [c/CLIENT_TYPE] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-10-28"},{"lineNumber":441,"author":{"gitId":"rgonslayer"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-09-30"},{"lineNumber":442,"author":{"gitId":"senwei01"},"content":"**Find** | `find PREFIX/KEYWORD [MORE_KEYWORDS]` e.g., `find n/James Jake`","lastModifiedDate":"2022-10-27"},{"lineNumber":443,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"senwei01"},"content":"**Sort** | `sort KEYWORD, sort KEYWORD desc` ","lastModifiedDate":"2022-10-19"},{"lineNumber":446,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":447,"author":{"gitId":"senwei01"},"content":"## 8. Glossary","lastModifiedDate":"2022-10-27"},{"lineNumber":448,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":449,"author":{"gitId":"MuhdMusab"},"content":"Term | Meaning ","lastModifiedDate":"2022-10-26"},{"lineNumber":450,"author":{"gitId":"MuhdMusab"},"content":"--------|------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":451,"author":{"gitId":"MuhdMusab"},"content":"**Command Line Interface (CLI)** | A CLI is a text-based user interface that allows users to input commands in the form of text.","lastModifiedDate":"2022-10-26"},{"lineNumber":452,"author":{"gitId":"MuhdMusab"},"content":"**Graphical User Interface (GUI)** | A GUI is a graphics-based user interface that allows users to interact with elements such as icons and buttons when running a program.","lastModifiedDate":"2022-10-26"},{"lineNumber":453,"author":{"gitId":"MuhdMusab"},"content":"**Command** | An instruction given by the user that is to be executed. ","lastModifiedDate":"2022-10-26"},{"lineNumber":454,"author":{"gitId":"MuhdMusab"},"content":"**Parameter** | Variables that have been typed by the user that is to be provided to the command to be executed.","lastModifiedDate":"2022-10-26"},{"lineNumber":455,"author":{"gitId":"MuhdMusab"},"content":"**Prefix** | Indicator for a specific parameter to be input during the command. Prefixes end with a slash (/)","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"jialatteo":37,"MuhdMusab":140,"rgonslayer":12,"wongyewjon":10,"-":145,"senwei01":111}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"rgonslayer"},"content":"    content: \"FAP\";","lastModifiedDate":"2022-09-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"rgonslayer":1,"-":294}},{"path":"docs/diagrams/AddAppointmentCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"@startuml","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"!include style.puml","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"participant \":AddAppointmentCommandParser \" as AddAppointmentCommandParser  LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"participant \"d:AddAppointmentCommand\" as AddAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"end box","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"participant \"appointmentSet:MaximumSortedList\" as MaximumSortedList MODEL_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"participant \":Appointment\" as Appointment MODEL_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"end box","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"[-\u003e LogicManager : execute(\"aa 1 d/21-Jan-2023 12:30 PM l/Starbucks\")","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"activate LogicManager","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"aa 1 d/21-Jan-2023 12:30 PM l/Starbucks\")","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"create AddAppointmentCommandParser","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"AddressBookParser -\u003e AddAppointmentCommandParser","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"activate AddAppointmentCommandParser","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"AddAppointmentCommandParser  --\u003e AddressBookParser","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"deactivate AddAppointmentCommandParser","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"AddressBookParser -\u003e AddAppointmentCommandParser  : parse(\"1 d/21-Jan-2023 12:30 PM l/Starbucks\")","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"activate AddAppointmentCommandParser","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"create Appointment","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"AddAppointmentCommandParser -\u003e Appointment : Appointment(dateTime, location)","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"activate Appointment","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"Appointment --\u003e AddAppointmentCommandParser : a","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"deactivate Appointment","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"create AddAppointmentCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"AddAppointmentCommandParser  -\u003e AddAppointmentCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"AddAppointmentCommand --\u003e AddAppointmentCommandParser  : a","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"AddAppointmentCommandParser  --\u003e AddressBookParser : a","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"deactivate AddAppointmentCommandParser","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"AddAppointmentCommandParser  -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"destroy AddAppointmentCommandParser","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"LogicManager -\u003e AddAppointmentCommand : execute()","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"AddAppointmentCommand -\u003e MaximumSortedList : add(appointment)","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"activate MaximumSortedList","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"MaximumSortedList --\u003e AddAppointmentCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"deactivate MaximumSortedList","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"create CommandResult","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"AddAppointmentCommand -\u003e CommandResult : CommandResult(successMsg)","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"activate CommandResult","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"CommandResult --\u003e AddAppointmentCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"AddAppointmentCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"@enduml","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"MuhdMusab":79}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"AddressBook *-down-\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"AddressBook *-down-\u003e \"1\" UniqueTagList","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"UniqueTagList *-down-\u003e \"*\" Tag","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"Person *-up-\u003e \"*\" Tag","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"Person *-up-\u003e \"*\" SpecialTag","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"Person *--\u003e \"0..3\" Appointment","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"Person *--\u003e \"1\" IncomeLevel","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"Person *--\u003e \"1\" MonthlySavings","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"Appointment *--\u003e \"1\" DateTime","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"Appointment *--\u003e \"1\" Location","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"MuhdMusab":15,"-":13}},{"path":"docs/diagrams/CalendarDisplayActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wongyewjon"},"content":"@startuml","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"wongyewjon"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"wongyewjon"},"content":"start","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"wongyewjon"},"content":":User starts the app;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":":User selects the Calendar Tab;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":":Shows the Calendar Display;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"stop","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":"@enduml","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"wongyewjon":10}},{"path":"docs/diagrams/CalendarNavigationActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wongyewjon"},"content":"@startuml","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"wongyewjon"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"wongyewjon"},"content":"start","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"wongyewjon"},"content":":User selects the calendar tab;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":":User selects a navigation feature;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"if () then ([feature is Button])","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"  if () then([Next Button])","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"    :Displays the next month;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":"  else ([Previous Button])","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"    :Displays the previous month;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"endif","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":"else ([feature is Jump Box])","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"wongyewjon"},"content":"    :User input date;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"wongyewjon"},"content":"    if () then ([input is valid])","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"wongyewjon"},"content":"      :Displays the given month;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"wongyewjon"},"content":"    else ([input is not valid])","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"wongyewjon"},"content":"      :Show date format error message;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"wongyewjon"},"content":"    endif","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"wongyewjon"},"content":"endif","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"wongyewjon"},"content":"stop","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"wongyewjon"},"content":"@enduml","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"wongyewjon"},"content":"stop","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"wongyewjon"},"content":"@enduml","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"wongyewjon":27}},{"path":"docs/diagrams/CalendarPopUpActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wongyewjon"},"content":"@startuml","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"wongyewjon"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"wongyewjon"},"content":"start","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"wongyewjon"},"content":":User selects the calendar tab;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":":User selects appointments;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":":Displays the calendar pop-up with the relevant details;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"stop","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":"@enduml","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"wongyewjon":10}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyCommandHistory\" as ReadOnlyCommandHistory","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":"Class CommandHistory","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"wongyewjon"},"content":"Class \"{abstract}\\nTag\" as Tag","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"wongyewjon"},"content":"Class IncomeLevel","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"Class Monthly","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"wongyewjon"},"content":"Class Appointment","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"wongyewjon"},"content":"Class NormalTag","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"wongyewjon"},"content":"Class PlanTag","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"wongyewjon"},"content":"Class RiskTag","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"wongyewjon"},"content":"Class Location","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"wongyewjon"},"content":"Class DateTime","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"wongyewjon"},"content":"Class CommandHistoryList","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"wongyewjon"},"content":"CommandHistory .up.|\u003e ReadOnlyCommandHistory","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"wongyewjon"},"content":"ModelManager .up..|\u003e Model","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"wongyewjon"},"content":"Model .down.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"wongyewjon"},"content":"Model .right\u003e ReadOnlyCommandHistory","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"wongyewjon"},"content":"ModelManager --\u003e \"1\" AddressBook","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"wongyewjon"},"content":"ModelManager --\u003e \"1\" UserPrefs","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"wongyewjon"},"content":"ModelManager -right-\u003e \"1\" CommandHistory","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"wongyewjon"},"content":"Person *--\u003e IncomeLevel","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"wongyewjon"},"content":"Person *--\u003e Monthly","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"wongyewjon"},"content":"Person *--\u003e \"0..3\" Appointment","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"wongyewjon"},"content":"Person *---\u003e \"*\" Tag","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"wongyewjon"},"content":"Appointment *--\u003e \"1\" Location","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"wongyewjon"},"content":"Appointment *--\u003e \"1\" DateTime","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"wongyewjon"},"content":"CommandHistory *--\u003e \"1\" CommandHistoryList","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"wongyewjon"},"content":"ReadOnlyAddressBook -[hidden]right\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"wongyewjon"},"content":"ReadOnlyUserPrefs -[hidden]right-\u003e ReadOnlyCommandHistory","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"wongyewjon"},"content":"AddressBook -[hidden]right\u003e UserPrefs","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"wongyewjon"},"content":"UserPrefs -[hidden]right-\u003e CommandHistory","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"wongyewjon"},"content":"NormalTag -up-|\u003e Tag","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"wongyewjon"},"content":"RiskTag -up-|\u003e Tag","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"wongyewjon"},"content":"PlanTag -up-|\u003e Tag","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wongyewjon":41,"-":43}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"wongyewjon"},"content":"package \"CommandHistory Storage\" #F4F6F6{","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nCommandHistoryStorage\" as CommandHistoryStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"wongyewjon"},"content":"Class TextCommandHistoryStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"wongyewjon"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"wongyewjon"},"content":"StorageManager -up-\u003e \"1\" CommandHistoryStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"wongyewjon"},"content":"Storage --|\u003e AddressBookStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"wongyewjon"},"content":"Storage --|\u003e UserPrefsStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"wongyewjon"},"content":"Storage --|\u003e CommandHistoryStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"wongyewjon"},"content":"TextCommandHistoryStorage .up.|\u003e CommandHistoryStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"wongyewjon"},"content":"Storage -[hidden]-\u003e StorageManager","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"wongyewjon"},"content":"UserPrefsStorage -[hidden]right-\u003e CommandHistoryStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"wongyewjon"},"content":"CommandHistoryStorage -[hidden]right-\u003e UserPrefsStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wongyewjon":15,"-":41}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"wongyewjon"},"content":"Class CalendarDisplay","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"wongyewjon"},"content":"Class \"{abstract}\\nCalendarButton\" as CalendarButton","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"wongyewjon"},"content":"Class EventButton","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"wongyewjon"},"content":"Class NextButton","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"wongyewjon"},"content":"Class PreviousButton","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"wongyewjon"},"content":"MainWindow *-down-\u003e \"1\" CalendarDisplay","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"wongyewjon"},"content":"PersonListPanel -down\u003e \"*\" PersonCard","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"wongyewjon"},"content":"CalendarDisplay -down--\u003e \"*\" CalendarButton","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"wongyewjon"},"content":"CalendarDisplay --|\u003e UiPart","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"wongyewjon"},"content":"CalendarButton --|\u003e UiPart","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"wongyewjon"},"content":"EventButton -up|\u003e CalendarButton","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"wongyewjon"},"content":"NextButton -up-|\u003e CalendarButton","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"wongyewjon"},"content":"PreviousButton -up-|\u003e CalendarButton","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"wongyewjon"},"content":"CalendarButton ..\u003e Model","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"wongyewjon"},"content":"CalendarDisplay -[hidden]left- PersonListPanel","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wongyewjon":16,"-":59}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"title: Financial Advisor Planner","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W09-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W09-2/tp/actions)","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W09-2/tp/branch/master/graph/badge.svg?token\u003dUFZ3FQBSRS)](https://codecov.io/gh/AY2223S1-CS2103T-W09-2/tp)","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"**Financial Advisor Planner is a desktop application for financial advisors to manage clients\u0027 contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":"* If you are interested in using Financial Advisor Planner, head over to the [_Quick Start_ section of the **User Guide**](https://ay2223s1-cs2103t-w09-2.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"wongyewjon"},"content":"* If you are interested about developing Financial Advisor Planner, the [**Developer Guide**](https://ay2223s1-cs2103t-w09-2.github.io/tp/DeveloperGuide.html) is a good place to start .","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wongyewjon":6,"-":14}},{"path":"docs/team/jialatteo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"title: Gerald Teo Jin Wei\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"## Project: Financial Advisor Planner","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"Financial Advisor Planner is a desktop client management application used for financial advisors to manage their clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"- ### New Feature:","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"- ### Code contributed:","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"- ### Enhancements implemented:","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"- ### Contributions to the UG:","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"- ### Contributions to the DG:","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"- ### Contributions to team-based tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"- ### Review/mentoring contributions:","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"- ### Contributions beyond the project team:","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"- ### Documentation","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"- ### Community","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"- ### Tools","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"jialatteo":17,"MuhdMusab":5}},{"path":"docs/team/muhdmusab.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"title: Muhammad Mus\u0027ab Bin Mustaffa\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"## Project: Financial Advisor Planner","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"Financial Advisor Planner is a desktop client management application used for financial advisors to manage their clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"- ### New Feature:","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"- ### Code contributed:","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"- ### Enhancements implemented:","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"- ### Contributions to the UG:","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"- ### Contributions to the DG:","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"- ### Contributions to team-based tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"- ### Review/mentoring contributions:","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"- ### Contributions beyond the project team:","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"- ### Documentation","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"- ### Community","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"- ### Tools","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"MuhdMusab":22}},{"path":"docs/team/rgonslayer.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"# Chew Yew Keng\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":" ## Project: Financial Advisor Planner","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":" Financial Advisor Planner is a desktop client management application used for financial advisors to manage their clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":" Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":" - ### New Feature:","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":" - ### Code contributed: [reposense](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003drgonslayer\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":" - ### Enhancements implemented:","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":" - ### Contributions to the UG:","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":" - ### Contributions to the DG:","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":" - ### Contributions to team-based tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":" - ### Review/mentoring contributions:","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":" - ### Contributions beyond the project team:","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":" - ### Documentation","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":" - ### Community","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":" - ### Tools","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"rgonslayer":18,"MuhdMusab":1}},{"path":"docs/team/senwei01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"title: Lee Sen Wei\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"## Project: Financial Advisor Planner","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":"Financial Advisor Planner is a desktop client management application used for financial advisors to manage their clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"- ### New Feature:","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"- ### Code contributed:","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"- ### Enhancements implemented:","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"- ### Contributions to the UG:","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"- ### Contributions to the DG:","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"- ### Contributions to team-based tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"- ### Review/mentoring contributions:","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"senwei01"},"content":"- ### Contributions beyond the project team:","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"- ### Documentation","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"senwei01"},"content":"- ### Community","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"- ### Tools","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"senwei01":22}},{"path":"docs/team/wongyewjon.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"title: Wong Yew Jon\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"## Project: Financial Advisor Planner","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"Financial Advisor Planner is a desktop client management application used for financial advisors to manage their clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"- ### New Feature:","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"wongyewjon"},"content":"- ### Code contributed:","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":"- ### Enhancements implemented:","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"wongyewjon"},"content":"- ### Contributions to the UG:","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"wongyewjon"},"content":"- ### Contributions to the DG:","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"wongyewjon"},"content":"- ### Contributions to team-based tasks","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"wongyewjon"},"content":"- ### Review/mentoring contributions:","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"wongyewjon"},"content":"- ### Contributions beyond the project team:","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"wongyewjon"},"content":"- ### Documentation","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"wongyewjon"},"content":"- ### Community","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"wongyewjon"},"content":"- ### Tools","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"MuhdMusab":5,"wongyewjon":17}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"senwei01"},"content":":exclamation: You must delete FAP’s storage file located at `/data/FAP.json` before running it! Not doing so will cause FAP to default to an empty address book!","lastModifiedDate":"2022-11-01"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":400,"senwei01":1}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.ReadOnlyCommandHistory;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"import seedu.address.storage.CommandHistoryStorage;","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"import seedu.address.storage.TextCommandHistoryStorage;","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"        CommandHistoryStorage commandHistoryStorage \u003d new TextCommandHistoryStorage(config.getCommandHistoryFilePath());","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, commandHistoryStorage);","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"        ReadOnlyAddressBook initialAddressBookData;","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"            initialAddressBookData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"        ReadOnlyCommandHistory initialCommandHistoryData;","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"            initialCommandHistoryData \u003d storage.readCommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"            logger.warning(\"Problem while reading from the Command History file.\"","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"                    + \" Will be starting with an empty CommandHistory\");","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"            initialCommandHistoryData \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"        return new ModelManager(initialAddressBookData, userPrefs, initialCommandHistoryData);","lastModifiedDate":"2022-10-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jialatteo":20,"-":177}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    private Path commandHistoryFilePath \u003d Paths.get(\"commandhistory.txt\");","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"    public Path getCommandHistoryFilePath() {","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"        return commandHistoryFilePath;","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jialatteo":6,"-":63}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"            \"The appointment index provided is invalid\";","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jialatteo":2,"-":13}},{"path":"src/main/java/seedu/address/logic/CalendarLogic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static javafx.scene.paint.Color.WHITE;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Calendar;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import java.util.GregorianCalendar;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.calendar.CalendarMonth;","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"wongyewjon"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.ui.CalendarEventListPanel;","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"wongyewjon"},"content":"import seedu.address.ui.JumpText;","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.ui.NextButton;","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.ui.PreviousButton;","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"wongyewjon"},"content":"import seedu.address.ui.TextValidation;","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":" * The manager of the logic for the Calendar.","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"public class CalendarLogic {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"wongyewjon"},"content":"    private static final String SUCCESS_MESSAGE \u003d \"success\";","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"wongyewjon"},"content":"    private static final String FAILURE_MESSAGE \u003d \"failure\";","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"wongyewjon"},"content":"    private static final String EMPTY_MESSAGE \u003d \"\";","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    private static final String[] MONTH_NAMES \u003d {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    };","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"    private static final String[] DAY_NAMES \u003d {","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"    };","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"    private static final String TEXT_HEADER_STYLE \u003d \"-fx-font-size: 15pt; -fx-text-fill: white; \"","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"            + \"-fx-background-color: #fff\";","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"    private PreviousButton prevButton \u003d new PreviousButton(\"Prev\", this);","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"    private NextButton nextButton \u003d new NextButton(\"Next\", this);","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"wongyewjon"},"content":"    private JumpText jumpText \u003d new JumpText(this);","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"wongyewjon"},"content":"    private TextValidation textValidation \u003d new TextValidation();","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"    private GridPane calendarDisplay;","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"    private HBox topCalendar;","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"    private Stage primaryStage;","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"    private Logic logic;","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"    private Calendar currentMonth;","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    private CalendarMonth calendarMonth;","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"    private ObservableList\u003cCalendarEvent\u003e filteredCalendarEventList;","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs a {@code CalendarLogic} with the given {@code Logic}, {@code Stage}","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"     * {@code GridPane} and {@code HBox}.","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    public CalendarLogic(Logic logic, Stage primaryStage, GridPane calendarDisplay, HBox topCalendar) {","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        requireAllNonNull(logic, primaryStage, calendarDisplay, topCalendar);","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"        this.calendarDisplay \u003d calendarDisplay;","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"        this.topCalendar \u003d topCalendar;","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"        ListChangeListener\u003cCalendarEvent\u003e temp \u003d (x) -\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"            x.next();","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"            refresh();","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"        };","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"        this.filteredCalendarEventList \u003d logic.getFilteredCalendarEventList();","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"        filteredCalendarEventList.addListener(temp);","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"     * Initialises the logic components for the Calendar.","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"    public void initialiseLogic() {","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"        calendarMonth \u003d new CalendarMonth(filteredCalendarEventList);","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"        currentMonth \u003d new GregorianCalendar();","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"        currentMonth.set(Calendar.DAY_OF_MONTH, 1);","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"     * Draws the Ui for the Calendar.","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"    public void drawCalendar() {","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"        drawHeader();","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"        drawBody();","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"    private void drawHeader() {","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"        Text textHeader \u003d getTextHeader();","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"        topCalendar.getChildren().addAll(textHeader, prevButton.getRoot(), nextButton.getRoot(),","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"                jumpText.getRoot(), textValidation.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"        topCalendar.setMargin(textHeader, new Insets(0, 50, 0, 0));","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"    private void drawBody() {","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"        // Draw days of the week","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"        for (int day \u003d 1; day \u003c\u003d 7; day++) {","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"            Text tDayName \u003d new Text(\" \" + getDayName(day));","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"            tDayName.setFill(WHITE);","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"            calendarDisplay.add(tDayName, day - 1, 0);","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"        // Draw days in month","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"        int currentDay \u003d currentMonth.get(Calendar.DAY_OF_MONTH);","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"        int daysInMonth \u003d currentMonth.getActualMaximum(Calendar.DAY_OF_MONTH);","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"        int dayOfWeek \u003d currentMonth.get(Calendar.DAY_OF_WEEK);","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"        int row \u003d 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"        for (int i \u003d currentDay; i \u003c\u003d daysInMonth; i++) {","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"            if (dayOfWeek \u003d\u003d 8) {","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"                dayOfWeek \u003d 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"                row++;","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"            ObservableList\u003cCalendarEvent\u003e calendarEventsInDayOfMonth \u003d calendarMonth","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"                    .getCalendarEventInDayOfMonth(currentDay, currentMonth.get(Calendar.MONTH) + 1,","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"                            currentMonth.get(Calendar.YEAR));","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"            CalendarEventListPanel calendarEventListPanel \u003d new CalendarEventListPanel(calendarEventsInDayOfMonth,","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"                    primaryStage);","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"            VBox calendarEventList \u003d calendarEventListPanel.getCalendarEventList(currentDay);","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"            calendarDisplay.add(calendarEventList, dayOfWeek - 1, row);","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"            currentDay++;","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"            dayOfWeek++;","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"    private String getDayName(int n) {","lastModifiedDate":"2022-10-25"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"        return DAY_NAMES[n - 1];","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"    private String getMonthName(int n) {","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"        return MONTH_NAMES[n];","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":145,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"    private Text getTextHeader() {","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"        String monthString \u003d getMonthName(currentMonth.get(Calendar.MONTH));","lastModifiedDate":"2022-10-25"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"        String yearString \u003d String.valueOf(currentMonth.get(Calendar.YEAR));","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"        Text header \u003d new Text(monthString + \", \" + yearString);","lastModifiedDate":"2022-10-25"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"        header.setStyle(TEXT_HEADER_STYLE);","lastModifiedDate":"2022-10-25"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"        header.setFill(WHITE);","lastModifiedDate":"2022-10-25"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"        return header;","lastModifiedDate":"2022-10-25"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"     * Refreshes the CalendarEvents.","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"    public void refresh() {","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"        resetGridPane();","lastModifiedDate":"2022-10-25"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"        this.calendarMonth \u003d new CalendarMonth(filteredCalendarEventList);","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"wongyewjon"},"content":"        textValidation.setTextValidation(EMPTY_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"        drawCalendar();","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"     * Displays the CalendarEvents in the previous month.","lastModifiedDate":"2022-10-25"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"    public void previous() {","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"        this.calendarMonth \u003d new CalendarMonth(filteredCalendarEventList);","lastModifiedDate":"2022-10-25"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"        currentMonth \u003d getPreviousMonth(currentMonth);","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"wongyewjon"},"content":"        textValidation.setTextValidation(EMPTY_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"        updateCalendarMonth();","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"     * Displays the CalendarEvents in the next month.","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"    public void next() {","lastModifiedDate":"2022-10-25"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"        this.calendarMonth \u003d new CalendarMonth(filteredCalendarEventList);","lastModifiedDate":"2022-10-25"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"        currentMonth \u003d getNextMonth(currentMonth);","lastModifiedDate":"2022-10-25"},{"lineNumber":181,"author":{"gitId":"wongyewjon"},"content":"        textValidation.setTextValidation(\"\");","lastModifiedDate":"2022-10-25"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"        updateCalendarMonth();","lastModifiedDate":"2022-10-25"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":184,"author":{"gitId":"wongyewjon"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":185,"author":{"gitId":"wongyewjon"},"content":"     * Displays the CalendarEvents given by the user input.","lastModifiedDate":"2022-10-25"},{"lineNumber":186,"author":{"gitId":"wongyewjon"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":187,"author":{"gitId":"wongyewjon"},"content":"    public void jump() {","lastModifiedDate":"2022-10-25"},{"lineNumber":188,"author":{"gitId":"wongyewjon"},"content":"        this.calendarMonth \u003d new CalendarMonth(logic.getFilteredCalendarEventList());","lastModifiedDate":"2022-10-25"},{"lineNumber":189,"author":{"gitId":"wongyewjon"},"content":"        currentMonth \u003d getJumpMonth(currentMonth);","lastModifiedDate":"2022-10-25"},{"lineNumber":190,"author":{"gitId":"wongyewjon"},"content":"        updateCalendarMonth();","lastModifiedDate":"2022-10-25"},{"lineNumber":191,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":192,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":193,"author":{"gitId":"wongyewjon"},"content":"    private GregorianCalendar getJumpMonth(Calendar cal) {","lastModifiedDate":"2022-10-25"},{"lineNumber":194,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":195,"author":{"gitId":"wongyewjon"},"content":"        String date \u003d jumpText.getText();","lastModifiedDate":"2022-10-25"},{"lineNumber":196,"author":{"gitId":"wongyewjon"},"content":"        jumpText.clear();","lastModifiedDate":"2022-10-25"},{"lineNumber":197,"author":{"gitId":"wongyewjon"},"content":"        try {","lastModifiedDate":"2022-10-25"},{"lineNumber":198,"author":{"gitId":"wongyewjon"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d-MMM-uuuu\");","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"wongyewjon"},"content":"            formatter \u003d formatter.withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-10-25"},{"lineNumber":200,"author":{"gitId":"wongyewjon"},"content":"            Date jumpDate \u003d new Date(LocalDate.parse(date, formatter));","lastModifiedDate":"2022-10-25"},{"lineNumber":201,"author":{"gitId":"wongyewjon"},"content":"            int newMonth \u003d jumpDate.getMonth() - 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":202,"author":{"gitId":"wongyewjon"},"content":"            int newYear \u003d jumpDate.getYear();","lastModifiedDate":"2022-10-25"},{"lineNumber":203,"author":{"gitId":"wongyewjon"},"content":"            textValidation.setTextValidation(SUCCESS_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":204,"author":{"gitId":"wongyewjon"},"content":"            return new GregorianCalendar(newYear, newMonth, 1);","lastModifiedDate":"2022-10-25"},{"lineNumber":205,"author":{"gitId":"wongyewjon"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-25"},{"lineNumber":206,"author":{"gitId":"wongyewjon"},"content":"            textValidation.setTextValidation(FAILURE_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":207,"author":{"gitId":"wongyewjon"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":208,"author":{"gitId":"wongyewjon"},"content":"        return new GregorianCalendar(cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), 1);","lastModifiedDate":"2022-10-25"},{"lineNumber":209,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":211,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":212,"author":{"gitId":"MuhdMusab"},"content":"    private void updateCalendarMonth() {","lastModifiedDate":"2022-10-25"},{"lineNumber":213,"author":{"gitId":"MuhdMusab"},"content":"        Text newMonthHeader \u003d getTextHeader();","lastModifiedDate":"2022-10-25"},{"lineNumber":214,"author":{"gitId":"MuhdMusab"},"content":"        topCalendar.getChildren().set(0, newMonthHeader);","lastModifiedDate":"2022-10-25"},{"lineNumber":215,"author":{"gitId":"MuhdMusab"},"content":"        topCalendar.setMargin(newMonthHeader, new Insets(0, 50, 0, 0));","lastModifiedDate":"2022-10-25"},{"lineNumber":216,"author":{"gitId":"MuhdMusab"},"content":"        resetCalendarBody();","lastModifiedDate":"2022-10-25"},{"lineNumber":217,"author":{"gitId":"MuhdMusab"},"content":"        drawBody();","lastModifiedDate":"2022-10-25"},{"lineNumber":218,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":219,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":220,"author":{"gitId":"MuhdMusab"},"content":"    private GregorianCalendar getPreviousMonth(Calendar cal) {","lastModifiedDate":"2022-10-25"},{"lineNumber":221,"author":{"gitId":"MuhdMusab"},"content":"        int prevMonth;","lastModifiedDate":"2022-10-25"},{"lineNumber":222,"author":{"gitId":"MuhdMusab"},"content":"        int prevYear;","lastModifiedDate":"2022-10-25"},{"lineNumber":223,"author":{"gitId":"MuhdMusab"},"content":"        int currentMonth \u003d cal.get(Calendar.MONTH);","lastModifiedDate":"2022-10-25"},{"lineNumber":224,"author":{"gitId":"MuhdMusab"},"content":"        //If December, reset back to January, Add a year","lastModifiedDate":"2022-10-25"},{"lineNumber":225,"author":{"gitId":"MuhdMusab"},"content":"        if (currentMonth \u003d\u003d 0) {","lastModifiedDate":"2022-10-25"},{"lineNumber":226,"author":{"gitId":"MuhdMusab"},"content":"            prevMonth \u003d 11;","lastModifiedDate":"2022-10-25"},{"lineNumber":227,"author":{"gitId":"MuhdMusab"},"content":"            prevYear \u003d cal.get(Calendar.YEAR) - 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":228,"author":{"gitId":"MuhdMusab"},"content":"        } else { //else add a month, retain the year","lastModifiedDate":"2022-10-25"},{"lineNumber":229,"author":{"gitId":"MuhdMusab"},"content":"            prevMonth \u003d currentMonth - 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":230,"author":{"gitId":"MuhdMusab"},"content":"            prevYear \u003d cal.get(Calendar.YEAR);","lastModifiedDate":"2022-10-25"},{"lineNumber":231,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":232,"author":{"gitId":"MuhdMusab"},"content":"        return new GregorianCalendar(prevYear, prevMonth, 1);","lastModifiedDate":"2022-10-25"},{"lineNumber":233,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":234,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":235,"author":{"gitId":"MuhdMusab"},"content":"    private GregorianCalendar getNextMonth(Calendar cal) {","lastModifiedDate":"2022-10-25"},{"lineNumber":236,"author":{"gitId":"MuhdMusab"},"content":"        int futureMonth;","lastModifiedDate":"2022-10-25"},{"lineNumber":237,"author":{"gitId":"MuhdMusab"},"content":"        int futureYear;","lastModifiedDate":"2022-10-25"},{"lineNumber":238,"author":{"gitId":"MuhdMusab"},"content":"        int currentMonth \u003d cal.get(Calendar.MONTH);","lastModifiedDate":"2022-10-25"},{"lineNumber":239,"author":{"gitId":"MuhdMusab"},"content":"        //If January, reset back to December, decrement a year","lastModifiedDate":"2022-10-25"},{"lineNumber":240,"author":{"gitId":"MuhdMusab"},"content":"        if (currentMonth \u003d\u003d 11) {","lastModifiedDate":"2022-10-25"},{"lineNumber":241,"author":{"gitId":"MuhdMusab"},"content":"            futureMonth \u003d 0;","lastModifiedDate":"2022-10-25"},{"lineNumber":242,"author":{"gitId":"MuhdMusab"},"content":"            futureYear \u003d cal.get(Calendar.YEAR) + 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":243,"author":{"gitId":"MuhdMusab"},"content":"        } else { //else decrement a month, retain the year","lastModifiedDate":"2022-10-25"},{"lineNumber":244,"author":{"gitId":"MuhdMusab"},"content":"            futureMonth \u003d currentMonth + 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":245,"author":{"gitId":"MuhdMusab"},"content":"            futureYear \u003d cal.get(Calendar.YEAR);","lastModifiedDate":"2022-10-25"},{"lineNumber":246,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":247,"author":{"gitId":"MuhdMusab"},"content":"        return new GregorianCalendar(futureYear, futureMonth, 1);","lastModifiedDate":"2022-10-25"},{"lineNumber":248,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":249,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":250,"author":{"gitId":"MuhdMusab"},"content":"    private void resetGridPane() {","lastModifiedDate":"2022-10-25"},{"lineNumber":251,"author":{"gitId":"MuhdMusab"},"content":"        topCalendar.getChildren().clear();","lastModifiedDate":"2022-10-25"},{"lineNumber":252,"author":{"gitId":"MuhdMusab"},"content":"        Node node \u003d calendarDisplay.getChildren().get(0);","lastModifiedDate":"2022-10-25"},{"lineNumber":253,"author":{"gitId":"MuhdMusab"},"content":"        calendarDisplay.getChildren().clear();","lastModifiedDate":"2022-10-25"},{"lineNumber":254,"author":{"gitId":"MuhdMusab"},"content":"        calendarDisplay.getChildren().add(0, node);","lastModifiedDate":"2022-10-25"},{"lineNumber":255,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":256,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":257,"author":{"gitId":"MuhdMusab"},"content":"    private void resetCalendarBody() {","lastModifiedDate":"2022-10-25"},{"lineNumber":258,"author":{"gitId":"MuhdMusab"},"content":"        Node node \u003d calendarDisplay.getChildren().get(0);","lastModifiedDate":"2022-10-25"},{"lineNumber":259,"author":{"gitId":"MuhdMusab"},"content":"        calendarDisplay.getChildren().clear();","lastModifiedDate":"2022-10-25"},{"lineNumber":260,"author":{"gitId":"MuhdMusab"},"content":"        calendarDisplay.getChildren().add(0, node);","lastModifiedDate":"2022-10-25"},{"lineNumber":261,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":262,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":217,"wongyewjon":45}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"wongyewjon"},"content":"    /** Returns an unmodifiable view of the filtered list of calendarEvents */","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"wongyewjon"},"content":"    ObservableList\u003cCalendarEvent\u003e getFilteredCalendarEventList();","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"    String getPrevInCommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"    String getNextInCommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jialatteo":3,"wongyewjon":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"wongyewjon"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"        model.addToCommandHistory(commandText.trim());","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"            storage.saveCommandHistory(model.getCommandHistory());","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"            logger.warning(\"Unable to save commandHistory\");","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"    public String getNextInCommandHistory() {","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"        return model.nextCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"    public String getPrevInCommandHistory() {","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"        return model.prevCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":83,"author":{"gitId":"wongyewjon"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"wongyewjon"},"content":"    public ObservableList\u003cCalendarEvent\u003e getFilteredCalendarEventList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"wongyewjon"},"content":"        return model.getFilteredCalendarEventList();","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jialatteo":15,"wongyewjon":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_LOCATION;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.model.person.Person.MAXIMUM_NUM_OF_APPOINTMENTS;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.MaximumSortedList;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":" * Adds appointment(s) for a particular client.","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    public static final String COMMAND_WORD \u003d \"aa\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add appointment/s with a specific client \"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"            + \"by the index number used in the displayed person list \\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"            + PREFIX_APPOINTMENT_DATE + \"DATE_AND_TIME \"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"            + PREFIX_APPOINTMENT_LOCATION + \"LOCATION\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"            + PREFIX_APPOINTMENT_DATE + \"21-Jan-2023 12:30 PM \"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"            + PREFIX_APPOINTMENT_LOCATION + \"Jurong Point, Starbucks\";","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT_DATE_TIME \u003d \"You already have an appointment \"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"                                                                        + \"scheduled on this date and time\";","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_DATE_FIELD_NOT_INCLUDED \u003d \"Date field must be provided.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    public static final String MESSAGE_MAXIMUM_NUMBER_OF_APPOINTMENTS \u003d \"You have already reached the \"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"            + \"maximum number of appointments (\" + MAXIMUM_NUM_OF_APPOINTMENTS + \") for this client\";","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    private final Index index;","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"    private final Appointment appointment;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"    public AddAppointmentCommand(Index index, Appointment appointment) {","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        Person personWithAppointmentToAdd \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"        MaximumSortedList\u003cAppointment\u003e appointmentSet \u003d personWithAppointmentToAdd.getAppointments();","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"        if (model.hasPersonWithSameAppointmentDateTime(appointment)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT_DATE_TIME);","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"        if (appointmentSet.size() \u003d\u003d MAXIMUM_NUM_OF_APPOINTMENTS) {","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"            throw new CommandException(MESSAGE_MAXIMUM_NUMBER_OF_APPOINTMENTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"        appointmentSet.add(appointment);","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"        model.updateCalendarEventList();","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, appointment));","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"                || (other instanceof AddAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 index.equals(((AddAppointmentCommand) other).index))","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 appointment.equals(((AddAppointmentCommand) other).appointment);","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"jialatteo":31,"MuhdMusab":56}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENTTAG;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MONTHLY;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANTAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKTAG;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"            + PREFIX_INCOME + \"YEARLY_INCOME \"","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"            + PREFIX_MONTHLY + \"MONTHLY_CONTRIBUTION \"","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"            + PREFIX_RISKTAG + \"RISK_APPETITE \"","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"            + PREFIX_PLANTAG + \"INVESTMENT_PLAN \"","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"            + PREFIX_CLIENTTAG + \"CLIENT_TYPE \"","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"            + PREFIX_INCOME + \"$1000 \"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"            + PREFIX_MONTHLY + \"$200 \"","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"            + PREFIX_RISKTAG + \"HIGH \"","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"rgonslayer"},"content":"            + PREFIX_PLANTAG + \"Savings Plan \"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"            + PREFIX_CLIENTTAG + \"CURRENT \"","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jialatteo":1,"rgonslayer":9,"-":66,"senwei01":6}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_USAGE \u003d \"clear: Clear all persons in the address book.\"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"            + \"\\nExample: clear\";","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jialatteo":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.MaximumSortedList;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.exceptions.SortedListException;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":" * Deletes all appointments of an existing person in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"    public static final String COMMAND_WORD \u003d \"da\";","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Delete a person\u0027s appointment \"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"            + \"using the index numbers from the displayed person list and the identified person\u0027s appointment list.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"            + \"Parameters: PERSON_INDEX.APPOINTMENT_INDEX \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3.1 \";","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Person\u0027s Appointment: %1$s\";","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    private final Index personIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"    private final Index appointmentIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"     * @param personIndex of the person in the filtered person list","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"     * @param appointmentIndex of the person in the filtered person list","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    public DeleteAppointmentCommand(Index personIndex, Index appointmentIndex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(personIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(appointmentIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"        this.appointmentIndex \u003d appointmentIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        if (personIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"        Person personWithAppointmentToDelete \u003d lastShownList.get(personIndex.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"        MaximumSortedList\u003cAppointment\u003e appointmentSet \u003d personWithAppointmentToDelete.getAppointments();","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"        if (appointmentIndex.getZeroBased() \u003e\u003d appointmentSet.size()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"        Appointment deletedAppointment;","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"            deletedAppointment \u003d appointmentSet.remove(appointmentIndex.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"        } catch (SortedListException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"        model.updateCalendarEventList();","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS, deletedAppointment));","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"        if (!(other instanceof DeleteAppointmentCommand)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"        // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand e \u003d (DeleteAppointmentCommand) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"        return personIndex.equals(e.personIndex)","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 appointmentIndex.equals(e.appointmentIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jialatteo":91,"MuhdMusab":3}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"            + \"Parameters: INDEX \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        model.updateCalendarEventList();","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jialatteo":1,"MuhdMusab":1,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.AddAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT_DATE_TIME;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_LOCATION;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.EditAppointmentDescriptor.createEditedAppointment;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.EditAppointmentDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.MaximumSortedList;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.exceptions.SortedListException;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":" * Overwrites the appointment details of an existing person in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"    public static final String COMMAND_WORD \u003d \"ea\";","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits a person\u0027s appointment \"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"            + \"using the index numbers from the displayed person list and the identified person\u0027s appointment list.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"            + \"Parameters: PERSON_INDEX.APPOINTMENT_INDEX \"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"            + \"[\" + PREFIX_APPOINTMENT_DATE + \"DATE] \"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"            + \"[\" + PREFIX_APPOINTMENT_LOCATION + \"LOCATION]\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3.1 \"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"            + PREFIX_APPOINTMENT_DATE + \"21-Jan-2023 12:30 PM \"","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"            + PREFIX_APPOINTMENT_LOCATION + \"Jurong Point, Starbucks\";","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_EDIT_APPOINTMENT_SUCCESS \u003d \"Appointment was edited \\nFrom: %1$s\\nTo: %2$s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_NO_APPOINTMENT_TO_EDIT \u003d \"This client does not have an appointment to edit\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"            + \"Use command \\\"aa\\\" to add appointment instead\";","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"    private final Index personIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"    private final Index appointmentIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"     * @param personIndex of the person in the filtered person list","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"     * @param editAppointmentDescriptor new appointment details to overwrite with","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"    public EditAppointmentCommand(Index personIndex, Index appointmentIndex,","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"                                  EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(personIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(appointmentIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(editAppointmentDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"        this.appointmentIndex \u003d appointmentIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"        this.editAppointmentDescriptor \u003d new EditAppointmentDescriptor(editAppointmentDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"    public Index getIndex() {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        return personIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"        if (personIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"        Person personWithAppointmentToEdit \u003d lastShownList.get(personIndex.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        MaximumSortedList\u003cAppointment\u003e appointmentSet \u003d personWithAppointmentToEdit.getAppointments();","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"        if (appointmentIndex.getZeroBased() \u003e\u003d appointmentSet.size()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"        if (appointmentSet.isEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"            throw new CommandException(MESSAGE_NO_APPOINTMENT_TO_EDIT);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentToEdit;","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"            appointmentToEdit \u003d appointmentSet.get(appointmentIndex.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"        } catch (SortedListException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"        if (editAppointmentDescriptor.getDateTime().isPresent()","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 model.hasPersonWithSameAppointmentDateTime(editedAppointment)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT_DATE_TIME);","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"            appointmentSet.remove(appointmentIndex.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"        } catch (SortedListException e) {","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"        appointmentSet.add(editedAppointment);","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"        model.updateCalendarEventList();","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPOINTMENT_SUCCESS, appointmentToEdit, editedAppointment));","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"jialatteo"},"content":"        if (!(other instanceof EditAppointmentCommand)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"jialatteo"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"jialatteo"},"content":"        // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentCommand e \u003d (EditAppointmentCommand) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"jialatteo"},"content":"        return personIndex.equals(e.personIndex)","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"jialatteo"},"content":"               \u0026\u0026 appointmentIndex.equals(e.appointmentIndex)","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"jialatteo"},"content":"               \u0026\u0026 editAppointmentDescriptor.equals(e.editAppointmentDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jialatteo":128,"MuhdMusab":3}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENTTAG;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MONTHLY;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANTAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKTAG;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.EditPersonDescriptor.createEditedPerson;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"rgonslayer"},"content":"            + \"[\" + PREFIX_INCOME + \"INCOME] \"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"rgonslayer"},"content":"            + \"[\" + PREFIX_MONTHLY + \"MONTHLY} \"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"            + \"[\" + PREFIX_RISKTAG + \"RISKTAG] \"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"            + \"[\" + PREFIX_PLANTAG + \"PLANTAG] \"","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"            + \"[\" + PREFIX_CLIENTTAG + \"CLIENTTAG] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"        model.updateCalendarEventList();","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jialatteo":1,"rgonslayer":10,"MuhdMusab":3,"-":97}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_USAGE \u003d \"exit: Exit the program.\"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"            + \"\\nExample: exit\";","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jialatteo":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENTTAG;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANTAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKTAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.FindPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":" * * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"            + \"the specified keywords (case-insensitive) or risk tags, \\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"            + \"and displays them as a list with index numbers.\\n\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"            + \"Parameters: PREFIX/ KEYWORD [MORE_KEYWORDS]\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"            + PREFIX_NAME.getPrefix() + \" KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"            + PREFIX_RISKTAG.getPrefix() + \" RISKTAG [MORE_RISKTAGS]...\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"            + PREFIX_CLIENTTAG.getPrefix() + \" CLIENTTAG [MORE_CLIENTTAGS]...\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"            + PREFIX_TAG.getPrefix() + \" TAG [MORE_TAGS]...\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"            + PREFIX_PHONE.getPrefix() + \" PHONE [MORE_PHONE]...\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"            + PREFIX_INCOME.getPrefix() + \"\u003e/\u003c/\u003d INCOME \\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"            + \"Examples: \" + COMMAND_WORD + \" \" + PREFIX_NAME.getPrefix() + \" alice bob charlie\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"            + COMMAND_WORD + \" \" + PREFIX_RISKTAG.getPrefix() + \" high low\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"            + COMMAND_WORD + \" \" + PREFIX_CLIENTTAG.getPrefix() + \"POTENTIAL \\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"            + COMMAND_WORD + \" \" + PREFIX_PLANTAG.getPrefix() + \" savings plan\"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"rgonslayer"},"content":"            + COMMAND_WORD + \" \" + PREFIX_PHONE.getPrefix() + \" 912345678\"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"rgonslayer"},"content":"            + COMMAND_WORD + \" \" + PREFIX_INCOME.getPrefix() + \" \u003e1000\";","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    private final List\u003cFindPredicate\u003e predicates;","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"    public FindCommand(List\u003cFindPredicate\u003e predicates) {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"    };","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        model.updateFilteredPersonList(predicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"            return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"            return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"        // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        return this.predicates.equals(((FindCommand) other).predicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"rgonslayer":11,"MuhdMusab":19,"-":30,"senwei01":12}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_USAGE \u003d \"list: List all persons in the address book.\"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"            + \"\\nExample: list\";","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jialatteo":2,"-":24}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"senwei01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":" * Sorts all people in the addressbook by the keyword.","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts all persons based on the given KEYWORD\"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"            + \" in ascending or descending order\"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"            + \"(KEYWORD: name, appt, risk, income, monthly, client) \\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"            + \"Parameters: [KEYWORD]/ [KEYWORD] desc\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"senwei01"},"content":"            + \"Example: \" + COMMAND_WORD + \" name\" + \"/\" + COMMAND_WORD + \" name desc\";","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all persons by %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"    public static final String MESSAGE_INCORRECT_KEYWORD \u003d \" Incorrect keyword! \\n%1$s\";","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"    private final Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"    private final String keyword;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"     * Creates a SortCommand to sort the people by specified {@code keyword}","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"    public SortCommand(Comparator\u003cPerson\u003e comparator, String keyword) {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"        model.sortPerson(this.comparator);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, keyword));","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"        // if object is the same, short circuit this code","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"senwei01"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"senwei01"},"content":"        if (obj instanceof SortCommand) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"senwei01"},"content":"            SortCommand s \u003d (SortCommand) obj;","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"senwei01"},"content":"            return this.comparator.equals(s.comparator) \u0026\u0026 this.keyword.equals(s.keyword);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"senwei01"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"senwei01"},"content":"            // handles null","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"senwei01"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"rgonslayer":1,"senwei01":58}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_LOCATION;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":" * Parses input arguments and creates a new AddAppointmentCommand object","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"     * AddAppointmentCommand and returns an AddAppointmentCommand object for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_APPOINTMENT_DATE, PREFIX_APPOINTMENT_LOCATION);","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"        if (argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"            || !arePrefixesPresent(argMultimap, PREFIX_APPOINTMENT_DATE, PREFIX_APPOINTMENT_LOCATION)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        Index personIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"            personIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"rgonslayer"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        Appointment appointment;","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"        DateTime appointmentDateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        Location appointmentLocation;","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"            appointmentDateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_APPOINTMENT_DATE).get());","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"            appointmentLocation \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_APPOINTMENT_LOCATION).get());","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"            appointment \u003d ParserUtil.parseAppointment(appointmentDateTime.toString(), appointmentLocation.toString());","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"        return new AddAppointmentCommand(personIndex, appointment);","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"jialatteo":23,"MuhdMusab":33,"rgonslayer":5}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_LOCATION;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENTTAG;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MONTHLY;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANTAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKTAG;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.IncomeLevel;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.Monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"                        PREFIX_ADDRESS, PREFIX_INCOME, PREFIX_MONTHLY, PREFIX_RISKTAG,","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"                        PREFIX_PLANTAG, PREFIX_CLIENTTAG, PREFIX_TAG,","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"                        PREFIX_APPOINTMENT_DATE, PREFIX_APPOINTMENT_LOCATION);","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"rgonslayer"},"content":"                PREFIX_EMAIL, PREFIX_INCOME, PREFIX_MONTHLY, PREFIX_PLANTAG, PREFIX_RISKTAG, PREFIX_CLIENTTAG)","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_APPOINTMENT_DATE, PREFIX_APPOINTMENT_LOCATION)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"rgonslayer"},"content":"        IncomeLevel incomeLevel \u003d ParserUtil.parseIncomeLevel(argMultimap.getValue(PREFIX_INCOME).get());","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"rgonslayer"},"content":"        Monthly monthly \u003d ParserUtil.parseMonthly(argMultimap.getValue(PREFIX_MONTHLY).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"rgonslayer"},"content":"        RiskTag riskTag \u003d ParserUtil.parseRiskTag(argMultimap.getValue(PREFIX_RISKTAG).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"rgonslayer"},"content":"        PlanTag planTag \u003d ParserUtil.parsePlanTag(argMultimap.getValue(PREFIX_PLANTAG).get());","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"rgonslayer"},"content":"        ClientTag clientTag \u003d ParserUtil.parseClientTag(argMultimap.getValue(PREFIX_CLIENTTAG).get());","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"rgonslayer"},"content":"        Set\u003cNormalTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"rgonslayer"},"content":"        Person person \u003d new Person(name, phone, email, address, incomeLevel, monthly,","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"rgonslayer"},"content":"                riskTag, planTag, clientTag, tagList);","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jialatteo":6,"MuhdMusab":2,"rgonslayer":22,"-":43}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"        case EditAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"            return new EditAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"senwei01"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"senwei01"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jialatteo":8,"MuhdMusab":4,"-":75,"senwei01":4}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"     * Returns all values of {@code prefix} separated by spaces.","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    public List\u003cString\u003e getAllValuesSeparatedByRegex(Prefix prefix, String regex) {","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        String value \u003d getValue(prefix).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"        return Arrays.stream(value.split(regex)).collect(Collectors.toList());","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-01"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"     * Returns true if any of the prefixes are present {@code Optional} values in the given","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"    public static boolean anyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"     * Returns true if none of the prefixes are present {@code Optional} values in the given","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"    public static boolean noPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"        return Stream.of(prefixes).noneMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"MuhdMusab":40,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"    public static final Prefix PREFIX_RISKTAG \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"    public static final Prefix PREFIX_PLANTAG \u003d new Prefix(\"ip/\");","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"    public static final Prefix PREFIX_CLIENTTAG \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"    public static final Prefix PREFIX_APPOINTMENT_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    public static final Prefix PREFIX_APPOINTMENT_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"    public static final Prefix PREFIX_INCOME \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"    public static final Prefix PREFIX_MONTHLY \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jialatteo":2,"rgonslayer":5,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DateTimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":" * Parses string representation of a date and time and creates","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":" * a new LocalDateTime object","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"public class DateTimeParser {","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"d-MMM-uuuu hh:mm a\";","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    private static final String DATE_FORMAT \u003d \"d-MMM-uuuu\";","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private static final String TIME_FORMAT \u003d \"hh:mm a\";","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d java.time.format","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"            .DateTimeFormatter.ofPattern(DATE_TIME_FORMAT).withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    private static final DateTimeFormatter dateFormatter \u003d java.time.format","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"            .DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    private static final DateTimeFormatter timeFormatter \u003d java.time.format","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"            .DateTimeFormatter.ofPattern(TIME_FORMAT);","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"     * Parses the given {@code String} representing a date and time","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"     * and returns a LocalDateTime object.","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"     * @param str String representing the LocalDateTime to be returned.","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"     * @return LocalDateTime parsed from the input String.","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    public static LocalDateTime parseLocalDateTimeFromString(String str) {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        return LocalDateTime.parse(str, DateTimeParser.dateTimeFormatter);","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"     * Parses the given {@code String} representing a date","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"     * and returns a LocalDate object.","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"     * @param str String representing the LocalDate to be returned.","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"     * @return LocalDate parsed from the input String.","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    public static LocalDate parseLocalDateFromString(String str) {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        return LocalDate.parse(str, DateTimeParser.dateFormatter);","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"     * Parses the given {@code String} representing a Time","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"     * and returns a LocalTime object.","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"     * @param str String representing the LocalTime to be returned.","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"     * @return LocalTime parsed from the input String.","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    public static LocalTime parseLocalTimeFromString(String str) {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"        return LocalTime.parse(str, DateTimeParser.timeFormatter);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"     * Checks whether the input String has the correct DateTime format","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"     * @param str the String representing the LocalDateTime to be parsed.","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"     * @return boolean value describing whether the input String has","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"     *         the correct DateTime format.","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"    public static boolean isValidDateTime(String str) {","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"            parseLocalDateTimeFromString(str);","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"            return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"        return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"MuhdMusab":73}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":" * Parses input argument and creates a new DeleteAppointmentCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"     * Parses the given {@code String} of Index argument","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"     * and returns an DeleteAppointmentCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"        Index personIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"        Index appointmentIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"            String personAppointmentIndex \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"            personIndex \u003d ParserUtil.parsePersonIndex(personAppointmentIndex);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"            appointmentIndex \u003d ParserUtil.parseAppointmentIndex(personAppointmentIndex);","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"                    DeleteAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        return new DeleteAppointmentCommand(personIndex, appointmentIndex);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jialatteo":38}},{"path":"src/main/java/seedu/address/logic/parser/EditAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_LOCATION;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":" * Parses input arguments and creates a new EditAppointmentCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"public class EditAppointmentCommandParser implements Parser\u003cEditAppointmentCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"     * EditAppointmentCommand and returns an EditAppointmentCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"    public EditAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_APPOINTMENT_DATE, PREFIX_APPOINTMENT_LOCATION);","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        Index personIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"        Index appointmentIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"            String personAppointmentIndex \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"            personIndex \u003d ParserUtil.parsePersonIndex(personAppointmentIndex);","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"            appointmentIndex \u003d ParserUtil.parseAppointmentIndex(personAppointmentIndex);","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"                    EditAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"        if (argMultimap.getValue(PREFIX_APPOINTMENT_DATE).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"            try {","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"                editAppointmentDescriptor.setDateTime(","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"                    ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_APPOINTMENT_DATE).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"                throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"        if (argMultimap.getValue(PREFIX_APPOINTMENT_LOCATION).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"            editAppointmentDescriptor.setLocation(","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"                    ParserUtil.parseLocation(argMultimap.getValue(PREFIX_APPOINTMENT_LOCATION).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"                    EditAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"        return new EditAppointmentCommand(personIndex, appointmentIndex, editAppointmentDescriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jialatteo":58,"rgonslayer":5}},{"path":"src/main/java/seedu/address/logic/parser/EditAppointmentDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":" * Stores the details to edit the appointment with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":" * corresponding field value of the appointment.","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"public class EditAppointmentDescriptor {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"    private DateTime dateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"    private Location location;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    public EditAppointmentDescriptor() {};","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"     * Copy constructor.","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"        setDateTime(toCopy.dateTime);","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"        setLocation(toCopy.location);","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        return CollectionUtil.isAnyNonNull(dateTime, location);","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    public Optional\u003cDateTime\u003e getDateTime() {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        return Optional.ofNullable(dateTime);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"    public void setDateTime(DateTime dateTime) {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"    public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        return Optional.ofNullable(location);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    public void setLocation(Location location) {","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        this.location \u003d location;","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"     * Creates and returns a {@code Appointment} with the details of {@code appointmentToEdit}","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"     * edited with {@code editAppointmentDescriptor}.","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"    public static Appointment createEditedAppointment(Appointment appointmentToEdit,","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"                                                      EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"        assert appointmentToEdit !\u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"        DateTime updatedDateTime \u003d editAppointmentDescriptor.getDateTime().orElse(appointmentToEdit.getDateTime());","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        Location updatedLocation \u003d editAppointmentDescriptor.getLocation().orElse(appointmentToEdit.getLocation());","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        return new Appointment(updatedDateTime, updatedLocation);","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"            return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"        if (!(other instanceof EditAppointmentDescriptor)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"        // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor e \u003d (EditAppointmentDescriptor) other;","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"        return getDateTime().equals(e.getDateTime())","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 getLocation().equals(e.getLocation());","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":83}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENTTAG;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MONTHLY;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANTAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKTAG;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_INCOME, PREFIX_MONTHLY,","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"rgonslayer"},"content":"                PREFIX_RISKTAG, PREFIX_PLANTAG, PREFIX_CLIENTTAG, PREFIX_TAG);","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"rgonslayer"},"content":"        if (argMultimap.getValue(PREFIX_RISKTAG).isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"rgonslayer"},"content":"            editPersonDescriptor.setRiskTag(ParserUtil.parseRiskTag(argMultimap.getValue(PREFIX_RISKTAG).get()));","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"rgonslayer"},"content":"        if (argMultimap.getValue(PREFIX_PLANTAG).isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"rgonslayer"},"content":"            editPersonDescriptor.setPlanTag(ParserUtil.parsePlanTag(argMultimap.getValue(PREFIX_PLANTAG).get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"rgonslayer"},"content":"        if (argMultimap.getValue(PREFIX_CLIENTTAG).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"rgonslayer"},"content":"            editPersonDescriptor.setClientTag(ParserUtil.parseClientTag(argMultimap.getValue(PREFIX_CLIENTTAG).get()));","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"rgonslayer"},"content":"        if (argMultimap.getValue(PREFIX_INCOME).isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"rgonslayer"},"content":"            editPersonDescriptor.setIncome(ParserUtil.parseIncomeLevel(argMultimap.getValue(PREFIX_INCOME).get()));","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"rgonslayer"},"content":"        if (argMultimap.getValue(PREFIX_MONTHLY).isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"rgonslayer"},"content":"            editPersonDescriptor.setMonthly(ParserUtil.parseMonthly(argMultimap.getValue(PREFIX_MONTHLY).get()));","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"        //editPersonDescriptor.setAppointments(EMPTY_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"rgonslayer"},"content":"    private Optional\u003cSet\u003cNormalTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"rgonslayer":24,"MuhdMusab":2,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/EditPersonDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.IncomeLevel;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.Monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.MaximumSortedList;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":" * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":" * corresponding field value of the person.","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"public class EditPersonDescriptor {","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    private Name name;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    private Email email;","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"    private Address address;","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"    private IncomeLevel income;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"    private Monthly monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"    private RiskTag riskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"    private PlanTag planTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"    private ClientTag clientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"    private Set\u003cNormalTag\u003e tags;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    public EditPersonDescriptor() {}","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"     * Copy constructor.","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        setName(toCopy.name);","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        setPhone(toCopy.phone);","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"        setEmail(toCopy.email);","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        setAddress(toCopy.address);","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"        setIncome(toCopy.income);","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"rgonslayer"},"content":"        setMonthly(toCopy.monthly);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"rgonslayer"},"content":"        setRiskTag(toCopy.riskTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"rgonslayer"},"content":"        setPlanTag(toCopy.planTag);","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"rgonslayer"},"content":"        setClientTag(toCopy.clientTag);","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"        setTags(toCopy.tags);","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"rgonslayer"},"content":"        return CollectionUtil.isAnyNonNull(name, phone, email, address, income, monthly,","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"rgonslayer"},"content":"                riskTag, planTag, clientTag, tags);","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"    public void setName(Name name) {","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        return Optional.ofNullable(name);","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"    public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"    public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"        return Optional.ofNullable(phone);","lastModifiedDate":"2022-10-01"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"    public void setEmail(Email email) {","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"    public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"        return Optional.ofNullable(email);","lastModifiedDate":"2022-10-01"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"    public void setAddress(Address address) {","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":93,"author":{"gitId":"rgonslayer"},"content":"    public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"rgonslayer"},"content":"        return Optional.ofNullable(address);","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"rgonslayer"},"content":"    public void setRiskTag(RiskTag riskTag) {","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"rgonslayer"},"content":"        this.riskTag \u003d riskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"rgonslayer"},"content":"    public Optional\u003cRiskTag\u003e getRiskTag() {","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"rgonslayer"},"content":"        return Optional.ofNullable(riskTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"rgonslayer"},"content":"    public void setPlanTag(PlanTag planTag) {","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"rgonslayer"},"content":"        this.planTag \u003d planTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"rgonslayer"},"content":"    public Optional\u003cPlanTag\u003e getPlanTag() {","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"rgonslayer"},"content":"        return Optional.ofNullable(planTag);","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"rgonslayer"},"content":"    public void setClientTag(ClientTag clientTag) {","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"rgonslayer"},"content":"        this.clientTag \u003d clientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"rgonslayer"},"content":"    public Optional\u003cClientTag\u003e getClientTag() {","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"rgonslayer"},"content":"        return Optional.ofNullable(clientTag);","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"rgonslayer"},"content":"    public void setIncome(IncomeLevel income) {","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"rgonslayer"},"content":"        this.income \u003d income;","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"    public Optional\u003cIncomeLevel\u003e getIncome() {","lastModifiedDate":"2022-10-31"},{"lineNumber":123,"author":{"gitId":"rgonslayer"},"content":"        return Optional.ofNullable(income);","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":126,"author":{"gitId":"rgonslayer"},"content":"    public void setMonthly(Monthly monthly) {","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"rgonslayer"},"content":"        this.monthly \u003d monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"rgonslayer"},"content":"    public Optional\u003cMonthly\u003e getMonthly() {","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"rgonslayer"},"content":"        return Optional.ofNullable(monthly);","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"     * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-01"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-01"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":136,"author":{"gitId":"rgonslayer"},"content":"    public void setTags(Set\u003cNormalTag\u003e tags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"        this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-01"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-01"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-01"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"     * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-01"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":145,"author":{"gitId":"rgonslayer"},"content":"    public Optional\u003cSet\u003cNormalTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"        return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-01"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-10-01"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-10-01"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"    public static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-01"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-10-01"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-10-01"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-10-01"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-10-01"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2022-10-01"},{"lineNumber":160,"author":{"gitId":"rgonslayer"},"content":"        IncomeLevel updatedIncomeLevel \u003d editPersonDescriptor.getIncome().orElse(personToEdit.getIncome());","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"rgonslayer"},"content":"        Monthly updateMonthly \u003d editPersonDescriptor.getMonthly().orElse(personToEdit.getMonthly());","lastModifiedDate":"2022-10-14"},{"lineNumber":162,"author":{"gitId":"rgonslayer"},"content":"        RiskTag updatedRiskTag \u003d editPersonDescriptor.getRiskTag().orElse(personToEdit.getRiskTag());","lastModifiedDate":"2022-10-14"},{"lineNumber":163,"author":{"gitId":"rgonslayer"},"content":"        PlanTag updatedPlanTag \u003d editPersonDescriptor.getPlanTag().orElse(personToEdit.getPlanTag());","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"rgonslayer"},"content":"        ClientTag updatedClientTag \u003d editPersonDescriptor.getClientTag().orElse(personToEdit.getClientTag());","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"rgonslayer"},"content":"        Set\u003cNormalTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"jialatteo"},"content":"        MaximumSortedList\u003cAppointment\u003e originalAppointments \u003d personToEdit.getAppointments();","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":168,"author":{"gitId":"rgonslayer"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedIncomeLevel,","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"rgonslayer"},"content":"                updateMonthly, updatedRiskTag, updatedPlanTag, updatedClientTag, updatedTags, originalAppointments);","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-01"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-01"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-01"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"            return true;","lastModifiedDate":"2022-10-01"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-01"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"        if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"            return false;","lastModifiedDate":"2022-10-01"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":184,"author":{"gitId":"MuhdMusab"},"content":"        // state check","lastModifiedDate":"2022-10-01"},{"lineNumber":185,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2022-10-01"},{"lineNumber":186,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":187,"author":{"gitId":"MuhdMusab"},"content":"        return getName().equals(e.getName())","lastModifiedDate":"2022-10-01"},{"lineNumber":188,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-10-01"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-10-01"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-10-01"},{"lineNumber":191,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 getRiskTag().equals(e.getRiskTag())","lastModifiedDate":"2022-10-14"},{"lineNumber":192,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 getMonthly().equals(e.getMonthly())","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 getPlanTag().equals(e.getPlanTag())","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 getClientTag().equals(e.getClientTag())","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 getIncome().equals(e.getIncome())","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":198,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"jialatteo":3,"MuhdMusab":123,"rgonslayer":72}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.noPrefixesPresent;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_LOCATION;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENTTAG;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MONTHLY;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANTAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKTAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.ClientTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.FindPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.IncomeContainsKeywordsPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.MonthlyContainsKeywordsPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.NormalTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.PlanTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.RiskTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    private static final String SPACE_REGEX \u003d \"\\\\s+\";","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    private static final String PLAN_REGEX \u003d \"(?\u003c!\\\\G\\\\S+)\\\\s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"        List\u003cFindPredicate\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_RISKTAG,","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"rgonslayer"},"content":"                        PREFIX_PLANTAG, PREFIX_CLIENTTAG, PREFIX_TAG, PREFIX_INCOME, PREFIX_MONTHLY);","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"        if (noPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_RISKTAG,","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"rgonslayer"},"content":"                PREFIX_PLANTAG, PREFIX_CLIENTTAG, PREFIX_TAG, PREFIX_INCOME, PREFIX_MONTHLY)","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_APPOINTMENT_DATE, PREFIX_APPOINTMENT_LOCATION)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"            List\u003cName\u003e names \u003d ParserUtil.parseAllSpaceSeparatedNames(argMultimap","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"                    .getAllValuesSeparatedByRegex(PREFIX_NAME, SPACE_REGEX));","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"            predicates.add(new NameContainsKeywordsPredicate(names.stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"                    .map(x -\u003e x.toString()).collect(Collectors.toList())));","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"            List\u003cPhone\u003e phones \u003d ParserUtil.parseAllSpaceSeparatedPhone(argMultimap","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"                    .getAllValuesSeparatedByRegex(PREFIX_PHONE, SPACE_REGEX));","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"            predicates.add(new PhoneContainsKeywordsPredicate(phones.stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"                    .map(x -\u003e x.toString()).collect(Collectors.toList())));","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"        if (argMultimap.getValue(PREFIX_RISKTAG).isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"            List\u003cRiskTag\u003e riskTags \u003d ParserUtil.parseAllSpaceSeparatedRiskTag(argMultimap","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"                    .getAllValuesSeparatedByRegex(PREFIX_RISKTAG, SPACE_REGEX));","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"            predicates.add(new RiskTagContainsKeywordsPredicate(riskTags.stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"                    .map(x -\u003e x.tagName).collect(Collectors.toList())));","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"        if (argMultimap.getValue(PREFIX_PLANTAG).isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"            List\u003cPlanTag\u003e planTags \u003d ParserUtil.parseAllSpaceSeparatedPlanTags(argMultimap","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"                    .getAllValuesSeparatedByRegex(PREFIX_PLANTAG, PLAN_REGEX));","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"            predicates.add(new PlanTagContainsKeywordsPredicate(planTags.stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"                    .map(x -\u003e x.tagName).collect(Collectors.toList())));","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"rgonslayer"},"content":"        if (argMultimap.getValue(PREFIX_CLIENTTAG).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"rgonslayer"},"content":"            List\u003cClientTag\u003e clientTags \u003d ParserUtil.parseAllSpaceSeparatedClientTags(argMultimap","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"rgonslayer"},"content":"                    .getAllValuesSeparatedByRegex(PREFIX_CLIENTTAG, SPACE_REGEX));","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"rgonslayer"},"content":"            predicates.add(new ClientTagContainsKeywordsPredicate(clientTags.stream()","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"rgonslayer"},"content":"                    .map(x -\u003e x.tagName).collect(Collectors.toList())));","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"            List\u003cNormalTag\u003e normalTags \u003d ParserUtil.parseAllSpaceSeparatedNormalTags(argMultimap","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"                    .getAllValuesSeparatedByRegex(PREFIX_TAG, SPACE_REGEX));","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"            predicates.add(new NormalTagContainsKeywordsPredicate(normalTags.stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"                    .map(x -\u003e x.tagName).collect(Collectors.toList())));","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"        if (argMultimap.getValue(PREFIX_INCOME).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"            List\u003cString\u003e incomeLevels \u003d ParserUtil.parseMonetaryValues(argMultimap","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"                    .getAllValuesSeparatedByRegex(PREFIX_INCOME, SPACE_REGEX));","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"            String equalityPredicate \u003d incomeLevels.get(0).substring(0, 1);","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"            incomeLevels.set(0, incomeLevels.get(0).substring(1));","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"            predicates.add(new IncomeContainsKeywordsPredicate(incomeLevels, equalityPredicate));","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"        if (argMultimap.getValue(PREFIX_MONTHLY).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"            List\u003cString\u003e monthlySavings \u003d ParserUtil.parseMonetaryValues(argMultimap","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"                    .getAllValuesSeparatedByRegex(PREFIX_MONTHLY, SPACE_REGEX));","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"            String equalityPredicate \u003d monthlySavings.get(0).substring(0, 1);","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"            monthlySavings.set(0, monthlySavings.get(0).substring(1));","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"            predicates.add(new MonthlyContainsKeywordsPredicate(monthlySavings, equalityPredicate));","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"        return new FindCommand(predicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"MuhdMusab":69,"rgonslayer":15,"-":27,"senwei01":10}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.model.person.Person.MAXIMUM_NUM_OF_APPOINTMENTS;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.IncomeLevel;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.Monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.MaximumSortedList;","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(oneBasedIndex);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"     * Parses {@code personAppointmentIndex} into an {@code Index} and returns the appointment index.","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"    public static Index parseAppointmentIndex(String personAppointmentIndex) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(personAppointmentIndex);","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"        String trimmedAppointmentIndex \u003d personAppointmentIndex.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        String[] splitStr \u003d trimmedAppointmentIndex.split(\"\\\\.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        if (splitStr.length !\u003d 2 || !StringUtil.isNonZeroUnsignedInteger(splitStr[1])) {","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"        return Index.fromOneBased(Integer.parseInt(splitStr[1]));","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"     * Parses {@code personAppointmentIndex} into an {@code Index} and returns the person index.","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"    public static Index parsePersonIndex(String personAppointmentIndex) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(personAppointmentIndex);","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        String trimmedAppointmentIndex \u003d personAppointmentIndex.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"        String[] splitStr \u003d trimmedAppointmentIndex.split(\"\\\\.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"        if (splitStr.length !\u003d 2 || !StringUtil.isNonZeroUnsignedInteger(splitStr[0])) {","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"        return Index.fromOneBased(Integer.parseInt(splitStr[0]));","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"wongyewjon"},"content":"        String trimmedName \u003d name.trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2022-10-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code List\u003cName\u003e}.","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"    public static List\u003cName\u003e parseAllSpaceSeparatedNames(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(names);","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"        final List\u003cName\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"        for (String name: names) {","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"            nameList.add(parseName(name));","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"        return nameList;","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"     * Parses {@code Collection\u003cString\u003e phones} into a {@code List\u003cPhone\u003e}.","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"    public static List\u003cPhone\u003e parseAllSpaceSeparatedPhone(Collection\u003cString\u003e phones) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(phones);","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"        final List\u003cPhone\u003e phoneList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"        for (String phone: phones) {","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"            phoneList.add(parsePhone(phone));","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"        return phoneList;","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"jialatteo"},"content":"     * Parses a {@code String dateAndTime} and a {@code String Location} into an {@code Appointment}.","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"jialatteo"},"content":"    public static Appointment parseAppointment(String dateAndTime, String location) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(dateAndTime);","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(location);","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"jialatteo"},"content":"        DateTime appointmentDateTime \u003d parseDateTime(dateAndTime);","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"jialatteo"},"content":"        Location appointmentLocation \u003d parseLocation(location);","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"jialatteo"},"content":"        if (!Appointment.isValidAppointment(appointmentDateTime, appointmentLocation)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"jialatteo"},"content":"            throw new ParseException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"jialatteo"},"content":"        return new Appointment(appointmentDateTime, appointmentLocation);","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"MuhdMusab"},"content":"     * Parses {@code Collection\u003cString\u003e datesAndTimes} into a {@code Set\u003cAppointment\u003e}.","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"jialatteo"},"content":"    public static MaximumSortedList\u003cAppointment\u003e parseAppointmentsIntoSortedList(Collection\u003cAppointment\u003e appointments) {","lastModifiedDate":"2022-10-20"},{"lineNumber":187,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(appointments);","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"MuhdMusab"},"content":"        final MaximumSortedList\u003cAppointment\u003e appointmentSet \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":189,"author":{"gitId":"jialatteo"},"content":"                new MaximumSortedList\u003c\u003e(MAXIMUM_NUM_OF_APPOINTMENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"jialatteo"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"jialatteo"},"content":"            appointmentSet.add(appointment);","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"MuhdMusab"},"content":"        return appointmentSet;","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"MuhdMusab"},"content":"     * Parses a {@code String dateAndTime} into an {@code DateTime}.","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"MuhdMusab"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"MuhdMusab"},"content":"    public static DateTime parseDateTime(String dateAndTime) {","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(dateAndTime);","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"MuhdMusab"},"content":"        String trimmedDateAndTime \u003d dateAndTime.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime localDateTime \u003d DateTimeParser.parseLocalDateTimeFromString(trimmedDateAndTime);","lastModifiedDate":"2022-10-04"},{"lineNumber":204,"author":{"gitId":"MuhdMusab"},"content":"        return new DateTime(localDateTime);","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":207,"author":{"gitId":"jialatteo"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2022-10-20"},{"lineNumber":208,"author":{"gitId":"jialatteo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-20"},{"lineNumber":209,"author":{"gitId":"jialatteo"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":210,"author":{"gitId":"jialatteo"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":211,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":212,"author":{"gitId":"jialatteo"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":213,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(location);","lastModifiedDate":"2022-10-20"},{"lineNumber":214,"author":{"gitId":"jialatteo"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":215,"author":{"gitId":"jialatteo"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":216,"author":{"gitId":"jialatteo"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":217,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":218,"author":{"gitId":"jialatteo"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2022-10-20"},{"lineNumber":219,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":220,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":221,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":222,"author":{"gitId":"rgonslayer"},"content":"     * Parses a {@code String income} into an {@code IncomeLevel}.","lastModifiedDate":"2022-10-13"},{"lineNumber":223,"author":{"gitId":"rgonslayer"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-13"},{"lineNumber":224,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":225,"author":{"gitId":"rgonslayer"},"content":"    public static IncomeLevel parseIncomeLevel(String income) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":226,"author":{"gitId":"rgonslayer"},"content":"        requireNonNull(income);","lastModifiedDate":"2022-10-13"},{"lineNumber":227,"author":{"gitId":"rgonslayer"},"content":"        String trimmedIncome \u003d income.trim();","lastModifiedDate":"2022-10-13"},{"lineNumber":228,"author":{"gitId":"rgonslayer"},"content":"        if (!IncomeLevel.isValidIncome(income)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":229,"author":{"gitId":"rgonslayer"},"content":"            throw new ParseException(IncomeLevel.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":230,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":231,"author":{"gitId":"rgonslayer"},"content":"        return new IncomeLevel(trimmedIncome);","lastModifiedDate":"2022-10-13"},{"lineNumber":232,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":233,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":234,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":235,"author":{"gitId":"rgonslayer"},"content":"     * Parses a {@code String monthly} into an {@code Monthly}.","lastModifiedDate":"2022-10-14"},{"lineNumber":236,"author":{"gitId":"rgonslayer"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-14"},{"lineNumber":237,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":238,"author":{"gitId":"rgonslayer"},"content":"    public static Monthly parseMonthly(String monthly) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":239,"author":{"gitId":"rgonslayer"},"content":"        requireNonNull(monthly);","lastModifiedDate":"2022-10-14"},{"lineNumber":240,"author":{"gitId":"rgonslayer"},"content":"        String trimmedMonthly \u003d monthly.trim();","lastModifiedDate":"2022-10-14"},{"lineNumber":241,"author":{"gitId":"rgonslayer"},"content":"        if (!Monthly.isValidMonthly(monthly)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":242,"author":{"gitId":"rgonslayer"},"content":"            throw new ParseException(Monthly.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":243,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":244,"author":{"gitId":"rgonslayer"},"content":"        return new Monthly(trimmedMonthly);","lastModifiedDate":"2022-10-14"},{"lineNumber":245,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":246,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":247,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":248,"author":{"gitId":"rgonslayer"},"content":"     * Parses a {@code String riskTag} into an {@code RiskTag}.","lastModifiedDate":"2022-10-26"},{"lineNumber":249,"author":{"gitId":"rgonslayer"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-14"},{"lineNumber":250,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":251,"author":{"gitId":"rgonslayer"},"content":"    public static RiskTag parseRiskTag(String riskTag) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":252,"author":{"gitId":"rgonslayer"},"content":"        requireNonNull(riskTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":253,"author":{"gitId":"rgonslayer"},"content":"        String trimmedRiskTag \u003d riskTag.trim();","lastModifiedDate":"2022-10-14"},{"lineNumber":254,"author":{"gitId":"rgonslayer"},"content":"        if (!RiskTag.isValidRiskTagName(trimmedRiskTag)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":255,"author":{"gitId":"rgonslayer"},"content":"            throw new ParseException(RiskTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":256,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":257,"author":{"gitId":"rgonslayer"},"content":"        return new RiskTag(trimmedRiskTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":258,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":259,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":260,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":261,"author":{"gitId":"rgonslayer"},"content":"     * Parses a {@code String clientTag} into an {@code ClientTag}.","lastModifiedDate":"2022-10-28"},{"lineNumber":262,"author":{"gitId":"rgonslayer"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-28"},{"lineNumber":263,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":264,"author":{"gitId":"rgonslayer"},"content":"    public static ClientTag parseClientTag(String clientTag) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":265,"author":{"gitId":"rgonslayer"},"content":"        requireNonNull(clientTag);","lastModifiedDate":"2022-10-28"},{"lineNumber":266,"author":{"gitId":"rgonslayer"},"content":"        String trimmedClientTag \u003d clientTag.trim();","lastModifiedDate":"2022-10-28"},{"lineNumber":267,"author":{"gitId":"rgonslayer"},"content":"        if (!ClientTag.isValidClientTagName(trimmedClientTag)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":268,"author":{"gitId":"rgonslayer"},"content":"            throw new ParseException(ClientTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":269,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":270,"author":{"gitId":"rgonslayer"},"content":"        return new ClientTag(trimmedClientTag);","lastModifiedDate":"2022-10-28"},{"lineNumber":271,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":272,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":273,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":274,"author":{"gitId":"MuhdMusab"},"content":"     * Parses {@code Collection\u003cString\u003e riskTags} into a {@code List\u003cRiskTag\u003e}.","lastModifiedDate":"2022-10-27"},{"lineNumber":275,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":276,"author":{"gitId":"MuhdMusab"},"content":"    public static List\u003cRiskTag\u003e parseAllSpaceSeparatedRiskTag(Collection\u003cString\u003e riskTags) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":277,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(riskTags);","lastModifiedDate":"2022-10-27"},{"lineNumber":278,"author":{"gitId":"MuhdMusab"},"content":"        final List\u003cRiskTag\u003e riskTagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":279,"author":{"gitId":"MuhdMusab"},"content":"        for (String riskTag: riskTags) {","lastModifiedDate":"2022-10-27"},{"lineNumber":280,"author":{"gitId":"MuhdMusab"},"content":"            riskTagList.add(parseRiskTag(riskTag.toUpperCase()));","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":282,"author":{"gitId":"MuhdMusab"},"content":"        return riskTagList;","lastModifiedDate":"2022-10-27"},{"lineNumber":283,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":284,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":285,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":286,"author":{"gitId":"rgonslayer"},"content":"     * Parses a {@code String planTag} into an {@code PlanTag}.","lastModifiedDate":"2022-10-26"},{"lineNumber":287,"author":{"gitId":"rgonslayer"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-26"},{"lineNumber":288,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":289,"author":{"gitId":"rgonslayer"},"content":"    public static PlanTag parsePlanTag(String planTag) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":290,"author":{"gitId":"rgonslayer"},"content":"        requireNonNull(planTag);","lastModifiedDate":"2022-10-26"},{"lineNumber":291,"author":{"gitId":"rgonslayer"},"content":"        String trimmedPlanTag \u003d planTag.trim();","lastModifiedDate":"2022-10-26"},{"lineNumber":292,"author":{"gitId":"rgonslayer"},"content":"        if (!PlanTag.isValidPlanTagName(trimmedPlanTag)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":293,"author":{"gitId":"rgonslayer"},"content":"            throw new ParseException(PlanTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":294,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":295,"author":{"gitId":"rgonslayer"},"content":"        return new PlanTag(trimmedPlanTag);","lastModifiedDate":"2022-10-26"},{"lineNumber":296,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":297,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":298,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":299,"author":{"gitId":"MuhdMusab"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code List\u003cName\u003e}.","lastModifiedDate":"2022-10-27"},{"lineNumber":300,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":301,"author":{"gitId":"MuhdMusab"},"content":"    public static List\u003cPlanTag\u003e parseAllSpaceSeparatedPlanTags(Collection\u003cString\u003e planTags) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":302,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(planTags);","lastModifiedDate":"2022-10-27"},{"lineNumber":303,"author":{"gitId":"MuhdMusab"},"content":"        final List\u003cPlanTag\u003e planTagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":304,"author":{"gitId":"MuhdMusab"},"content":"        for (String planTag: planTags) {","lastModifiedDate":"2022-10-27"},{"lineNumber":305,"author":{"gitId":"MuhdMusab"},"content":"            planTagList.add(parsePlanTag(planTag));","lastModifiedDate":"2022-10-27"},{"lineNumber":306,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":307,"author":{"gitId":"MuhdMusab"},"content":"        return planTagList;","lastModifiedDate":"2022-10-27"},{"lineNumber":308,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":309,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":310,"author":{"gitId":"rgonslayer"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code List\u003cName\u003e}.","lastModifiedDate":"2022-10-28"},{"lineNumber":311,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":312,"author":{"gitId":"rgonslayer"},"content":"    public static List\u003cClientTag\u003e parseAllSpaceSeparatedClientTags(Collection\u003cString\u003e clientTags)","lastModifiedDate":"2022-10-28"},{"lineNumber":313,"author":{"gitId":"rgonslayer"},"content":"            throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":314,"author":{"gitId":"rgonslayer"},"content":"        requireNonNull(clientTags);","lastModifiedDate":"2022-10-28"},{"lineNumber":315,"author":{"gitId":"rgonslayer"},"content":"        final List\u003cClientTag\u003e clientTagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":316,"author":{"gitId":"rgonslayer"},"content":"        for (String clientTag: clientTags) {","lastModifiedDate":"2022-10-28"},{"lineNumber":317,"author":{"gitId":"rgonslayer"},"content":"            clientTagList.add(parseClientTag(clientTag));","lastModifiedDate":"2022-10-28"},{"lineNumber":318,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":319,"author":{"gitId":"rgonslayer"},"content":"        return clientTagList;","lastModifiedDate":"2022-10-28"},{"lineNumber":320,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":321,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":323,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":324,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":325,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":326,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":327,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":328,"author":{"gitId":"rgonslayer"},"content":"    public static NormalTag parseTag(String tag) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":331,"author":{"gitId":"rgonslayer"},"content":"        if (!NormalTag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":332,"author":{"gitId":"rgonslayer"},"content":"            throw new ParseException(NormalTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":334,"author":{"gitId":"rgonslayer"},"content":"        return new NormalTag(trimmedTag);","lastModifiedDate":"2022-10-26"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":338,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":339,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":340,"author":{"gitId":"rgonslayer"},"content":"    public static Set\u003cNormalTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":342,"author":{"gitId":"rgonslayer"},"content":"        final Set\u003cNormalTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":348,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":349,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":350,"author":{"gitId":"MuhdMusab"},"content":"     * Parses {@code Collection\u003cString\u003e normalTags} into a {@code List\u003cNormalTag\u003e}.","lastModifiedDate":"2022-10-28"},{"lineNumber":351,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":352,"author":{"gitId":"MuhdMusab"},"content":"    public static List\u003cNormalTag\u003e parseAllSpaceSeparatedNormalTags(Collection\u003cString\u003e normalTags)","lastModifiedDate":"2022-10-27"},{"lineNumber":353,"author":{"gitId":"MuhdMusab"},"content":"            throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":354,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(normalTags);","lastModifiedDate":"2022-10-27"},{"lineNumber":355,"author":{"gitId":"MuhdMusab"},"content":"        final List\u003cNormalTag\u003e normalTagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":356,"author":{"gitId":"MuhdMusab"},"content":"        for (String normalTag: normalTags) {","lastModifiedDate":"2022-10-27"},{"lineNumber":357,"author":{"gitId":"MuhdMusab"},"content":"            normalTagList.add(parseTag(normalTag));","lastModifiedDate":"2022-10-27"},{"lineNumber":358,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":359,"author":{"gitId":"MuhdMusab"},"content":"        return normalTagList;","lastModifiedDate":"2022-10-27"},{"lineNumber":360,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":361,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":362,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":363,"author":{"gitId":"MuhdMusab"},"content":"     * Parses {@code Collection\u003cString\u003e monetaryValues} into a {@code List\u003cString\u003e}.","lastModifiedDate":"2022-10-28"},{"lineNumber":364,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":365,"author":{"gitId":"MuhdMusab"},"content":"    public static List\u003cString\u003e parseMonetaryValues(Collection\u003cString\u003e monetaryValues)","lastModifiedDate":"2022-10-28"},{"lineNumber":366,"author":{"gitId":"MuhdMusab"},"content":"            throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":367,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(monetaryValues);","lastModifiedDate":"2022-10-28"},{"lineNumber":368,"author":{"gitId":"MuhdMusab"},"content":"        final List\u003cString\u003e incomeLevelList \u003d new ArrayList\u003c\u003e(monetaryValues);","lastModifiedDate":"2022-10-28"},{"lineNumber":369,"author":{"gitId":"MuhdMusab"},"content":"        for (int i \u003d 0; i \u003c incomeLevelList.size(); i++) {","lastModifiedDate":"2022-10-28"},{"lineNumber":370,"author":{"gitId":"MuhdMusab"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-10-28"},{"lineNumber":371,"author":{"gitId":"MuhdMusab"},"content":"                parseIncomeLevel(\"$\" + incomeLevelList.get(i).substring(1));","lastModifiedDate":"2022-10-28"},{"lineNumber":372,"author":{"gitId":"MuhdMusab"},"content":"            } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":373,"author":{"gitId":"MuhdMusab"},"content":"                parseIncomeLevel(\"$\" + incomeLevelList.get(i));","lastModifiedDate":"2022-10-28"},{"lineNumber":374,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":375,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":376,"author":{"gitId":"MuhdMusab"},"content":"        return incomeLevelList;","lastModifiedDate":"2022-10-28"},{"lineNumber":377,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":378,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jialatteo":64,"MuhdMusab":109,"rgonslayer":88,"wongyewjon":1,"-":116}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByAppointment;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.logic.parser.sort.SortByClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByIncome;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByMonthly;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByName;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByRiskTag;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"senwei01"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"        // Make sorting case-insensitive","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"        switch (trimmedArgs.toLowerCase()) {","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"        case \"name\":","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"            return new SortCommand(new SortByName(\"asc\"), \"name\");","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"        case \"name desc\":","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"            return new SortCommand(new SortByName(\"desc\"), \"name in descending order\");","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"        case \"appt\":","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"            return new SortCommand(new SortByAppointment(\"asc\"), \"appt\");","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"        case \"appt desc\":","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"            return new SortCommand(new SortByAppointment(\"desc\"), \"appt in descending order\");","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"        case \"income\":","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"            return new SortCommand(new SortByIncome(\"asc\"), \"income\");","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"senwei01"},"content":"        case \"income desc\":","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"senwei01"},"content":"            return new SortCommand(new SortByIncome(\"desc\"), \"income in descending order\");","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"senwei01"},"content":"        case \"risk\":","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"senwei01"},"content":"            return new SortCommand(new SortByRiskTag(\"asc\"), \"risk\");","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"senwei01"},"content":"        case \"risk desc\":","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"senwei01"},"content":"            return new SortCommand(new SortByRiskTag(\"desc\"), \"risk in descending order\");","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"rgonslayer"},"content":"        case \"client\":","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"rgonslayer"},"content":"            return new SortCommand(new SortByClientTag(\"asc\"), \"client\");","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"rgonslayer"},"content":"        case \"client desc\":","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"rgonslayer"},"content":"            return new SortCommand(new SortByClientTag(\"desc\"), \"client in descending order\");","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"senwei01"},"content":"        case \"monthly\":","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"senwei01"},"content":"            return new SortCommand(new SortByMonthly(\"asc\"), \"monthly\");","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"senwei01"},"content":"        case \"monthly desc\":","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"senwei01"},"content":"            return new SortCommand(new SortByMonthly(\"desc\"), \"monthly in descending order\");","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"senwei01"},"content":"        default:","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"senwei01"},"content":"            throw new ParseException(String.format(SortCommand.MESSAGE_INCORRECT_KEYWORD, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"rgonslayer":6,"MuhdMusab":1,"senwei01":68}},{"path":"src/main/java/seedu/address/logic/parser/sort/SortByAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"package seedu.address.logic.parser.sort;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.exceptions.SortedListException;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":" * Custom comparator that sorts Person based on their Appointment dates.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"public class SortByAppointment implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"    private String order;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"     * Constructor that takes in the order to sort the contact book by.","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"     * @param order the order to sort by.","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"senwei01"},"content":"    public SortByAppointment(String order) {","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"    // This implementation is such that the people without appointments will be placed below at the addressbook,","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"    // below the people with appointments when sorting.","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"        // if 1 person has no appointments and 1 has, the guy with the appointment","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"        // should be placed in front of the guy with no appointments.","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"        // if both person do not have appointments, order remains, no swap needed.","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"        if (p1.getAppointments().isEmpty() \u0026\u0026 !p2.getAppointments().isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"            return 1;","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"        } else if (p2.getAppointments().isEmpty() \u0026\u0026 !p1.getAppointments().isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"            return 0;","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"        } else if (p1.getAppointments().isEmpty() \u0026\u0026 p2.getAppointments().isEmpty()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"            return 0;","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"            // sort in descending order if user parse in \"desc\"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"            if (this.order.equals(\"desc\")) {","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"                try {","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"                    return p2.getAppointments().get(0).getDateTime()","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"                            .compareTo(p1.getAppointments().get(0).getDateTime());","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"                } catch (SortedListException e) {","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"                }","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"            } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"                // default sorting order is ascending","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"senwei01"},"content":"                try {","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"senwei01"},"content":"                    return p1.getAppointments().get(0).getDateTime()","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"senwei01"},"content":"                            .compareTo(p2.getAppointments().get(0).getDateTime());","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"senwei01"},"content":"                } catch (SortedListException e) {","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"senwei01"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"senwei01"},"content":"                }","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"senwei01"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"senwei01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"senwei01"},"content":"        // if object is the same, short circuit this code","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"senwei01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"senwei01"},"content":"            return true;","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"senwei01"},"content":"        if (other instanceof SortByAppointment) {","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"senwei01"},"content":"            SortByAppointment s \u003d (SortByAppointment) other;","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"senwei01"},"content":"            return this.order.equals(s.order);","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"senwei01"},"content":"        // handles null and if object is not an instance of SortByName","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"senwei01"},"content":"        return false;","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"MuhdMusab":1,"senwei01":72}},{"path":"src/main/java/seedu/address/logic/parser/sort/SortByClientTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"package seedu.address.logic.parser.sort;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":" * Custom comparator that sorts Person based on their Risk Levels.","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"public class SortByClientTag implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"    private final String order;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"     * Constructor that takes in the order to sort the contact book by.","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"     * @param order the order to sort by.","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"    public SortByClientTag(String order) {","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"        if (this.order.equals(\"desc\")) {","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"            return p2.getClientTag().getType() - p1.getClientTag().getType();","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"rgonslayer"},"content":"        return p1.getClientTag().getType() - p2.getClientTag().getType();","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"        // if object is the same, short circuit this code","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"            return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"        if (other instanceof SortByClientTag) {","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"rgonslayer"},"content":"            SortByClientTag s \u003d (SortByClientTag) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"rgonslayer"},"content":"            return this.order.equals(s.order);","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"        // handles null and if object is not an instance of SortByName","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"        return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"rgonslayer"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"rgonslayer":47}},{"path":"src/main/java/seedu/address/logic/parser/sort/SortByIncome.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"package seedu.address.logic.parser.sort;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":" * Custom comparator that sorts Person based on their Income.","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"public class SortByIncome implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"    private final String order;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"     * Constructor that takes in the order to sort the contact book by.","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"     * @param order the order to sort by.","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"    public SortByIncome(String order) {","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"senwei01"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"        //Since income is Long, have to manually check and return an int","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"        if (this.order.equals(\"desc\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"            if (p2.getIncome().convertIncomeToLong() \u003e p1.getIncome().convertIncomeToLong()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"                return 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"            } else if (p2.getIncome().convertIncomeToLong() \u003c p1.getIncome().convertIncomeToLong()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"                return -1;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"            return 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"        if (p1.getIncome().convertIncomeToLong() \u003e p2.getIncome().convertIncomeToLong()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"            return 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"        } else if (p1.getIncome().convertIncomeToLong() \u003c p2.getIncome().convertIncomeToLong()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"            return -1;","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"        return 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"        // if object is the same, short circuit this code","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"senwei01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"senwei01"},"content":"            return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"senwei01"},"content":"        if (other instanceof SortByIncome) {","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"senwei01"},"content":"            SortByIncome s \u003d (SortByIncome) other;","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"senwei01"},"content":"            return this.order.equals(s.order);","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"senwei01"},"content":"        // handles null and if object is not an instance of SortByName","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"senwei01"},"content":"        return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"senwei01":60}},{"path":"src/main/java/seedu/address/logic/parser/sort/SortByMonthly.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"package seedu.address.logic.parser.sort;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":" * Custom comparator that sorts Person based on their Income.","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"public class SortByMonthly implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"    private final String order;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"     * Constructor that takes in the order to sort the contact book by.","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"     * @param order the order to sort by.","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"    public SortByMonthly(String order) {","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"senwei01"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"        if (this.order.equals(\"desc\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"            return (int) (p2.getMonthly().convertMonthlyToLong() - p1.getMonthly().convertMonthlyToLong());","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"rgonslayer"},"content":"        return (int) (p1.getMonthly().convertMonthlyToLong() - p2.getMonthly().convertMonthlyToLong());","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"        // if object is the same, short circuit this code","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"            return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"        if (other instanceof SortByMonthly) {","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"            SortByMonthly s \u003d (SortByMonthly) other;","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"            return this.order.equals(s.order);","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"        // handles null and if object is not an instance of SortByName","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"        return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"rgonslayer":2,"senwei01":45}},{"path":"src/main/java/seedu/address/logic/parser/sort/SortByName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"package seedu.address.logic.parser.sort;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":" * Custom comparator that sorts Person based on their Names.","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"public class SortByName implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"    private String order;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"     * Constructor that takes in the order to sort the contact book by.","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"     * @param order the order to sort by.","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"    public SortByName(String order) {","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"senwei01"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"        // sorts the contact by descending order if there is a desc keyword","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"        if (this.order.equals(\"desc\")) {","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"            return p2.getName().fullName.compareToIgnoreCase(p1.getName().fullName);","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"        // default sorting is ascending","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"        return p1.getName().fullName.compareToIgnoreCase(p2.getName().fullName);","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"        // if object is the same, short circuit this code","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"        if (other instanceof SortByName) {","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"            SortByName s \u003d (SortByName) other;","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"            return this.order.equals(s.order);","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"        // handles null and if object is not an instance of SortByName","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"        return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"senwei01":47}},{"path":"src/main/java/seedu/address/logic/parser/sort/SortByRiskTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"package seedu.address.logic.parser.sort;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":" * Custom comparator that sorts Person based on their Risk Levels.","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"public class SortByRiskTag implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"    private final String order;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"     * Constructor that takes in the order to sort the contact book by.","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"     * @param order the order to sort by.","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"    public SortByRiskTag(String order) {","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"senwei01"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"        if (this.order.equals(\"desc\")) {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"            return p2.getRiskTag().getRisk() - p1.getRiskTag().getRisk();","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"        return p1.getRiskTag().getRisk() - p2.getRiskTag().getRisk();","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"        // if object is the same, short circuit this code","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"            return true;","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"        if (other instanceof SortByRiskTag) {","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"            SortByRiskTag s \u003d (SortByRiskTag) other;","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"            return this.order.equals(s.order);","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"        // handles null and if object is not an instance of SortByName","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"        return false;","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"senwei01":47}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"senwei01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"     * Returns true if a person has an appointment with the same datetime as {@code person} exists in the address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"    public boolean hasPersonWithSameAppointmentDateTime(Appointment appointment) {","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"        return persons.containsPersonWithSameAppointmentDateTime(appointment);","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"senwei01"},"content":"    public void sortPersons(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"senwei01"},"content":"        persons.sortPersons(comparator);","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":121,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jialatteo":9,"-":120,"senwei01":4}},{"path":"src/main/java/seedu/address/model/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":" * Represents User\u0027s command history.","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"public class CommandHistory implements ReadOnlyCommandHistory {","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"    public static final int MAX_COMMAND_HISTORY_SIZE \u003d 20;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"    private List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"    private int currentIndex \u003d 0;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"    public CommandHistory() {","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"     * Creates a CommandHistory using the CommandHistoryList in the {@code toBeCopied}","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"    public CommandHistory(ReadOnlyCommandHistory toBeCopied) {","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"        this();","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"        setCommandHistoryList(new ArrayList\u003c\u003e(toBeCopied.getCommandHistoryList()));","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"     * Replaces the contents of the commandHistorylist with {@code commandHistoryList}.","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    public void setCommandHistoryList(List\u003cString\u003e commandHistoryList) {","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        this.commandHistoryList \u003d commandHistoryList;","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        resetCurrentIndexToBeyondMaxIndex();","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    // command level operations","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"     * Add latest valid command entered by user to CommandHistory","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"     * @param commandInput latest valid command entered bu user","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"    public void addToCommandHistory(String commandInput) {","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        int size \u003d commandHistoryList.size();","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"        int latestIndex \u003d size - 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"        // prevent saving of consecutive duplicate commands","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        if (!commandHistoryList.isEmpty()","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 commandHistoryList.get(latestIndex).equals(commandInput)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"            resetCurrentIndexToBeyondMaxIndex();","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"            return;","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        if (size \u003e\u003d MAX_COMMAND_HISTORY_SIZE) {","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"            commandHistoryList.remove(0);","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"        commandHistoryList.add(commandInput);","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"        resetCurrentIndexToBeyondMaxIndex();","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"    public String getPrevCommand() {","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"        if (commandHistoryList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"            return \"\";","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"        if (currentIndex \u003e 0) {","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"            currentIndex--;","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"        return commandHistoryList.get(currentIndex);","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"    public String getNextCommand() {","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"        int maxZeroBasedIndex \u003d commandHistoryList.size() - 1;","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"        // String shown at maxZeroBasedIndex + 1 will be empty","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"        if (currentIndex \u003e\u003d maxZeroBasedIndex) {","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"            currentIndex \u003d maxZeroBasedIndex + 1;","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"            return \"\";","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        currentIndex++;","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"        return commandHistoryList.get(currentIndex);","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"    // util methods","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"     * Reset current index to its max index + 1","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"    public void resetCurrentIndexToBeyondMaxIndex() {","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"        // reset to max index + 1 to show empty string","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"        currentIndex \u003d commandHistoryList.size();","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"    public int getCurrentZeroBasedIndex() {","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"        return currentIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"    public int setCurrentZeroBasedIndex(int i) {","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"        return currentIndex \u003d i;","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"    public List\u003cString\u003e getCommandHistoryList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"        return Collections.unmodifiableList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"                || (other instanceof CommandHistory // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 commandHistoryList.equals(((CommandHistory) other).commandHistoryList))","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 currentIndex \u003d\u003d (((CommandHistory) other).currentIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"        return commandHistoryList.hashCode();","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jialatteo":119}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"    boolean hasPersonWithSameAppointmentDateTime(Appointment appointment);","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"    void updateFilteredPersonList(List\u003c? extends Predicate\u003cPerson\u003e\u003e predicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"senwei01"},"content":"    void sortPerson(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"wongyewjon"},"content":"    ObservableList\u003cCalendarEvent\u003e getFilteredCalendarEventList();","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"    ReadOnlyCommandHistory getCommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"    void addToCommandHistory(String commandInput);","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"    String nextCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"    String prevCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"    void updateCalendarEventList();","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jialatteo":11,"MuhdMusab":4,"wongyewjon":5,"-":87,"senwei01":3}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.SamePersonPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"    private final CommandHistory commandHistory;","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    private final ObservableList\u003cCalendarEvent\u003e calendarEventList;","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"                        ReadOnlyCommandHistory commandHistory) {","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"        this.commandHistory \u003d new CommandHistory(commandHistory);","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        this.calendarEventList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        this(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"    public boolean hasPersonWithSameAppointmentDateTime(Appointment appointment) {","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        return addressBook.hasPersonWithSameAppointmentDateTime(appointment);","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"senwei01"},"content":"    public void sortPerson(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"senwei01"},"content":"        addressBook.sortPersons(comparator);","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"    public void updateFilteredPersonList(List\u003c? extends Predicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(predicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"        int size \u003d predicates.size();","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"        HashSet\u003cPerson\u003e newPersons \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"            ObservableList\u003cPerson\u003e test \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-31"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"            filteredPersons.forEach(test::add);","lastModifiedDate":"2022-10-31"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"            FilteredList\u003c? extends Person\u003e filteredPersonsCopy \u003d new FilteredList\u003c\u003e(test);","lastModifiedDate":"2022-10-31"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"            filteredPersonsCopy.setPredicate(predicates.get(i));","lastModifiedDate":"2022-10-31"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"            filteredPersonsCopy.stream().forEach(newPersons::add);","lastModifiedDate":"2022-10-31"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"        filteredPersons.setPredicate(new SamePersonPredicate(newPersons));","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"jialatteo"},"content":"    public ObservableList\u003cCalendarEvent\u003e getFilteredCalendarEventList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"jialatteo"},"content":"        ObservableList\u003cPerson\u003e lastShownList \u003d this.filteredPersons;","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"jialatteo"},"content":"        ObservableList\u003cCalendarEvent\u003e calendarEventList \u003d getCalendarEventList(lastShownList);","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"jialatteo"},"content":"        return calendarEventList;","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"jialatteo"},"content":"    private ObservableList\u003cCalendarEvent\u003e getCalendarEventList(ObservableList\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"        calendarEventList.clear();","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"        lastShownList.stream().map(x -\u003e x.getCalendarEvents()).forEach(e -\u003e calendarEventList.addAll(e));","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"        return calendarEventList;","lastModifiedDate":"2022-10-25"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"    public void updateCalendarEventList() {","lastModifiedDate":"2022-10-25"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"        getCalendarEventList(filteredPersons);","lastModifiedDate":"2022-10-25"},{"lineNumber":183,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":184,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"jialatteo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Command History\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-22"},{"lineNumber":186,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":187,"author":{"gitId":"jialatteo"},"content":"    public ReadOnlyCommandHistory getCommandHistory() {","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"jialatteo"},"content":"        return commandHistory;","lastModifiedDate":"2022-10-22"},{"lineNumber":189,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":190,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":191,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":192,"author":{"gitId":"jialatteo"},"content":"    public void addToCommandHistory(String validCommandInput) {","lastModifiedDate":"2022-10-22"},{"lineNumber":193,"author":{"gitId":"jialatteo"},"content":"        commandHistory.addToCommandHistory(validCommandInput);","lastModifiedDate":"2022-10-22"},{"lineNumber":194,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":195,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":196,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":197,"author":{"gitId":"jialatteo"},"content":"    public String nextCommand() {","lastModifiedDate":"2022-10-23"},{"lineNumber":198,"author":{"gitId":"jialatteo"},"content":"        return commandHistory.getNextCommand();","lastModifiedDate":"2022-10-22"},{"lineNumber":199,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":200,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":201,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":202,"author":{"gitId":"jialatteo"},"content":"    public String prevCommand() {","lastModifiedDate":"2022-10-23"},{"lineNumber":203,"author":{"gitId":"jialatteo"},"content":"        return commandHistory.getPrevCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":204,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":205,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":206,"author":{"gitId":"jialatteo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d equals method \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jialatteo":44,"MuhdMusab":28,"-":148,"senwei01":5}},{"path":"src/main/java/seedu/address/model/ReadOnlyCommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":" * Unmodifiable view of a command history","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"public interface ReadOnlyCommandHistory {","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"     * Returns an unmodifiable view of the command history list.","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"    List\u003cString\u003e getCommandHistoryList();","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jialatteo":13}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"FAP.json\");","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":86,"senwei01":1}},{"path":"src/main/java/seedu/address/model/calendar/CalendarEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyewjon"},"content":"package seedu.address.model.calendar;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"wongyewjon"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"wongyewjon"},"content":" * Represents a CalendarEvent in the address book.","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"wongyewjon"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"public class CalendarEvent implements Comparable\u003cCalendarEvent\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"wongyewjon"},"content":"    private final Name name;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"wongyewjon"},"content":"    private final Appointment appointment;","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"wongyewjon"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"wongyewjon"},"content":"     * Creates a CalendarEvent with the given name and appointment.","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"wongyewjon"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"wongyewjon"},"content":"    public CalendarEvent(Name name, Appointment appointment) {","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"wongyewjon"},"content":"        requireAllNonNull(name, appointment);","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"wongyewjon"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"wongyewjon"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"wongyewjon"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"wongyewjon"},"content":"        return name;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    public Location getLocation() {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        return appointment.getLocation();","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"    public String getDate() {","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        return appointment.getDate().toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"wongyewjon"},"content":"    public int getDay() {","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"wongyewjon"},"content":"        return this.appointment.getDay();","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"wongyewjon"},"content":"    public int getMonth() {","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"wongyewjon"},"content":"        return this.appointment.getMonth();","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"wongyewjon"},"content":"    public int getYear() {","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"wongyewjon"},"content":"        return this.appointment.getYear();","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"wongyewjon"},"content":"    public String getTimeFormat() {","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"wongyewjon"},"content":"        return this.appointment.getTimeFormat();","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"wongyewjon"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"wongyewjon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"wongyewjon"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"wongyewjon"},"content":"            return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"wongyewjon"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"wongyewjon"},"content":"        if (!(other instanceof CalendarEvent)) { // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"wongyewjon"},"content":"            return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"wongyewjon"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"wongyewjon"},"content":"        CalendarEvent otherEvent \u003d (CalendarEvent) other;","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"wongyewjon"},"content":"        return name.equals(otherEvent.name)","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"wongyewjon"},"content":"                \u0026\u0026 appointment.equals(otherEvent.appointment); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"wongyewjon"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"wongyewjon"},"content":"    public String toString() {","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"wongyewjon"},"content":"        return String.format(\"%s, %s\", getTimeFormat(), this.name);","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"wongyewjon"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"wongyewjon"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"wongyewjon"},"content":"        return Objects.hash(name, appointment);","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"    public int compareTo(CalendarEvent other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"        return appointment.compareTo(other.appointment);","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"wongyewjon"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"MuhdMusab":15,"wongyewjon":74}},{"path":"src/main/java/seedu/address/model/calendar/CalendarMonth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.model.calendar;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":" * Represents a Calendar in the address book.","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"public class CalendarMonth {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    // Data fields","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"    private ObservableList\u003cCalendarEvent\u003e calendarEvents;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"    public CalendarMonth(ObservableList\u003cCalendarEvent\u003e calendarEvents) {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        requireAllNonNull(calendarEvents);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"        this.calendarEvents \u003d calendarEvents;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"     * Returns a mutable list of CalendarEvents.","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    public ObservableList\u003cCalendarEvent\u003e getCalendarEvents() {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        return calendarEvents;","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    public ObservableList\u003cCalendarEvent\u003e getCalendarEventInDayOfMonth(Integer day, Integer month, Integer year) {","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"        requireAllNonNull(day, month, year);","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"        List\u003cCalendarEvent\u003e calendarEventInDayOfMonth \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"        Predicate\u003cCalendarEvent\u003e filter \u003d (e) -\u003e e.getDay() \u003d\u003d day \u0026\u0026 e.getMonth() \u003d\u003d month \u0026\u0026 e.getYear() \u003d\u003d year;","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        calendarEvents.stream().filter(filter).forEach(calendarEventInDayOfMonth::add);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"        return FXCollections.observableList(calendarEventInDayOfMonth);","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"     * Returns true if both calendar month data field.","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"     * This defines a stronger notion of equality between two calendar month.","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"            return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"        if (!(other instanceof CalendarMonth)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        CalendarMonth otherCalendar \u003d (CalendarMonth) other;","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"        return otherCalendar.getCalendarEvents().equals(getCalendarEvents());","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"        return Objects.hash(calendarEvents);","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":72}},{"path":"src/main/java/seedu/address/model/person/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.model.person.Person.MAXIMUM_NUM_OF_APPOINTMENTS;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.MaximumSortedList;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":" * Represents one of the Person\u0027s appointments.","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"public class Appointment implements Comparable\u003cAppointment\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Appointments can only take in a date and \"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"            + \"time in the format, d-MMM-yyyy hh:mm a, and it should not be blank\";","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    public static final MaximumSortedList\u003cAppointment\u003e EMPTY_APPOINTMENTS \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"            new MaximumSortedList\u003c\u003e(MAXIMUM_NUM_OF_APPOINTMENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"    private final Location location;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs an {@code Appointment}.","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"     * @param dateTime A valid appointment.","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    public Appointment(DateTime dateTime, Location location) {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(location);","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        this.location \u003d location;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    public DateTime getDateTime() {","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        return dateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    public Location getLocation() {","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"        return location;","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"    public Date getDate() {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"        return dateTime.getDate();","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"    public Time getTime() {","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"        return dateTime.getTime();","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"    public String getTimeFormat() {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        return dateTime.getTimeFormat();","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"    public int getDay() {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"        return dateTime.getDay();","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"    public int getMonth() {","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"        return dateTime.getMonth();","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"    public int getYear() {","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"        return dateTime.getYear();","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"        return dateTime.toString() + \", \" + location.toString();","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"     * Checks whether the input DateTime has the correct format","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"     * @param dateTime the DateTime representing the DateTime to be","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"     *        contained within this Appointment.","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"     * @return boolean value describing whether the input DateTime has","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"     *         the correct format.","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"    public static boolean isValidAppointment(DateTime dateTime, Location location) {","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"        return DateTimeParser.isValidDateTime(dateTime.toString())","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 Location.isValidLocation(location.toString());","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"    public int compareTo(Appointment other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"        return this.dateTime.compareTo(other.dateTime);","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"                || (other instanceof Appointment// instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 dateTime.equals(((Appointment) other).dateTime)","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 location.equals(((Appointment) other).location)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"        return Objects.hash(dateTime, location);","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"jialatteo":46,"MuhdMusab":53,"wongyewjon":4}},{"path":"src/main/java/seedu/address/model/person/ClientTagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"public class ClientTagContainsKeywordsPredicate extends FindPredicate {","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"    private final List\u003cString\u003e clientTags;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"     * Constructs a {@code RiskTagContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"     * @param clientTags RiskTags to be tested against.","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"    public ClientTagContainsKeywordsPredicate(List\u003cString\u003e clientTags) {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"        super(clientTags);","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"        this.clientTags \u003d clientTags.stream().map(x -\u003e x.toUpperCase()).collect(Collectors.toList());","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"rgonslayer"},"content":"        Set\u003cTag\u003e personTags \u003d person.getSpecialTags();","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"rgonslayer"},"content":"        for (String predicateTagName : clientTags) {","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"rgonslayer"},"content":"            for (Tag personsTag : personTags) {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"                if (personsTag.tagName.equalsIgnoreCase(predicateTagName)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"                    return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"                }","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"        return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"rgonslayer"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"rgonslayer"},"content":"                || (other instanceof ClientTagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 clientTags.equals(((ClientTagContainsKeywordsPredicate) other).clientTags)); // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"rgonslayer":45}},{"path":"src/main/java/seedu/address/model/person/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":" * Represents a date with a formatted String value","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"public class Date implements Comparable\u003cDate\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"    private final LocalDate localDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     * @param localDate A valid LocalDate.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    public Date(LocalDate localDate) {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(localDate);","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"wongyewjon"},"content":"    public int getYear() {","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"wongyewjon"},"content":"        return localDate.getYear();","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"wongyewjon"},"content":"    public int getMonth() {","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"wongyewjon"},"content":"        return localDate.getMonthValue();","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        return localDate.format(java.time.format","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"                .DateTimeFormatter.ofPattern(\"d-MMM-uuuu\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"    public int compareTo(Date other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        return this.localDate.compareTo(other.localDate);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"                || (other instanceof Date// instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 localDate.equals(((Date) other).localDate)); // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        return localDate.hashCode();","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"MuhdMusab":46,"wongyewjon":10}},{"path":"src/main/java/seedu/address/model/person/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.DateTimeParser.DATE_TIME_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" * Represents a date and time with a formatted String value","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"public class DateTime implements Comparable\u003cDateTime\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Invalid date time format\";","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    private final LocalDateTime localDateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs a {@code DateTime}.","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"     * @param localDateTime A valid LocalDateTime.","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    public DateTime(LocalDateTime localDateTime) {","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(localDateTime);","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"        this.localDateTime \u003d localDateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    public Date getDate() {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        return new Date(localDateTime.toLocalDate());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    public Time getTime() {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        return new Time(localDateTime.toLocalTime());","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"    public String getTimeFormat() {","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"        return localDateTime.format(java.time.format","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"                .DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"    public int getDay() {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        return this.localDateTime.getDayOfMonth();","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"    public int getMonth() {","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        return this.localDateTime.getMonthValue();","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    public int getYear() {","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        return this.localDateTime.getYear();","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"        return localDateTime.format(java.time.format","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"                .DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"    public int compareTo(DateTime other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        return this.localDateTime.compareTo(other.localDateTime);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"                || (other instanceof DateTime// instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 localDateTime.toString().equals(((DateTime) other).localDateTime.toString())); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        return localDateTime.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"jialatteo":20,"MuhdMusab":52}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"wongyewjon"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\\n\"","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"wongyewjon"},"content":"            + \"3. The length of email has a limit of 320 characters.\";","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"wongyewjon"},"content":"        if (test.length() \u003e 320) {","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"wongyewjon"},"content":"            return false;","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"wongyewjon"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wongyewjon":5,"-":70}},{"path":"src/main/java/seedu/address/model/person/FindPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":" * Predicate used to filter the clients in the {@code FilteredList}","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"public abstract class FindPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs a {@code FindPredicate}.","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     * @param keywords keywords to be tested against.","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    protected FindPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"        this.keywords \u003d keywords.stream().map(x -\u003e x.toUpperCase()).collect(Collectors.toList());","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    public FindPredicate or(FindPredicate other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"        return this.or(other);","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"MuhdMusab":25}},{"path":"src/main/java/seedu/address/model/person/IncomeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"public class IncomeContainsKeywordsPredicate extends FindPredicate {","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":"    private final List\u003cString\u003e income;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"    private String predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"     * Tests that a {@code Person}\u0027s {@code Income} is greater or lesser than given value.","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"    public IncomeContainsKeywordsPredicate(List\u003cString\u003e income, String predicate) {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"        super(income);","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"        this.income \u003d income;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"        IncomeLevel personIncome \u003d person.getIncome();","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"        for (String predicateIncomeName : income) {","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"            if (predicate.equals(\"\u003e\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"                if (personIncome.convertIncomeToLong() \u003e\u003d Integer.parseInt(predicateIncomeName)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"rgonslayer"},"content":"                    return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"rgonslayer"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"            } else if (predicate.equals(\"\u003c\")) {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"                if (personIncome.convertIncomeToLong() \u003c\u003d Integer.parseInt(predicateIncomeName)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"                    return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"            } else if (predicate.equals(\"\u003d\")) {","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"                if (personIncome.convertIncomeToLong() \u003d\u003d Integer.parseInt(predicateIncomeName)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"                    return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"        return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"rgonslayer"},"content":"                || (other instanceof IncomeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 income.equals(((IncomeContainsKeywordsPredicate) other).income)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"rgonslayer"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"rgonslayer":43,"MuhdMusab":7}},{"path":"src/main/java/seedu/address/model/person/IncomeLevel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":" * Represents a Person\u0027s Income Level in the address book.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidIncome(String)}","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"public class IncomeLevel {","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Income can take in any digit preceded by $ followed by [1-9]\";","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"    /*","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(\\\\$)(0|[1-9][0-9]*)$\";","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"    public final String value;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"     * @param income A valid address.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"rgonslayer"},"content":"    public IncomeLevel(String income) {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"rgonslayer"},"content":"        requireNonNull(income);","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"rgonslayer"},"content":"        checkArgument(isValidIncome(income), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"        value \u003d income;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"    public static boolean isValidIncome(String test) {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"     * Returns an int from the String of income without the $.","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"     * @return an int converted from the String.","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"    public long convertIncomeToLong() {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"        return Long.parseLong(this.value.substring(1));","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"    public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"rgonslayer"},"content":"        return value;","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"rgonslayer"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"rgonslayer"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"rgonslayer"},"content":"                || (other instanceof IncomeLevel // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 value.equals(((IncomeLevel) other).value)); // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"rgonslayer"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"rgonslayer"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"rgonslayer"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"rgonslayer":57,"senwei01":8}},{"path":"src/main/java/seedu/address/model/person/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":" * Represents a Person\u0027s appointment location in the address book.","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"public class Location {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Appointment locations can take any values, \"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"                                                        + \"and it should not be blank\";","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"    /*","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"    public final String value;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"     * Constructs an {@code Location}.","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"     * @param location A valid Location.","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"    public Location(String location) {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(location);","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"        value \u003d location;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"    public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"        return value;","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"                || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"                \u0026\u0026 value.equals(((Location) other).value)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":58}},{"path":"src/main/java/seedu/address/model/person/Monthly.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":" * Represents a Person\u0027s Income Level in the address book.","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMonthly(String)}","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"public class Monthly {","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Income can take in any digit preceded by $ followed by [1-9]\";","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"    /*","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(\\\\$)(0|[1-9][0-9]*)$\";","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"    public final String value;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"     * @param monthly A valid address.","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"rgonslayer"},"content":"    public Monthly(String monthly) {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"rgonslayer"},"content":"        requireNonNull(monthly);","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"rgonslayer"},"content":"        checkArgument(isValidMonthly(monthly), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"        value \u003d monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"    public static boolean isValidMonthly(String test) {","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"rgonslayer"},"content":"     * Returns a long from the String of monthly contribution without the $.","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"rgonslayer"},"content":"     * @return a long converted from the String.","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"    public long convertMonthlyToLong() {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"        return Long.parseLong(this.value.substring(1));","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"    public String toString() {","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"rgonslayer"},"content":"        return value;","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"rgonslayer"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"rgonslayer"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"rgonslayer"},"content":"                || (other instanceof Monthly // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 value.equals(((Monthly) other).value)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"rgonslayer"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"rgonslayer"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"rgonslayer"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"rgonslayer":60,"senwei01":4}},{"path":"src/main/java/seedu/address/model/person/MonthlyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":" * Tests that a {@code Person}\u0027s {@code Monthly} matches any of the keywords given.","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"public class MonthlyContainsKeywordsPredicate extends FindPredicate {","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"    private final List\u003cString\u003e monthly;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"    private String predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"     * Tests that a {@code Person}\u0027s {@code Monthly} is greater or lesser than given value.","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"    public MonthlyContainsKeywordsPredicate(List\u003cString\u003e monthly, String predicate) {","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"        super(monthly);","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"        this.monthly \u003d monthly;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"        Monthly personMonthly \u003d person.getMonthly();","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"        for (String predicateMonthlyName : monthly) {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"rgonslayer"},"content":"            if (predicate.equals(\"\u003e\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"rgonslayer"},"content":"                if (personMonthly.convertMonthlyToLong() \u003e\u003d Integer.parseInt(predicateMonthlyName)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"rgonslayer"},"content":"                    return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"            } else if (predicate.equals(\"\u003c\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"                if (personMonthly.convertMonthlyToLong() \u003c\u003d Integer.parseInt(predicateMonthlyName)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"                    return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"            } else if (predicate.equals(\"\u003d\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"                if (personMonthly.convertMonthlyToLong() \u003d\u003d Integer.parseInt(predicateMonthlyName)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"                    return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"rgonslayer"},"content":"        return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"rgonslayer"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"rgonslayer"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"                || (other instanceof MonthlyContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 monthly.equals(((MonthlyContainsKeywordsPredicate) other).monthly)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"rgonslayer"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"rgonslayer":48,"MuhdMusab":4}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"public class NameContainsKeywordsPredicate extends FindPredicate {","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     * @param keywords keywords to be tested against.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"        super(keywords);","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        this.keywords \u003d keywords.stream().map(x -\u003e x.toUpperCase()).collect(Collectors.toList());","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"MuhdMusab":9,"-":28}},{"path":"src/main/java/seedu/address/model/person/NormalTagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"public class NormalTagContainsKeywordsPredicate extends FindPredicate {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"    private final List\u003cString\u003e tags;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs a {@code NormalTagContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     * @param tags Tags to be tested against.","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"    public NormalTagContainsKeywordsPredicate(List\u003cString\u003e tags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        super(tags);","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"        this.tags \u003d tags.stream().map(x -\u003e x.toUpperCase()).collect(Collectors.toList());","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"        Set\u003cNormalTag\u003e personTags \u003d person.getTags();","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"        for (String predicateTagName : tags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"            for (NormalTag personsTag : personTags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"                if (personsTag.tagName.equalsIgnoreCase(predicateTagName)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"                    return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"                }","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"        return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"                || (other instanceof NormalTagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"                \u0026\u0026 tags.equals(((NormalTagContainsKeywordsPredicate) other).tags)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"MuhdMusab":9,"senwei01":36}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.MaximumSortedList;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    public static final int MAXIMUM_NUM_OF_APPOINTMENTS \u003d 3;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"    private final IncomeLevel incomeLevel;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"    private final Monthly monthly;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"    private final RiskTag riskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"    private final PlanTag planTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"    private final ClientTag clientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"    private final Set\u003cTag\u003e specialTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"    private final Set\u003cNormalTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    private MaximumSortedList\u003cAppointment\u003e appointments \u003d new MaximumSortedList\u003c\u003e(MAXIMUM_NUM_OF_APPOINTMENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"    public Person(Name name, Phone phone, Email email, Address address, IncomeLevel incomeLevel,","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"rgonslayer"},"content":"                  Monthly monthly, RiskTag riskTag, PlanTag planTag, ClientTag clientTag, Set\u003cNormalTag\u003e tags) {","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"rgonslayer"},"content":"        requireAllNonNull(name, phone, email, address, incomeLevel, monthly, riskTag, planTag, tags);","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"rgonslayer"},"content":"        this.riskTag \u003d riskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"rgonslayer"},"content":"        this.planTag \u003d planTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"rgonslayer"},"content":"        this.clientTag \u003d clientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"rgonslayer"},"content":"        this.specialTags.add(riskTag);","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"rgonslayer"},"content":"        this.specialTags.add(planTag);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"rgonslayer"},"content":"        this.specialTags.add(clientTag);","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"rgonslayer"},"content":"        this.incomeLevel \u003d incomeLevel;","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"rgonslayer"},"content":"        this.monthly \u003d monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"rgonslayer"},"content":"    public Person(Name name, Phone phone, Email email, Address address, IncomeLevel incomeLevel, Monthly monthly,","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"rgonslayer"},"content":"                  RiskTag riskTag, PlanTag planTag, ClientTag clientTag,","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"rgonslayer"},"content":"                  Set\u003cNormalTag\u003e tags, MaximumSortedList\u003cAppointment\u003e appointments) {","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"rgonslayer"},"content":"        this.riskTag \u003d riskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"rgonslayer"},"content":"        this.planTag \u003d planTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"rgonslayer"},"content":"        this.clientTag \u003d clientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"rgonslayer"},"content":"        this.specialTags.add(riskTag);","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"rgonslayer"},"content":"        this.specialTags.add(planTag);","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"rgonslayer"},"content":"        this.specialTags.add(clientTag);","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"rgonslayer"},"content":"        this.monthly \u003d monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"        this.appointments \u003d appointments;","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"rgonslayer"},"content":"        this.incomeLevel \u003d incomeLevel;","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":102,"author":{"gitId":"rgonslayer"},"content":"    public Monthly getMonthly() {","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"rgonslayer"},"content":"        return monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"    public MaximumSortedList\u003cAppointment\u003e getAppointments() {","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"        return appointments;","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"    public List\u003cCalendarEvent\u003e getCalendarEvents() {","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        return appointments.stream().map(x -\u003e new CalendarEvent(this.name, x)).collect(Collectors.toList());","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"    public IncomeLevel getIncome() {","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"        return incomeLevel;","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"rgonslayer"},"content":"    public RiskTag getRiskTag() {","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"rgonslayer"},"content":"        return riskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"rgonslayer"},"content":"    public PlanTag getPlanTag() {","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"rgonslayer"},"content":"        return planTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"rgonslayer"},"content":"    public ClientTag getClientTag() {","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"rgonslayer"},"content":"        return clientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":134,"author":{"gitId":"rgonslayer"},"content":"    public Set\u003cNormalTag\u003e getTags() {","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"rgonslayer"},"content":"    public Set\u003cTag\u003e getSpecialTags() {","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"rgonslayer"},"content":"        return Collections.unmodifiableSet(specialTags);","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"    public void setAppointments(MaximumSortedList\u003cAppointment\u003e newAppointments) {","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"        appointments \u003d newAppointments;","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-10-02"},{"lineNumber":178,"author":{"gitId":"senwei01"},"content":"                \u0026\u0026 otherPerson.getIncome().equals(getIncome())","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"senwei01"},"content":"                \u0026\u0026 otherPerson.getMonthly().equals(getMonthly())","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 otherPerson.getClientTag().equals(getClientTag())","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 otherPerson.getRiskTag().equals(getRiskTag())","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 otherPerson.getPlanTag().equals(getPlanTag())","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 otherPerson.getAppointments().equals(getAppointments());","lastModifiedDate":"2022-10-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"        return Objects.hash(name, phone, email, address, tags, appointments,","lastModifiedDate":"2022-10-31"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"        incomeLevel, monthly, clientTag, riskTag, planTag);","lastModifiedDate":"2022-10-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":204,"author":{"gitId":"MuhdMusab"},"content":"        MaximumSortedList\u003cAppointment\u003e appointments \u003d getAppointments();","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"MuhdMusab"},"content":"        if (!Objects.isNull(appointments) \u0026\u0026 !appointments.isEmpty()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":206,"author":{"gitId":"MuhdMusab"},"content":"            builder.append(\"; Appointments: \");","lastModifiedDate":"2022-10-02"},{"lineNumber":207,"author":{"gitId":"MuhdMusab"},"content":"            appointments.forEach(","lastModifiedDate":"2022-10-02"},{"lineNumber":208,"author":{"gitId":"MuhdMusab"},"content":"                    appointment -\u003e builder.append(appointment + \" \")","lastModifiedDate":"2022-10-02"},{"lineNumber":209,"author":{"gitId":"MuhdMusab"},"content":"            );","lastModifiedDate":"2022-10-02"},{"lineNumber":210,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":211,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":212,"author":{"gitId":"rgonslayer"},"content":"        Set\u003cNormalTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jialatteo":12,"rgonslayer":55,"MuhdMusab":25,"-":126,"senwei01":2}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"public class PhoneContainsKeywordsPredicate extends FindPredicate {","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"    private final List\u003cString\u003e phones;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs a {@code PhoneContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     * @param phones Phones to be tested against.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e phones) {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"        super(phones);","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        this.phones \u003d phones.stream().map(x -\u003e x.toUpperCase()).collect(Collectors.toList());","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"        return phones.stream()","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"rgonslayer"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 phones.equals(((PhoneContainsKeywordsPredicate) other).phones)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"rgonslayer":28,"MuhdMusab":9}},{"path":"src/main/java/seedu/address/model/person/PlanTagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"public class PlanTagContainsKeywordsPredicate extends FindPredicate {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"    private final List\u003cString\u003e planTags;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs a {@code PlanTagContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     * @param planTags PlanTags to be tested against.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"senwei01"},"content":"    public PlanTagContainsKeywordsPredicate(List\u003cString\u003e planTags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"        super(planTags);","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        this.planTags \u003d planTags.stream().map(x -\u003e x.toUpperCase()).collect(Collectors.toList());","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"        Set\u003cTag\u003e personTags \u003d person.getSpecialTags();","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"        for (String predicateTagName : planTags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"            for (Tag personsTag : personTags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"                if (personsTag.tagName.equalsIgnoreCase(predicateTagName)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"                    return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"                }","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"        return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"                || (other instanceof PlanTagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"                \u0026\u0026 planTags.equals(((PlanTagContainsKeywordsPredicate) other).planTags)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"MuhdMusab":9,"senwei01":36}},{"path":"src/main/java/seedu/address/model/person/RiskTagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"public class RiskTagContainsKeywordsPredicate extends FindPredicate {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"    private final List\u003cString\u003e riskTags;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs a {@code RiskTagContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     * @param riskTags RiskTags to be tested against.","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"    public RiskTagContainsKeywordsPredicate(List\u003cString\u003e riskTags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        super(riskTags);","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"        this.riskTags \u003d riskTags.stream().map(x -\u003e x.toUpperCase()).collect(Collectors.toList());","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"        Set\u003cTag\u003e personTags \u003d person.getSpecialTags();","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"        for (String predicateTagName : riskTags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"            for (Tag personsTag : personTags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"                if (personsTag.tagName.equalsIgnoreCase(predicateTagName)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"                    return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"                }","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"        return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"                || (other instanceof RiskTagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"                \u0026\u0026 riskTags.equals(((RiskTagContainsKeywordsPredicate) other).riskTags)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"MuhdMusab":9,"senwei01":36}},{"path":"src/main/java/seedu/address/model/person/SamePersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":" * Tests whether a {@code Person}\u0027s is included in Set of {@code Person}.","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"public class SamePersonPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"    private HashSet\u003cPerson\u003e personSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"    public SamePersonPredicate(HashSet\u003cPerson\u003e personSet) {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"        this.personSet \u003d personSet;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"        return personSet.contains(person);","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"MuhdMusab":19}},{"path":"src/main/java/seedu/address/model/person/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" * Represents a time with a formatted String value","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"public class Time implements Comparable\u003cTime\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    private final LocalTime localTime;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     * @param localTime A valid LocalTime.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    public Time(LocalTime localTime) {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(localTime);","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"        this.localTime \u003d localTime;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"        return localTime.format(java.time.format","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"                .DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    public int compareTo(Time other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        return this.localTime.compareTo(other.localTime);","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"                || (other instanceof Time// instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 localTime.equals(((Time) other).localTime)); // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        return localTime.hashCode();","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"MuhdMusab":48}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"     * Returns true if the list contains a person with an appointment with the same date time as the given argument.","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"    public boolean containsPersonWithSameAppointmentDateTime(Appointment toCheck) {","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"        for (Person person:internalUnmodifiableList) {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"            for (Appointment appointment: person.getAppointments().getObservableList()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"                if (appointment.getDateTime().equals(toCheck.getDateTime())) {","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"                    return true;","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"                }","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        return false;","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"senwei01"},"content":"    public void sortPersons(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"senwei01"},"content":"        internalList.sort(comparator);","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jialatteo":15,"-":137,"senwei01":5}},{"path":"src/main/java/seedu/address/model/tag/ClientTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":" * Represents a ClientTag in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":"public class ClientTag extends Tag {","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Client tag name should be [POTENTIAL] or [CURRENT]\";","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALIDATION_REGEX \u003d \"(CURRENT|POTENTIAL)\";","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"    public static final String CURRENT \u003d \"CURRENT\";","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"    public static final String POTENTIAL \u003d \"POTENTIAL\";","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"    private int type;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"    public ClientTag(String tagName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"        super(tagName);","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"        checkArgument(isValidClientTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"        // only setRisk after we are sure that tagName is valid","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"rgonslayer"},"content":"        this.type \u003d setClient(tagName);","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"    public int getType() {","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"        return this.type;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"    public int setClient(String tagName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"        switch (tagName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"        case CURRENT:","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"            return this.type \u003d 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"rgonslayer"},"content":"        case POTENTIAL:","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"rgonslayer"},"content":"            return this.type \u003d 2;","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"        default:","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"            return this.type \u003d 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"     * check if tag is a risk tag","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"rgonslayer"},"content":"     * @param tag","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"rgonslayer"},"content":"     * @return true if its a risk tag, false if otherwise","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"rgonslayer"},"content":"    public static boolean isClientTag(String tag) {","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"rgonslayer"},"content":"        return CURRENT.equalsIgnoreCase(tag)","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"rgonslayer"},"content":"                || POTENTIAL.equalsIgnoreCase(tag);","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"rgonslayer"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"rgonslayer"},"content":"    public static boolean isValidClientTagName(String test) {","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"rgonslayer"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"rgonslayer"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"rgonslayer"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"rgonslayer"},"content":"                || (other instanceof ClientTag // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 tagName.equals(((ClientTag) other).tagName)); // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"rgonslayer"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"rgonslayer":71}},{"path":"src/main/java/seedu/address/model/tag/NormalTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidNormalTagName(String)}","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":"public class NormalTag extends Tag {","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"    public NormalTag(String tagName) {","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"        super(tagName);","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"        checkArgument(isValidNormalTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"rgonslayer"},"content":"    public static boolean isValidNormalTagName(String test) {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"rgonslayer"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"                || (other instanceof NormalTag // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 tagName.equals(((NormalTag) other).tagName)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"rgonslayer":39}},{"path":"src/main/java/seedu/address/model/tag/PlanTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":" * Represents a PlanTag in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidPlanTagName(String)}","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":"public class PlanTag extends Tag {","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Plan tag name should only contain alphanumeric characters \"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"            + \"and spaces, ending with Plan\";","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*[Plan]\";","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"    public PlanTag(String tagName) {","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"        super(tagName);","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"        checkArgument(isValidPlanTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"rgonslayer"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"rgonslayer"},"content":"    public static boolean isValidPlanTagName(String test) {","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"                || (other instanceof PlanTag // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 tagName.equals(((PlanTag) other).tagName)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"rgonslayer":39}},{"path":"src/main/java/seedu/address/model/tag/RiskTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":" * Represents a RiskTag in the address book.","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"public class RiskTag extends Tag {","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Risk tag name should be [LOW], [MEDIUM], or [HIGH]\";","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALIDATION_REGEX \u003d \"(HIGH|MEDIUM|LOW)\";","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"    public static final String HIGH \u003d \"HIGH\";","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"    public static final String LOW \u003d \"LOW\";","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"    public static final String MEDIUM \u003d \"MEDIUM\";","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"    private int risk;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"    public RiskTag(String tagName) {","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"        super(tagName);","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"        checkArgument(isValidRiskTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"        // only setRisk after we are sure that tagName is valid","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"        this.risk \u003d setRisk(tagName);","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"    public int getRisk() {","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"        return this.risk;","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"    public int setRisk(String tagName) {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"        switch (tagName) {","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"        case HIGH:","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"            return this.risk \u003d 3;","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"        case MEDIUM:","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"            return this.risk \u003d 2;","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"        case LOW:","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"            return this.risk \u003d 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"        default:","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"senwei01"},"content":"            return this.risk \u003d 0;","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"senwei01"},"content":"     * check if tag is a risk tag","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"senwei01"},"content":"     * @param tag","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"senwei01"},"content":"     * @return true if its a risk tag, false if otherwise","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"senwei01"},"content":"    public static boolean isRiskTag(String tag) {","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"senwei01"},"content":"        return HIGH.equalsIgnoreCase(tag)","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"senwei01"},"content":"                || MEDIUM.equalsIgnoreCase(tag)","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"senwei01"},"content":"                || LOW.equalsIgnoreCase(tag);","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"rgonslayer"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"rgonslayer"},"content":"    public static boolean isValidRiskTagName(String test) {","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"rgonslayer"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"rgonslayer"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"rgonslayer"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"rgonslayer"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"rgonslayer"},"content":"                || (other instanceof RiskTag // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"rgonslayer"},"content":"                \u0026\u0026 tagName.equals(((RiskTag) other).tagName)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"rgonslayer"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"rgonslayer":37,"senwei01":39}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"public abstract class Tag {","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rgonslayer":2,"-":52}},{"path":"src/main/java/seedu/address/model/util/MaximumSortedList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.util;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.exceptions.SortedListException;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":" * A list of Comparable Objects that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":" * An Object is considered unique by comparing using {@code T::equals}. As such, adding and updating of","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":" * the Object uses T::equals for equality to ensure that the Object being added or updated is","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":" * unique in terms of identity in the MaximumSortedList. The list also enforces a maximum number of","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":" * elements at any point in time and guarantees that all the elements are sorted by comparing using","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":" * {@code T::compareTo}.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":" *","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"public class MaximumSortedList\u003cT extends Comparable\u003cT\u003e\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    private final ObservableList\u003cT\u003e internalMaximumSortedList;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    private final int maxSize;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a new MaximumSortedList object with the input","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"     * maximum size.","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"     * @param maxSize the maximum number of elements allowed.","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    public MaximumSortedList(int maxSize) {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        internalMaximumSortedList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        this.maxSize \u003d maxSize;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a new MaximumSortedList object with all the elements","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"     * of the input MaximumSortedList.","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"     * @param previousMaximumSortedList the previous MaximumSortedList","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"     *        containing the elements to be added.","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    public MaximumSortedList(MaximumSortedList\u003cT\u003e previousMaximumSortedList) {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        this.maxSize \u003d previousMaximumSortedList.maxSize;","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        internalMaximumSortedList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"        previousMaximumSortedList.forEach(internalMaximumSortedList::add);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"    public ObservableList\u003cT\u003e getObservableList() {","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"        ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"            FXCollections.unmodifiableObservableList(internalMaximumSortedList);","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"     * Adds the specified element to the list according to the sorted order.","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"     * @param t the Comparable to be added.","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"     * @return a boolean value describing whether the input element has been added.","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    public boolean add(T t) {","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(t);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"        if (internalMaximumSortedList.size() \u003e\u003d maxSize || contains(t)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"        internalMaximumSortedList.add(t);","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"        sort();","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"        return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"     * Returns the specified element to the list","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"     * @param zeroBasedIndex the index of the element to get","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"     * @return a boolean value describing whether the input element has been added.","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"    public T get(int zeroBasedIndex) throws SortedListException {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        if (zeroBasedIndex \u003c 0 || zeroBasedIndex \u003e\u003d maxSize) {","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"            throw new SortedListException(\"Error: The list does not contain the input zeroBasedIndex\");","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"        return internalMaximumSortedList.get(zeroBasedIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"     * Removes the element at the specified position in this list. Shifts any","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"     * subsequent elements to the left (subtracts one from their indices).","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"     * @param zeroBasedIndex the zeroBasedIndex of the element to be removed.","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"     * @return the Comparable at the specified zeroBasedIndex.","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"     * @throws SortedListException the exception encountered when the input zeroBasedIndex","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"     *         is invalid.","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"    public T remove(int zeroBasedIndex) throws SortedListException {","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"        if (zeroBasedIndex \u003c 0 || zeroBasedIndex \u003e\u003d maxSize) {","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"            throw new SortedListException(\"Error: The list does not contain the input zeroBasedIndex\");","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"        return internalMaximumSortedList.remove(zeroBasedIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"     * Removes the specified element in this list. Shifts any","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"     * subsequent elements to the left (subtracts one from their indices).","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"     * @param t the Comparable to be removed.","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"     * @return the specified Comparable.","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"     * @throws SortedListException the exception encountered when the list does not","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"     *         contain the specified element.","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"    public T remove(T t) throws SortedListException {","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(t);","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"        int indexToRemove \u003d -1;","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 0; i \u003c internalMaximumSortedList.size(); i++) {","lastModifiedDate":"2022-10-18"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"            if (t.equals(internalMaximumSortedList.get(i))) {","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"                indexToRemove \u003d i;","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"        if (indexToRemove \u003d\u003d -1) {","lastModifiedDate":"2022-10-18"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"            throw new SortedListException(\"Error: The list does not contain the object\");","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"        return internalMaximumSortedList.remove(indexToRemove);","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"     * Checks whether this list contains the specified element.","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"     * @param t the Comparable to be checked against.","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"     * @return a boolean value describing whether the MaximumSortedList","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"     *         contains the input Comparable.","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"    public boolean contains(T t) {","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(t);","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"jialatteo"},"content":"        int indexOfElement \u003d -1;","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 0; i \u003c internalMaximumSortedList.size(); i++) {","lastModifiedDate":"2022-10-18"},{"lineNumber":137,"author":{"gitId":"jialatteo"},"content":"            if (t.equals(internalMaximumSortedList.get(i))) {","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"jialatteo"},"content":"                indexOfElement \u003d i;","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":141,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"        if (indexOfElement \u003d\u003d -1) {","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"        } else {","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"MuhdMusab"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"        return internalMaximumSortedList.isEmpty();","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"    public void forEach(Consumer\u003c? super T\u003e consumer) {","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"        internalMaximumSortedList.forEach(consumer);","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"    public int size() {","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"        return internalMaximumSortedList.size();","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"    public Stream\u003cT\u003e stream() {","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"        return internalMaximumSortedList.stream();","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"    private int binarySearch(T t) {","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"        int low \u003d 0;","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"        int high \u003d internalMaximumSortedList.size() - 1;","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"        while (low \u003c\u003d high) {","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"            int mid \u003d low + (high - low) / 2;","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"            T currentValue \u003d internalMaximumSortedList.get(mid);","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"            if (currentValue.equals(t)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"                return mid;","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"            } else if (currentValue.compareTo(t) \u003e 0) {","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"                high \u003d mid - 1;","lastModifiedDate":"2022-10-13"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"            } else {","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"                low \u003d mid + 1;","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"        return -1;","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"    private void sort() {","lastModifiedDate":"2022-10-13"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"        internalMaximumSortedList.sort(T::compareTo);","lastModifiedDate":"2022-10-13"},{"lineNumber":184,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":185,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":186,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":187,"author":{"gitId":"MuhdMusab"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"MuhdMusab"},"content":"        return internalMaximumSortedList.hashCode();","lastModifiedDate":"2022-10-13"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":191,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":192,"author":{"gitId":"MuhdMusab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"MuhdMusab"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":196,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"MuhdMusab"},"content":"        if (!(other instanceof MaximumSortedList\u003c?\u003e)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":198,"author":{"gitId":"MuhdMusab"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":199,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":200,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":201,"author":{"gitId":"MuhdMusab"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-10-13"},{"lineNumber":202,"author":{"gitId":"MuhdMusab"},"content":"        MaximumSortedList\u003cT\u003e otherList \u003d (MaximumSortedList) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":203,"author":{"gitId":"MuhdMusab"},"content":"        if (otherList.maxSize !\u003d this.maxSize || !isEqual(otherList)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":204,"author":{"gitId":"MuhdMusab"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"MuhdMusab"},"content":"        } else {","lastModifiedDate":"2022-10-13"},{"lineNumber":206,"author":{"gitId":"MuhdMusab"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":207,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":208,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":209,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":210,"author":{"gitId":"MuhdMusab"},"content":"    private boolean isEqual(MaximumSortedList\u003cT\u003e other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":211,"author":{"gitId":"MuhdMusab"},"content":"        if (other.size() !\u003d this.internalMaximumSortedList.size()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":212,"author":{"gitId":"MuhdMusab"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":213,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":214,"author":{"gitId":"MuhdMusab"},"content":"        int listSize \u003d internalMaximumSortedList.size();","lastModifiedDate":"2022-10-13"},{"lineNumber":215,"author":{"gitId":"MuhdMusab"},"content":"        for (int i \u003d 0; i \u003c listSize; i++) {","lastModifiedDate":"2022-10-13"},{"lineNumber":216,"author":{"gitId":"MuhdMusab"},"content":"            if (!this.internalMaximumSortedList.get(i).equals(other.internalMaximumSortedList.get(i))) {","lastModifiedDate":"2022-10-13"},{"lineNumber":217,"author":{"gitId":"MuhdMusab"},"content":"                return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":218,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":219,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":220,"author":{"gitId":"MuhdMusab"},"content":"        return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":221,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":222,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jialatteo":48,"MuhdMusab":174}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.IncomeLevel;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.Monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"rgonslayer"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new IncomeLevel(\"$3000\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"                        new Monthly(\"$200\"), new RiskTag(\"HIGH\"), new PlanTag(\"Savings Plan\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"                    new ClientTag(\"POTENTIAL\"), getTagSet(\"friends\")),","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new IncomeLevel(\"$30000\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"                    new Monthly(\"$100\"), new RiskTag(\"LOW\"), new PlanTag(\"Savings Plan\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"                    new ClientTag(\"CURRENT\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"rgonslayer"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new IncomeLevel(\"$1000000\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"                    new Monthly(\"$400\"), new RiskTag(\"MEDIUM\"), new PlanTag(\"Savings Plan\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"                    new ClientTag(\"POTENTIAL\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"rgonslayer"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new IncomeLevel(\"$1\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"rgonslayer"},"content":"                    new Monthly(\"$100\"), new RiskTag(\"HIGH\"), new PlanTag(\"Savings Plan\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"                    new ClientTag(\"CURRENT\"), getTagSet(\"family\")),","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new IncomeLevel(\"$20000\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"rgonslayer"},"content":"                    new Monthly(\"$300\"), new RiskTag(\"LOW\"), new PlanTag(\"Savings Plan\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"rgonslayer"},"content":"                    new ClientTag(\"CURRENT\"), getTagSet(\"classmates\")),","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new IncomeLevel(\"$40000\"), new Monthly(\"$250\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"rgonslayer"},"content":"                new RiskTag(\"HIGH\"), new PlanTag(\"Savings Plan\"), new ClientTag(\"POTENTIAL\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"rgonslayer"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"rgonslayer"},"content":"    public static Set\u003cNormalTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"rgonslayer"},"content":"                .map(NormalTag::new)","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"rgonslayer":26,"-":45}},{"path":"src/main/java/seedu/address/model/util/exceptions/SortedListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.util.exceptions;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":" * Represents an error encountered by a SortedList.","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"public class SortedListException extends Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"    public SortedListException(String message) {","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"        super(message);","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"MuhdMusab":11}},{"path":"src/main/java/seedu/address/storage/CommandHistoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.ReadOnlyCommandHistory;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":" * Represents a storage for {@link seedu.address.model.CommandHistory}.","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"public interface CommandHistoryStorage {","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"     * Returns CommandHistory data as a {@link ReadOnlyCommandHistory}.","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"     * Returns ReadOnlyCommandHistory with empty command history list if storage file is not found.","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    ReadOnlyCommandHistory readCommandHistory(Path filePath) throws FileNotFoundException;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    ReadOnlyCommandHistory readCommandHistory() throws FileNotFoundException;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyCommandHistory} to the storage.","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"     * @param commandHistory cannot be null.","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    void saveCommandHistory(ReadOnlyCommandHistory commandHistory) throws IOException;","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"    void saveCommandHistory(ReadOnlyCommandHistory commandHistory, Path filePath) throws IOException;","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"    Path getCommandHistoryFilePath();","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jialatteo":29}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"public class JsonAdaptedAppointment {","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    private final String appointmentDateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    private final String appointmentLocation;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"     * the given {@code appointmentDateTime} and {@code appointmentLocation}.","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"dateTime\") String dateTime,","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"                                  @JsonProperty(\"location\") String location) {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        this.appointmentDateTime \u003d dateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"        this.appointmentLocation \u003d location;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        appointmentDateTime \u003d source.getDateTime().toString();","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        appointmentLocation \u003d source.getLocation().toString();","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        if (appointmentLocation \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"        if (!Location.isValidLocation(appointmentLocation)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"        Location location \u003d new Location(appointmentLocation);","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        if (appointmentDateTime \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        if (!DateTimeParser.isValidDateTime(appointmentDateTime)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"        LocalDateTime localDateTime \u003d DateTimeParser.parseLocalDateTimeFromString(appointmentDateTime);","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"        DateTime dateTime \u003d new DateTime(localDateTime);","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        return new Appointment(dateTime, location);","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"jialatteo":31,"MuhdMusab":32}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.model.person.Person.MAXIMUM_NUM_OF_APPOINTMENTS;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.IncomeLevel;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.Monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.MaximumSortedList;","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"rgonslayer"},"content":"    private final String riskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"rgonslayer"},"content":"    private final String planTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"rgonslayer"},"content":"    private final String clientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"    private final String income;","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"    private final String monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"rgonslayer"},"content":"            @JsonProperty(\"income\") String income,","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"rgonslayer"},"content":"            @JsonProperty(\"monthly\") String monthly,","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"rgonslayer"},"content":"            @JsonProperty(\"riskTag\") String riskTag,","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"rgonslayer"},"content":"            @JsonProperty(\"planTag\") String planTag,","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"rgonslayer"},"content":"            @JsonProperty(\"clientTag\") String clientTag,","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"rgonslayer"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"            @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"rgonslayer"},"content":"        this.riskTag \u003d riskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"rgonslayer"},"content":"        this.planTag \u003d planTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"rgonslayer"},"content":"        this.clientTag \u003d clientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"rgonslayer"},"content":"        this.income \u003d income;","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"rgonslayer"},"content":"        this.monthly \u003d monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"        if (appointments !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"            this.appointments.addAll(appointments);","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"rgonslayer"},"content":"        riskTag \u003d source.getRiskTag().tagName;","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"rgonslayer"},"content":"        planTag \u003d source.getPlanTag().tagName;","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"rgonslayer"},"content":"        clientTag \u003d source.getClientTag().tagName;","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"rgonslayer"},"content":"        income \u003d source.getIncome().value;","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"rgonslayer"},"content":"        monthly \u003d source.getMonthly().value;","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"        appointments.addAll(source.getAppointments().stream()","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"                .map(JsonAdaptedAppointment::new)","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"rgonslayer"},"content":"        final List\u003cNormalTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"        final MaximumSortedList\u003cAppointment\u003e modelAppointments \u003d new MaximumSortedList\u003c\u003e(MAXIMUM_NUM_OF_APPOINTMENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"            modelAppointments.add(jsonAdaptedAppointment.toModelType());","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"jialatteo"},"content":"        if (income \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"jialatteo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"jialatteo"},"content":"                    IncomeLevel.class.getSimpleName()));","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"rgonslayer"},"content":"        if (!IncomeLevel.isValidIncome(income)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"rgonslayer"},"content":"            throw new IllegalValueException(IncomeLevel.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"rgonslayer"},"content":"        final IncomeLevel modelIncome \u003d new IncomeLevel(income);","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"        if (monthly \u003d\u003d null) {","lastModifiedDate":"2022-10-31"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-31"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"                    Monthly.class.getSimpleName()));","lastModifiedDate":"2022-10-31"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":161,"author":{"gitId":"rgonslayer"},"content":"        if (!Monthly.isValidMonthly(monthly)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":162,"author":{"gitId":"rgonslayer"},"content":"            throw new IllegalValueException(Monthly.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":163,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":164,"author":{"gitId":"rgonslayer"},"content":"        final Monthly modelMonthly \u003d new Monthly(monthly);","lastModifiedDate":"2022-10-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"rgonslayer"},"content":"        if (riskTag \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":167,"author":{"gitId":"rgonslayer"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, RiskTag.class.getSimpleName()));","lastModifiedDate":"2022-10-14"},{"lineNumber":168,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":169,"author":{"gitId":"rgonslayer"},"content":"        if (!RiskTag.isValidRiskTagName(riskTag)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":170,"author":{"gitId":"rgonslayer"},"content":"            throw new IllegalValueException(RiskTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":171,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":172,"author":{"gitId":"rgonslayer"},"content":"        final RiskTag modelRiskTag \u003d new RiskTag(riskTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"rgonslayer"},"content":"        if (planTag \u003d\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"rgonslayer"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, PlanTag.class.getSimpleName()));","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"rgonslayer"},"content":"        if (!PlanTag.isValidPlanTagName(planTag)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"rgonslayer"},"content":"            throw new IllegalValueException(PlanTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"rgonslayer"},"content":"        final PlanTag modelPlanTag \u003d new PlanTag(planTag);","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"rgonslayer"},"content":"        if (clientTag \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"rgonslayer"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"rgonslayer"},"content":"                    ClientTag.class.getSimpleName()));","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"rgonslayer"},"content":"        if (!ClientTag.isValidClientTagName(clientTag)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"rgonslayer"},"content":"            throw new IllegalValueException(ClientTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"rgonslayer"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"rgonslayer"},"content":"        final ClientTag modelClientTag \u003d new ClientTag(clientTag);","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"rgonslayer"},"content":"        final Set\u003cNormalTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"jialatteo"},"content":"        Person newPerson \u003d new Person(modelName, modelPhone, modelEmail,","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"rgonslayer"},"content":"                modelAddress, modelIncome, modelMonthly, modelRiskTag, modelPlanTag, modelClientTag, modelTags);","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"MuhdMusab"},"content":"        newPerson.setAppointments(modelAppointments);","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"MuhdMusab"},"content":"        return newPerson;","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jialatteo":7,"MuhdMusab":23,"rgonslayer":63,"-":105}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":" * Jackson-friendly version of {@link NormalTag}.","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"rgonslayer"},"content":"    public NormalTag toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"        if (!NormalTag.isValidNormalTagName(tagName)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"            throw new IllegalValueException(NormalTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"rgonslayer"},"content":"        return new NormalTag(tagName);","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rgonslayer":6,"-":43}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.ReadOnlyCommandHistory;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, CommandHistoryStorage {","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    ReadOnlyCommandHistory readCommandHistory() throws FileNotFoundException;","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    void saveCommandHistory(ReadOnlyCommandHistory commandHistory) throws IOException;","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    void saveCommandHistory(ReadOnlyCommandHistory commandHistory, Path filePath) throws IOException;","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jialatteo":10,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.ReadOnlyCommandHistory;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"    private CommandHistoryStorage commandHistoryStorage;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"                          CommandHistoryStorage commandHistoryStorage) {","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        this.commandHistoryStorage \u003d commandHistoryStorage;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CommandHistory methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"    public Path getCommandHistoryFilePath() {","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"        return commandHistoryStorage.getCommandHistoryFilePath();","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"    public ReadOnlyCommandHistory readCommandHistory() throws FileNotFoundException {","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"        return readCommandHistory(commandHistoryStorage.getCommandHistoryFilePath());","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"    public ReadOnlyCommandHistory readCommandHistory(Path filePath) throws FileNotFoundException {","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"        return commandHistoryStorage.readCommandHistory(filePath);","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"    public void saveCommandHistory(ReadOnlyCommandHistory commandHistory) throws IOException {","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"        saveCommandHistory(commandHistory, commandHistoryStorage.getCommandHistoryFilePath());","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"    public void saveCommandHistory(ReadOnlyCommandHistory commandHistory, Path filePath) throws IOException {","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"        commandHistoryStorage.saveCommandHistory(commandHistory);","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jialatteo":32,"-":77}},{"path":"src/main/java/seedu/address/storage/TextCommandHistoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import java.io.File;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.ReadOnlyCommandHistory;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":" * A class to access CommandHistory data stored as a text file on the hard disk.","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"public class TextCommandHistoryStorage implements CommandHistoryStorage {","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TextCommandHistoryStorage.class);","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"    public TextCommandHistoryStorage(Path filePath) {","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"    public Path getCommandHistoryFilePath() {","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        return filePath;","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    private File getFile() {","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"        File file \u003d new File(filePath.toString());","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"                logger.fine(\"A new CommandHistory file is created!\");","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"            } else {","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"                logger.fine(\"CommandHistory file already exists.\");","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        assert file !\u003d null;","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"        return file;","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"    public ReadOnlyCommandHistory readCommandHistory() throws FileNotFoundException {","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        return readCommandHistory(filePath);","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"     * Similar to {@link #readCommandHistory()}.","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"     * @param filePath location of the data. Cannot be null","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"     * @return ReadOnlyCommandHistory that can only be copied and not be modified directly","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"     * @throws FileNotFoundException if unable to find file","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"    public ReadOnlyCommandHistory readCommandHistory(Path filePath) throws FileNotFoundException {","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"        File file \u003d getFile();","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"            String commandString \u003d sc.nextLine();","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"            commandHistoryList.add(commandString);","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"        sc.close();","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"        CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"        commandHistory.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        return commandHistory;","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"    public void saveCommandHistory(ReadOnlyCommandHistory commandHistory) throws IOException {","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"        saveCommandHistory(commandHistory, filePath);","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"     * Similar to {@link #saveCommandHistory(ReadOnlyCommandHistory)}.","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"    public void saveCommandHistory(ReadOnlyCommandHistory commandHistory, Path filePath) throws IOException {","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(commandHistory);","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d commandHistory.getCommandHistoryList();","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"        FileWriter fw \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 0; i \u003c commandHistoryList.size(); i++) {","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"            fw.write(commandHistoryList.get(i) + \"\\n\");","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"        fw.close();","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jialatteo":101}},{"path":"src/main/java/seedu/address/ui/AppointmentHBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":" * An UI component that displays information of an {@code Appointment}.","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"public class AppointmentHBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    private static final String FXML \u003d \"AppointmentHBox.fxml\";","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    private HBox appointmentHBox;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private Label indexLabel;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    private Label dateLabel;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    private Label timeLabel;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    private Label locationLabel;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a {@code AppointmentFlowPane} with the given {@code appointmentDate},","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"     * {@code appointmentTime} and index to display.","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    public AppointmentHBox(int index, Appointment appointment) {","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        super(FXML);","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"        indexLabel.setText(String.valueOf(index));","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        dateLabel.setText(appointment.getDate().toString());","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        timeLabel.setText(appointment.getTimeFormat());","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        locationLabel.setText(appointment.getLocation().toString());","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"jialatteo":3,"MuhdMusab":33}},{"path":"src/main/java/seedu/address/ui/CalendarButton.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":" * Represents a Button used in the Calendar with hidden internal logic.","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"public abstract class CalendarButton extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"    public static final String CALENDAR_BUTTON_STYLE \u003d \"-fx-border-radius: 5; -fx-border-width: 2;\"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"             + \"-fx-background-color: #1d1d1d; -fx-text-fill: white; -fx-font-size: 13;\";","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    public static final String GREY_BORDER \u003d \"-fx-border-color: grey;\";","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    public static final String ORANGE_BORDER \u003d \"-fx-border-color: orange;\";","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    protected CalendarButton(String fxml) {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"        super(fxml);","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    protected abstract void handleOnAction(ActionEvent event);","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    protected abstract void handleFocusedEvent(Observable observable);","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":19,"wongyewjon":2}},{"path":"src/main/java/seedu/address/ui/CalendarDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyewjon"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"wongyewjon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.CalendarLogic;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"wongyewjon"},"content":" * A UI component that displays information of a Calendar.","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"wongyewjon"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"wongyewjon"},"content":"public class CalendarDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"wongyewjon"},"content":"    private static final String FXML \u003d \"CalendarDisplay.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    private Stage primaryStage;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"wongyewjon"},"content":"    private Logic logic;","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    private CalendarLogic calendarLogic;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"wongyewjon"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"wongyewjon"},"content":"    private GridPane calendarDisplay;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"wongyewjon"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"wongyewjon"},"content":"    private HBox topCalendar;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"wongyewjon"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"wongyewjon"},"content":"     * Creates a Calendar with the given list of CalendarEvents.","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"wongyewjon"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    public CalendarDisplay(Logic logic, Stage primaryStage) {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"wongyewjon"},"content":"        super(FXML);","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        this.calendarLogic \u003d new CalendarLogic(logic, primaryStage, calendarDisplay, topCalendar);","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"wongyewjon"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        calendarLogic.initialiseLogic();","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        calendarLogic.drawCalendar();","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    private void handleKeyPressed(KeyEvent event) {","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        if (event.getCode().equals(KeyCode.B)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"            calendarLogic.previous();","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"            calendarDisplay.requestFocus();","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        } else if (event.getCode().equals(KeyCode.N)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"            calendarLogic.next();","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"            calendarDisplay.requestFocus();","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"wongyewjon"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"MuhdMusab":23,"wongyewjon":26}},{"path":"src/main/java/seedu/address/ui/CalendarEventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyewjon"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"import static javafx.scene.paint.Color.WHITE;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"wongyewjon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"wongyewjon"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":" * Panel containing the list of CalendarEvents.","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"wongyewjon"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"public class CalendarEventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private static final String FXML \u003d \"CalendarEventListPanel.fxml\";","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"wongyewjon"},"content":"    private ObservableList\u003cCalendarEvent\u003e calendarDayEvents;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    private Stage primaryStage;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"wongyewjon"},"content":"    @FXML","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"wongyewjon"},"content":"    private VBox calendarEventList;","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"wongyewjon"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"wongyewjon"},"content":"     * Creates a {@code CalendarEventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    public CalendarEventListPanel(ObservableList\u003cCalendarEvent\u003e calendarDayEvents,","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"                                  Stage primaryStage) {","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        super(FXML);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"wongyewjon"},"content":"        this.calendarDayEvents \u003d calendarDayEvents;","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"wongyewjon"},"content":"        this.calendarEventList \u003d new VBox();","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"wongyewjon"},"content":"    public VBox getCalendarEventList(int currentDay) {","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"wongyewjon"},"content":"        Text tDate \u003d getTextDate(currentDay);","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"wongyewjon"},"content":"        calendarEventList.getChildren().add(tDate);","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        calendarDayEvents.stream().sorted()","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"wongyewjon"},"content":"                .forEach(x -\u003e calendarEventList.getChildren()","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"                        .add(new EventButton(x, primaryStage).getRoot()));","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"wongyewjon"},"content":"        return calendarEventList;","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    private Text getTextDate(int currentDay) {","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        Text tDate \u003d new Text(String.valueOf(currentDay));","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"wongyewjon"},"content":"        tDate.setFill(WHITE);","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"wongyewjon"},"content":"        return tDate;","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"wongyewjon"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"MuhdMusab":13,"wongyewjon":36}},{"path":"src/main/java/seedu/address/ui/CalendarPopup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.control.Tooltip;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":" * The Popup that is displayed when a {@code CalendarButton} is","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":" * interacted with.","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"public class CalendarPopup extends UiPart\u003cTooltip\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    private static final String FXML \u003d \"CalendarPopup.fxml\";","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    private static final int POPUP_DELAY \u003d 10;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    private static final int POPUP_DURATION \u003d 1000;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private static final String LABEL_STYLE \u003d \"-fx-text-fill: black;\";","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    private static final String LEFT_SQUARE_BUBBLE \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"            \"-fx-shape: \\\" M24 1h-24v16.981h4v5.019l7-5.019h13z \\\";\";","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    private static final String RIGHT_SQUARE_BUBBLE \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"            \"M24 1h-24v16.981h13l7+5.019v-5.019h4z\";","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    private static final String POPUP_STYLE \u003d \"-fx-font-size: 16px; -fx-background-color: \"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"            + \"white;\";","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    private final Node owner;","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    private Tooltip popup;","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a {@code CalendarPopup} with the given CalendarEvent details.","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"    public CalendarPopup(CalendarEvent calendarEvent, Node owner) {","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        super(FXML);","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        initialiseCalendarPopup(calendarEvent);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    private void initialiseCalendarPopup(CalendarEvent calendarEvent) {","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        popup.setStyle(POPUP_STYLE + LEFT_SQUARE_BUBBLE);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        popup.setShowDelay(new Duration(POPUP_DELAY));","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        popup.setShowDuration(new Duration(POPUP_DURATION));","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        popup.setGraphic(new CalendarPopupContent(calendarEvent).getRoot());","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":43}},{"path":"src/main/java/seedu/address/ui/CalendarPopupContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":" * The content that is displayed within the {@code CalendarPopup}","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"public class CalendarPopupContent extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    private static final String FXML \u003d \"CalendarPopupContent.fxml\";","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    private VBox popupContent;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    private Label clientLabel;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    private FlowPane datePane;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    private FlowPane timePane;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    private FlowPane locationPane;","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    private Label dateLabel;","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    private Label timeLabel;","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    private Label locationLabel;","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a {@code CalendarPopupContent} with the given CalendarEvent details.","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    public CalendarPopupContent(CalendarEvent calendarEvent) {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        super(FXML);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        clientLabel.setText(calendarEvent.getName().toString());","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        dateLabel.setText(calendarEvent.getDate());","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        timeLabel.setText(calendarEvent.getTimeFormat());","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        locationLabel.setText(calendarEvent.getLocation().toString());","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":42}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    public CommandBox(CommandExecutor commandExecutor, ResultDisplay resultDisplay, Logic logic) {","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"        setupListener(resultDisplay);","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        setupCommandHistoryNavigation(logic, resultDisplay);","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"     * Setup down and up arrow key to show previous and next command in commandTextField","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"     * @param logic gets the previous/next command in CommandHistory","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"     * @param resultDisplay is cleared when the next command string is empty","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"    private void setupCommandHistoryNavigation(Logic logic, ResultDisplay resultDisplay) {","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"            switch (event.getCode()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"            case UP:","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"                String prevCommand \u003d logic.getPrevInCommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"                if (prevCommand !\u003d \"\") {","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"                    commandTextField.setText(prevCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"                }","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"                event.consume();","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"            case DOWN:","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"                String nextCommand \u003d logic.getNextInCommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"                commandTextField.setText(nextCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"                if (nextCommand.equals(\"\")) {","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"                    resultDisplay.setFeedbackToUser(\"\");","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"                }","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"                event.consume();","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"            default:","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"        });","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"     * Add listener to commandTextField to set text style to default when typing","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"     * and to display the command\u0027s message usage to the ResultDisplay when","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"     * a valid command word is typed.","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"     * @param resultDisplay displays the command\u0027s message usage","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"    private void setupListener(ResultDisplay resultDisplay) {","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"        // displays command parameters in ResultDisplay when a COMMAND_WORD is typed.","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"        // clears ResultDisplay when a single character is in the CommandBox","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"        commandTextField.textProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2022-09-18"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"            setStyleToDefault();","lastModifiedDate":"2022-09-18"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"            if (newValue.length() \u003d\u003d 1) {","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(\"\");","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"            String trimmedText \u003d newValue.trim();","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"            String commandWord \u003d trimmedText.contains(\" \") ? trimmedText.split(\" \")[0] : trimmedText;","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"            switch (commandWord) {","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"            case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-18"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-09-18"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"            case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-18"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-09-18"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-18"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-09-18"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-18"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-09-18"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(ListCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"            case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(ClearCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"            case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"            case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(AddAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"jialatteo"},"content":"            case EditAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(EditAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"jialatteo"},"content":"            case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(DeleteAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"jialatteo"},"content":"            case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(ExitCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"jialatteo"},"content":"            default:","lastModifiedDate":"2022-09-18"},{"lineNumber":131,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":132,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-09-18"},{"lineNumber":133,"author":{"gitId":"jialatteo"},"content":"        });","lastModifiedDate":"2022-09-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"jialatteo":104,"-":83}},{"path":"src/main/java/seedu/address/ui/EventButton.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyewjon"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import javafx.geometry.Point2D;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":" * Button that contains a CalendarEvent.","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"public class EventButton extends CalendarButton {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    private static final String FXML \u003d \"EventButton.fxml\";","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private static final String EVENT_BUTTON_STYLE \u003d \"-fx-font-size: 8pt; -fx-border-radius: 5; -fx-min-width: 100;\";","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    private static final double ORIGIN \u003d 0.0;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    private static final int TOOLTIP_OFFSET \u003d 15;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    private Stage primaryStage;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    private CalendarEvent calendarEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    private CalendarPopup calendarPopup;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    private Button eventButton;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a {@code EventButton} with the given Appointment details.","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    public EventButton(CalendarEvent calendarEvent, Stage primaryStage) {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"        super(FXML);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        this.calendarEvent \u003d calendarEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        this.calendarPopup \u003d new CalendarPopup(calendarEvent, eventButton);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        initialiseEventButton();","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    private void initialiseEventButton() {","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        eventButton.setText(calendarEvent.getTimeFormat() + \" \" + calendarEvent.getName());","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        eventButton.focusedProperty().addListener(this::handleFocusedEvent);","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        ChangeListener\u003cNumber\u003e stageSizeListener \u003d (observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"            if (calendarPopup.getRoot().isShowing()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"                calendarPopup.getRoot().hide();","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        };","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        primaryStage.heightProperty().addListener(stageSizeListener);","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"        primaryStage.widthProperty().addListener(stageSizeListener);","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"    @FXML @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"    protected void handleOnAction(ActionEvent event) {","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        if (!calendarPopup.getRoot().isShowing()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"            displayToolTip();","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"    @FXML @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"    protected void handleFocusedEvent(Observable observable) {","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        if (!calendarPopup.getRoot().isShowing() \u0026\u0026 eventButton.isFocused()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"            eventButton.setStyle(EVENT_BUTTON_STYLE + ORANGE_BORDER);","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"            displayToolTip();","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"        if (!eventButton.isFocused()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"            eventButton.setStyle(EVENT_BUTTON_STYLE + GREY_BORDER);","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"            calendarPopup.getRoot().hide();","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    private void displayToolTip() {","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        Point2D p \u003d eventButton.localToScene(ORIGIN, ORIGIN);","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"        calendarPopup.getRoot().show(eventButton, p.getX()","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"                + eventButton.getScene().getX() + eventButton.getScene().getWindow().getX(), p.getY()","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"                + eventButton.getScene().getY() + eventButton.getScene().getWindow().getY() + TOOLTIP_OFFSET);","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"wongyewjon"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"MuhdMusab":66,"wongyewjon":9}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-w09-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"    public static final String LINE \u003d \"-\".repeat(110);","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"    public static final String HELP_MESSAGE \u003d LINE","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"            + \"\\nHere\u0027s a list of basic commands:\"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"            + \"\\n1) Add a new client:\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"            + \"\u003e\u003e \" + AddCommand.COMMAND_WORD + \" n/NAME p/PHONE e/EMAIL a/ADDRESS \"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"            + \"i/INCOME m/MONTHLY r/RISK ip/PLAN t/[TAG](Optional Field)\"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"            + \"\\n2) Add appointment for a client:\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"            + \"\u003e\u003e \" + AddAppointmentCommand.COMMAND_WORD + \" INDEX d/DATE_AND_TIME l/LOCATION\"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"            + \"\\n3) Editing a client\u0027s information:\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"            + \"\u003e\u003e \" + EditCommand.COMMAND_WORD + \" INDEX PREFIX/KEYWORD\"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"            + \"\\n4) Delete an existing client:\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"            + \"\u003e\u003e \" + DeleteCommand.COMMAND_WORD + \" INDEX\"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"            + \"\\n5) Sorting client by keywords:\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"            + \"Types of KEYWORDS: name, appt, risk, income, monthly\"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"            + \"\\nThe sorting will be in ascending order by default, to make it descending add desc behind KEYWORD\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"            + \"\u003e\u003e \" + SortCommand.COMMAND_WORD + \" KEYWORD / \" + SortCommand.COMMAND_WORD + \" KEYWORD desc\"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"            + \"\\n6) Filter client by keyword:\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"            + \"\u003e\u003e \" + FindCommand.COMMAND_WORD + \" PREFIX/KEYWORD [MORE_KEYWORDS]\"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"            + \"\\n7) List all contacts:\"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"            + \"\u003e\u003e list\"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"            + \"\\n8) Clear all entries from list of clients:\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"            + \"\u003e\u003e clear\"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"            + \"\\n9) Exit the program:\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"senwei01"},"content":"            + \"\u003e\u003e exit\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"senwei01"},"content":"            + LINE","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"senwei01"},"content":"            + \"\\nFor more information, please refer to our user guide:\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"senwei01"},"content":"            + USERGUIDE_URL;","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"MuhdMusab":1,"-":100,"senwei01":33}},{"path":"src/main/java/seedu/address/ui/JumpText.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyewjon"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"wongyewjon"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"wongyewjon"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"import seedu.address.logic.CalendarLogic;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":" * A textField that reads user input for the new month","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"wongyewjon"},"content":" * when interacted with.","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"wongyewjon"},"content":"public class JumpText extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"wongyewjon"},"content":"    private static final String FXML \u003d \"JumpText.fxml\";","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"wongyewjon"},"content":"    private static final String JUMP_TEXT_STYLE \u003d \"-fx-border-radius: 5; -fx-border-width: 2; \"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"wongyewjon"},"content":"            + \"-fx-background-color: #1d1d1d; -fx-text-fill: white; -fx-font-size: 13;\";","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"wongyewjon"},"content":"    private static final String GREY_BORDER \u003d \"-fx-border-color: grey;\";","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"wongyewjon"},"content":"    private static final String ORANGE_BORDER \u003d \"-fx-border-color: orange;\";","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"wongyewjon"},"content":"    private CalendarLogic calendarLogic;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"wongyewjon"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"wongyewjon"},"content":"    private TextField jumpText;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"wongyewjon"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"wongyewjon"},"content":"     * Creates a {@code JumpText} with the given {@code CalendarLogic}.","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"wongyewjon"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"wongyewjon"},"content":"    public JumpText(CalendarLogic calendarLogic) {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"wongyewjon"},"content":"        super(FXML);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"wongyewjon"},"content":"        this.calendarLogic \u003d calendarLogic;","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"wongyewjon"},"content":"        jumpText.setStyle(JUMP_TEXT_STYLE + GREY_BORDER);","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"wongyewjon"},"content":"        jumpText.focusedProperty().addListener(this::handleFocusedEvent);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"wongyewjon"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"wongyewjon"},"content":"    protected void handleFocusedEvent(Observable observable) {","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"wongyewjon"},"content":"        if (jumpText.isFocused()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"wongyewjon"},"content":"            jumpText.setStyle(JUMP_TEXT_STYLE + ORANGE_BORDER);","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"wongyewjon"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"wongyewjon"},"content":"            jumpText.setStyle(JUMP_TEXT_STYLE + GREY_BORDER);","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"wongyewjon"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"wongyewjon"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"wongyewjon"},"content":"    protected void handleOnAction(ActionEvent event) {","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"wongyewjon"},"content":"        jumpText.requestFocus();","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"wongyewjon"},"content":"        calendarLogic.jump();","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"wongyewjon"},"content":"    public String getText() {","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"wongyewjon"},"content":"        return jumpText.getText();","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"wongyewjon"},"content":"    public void clear() {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"wongyewjon"},"content":"        jumpText.clear();","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"wongyewjon"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"wongyewjon":59}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import javafx.scene.input.KeyCodeCombination;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"    private CalendarDisplay calendarDisplay;","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"    @FXML","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"    private StackPane calendarDisplayPlaceholder;","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"    private TabPane tabPane;","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"    private Tab contactsTab;","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"    private Tab calendarTab;","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"        registerShortcutsForTabs();","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"    void registerShortcutsForTabs() {","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"        registerShortcut(tabPane, contactsTab, new KeyCodeCombination(KeyCode.DIGIT1,","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"                KeyCombination.CONTROL_DOWN));","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"        registerShortcut(tabPane, calendarTab, new KeyCodeCombination(KeyCode.DIGIT2,","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"                KeyCombination.CONTROL_DOWN));","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"jialatteo"},"content":"    private void registerShortcut(TabPane tabPane, Tab tab, KeyCombination combination) {","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"jialatteo"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"jialatteo"},"content":"            if (combination.match(event)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"jialatteo"},"content":"                tabPane.getSelectionModel().select(tab);","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"jialatteo"},"content":"                event.consume();","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"        calendarDisplay \u003d new CalendarDisplay(logic, primaryStage);","lastModifiedDate":"2022-10-25"},{"lineNumber":151,"author":{"gitId":"jialatteo"},"content":"        calendarDisplayPlaceholder.getChildren().add(calendarDisplay.getRoot());","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":156,"author":{"gitId":"jialatteo"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, resultDisplay, logic);","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jialatteo":31,"MuhdMusab":1,"-":198}},{"path":"src/main/java/seedu/address/ui/NextButton.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.CalendarLogic;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":" * A button that displays the next month\u0027s CalendarEvents","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":" * when interacted with.","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"public class NextButton extends CalendarButton {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private static final String FXML \u003d \"NextButton.fxml\";","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    private CalendarLogic calendarLogic;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    private Button nextButton;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a {@code NextButton} with the given {@code String} and {@code CalendarLogic}.","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    public NextButton(String content, CalendarLogic calendarLogic) {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        super(FXML);","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"        this.calendarLogic \u003d calendarLogic;","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"        nextButton.setText(content);","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        nextButton.focusedProperty().addListener(this::handleFocusedEvent);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    private void handleOnKeyPressed(KeyEvent event) {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"wongyewjon"},"content":"        if (event.getCode().equals(KeyCode.N)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"            calendarLogic.next();","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"            nextButton.requestFocus();","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        } else if (event.getCode().equals(KeyCode.B)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"            calendarLogic.previous();","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"            nextButton.requestFocus();","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        } else if (event.getCode().equals(KeyCode.R)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"            calendarLogic.refresh();","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"            nextButton.requestFocus();","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"    protected void handleFocusedEvent(Observable observable) {","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        if (nextButton.isFocused()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"            nextButton.setStyle(CALENDAR_BUTTON_STYLE + ORANGE_BORDER);","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"            nextButton.setStyle(CALENDAR_BUTTON_STYLE + GREY_BORDER);","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"    protected void handleOnAction(ActionEvent event) {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"        calendarLogic.next();","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":58,"wongyewjon":1}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"    private static final String TRANSPARENT_BACKGROUND \u003d \"-fx-background-color: transparent;\";","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"rgonslayer"},"content":"    private Label income;","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"    private Label monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"rgonslayer"},"content":"    @FXML","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"rgonslayer"},"content":"    private FlowPane specialTags;","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"rgonslayer"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"    private ListView\u003cAppointment\u003e appointments;","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"        addTagLabels(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"        appointments.setStyle(TRANSPARENT_BACKGROUND);","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"        appointments.setItems(person.getAppointments().getObservableList());","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"        appointments.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"                setText(null);","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"                setStyle(TRANSPARENT_BACKGROUND);","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"            } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"                setGraphic(new AppointmentHBox(getIndex() + 1, appointment).getRoot());","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"                setStyle(TRANSPARENT_BACKGROUND);","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"    private void addTagLabels(Person person) {","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"rgonslayer"},"content":"        person.getSpecialTags().stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"                .forEach(tag -\u003e specialTags.getChildren().add(new SpecialTagLabel(tag.tagName)));","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"rgonslayer"},"content":"        income.setText(person.getIncome().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"rgonslayer"},"content":"        monthly.setText(person.getMonthly().value);","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jialatteo":23,"MuhdMusab":9,"rgonslayer":9,"-":78}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        private PersonListViewCell() {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"            personListView.getSelectionModel().selectFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"                setStyle(\"-fx-focus-color: transparent; \");","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"                setStyle(\"-fx-focus-color: transparent; \");","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jialatteo":2,"MuhdMusab":4,"-":49}},{"path":"src/main/java/seedu/address/ui/PreviousButton.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.CalendarLogic;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":" * A button that displays the previous month\u0027s CalendarEvents","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":" * when interacted with.","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"public class PreviousButton extends CalendarButton {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private static final String FXML \u003d \"PreviousButton.fxml\";","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    private CalendarLogic calendarLogic;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    private Button previousButton;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a {@code PreviousButton} with the given {@code String} and {@code CalendarLogic}.","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    public PreviousButton(String content, CalendarLogic calendarLogic) {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        super(FXML);","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"        this.calendarLogic \u003d calendarLogic;","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"        previousButton.setText(content);","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        previousButton.focusedProperty().addListener(this::handleFocusedEvent);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    private void handleOnKeyPressed(KeyEvent event) {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"wongyewjon"},"content":"        if (event.getCode().equals(KeyCode.B)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"            calendarLogic.previous();","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"            previousButton.requestFocus();","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        } else if (event.getCode().equals(KeyCode.N)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"            calendarLogic.next();","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"            previousButton.requestFocus();","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        } else if (event.getCode().equals(KeyCode.R)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"            calendarLogic.refresh();","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"            previousButton.requestFocus();","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"    protected void handleFocusedEvent(Observable observable) {","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        if (previousButton.isFocused()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"            previousButton.setStyle(CALENDAR_BUTTON_STYLE + ORANGE_BORDER);","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"            previousButton.setStyle(CALENDAR_BUTTON_STYLE + GREY_BORDER);","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"    protected void handleOnAction(ActionEvent event) {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"        calendarLogic.previous();","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":58,"wongyewjon":1}},{"path":"src/main/java/seedu/address/ui/SpecialTagLabel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":" * The UI component that is responsible for the styling of the SpecialTag labels.","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"public class SpecialTagLabel extends Label {","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"    public static final String LOW_KEYWORD \u003d \"LOW\";","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    public static final String MEDIUM_KEYWORD \u003d \"MEDIUM\";","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    public static final String HIGH_KEYWORD \u003d \"HIGH\";","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"    public static final String POTENTIAL_KEYWORD \u003d \"POTENTIAL\";","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"    public static final String CURRENT_KEYWORD \u003d \"CURRENT\";","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private static final String LOW_COLOR \u003d \"green\";","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    private static final String MEDIUM_COLOR \u003d \"orange\";","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    private static final String HIGH_COLOR \u003d \"red\";","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"    private static final String POTENTIAL_COLOR \u003d \"blue\";","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"    private static final String CURRENT_COLOR \u003d \"grey\";","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"    private static final String DEFAULT_COLOR \u003d \"#d91175\";","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    private static final String TEXT_FILL_COLOR \u003d \"-fx-text-fill: white;\";","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    private static final String BACKGROUND_COLOR \u003d \"-fx-background-color: \";","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"    private static final String PADDING \u003d \"-fx-padding: 4 3 4 3;\";","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    private static final String BORDER_RADIUS \u003d \"-fx-border-radius: 2;\";","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"    private static final String BACKGROUND_RADIUS \u003d \"-fx-background-radius: 8;\";","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    private static final String FONT_SIZE \u003d \"-fx-font-size: 11;\";","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a {@code Label} with the given {@code content} to","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"     * be displayed.","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    public SpecialTagLabel(String content) {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        super(content);","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(content);","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        switch (content) {","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        case HIGH_KEYWORD:","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"            setLabelStyle(HIGH_COLOR);","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"            break;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        case MEDIUM_KEYWORD:","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"            setLabelStyle(MEDIUM_COLOR);","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"            break;","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        case LOW_KEYWORD:","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"            setLabelStyle(LOW_COLOR);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"            break;","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"rgonslayer"},"content":"        case POTENTIAL_KEYWORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"            setLabelStyle(POTENTIAL_COLOR);","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"            break;","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"rgonslayer"},"content":"        case CURRENT_KEYWORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"rgonslayer"},"content":"            setLabelStyle(CURRENT_COLOR);","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"rgonslayer"},"content":"            break;","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"        default:","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"            setLabelStyle(DEFAULT_COLOR);","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"    private void setLabelStyle(String color) {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        this.setStyle(TEXT_FILL_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"                + BACKGROUND_COLOR + color.toLowerCase() + \";\" + PADDING + BORDER_RADIUS","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"                + BACKGROUND_RADIUS + FONT_SIZE);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"MuhdMusab":50,"rgonslayer":10,"senwei01":3}},{"path":"src/main/java/seedu/address/ui/TextValidation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyewjon"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"wongyewjon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"wongyewjon"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":" * A Label that handles the errors from the jump feature","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":" * when interacted with.","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"public class TextValidation extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"wongyewjon"},"content":"    private static final String FXML \u003d \"TextValidation.fxml\";","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":"    private static final String SUCCESS_MESSAGE \u003d \"Here are the appointments for the new month\";","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"wongyewjon"},"content":"    private static final String ERROR_MESSAGE \u003d \"Date should be in the format [dd-MMM-yyyy]\";","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"wongyewjon"},"content":"    private static final String ERROR_STYLE \u003d \"-fx-border-color: RED; -fx-border-width: 2;\"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"wongyewjon"},"content":"            + \" -fx-border-radius: 5; -fx-text-fill: RED; -fx-font-size: 13;\";","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"wongyewjon"},"content":"    private static final String SUCCESS_STYLE \u003d \"-fx-border-color: GREEN; -fx-border-width: 2;\"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"wongyewjon"},"content":"            + \" -fx-border-radius: 5; -fx-text-fill: GREEN; -fx-font-size: 13;\";","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"wongyewjon"},"content":"    private static final String EMPTY_STYLE \u003d \"-fx-border-color: TRANSPARENT; -fx-border-width: 2;\"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"wongyewjon"},"content":"            + \" -fx-border-radius: 5; -fx-text-fill: TRANSPARENT\";","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"wongyewjon"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"wongyewjon"},"content":"    private Label textValidation;","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"wongyewjon"},"content":"     * Creates a {@code TextValidation}.","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"wongyewjon"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"wongyewjon"},"content":"    public TextValidation() {","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"wongyewjon"},"content":"        super(FXML);","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"wongyewjon"},"content":"    public void setTextValidation(String validation) {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"wongyewjon"},"content":"        if (validation.equals(\"success\")) {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"wongyewjon"},"content":"            textValidation.setText(SUCCESS_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"wongyewjon"},"content":"            textValidation.setStyle(SUCCESS_STYLE);","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"wongyewjon"},"content":"        } else if (validation.equals(\"failure\")) {","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"wongyewjon"},"content":"            textValidation.setText(ERROR_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"wongyewjon"},"content":"            textValidation.setStyle(ERROR_STYLE);","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"wongyewjon"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"wongyewjon"},"content":"            textValidation.setText(\"\");","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"wongyewjon"},"content":"            textValidation.setStyle(EMPTY_STYLE);","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"wongyewjon"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"wongyewjon"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"wongyewjon":47}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"wongyewjon"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/contact_book_32.png\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wongyewjon":1,"-":87}},{"path":"src/main/resources/view/AppointmentHBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"\u003cHBox fx:id\u003d\"appointmentHBox\" alignment\u003d\"CENTER_LEFT\" style\u003d\"-fx-padding: 0 0 5 0;\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"      \u003cLabel fx:id\u003d\"indexLabel\" minWidth\u003d\"26.0\" style\u003d\"-fx-padding: 0 10 0 0; -fx-font-size: 20px; -fx-font-weight: bold; -fx-text-fill: #FFC600;\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"      \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"         \u003cimage\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"            \u003cImage url\u003d\"@../images/calendar.png\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"         \u003c/image\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"      \u003cLabel fx:id\u003d\"dateLabel\" minWidth\u003d\"110.0\" style\u003d\"-fx-padding: 0 10 0 10\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"      \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"         \u003cimage\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"            \u003cImage url\u003d\"@../images/clock.png\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"         \u003c/image\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"      \u003cLabel fx:id\u003d\"timeLabel\" minWidth\u003d\"82.0\" style\u003d\"-fx-padding: 0 10 0 10\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"      \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"         \u003cimage\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"            \u003cImage url\u003d\"@../images/location.png\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"         \u003c/image\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"      \u003cLabel fx:id\u003d\"locationLabel\" style\u003d\"-fx-padding: 0 10 0 10\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":30}},{"path":"src/main/resources/view/CalendarDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyewjon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"wongyewjon"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"      \u003cHBox fx:id\u003d\"topCalendar\"\u003e\u003c/HBox\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"wongyewjon"},"content":"      \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"wongyewjon"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"wongyewjon"},"content":"            \u003cAnchorPane\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"wongyewjon"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"                  \u003cGridPane fx:id\u003d\"calendarDisplay\" alignment\u003d\"TOP_CENTER\" gridLinesVisible\u003d\"true\" onKeyPressed\u003d\"#handleKeyPressed\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"wongyewjon"},"content":"                      \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"wongyewjon"},"content":"                          \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"wongyewjon"},"content":"                          \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"wongyewjon"},"content":"                          \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"wongyewjon"},"content":"                          \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"                          \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"wongyewjon"},"content":"                          \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"wongyewjon"},"content":"                          \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"wongyewjon"},"content":"                      \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"wongyewjon"},"content":"                      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"wongyewjon"},"content":"                          \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"wongyewjon"},"content":"                          \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"wongyewjon"},"content":"                          \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"wongyewjon"},"content":"                          \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"wongyewjon"},"content":"                          \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"wongyewjon"},"content":"                          \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"wongyewjon"},"content":"                      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"wongyewjon"},"content":"                      \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"wongyewjon"},"content":"                          \u003cInsets /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"wongyewjon"},"content":"                      \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"wongyewjon"},"content":"                     \u003cstyleClass\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"wongyewjon"},"content":"                        \u003cString fx:value\u003d\"gridStyle\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"wongyewjon"},"content":"                        \u003cString fx:value\u003d\"pane-with-border\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"wongyewjon"},"content":"                     \u003c/styleClass\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"wongyewjon"},"content":"                  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"wongyewjon"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"wongyewjon"},"content":"            \u003c/AnchorPane\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"wongyewjon"},"content":"         \u003c/content\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"wongyewjon"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"wongyewjon"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"wongyewjon"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"MuhdMusab":2,"wongyewjon":49}},{"path":"src/main/resources/view/CalendarEventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"\u003cVBox fx:id\u003d\"calendarEventList\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":6}},{"path":"src/main/resources/view/CalendarPopup.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.control.Tooltip?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"\u003cTooltip fx:id\u003d\"popup\" anchorLocation\u003d\"WINDOW_BOTTOM_LEFT\" autoFix\u003d\"false\" contentDisplay\u003d\"BOTTOM\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":6}},{"path":"src/main/resources/view/CalendarPopupContent.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"\u003cVBox fx:id\u003d\"popupContent\" alignment\u003d\"TOP_CENTER\" fillWidth\u003d\"false\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"      \u003cLabel fx:id\u003d\"clientLabel\" alignment\u003d\"CENTER\" prefWidth\u003d\"200.0\" style\u003d\"-fx-text-fill: black;\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"      \u003cFlowPane fx:id\u003d\"datePane\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"            \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"               \u003cimage\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"                  \u003cImage url\u003d\"@../images/calendar.png\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"               \u003c/image\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"            \u003cLabel fx:id\u003d\"dateLabel\" alignment\u003d\"CENTER\" prefWidth\u003d\"200.0\" style\u003d\"-fx-text-fill: black;\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"      \u003cFlowPane fx:id\u003d\"timePane\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"            \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"               \u003cimage\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"                  \u003cImage url\u003d\"@../images/clock.png\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"               \u003c/image\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"            \u003cLabel fx:id\u003d\"timeLabel\" alignment\u003d\"CENTER\" prefWidth\u003d\"200.0\" style\u003d\"-fx-text-fill: black;\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"      \u003cFlowPane fx:id\u003d\"locationPane\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"            \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"               \u003cimage\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"                  \u003cImage url\u003d\"@../images/location.png\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"               \u003c/image\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"            \u003cLabel fx:id\u003d\"locationLabel\" alignment\u003d\"CENTER\" prefWidth\u003d\"200.0\" style\u003d\"-fx-text-fill: black;\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":43}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"   \u003cHBox\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"         \u003cLabel contentDisplay\u003d\"CENTER\" styleClass\u003d\"label-header\" text\u003d\"Financial Advisor Planner\" textFill\u003d\"WHITE\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"               \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"               \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"         \u003c/Label\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"        \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"      \u003c/children\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"   \u003c/HBox\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"jialatteo":18,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"    background-color: transparent; /* Used in the default.html file */","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"    -fx-background-color: #191b1d;","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"wongyewjon"},"content":"    -fx-background-color: #191b1d;","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"wongyewjon"},"content":"    -fx-background-color: #3d4247;","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"wongyewjon"},"content":"    -fx-background-color: #24b3a8;","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"jialatteo"},"content":"     -fx-background-color: #0e1011;","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"jialatteo"},"content":"     -fx-background-color: #0e1011;","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"jialatteo"},"content":".gridStyle Line {","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"jialatteo"},"content":"  -fx-stroke: red;","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"wongyewjon"},"content":"    -fx-background-color: derive(#0e1011, 10%);","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"jialatteo"},"content":"    -fx-background-color: #0e1011;","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"wongyewjon"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"jialatteo"},"content":"   -fx-background-color: #0e1011;","lastModifiedDate":"2022-10-20"},{"lineNumber":217,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":218,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":219,"author":{"gitId":"jialatteo"},"content":".tab-pane:focused\u003e.tab-header-area\u003e.headers-region\u003e.tab:selected .focus-indicator {","lastModifiedDate":"2022-10-20"},{"lineNumber":220,"author":{"gitId":"jialatteo"},"content":"   -fx-border-color: orange;","lastModifiedDate":"2022-10-20"},{"lineNumber":221,"author":{"gitId":"wongyewjon"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":222,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":223,"author":{"gitId":"wongyewjon"},"content":".tab-label {","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"wongyewjon"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-11"},{"lineNumber":225,"author":{"gitId":"wongyewjon"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-11"},{"lineNumber":226,"author":{"gitId":"wongyewjon"},"content":"}","lastModifiedDate":"2022-10-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"jialatteo"},"content":"    -fx-background-color: #0e1011;","lastModifiedDate":"2022-10-20"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"senwei01"},"content":"#specialTags {","lastModifiedDate":"2022-10-26"},{"lineNumber":358,"author":{"gitId":"senwei01"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-26"},{"lineNumber":359,"author":{"gitId":"senwei01"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-26"},{"lineNumber":360,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":361,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":362,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"senwei01"},"content":"    -fx-padding: 4 3 4 3;","lastModifiedDate":"2022-10-26"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"senwei01"},"content":"    -fx-background-radius: 8;","lastModifiedDate":"2022-10-26"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"jialatteo":20,"wongyewjon":11,"-":336,"senwei01":7}},{"path":"src/main/resources/view/EventButton.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"\u003cButton id\u003d\"eventButton\" fx:id\u003d\"eventButton\" maxWidth\u003d\"200.0\" onAction\u003d\"#handleOnAction\" style\u003d\"-fx-font-size: 8pt; -fx-border-color: grey; -fx-border-radius: 5; -fx-min-width: 100;\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"\u003c/Button\u003e","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":7}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"    -fx-font-weight: 300;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":"    -fx-background-color: #e28743;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"    -fx-background-radius: 12;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"    -fx-border-radius: 12;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"-":18,"senwei01":6}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"              \u003cInsets top \u003d \"365.0\" left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"wongyewjon":1,"-":42,"senwei01":1}},{"path":"src/main/resources/view/JumpText.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyewjon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"\u003cTextField fx:id\u003d\"jumpText\" onAction\u003d\"#handleOnAction\" promptText\u003d\"Enter... (e.g. 22-Oct-2022)\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"wongyewjon":6}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"wongyewjon"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Financial Advisor Planner\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"wongyewjon"},"content":"    \u003cImage url\u003d\"@/images/contact_book_32.png\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" focusTraversable\u003d\"false\" style\u003d\"-fx-background-color: #0e1011;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"wongyewjon"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"wongyewjon"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"wongyewjon"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"wongyewjon"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"            \u003cTabPane fx:id\u003d\"tabPane\" focusTraversable\u003d\"false\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"wongyewjon"},"content":"              \u003ctabs\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"                \u003cTab fx:id\u003d\"contactsTab\" style\u003d\"-fx-background-color: #2200f9;\" text\u003d\"contacts\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"wongyewjon"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"wongyewjon"},"content":"                    \u003cAnchorPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"wongyewjon"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"wongyewjon"},"content":"                             \u003cVBox fx:id\u003d\"personList\" layoutX\u003d\"-208.0\" layoutY\u003d\"-79.0\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"wongyewjon"},"content":"                              \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"wongyewjon"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"wongyewjon"},"content":"                        \u003c/AnchorPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"wongyewjon"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"wongyewjon"},"content":"                \u003c/Tab\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"                \u003cTab fx:id\u003d\"calendarTab\" style\u003d\"-fx-background-color: #a020f0;\" text\u003d\"calendar\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"wongyewjon"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"                    \u003cAnchorPane\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"                              \u003cVBox styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"                                 \u003cpadding\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"                                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"                                 \u003c/padding\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"                                 \u003cchildren\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"                                    \u003cStackPane fx:id\u003d\"calendarDisplayPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"                                 \u003c/children\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"                           \u003c/children\u003e\u003c/AnchorPane\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"wongyewjon"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"wongyewjon"},"content":"                \u003c/Tab\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"wongyewjon"},"content":"              \u003c/tabs\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"wongyewjon"},"content":"            \u003c/TabPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jialatteo":15,"wongyewjon":25,"-":47}},{"path":"src/main/resources/view/NextButton.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"\u003cButton fx:id\u003d\"nextButton\" onAction\u003d\"#handleOnAction\" onKeyPressed\u003d\"#handleOnKeyPressed\" style\u003d\"-fx-border-color: grey; -fx-border-radius: 5;\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":6}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefHeight\u003d\"172.0\" prefWidth\u003d\"300.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"wongyewjon"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"        \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" focusTraversable\u003d\"false\" style\u003d\"-fx-background: transparent; -fx-background-color: transparent;\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"                \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"wongyewjon"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"                    \u003cHBox alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"Infinity\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"wongyewjon"},"content":"                        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                            \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                                \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                            \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"                        \u003cFlowPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"wongyewjon"},"content":"                                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"                        \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"                    \u003cFlowPane fx:id\u003d\"specialTags\" maxWidth\u003d\"Infinity\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"                    \u003cFlowPane fx:id\u003d\"tags\" maxWidth\u003d\"Infinity\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"                    \u003cFlowPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"wongyewjon"},"content":"                            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"wongyewjon"},"content":"                                \u003cgraphic\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"wongyewjon"},"content":"                                    \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"51.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"wongyewjon"},"content":"                                        \u003cimage\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"wongyewjon"},"content":"                                            \u003cImage url\u003d\"@../images/phone.png\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"wongyewjon"},"content":"                                        \u003c/image\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"wongyewjon"},"content":"                                    \u003c/ImageView\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"                                \u003c/graphic\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"                            \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"                    \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"                    \u003cFlowPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"wongyewjon"},"content":"                            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"wongyewjon"},"content":"                                \u003cgraphic\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"wongyewjon"},"content":"                                    \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"51.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"wongyewjon"},"content":"                                        \u003cimage\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"wongyewjon"},"content":"                                            \u003cImage url\u003d\"@../images/home.png\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"wongyewjon"},"content":"                                        \u003c/image\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"wongyewjon"},"content":"                                    \u003c/ImageView\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"                                \u003c/graphic\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"                            \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"                    \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"                    \u003cFlowPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"wongyewjon"},"content":"                            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"wongyewjon"},"content":"                                \u003cgraphic\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"wongyewjon"},"content":"                                    \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"51.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"wongyewjon"},"content":"                                        \u003cimage\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"wongyewjon"},"content":"                                            \u003cImage url\u003d\"@../images/email.png\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"wongyewjon"},"content":"                                        \u003c/image\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"wongyewjon"},"content":"                                    \u003c/ImageView\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"                                \u003c/graphic\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"                            \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"                    \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"                    \u003cFlowPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"                            \u003cLabel fx:id\u003d\"income\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"rgonslayer"},"content":"                                \u003cgraphic\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"rgonslayer"},"content":"                                    \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"51.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"rgonslayer"},"content":"                                        \u003cimage\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"rgonslayer"},"content":"                                            \u003cImage url\u003d\"@../images/dollar.png\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"rgonslayer"},"content":"                                        \u003c/image\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"rgonslayer"},"content":"                                    \u003c/ImageView\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"                                \u003c/graphic\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"                            \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"                    \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"                    \u003cFlowPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"rgonslayer"},"content":"                            \u003cLabel fx:id\u003d\"monthly\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$monthly\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"rgonslayer"},"content":"                                \u003cgraphic\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"rgonslayer"},"content":"                                    \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"51.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"rgonslayer"},"content":"                                        \u003cimage\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"rgonslayer"},"content":"                                            \u003cImage url\u003d\"@../images/monthly.png\" /\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"rgonslayer"},"content":"                                        \u003c/image\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"rgonslayer"},"content":"                                    \u003c/ImageView\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"                                \u003c/graphic\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"                            \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"                    \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"wongyewjon"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"wongyewjon"},"content":"        \u003cVBox minHeight\u003d\"105.0\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"wongyewjon"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"                \u003cHBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"19.0\" prefWidth\u003d\"129.0\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"wongyewjon"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"                        \u003cLabel fx:id\u003d\"id1\" alignment\u003d\"BOTTOM_LEFT\" prefHeight\u003d\"32.0\" prefWidth\u003d\"127.0\" styleClass\u003d\"cell_big_label\" text\u003d\"Appointments\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"wongyewjon"},"content":"                            \u003cminWidth\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"wongyewjon"},"content":"                                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"wongyewjon"},"content":"                            \u003c/minWidth\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"wongyewjon"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"wongyewjon"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"wongyewjon"},"content":"                    \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"wongyewjon"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"wongyewjon"},"content":"                    \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"wongyewjon"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"wongyewjon"},"content":"                        \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"wongyewjon"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"wongyewjon"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"jialatteo"},"content":"                \u003cListView fx:id\u003d\"appointments\" focusTraversable\u003d\"false\" prefHeight\u003d\"332.0\" prefWidth\u003d\"129.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"wongyewjon"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"wongyewjon"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"jialatteo"},"content":"                \u003cInsets bottom\u003d\"2.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"wongyewjon"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"wongyewjon"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"wongyewjon"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"wongyewjon"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jialatteo":51,"rgonslayer":13,"wongyewjon":50,"-":25}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jialatteo":1,"-":7}},{"path":"src/main/resources/view/PreviousButton.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"\u003cButton fx:id\u003d\"previousButton\" onAction\u003d\"#handleOnAction\" onKeyPressed\u003d\"#handleOnKeyPressed\" style\u003d\"-fx-border-color: grey; -fx-border-radius: 5;\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"MuhdMusab":6}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" focusTraversable\u003d\"false\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"jialatteo":2,"-":6}},{"path":"src/main/resources/view/TextValidation.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyewjon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"wongyewjon"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"\u003cLabel fx:id\u003d\"textValidation\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"\u003c/Label\u003e","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"wongyewjon":11}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"        assertNotNull(AppUtil.getImage(\"/images/contact_book_32.png\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"wongyewjon":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLIENTTAG_DESC_CURRENT;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INCOME_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MONTHLY_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PLANTAG_DESC_SAVINGS;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RISKTAG_DESC_LOW;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"import seedu.address.storage.TextCommandHistoryStorage;","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"senwei01"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"FAP.json\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"        TextCommandHistoryStorage commandHistoryStorage \u003d","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"                new TextCommandHistoryStorage(temporaryFolder.resolve(\"commandhistory.txt\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, commandHistoryStorage);","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"        TextCommandHistoryStorage commandHistoryStorage \u003d","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"                new TextCommandHistoryStorage(temporaryFolder.resolve(\"ioExceptioncommandHistory.txt\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, commandHistoryStorage);","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"rgonslayer"},"content":"                + ADDRESS_DESC_AMY + INCOME_DESC_AMY + MONTHLY_DESC_AMY + RISKTAG_DESC_LOW + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_CURRENT;","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jialatteo":11,"rgonslayer":7,"-":157,"senwei01":1}},{"path":"src/test/java/seedu/address/logic/commands/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.AddAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT_DATE_TIME;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_21_JAN_2023;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_22_JAN_2023;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_WESTMALL;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalPersons.MUSAB_WITH_NO_APPT;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"public class AddAppointmentCommandTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(null, null));","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"    public void execute_validAppointmentUnfilteredList_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        // Create actualModel","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"        Model actualModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        actualModel.addPerson(new PersonBuilder().build());","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"        // Create expectedModel","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        expectedModel.addPerson(new PersonBuilder().build());","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        Person expectedPerson \u003d expectedModel.getFilteredPersonList().get(0);","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        expectedPerson.getAppointments().add(new AppointmentBuilder()","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build());","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"        // Create addAppointmentCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentToAdd \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(INDEX_FIRST_PERSON, appointmentToAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d String.format(AddAppointmentCommand.MESSAGE_SUCCESS, appointmentToAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"        assertCommandSuccess(addAppointmentCommand, actualModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"    public void execute_validAppointmentFilteredList_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"        // Create actualModel","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"        Model actualModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"        actualModel.addPerson(new PersonBuilder().build());","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"        actualModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT).build());","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        showPersonAtIndex(actualModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"        // Create expectedModel","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        expectedModel.addPerson(new PersonBuilder().build());","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"        expectedModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT).build());","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"        Person expectedPerson \u003d expectedModel.getFilteredPersonList().get(0);","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"        expectedPerson.getAppointments().add(new AppointmentBuilder()","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build());","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"        // Create addAppointmentCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentToAdd \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(INDEX_FIRST_PERSON, appointmentToAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d String.format(AddAppointmentCommand.MESSAGE_SUCCESS, appointmentToAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"        assertCommandSuccess(addAppointmentCommand, actualModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"    public void execute_addDuplicateAppointmentWithSameDateTimeUnfilteredList_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"        // Create testModel","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(new PersonBuilder().build());","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"        Person testPerson \u003d testModel.getFilteredPersonList().get(0);","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"        testPerson.getAppointments().add(new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_NUS).build());","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"        // Create addAppointmentCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"        Appointment duplicateAppointmentToAdd \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"                new AddAppointmentCommand(INDEX_FIRST_PERSON, duplicateAppointmentToAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(addAppointmentCommand, testModel, MESSAGE_DUPLICATE_APPOINTMENT_DATE_TIME);","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"    public void execute_addDuplicateAppointmentWithSameDateTimeFilteredList_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"        // Create testModel","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(new PersonBuilder().build());","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT).build());","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"jialatteo"},"content":"        showPersonAtIndex(testModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"jialatteo"},"content":"        Person testPerson \u003d testModel.getFilteredPersonList().get(0);","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"jialatteo"},"content":"        testPerson.getAppointments().add(new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build());","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"jialatteo"},"content":"        // Create addAppointmentCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"jialatteo"},"content":"        Appointment duplicateAppointmentToAdd \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"jialatteo"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"jialatteo"},"content":"                new AddAppointmentCommand(INDEX_FIRST_PERSON, duplicateAppointmentToAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(addAppointmentCommand, testModel, MESSAGE_DUPLICATE_APPOINTMENT_DATE_TIME);","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"jialatteo"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentToAdd \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"jialatteo"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"jialatteo"},"content":"                new AddAppointmentCommand(outOfBoundIndex, appointmentToAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(addAppointmentCommand, testModel, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"jialatteo"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"jialatteo"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"jialatteo"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(new PersonBuilder(ALICE).build());","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(new PersonBuilder(BOB).build());","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"jialatteo"},"content":"        showPersonAtIndex(testModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"jialatteo"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"jialatteo"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"jialatteo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c testModel.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentToAdd \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":167,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":169,"author":{"gitId":"jialatteo"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":170,"author":{"gitId":"jialatteo"},"content":"                new AddAppointmentCommand(outOfBoundIndex, appointmentToAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(addAppointmentCommand, testModel, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"    public void equals() {","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentToAdd \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"jialatteo"},"content":"        final AddAppointmentCommand standardCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"jialatteo"},"content":"                new AddAppointmentCommand(INDEX_FIRST_PERSON, appointmentToAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":184,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentToAddCopy \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":185,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":186,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":187,"author":{"gitId":"jialatteo"},"content":"        AddAppointmentCommand commandWithSameValues \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":188,"author":{"gitId":"jialatteo"},"content":"                new AddAppointmentCommand(INDEX_FIRST_PERSON, appointmentToAddCopy);","lastModifiedDate":"2022-10-17"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-04"},{"lineNumber":191,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":192,"author":{"gitId":"MuhdMusab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":193,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-04"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":195,"author":{"gitId":"MuhdMusab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":196,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":197,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":198,"author":{"gitId":"MuhdMusab"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":199,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-04"},{"lineNumber":200,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":201,"author":{"gitId":"MuhdMusab"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":202,"author":{"gitId":"jialatteo"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-10-17"},{"lineNumber":203,"author":{"gitId":"jialatteo"},"content":"                new AddAppointmentCommand(INDEX_SECOND_PERSON, appointmentToAdd)));","lastModifiedDate":"2022-10-17"},{"lineNumber":204,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":205,"author":{"gitId":"jialatteo"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":206,"author":{"gitId":"jialatteo"},"content":"        Appointment differentAppointmentToAdd \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":207,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_22_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":208,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_WESTMALL).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":209,"author":{"gitId":"jialatteo"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-10-17"},{"lineNumber":210,"author":{"gitId":"jialatteo"},"content":"                new AddAppointmentCommand(INDEX_FIRST_PERSON, differentAppointmentToAdd)));","lastModifiedDate":"2022-10-17"},{"lineNumber":211,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":212,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jialatteo":148,"MuhdMusab":64}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jialatteo":3,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"wongyewjon"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.ReadOnlyCommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"jialatteo"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"jialatteo"},"content":"        public boolean hasPersonWithSameAppointmentDateTime(Appointment appointment) {","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"jialatteo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"        public void updateFilteredPersonList(List\u003c? extends Predicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"senwei01"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"senwei01"},"content":"        public void sortPerson(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"senwei01"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"wongyewjon"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"wongyewjon"},"content":"        public ObservableList\u003cCalendarEvent\u003e getFilteredCalendarEventList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"wongyewjon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"wongyewjon"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"jialatteo"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":177,"author":{"gitId":"jialatteo"},"content":"        public ReadOnlyCommandHistory getCommandHistory() {","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"jialatteo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"jialatteo"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"jialatteo"},"content":"        public void addToCommandHistory(String commandInput) {","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"jialatteo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":184,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"MuhdMusab"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":187,"author":{"gitId":"MuhdMusab"},"content":"        public void updateCalendarEventList() {","lastModifiedDate":"2022-10-25"},{"lineNumber":188,"author":{"gitId":"MuhdMusab"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":191,"author":{"gitId":"jialatteo"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":192,"author":{"gitId":"jialatteo"},"content":"        public String nextCommand() {","lastModifiedDate":"2022-10-23"},{"lineNumber":193,"author":{"gitId":"jialatteo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":194,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":195,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":196,"author":{"gitId":"jialatteo"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":197,"author":{"gitId":"jialatteo"},"content":"        public String prevCommand() {","lastModifiedDate":"2022-10-23"},{"lineNumber":198,"author":{"gitId":"jialatteo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":199,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":200,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":201,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":202,"author":{"gitId":"wongyewjon"},"content":"        public List\u003cCalendarEvent\u003e getCalendarEventList(List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2022-10-17"},{"lineNumber":203,"author":{"gitId":"wongyewjon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":204,"author":{"gitId":"wongyewjon"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jialatteo":27,"MuhdMusab":10,"wongyewjon":12,"-":194,"senwei01":6}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jialatteo":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_LOCATION;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENTTAG;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MONTHLY;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANTAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKTAG;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.EditAppointmentDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALID_PLANTAG_SAVINGS \u003d \"Savings Plan\";","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALID_CLIENTTAG_CURRENT \u003d \"CURRENT\";","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALID_CLIENTTAG_POTENTIAL \u003d \"POTENTIAL\";","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALID_RISKTAG_HIGH \u003d \"HIGH\";","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALID_RISKTAG_LOW \u003d \"LOW\";","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALID_INCOME_AMY \u003d \"$1000\";","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALID_INCOME_BOB \u003d \"$10000\";","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALID_MONTHLY_AMY \u003d \"$200\";","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"rgonslayer"},"content":"    public static final String VALID_MONTHLY_BOB \u003d \"$1000\";","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"    public static final String VALID_DATETIME_21_JAN_2023 \u003d \"21-Jan-2023 01:00 AM\";","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"    public static final String VALID_DATETIME_22_JAN_2023 \u003d \"22-Jan-2023 01:00 AM\";","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"    public static final String VALID_DATETIME_23_JAN_2023 \u003d \"23-Jan-2023 01:00 AM\";","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"senwei01"},"content":"    public static final String VALID_DATETIME_23_MAR_2024 \u003d \"23-Mar-2024 01:00 AM\";","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"    public static final String INVALID_DATETIME_210_JAN_2023 \u003d \"210-Jan-2023 01:00 AM\";","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"    public static final String VALID_LOCATION_NUS \u003d \"NUS\";","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"    public static final String VALID_LOCATION_JURONGPOINT \u003d \"Jurong Point\";","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"    public static final String VALID_LOCATION_WESTMALL \u003d \"West Mall\";","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"    public static final String INVALID_LOCATION \u003d \"\";","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"rgonslayer"},"content":"    public static final String INCOME_DESC_AMY \u003d \" \" + PREFIX_INCOME + VALID_INCOME_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"rgonslayer"},"content":"    public static final String INCOME_DESC_BOB \u003d \" \" + PREFIX_INCOME + VALID_INCOME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"    public static final String FIRST_APPOINTMENT_DESC \u003d \" \" + PREFIX_APPOINTMENT_DATE","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"            + VALID_DATETIME_21_JAN_2023 + \" \" + PREFIX_APPOINTMENT_LOCATION + VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"    public static final String SECOND_APPOINTMENT_DESC \u003d \" \" + PREFIX_APPOINTMENT_DATE","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"            + VALID_DATETIME_22_JAN_2023 + \" \" + PREFIX_APPOINTMENT_LOCATION + VALID_LOCATION_JURONGPOINT;","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"rgonslayer"},"content":"    public static final String MONTHLY_DESC_AMY \u003d \" \" + PREFIX_MONTHLY + VALID_MONTHLY_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"rgonslayer"},"content":"    public static final String MONTHLY_DESC_BOB \u003d \" \" + PREFIX_MONTHLY + VALID_MONTHLY_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"rgonslayer"},"content":"    public static final String PLANTAG_DESC_SAVINGS \u003d \" \" + PREFIX_PLANTAG + VALID_PLANTAG_SAVINGS;","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"rgonslayer"},"content":"    public static final String CLIENTTAG_DESC_CURRENT \u003d \" \" + PREFIX_CLIENTTAG + VALID_CLIENTTAG_CURRENT;","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"rgonslayer"},"content":"    public static final String CLIENTTAG_DESC_POTENTIAL \u003d \" \" + PREFIX_CLIENTTAG + VALID_CLIENTTAG_POTENTIAL;","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"rgonslayer"},"content":"    public static final String RISKTAG_DESC_HIGH \u003d \" \" + PREFIX_RISKTAG + VALID_RISKTAG_HIGH;","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"rgonslayer"},"content":"    public static final String RISKTAG_DESC_LOW \u003d \" \" + PREFIX_RISKTAG + VALID_RISKTAG_LOW;","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"rgonslayer"},"content":"    public static final String INVALID_PLANTAG_DESC \u003d \" \" + PREFIX_PLANTAG + \"none\"; // must end with Plan","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"rgonslayer"},"content":"    public static final String INVALID_CLIENTTAG_DESC \u003d \" \" + PREFIX_CLIENTTAG + \"none\"; // must be POTENTIAL or CURRENT","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"rgonslayer"},"content":"    public static final String INVALID_RISKTAG_DESC \u003d \" \" + PREFIX_RISKTAG + \"none\"; // must be HIGH LOW or MEDIUM","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"rgonslayer"},"content":"    public static final String INVALID_INCOME_DESC \u003d \" \" + PREFIX_INCOME + \"000\"; // income should include \"$\" sign","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"rgonslayer"},"content":"    public static final String INVALID_MONTHLY_DESC \u003d \" \" + PREFIX_MONTHLY + \"000\"; // monthly should include \"$\"","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"    public static final String INVALID_BOTH_FIELD_APPOINTMENT_DESC \u003d \" \" + PREFIX_APPOINTMENT_DATE","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"            + INVALID_DATETIME_210_JAN_2023 + \" \" + PREFIX_APPOINTMENT_LOCATION + INVALID_LOCATION;","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"    public static final String INVALID_DATE_FIELD_APPOINTMENT_DESC \u003d \" \" + PREFIX_APPOINTMENT_DATE","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"            + INVALID_DATETIME_210_JAN_2023 + \" \" + PREFIX_APPOINTMENT_LOCATION + VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"    public static final String INVALID_LOCATION_FIELD_APPOINTMENT_DESC \u003d \" \" + PREFIX_APPOINTMENT_DATE","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"            + VALID_DATETIME_21_JAN_2023 + \" \" + PREFIX_APPOINTMENT_LOCATION + INVALID_LOCATION;","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"    public static final String VALID_LOCATION_FIELD_APPOINTMENT_DESC \u003d \" \"","lastModifiedDate":"2022-10-31"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"            + PREFIX_APPOINTMENT_LOCATION + VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"    public static final EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"    public static final EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"    public static final EditAppointmentDescriptor DESC_APPT_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"    public static final EditAppointmentDescriptor DESC_APPT_2;","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":124,"author":{"gitId":"rgonslayer"},"content":"                .withIncome(VALID_INCOME_AMY).withMonthly(VALID_MONTHLY_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"rgonslayer"},"content":"                .withRiskTag(VALID_RISKTAG_LOW).withPlanTag(VALID_PLANTAG_SAVINGS)","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"rgonslayer"},"content":"                .withClientTag(VALID_CLIENTTAG_CURRENT).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":129,"author":{"gitId":"rgonslayer"},"content":"                .withIncome(VALID_INCOME_BOB).withMonthly(VALID_MONTHLY_AMY)","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"rgonslayer"},"content":"                .withRiskTag(VALID_RISKTAG_HIGH).withPlanTag(VALID_PLANTAG_SAVINGS)","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"rgonslayer"},"content":"                .withClientTag(VALID_CLIENTTAG_POTENTIAL).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"jialatteo"},"content":"        DESC_APPT_1 \u003d new EditAppointmentDescriptorBuilder().withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"jialatteo"},"content":"                    .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"jialatteo"},"content":"        DESC_APPT_2 \u003d new EditAppointmentDescriptorBuilder().withDateTime(VALID_DATETIME_22_JAN_2023)","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_JURONGPOINT).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jialatteo":29,"rgonslayer":35,"MuhdMusab":5,"-":123,"senwei01":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_21_JAN_2023;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_22_JAN_2023;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_JURONGPOINT;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalPersons.MUSAB_WITH_NO_APPT;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"public class DeleteAppointmentCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"        // Create actualModel","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        Model actualModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        actualModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_22_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_JURONGPOINT).build())","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"                .build());","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        // Create expectedModel","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        expectedModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_22_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_JURONGPOINT).build())","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"                .build());","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        Appointment deletedAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"                new DeleteAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"                String.format(DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS, deletedAppointment);","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"        assertCommandSuccess(deleteAppointmentCommand, actualModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"        // Create actualModel","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"        Model actualModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"        actualModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"                                .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"                                        .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"                                        .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"                                .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"                                        .withDateTime(VALID_DATETIME_22_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"                                        .withLocation(VALID_LOCATION_JURONGPOINT).build())","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"                                .build());","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"        actualModel.addPerson(ALICE);","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        // Filter list","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"        showPersonAtIndex(actualModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"        // Create expectedModel","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"        expectedModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"                                .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"                                        .withDateTime(VALID_DATETIME_22_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"                                        .withLocation(VALID_LOCATION_JURONGPOINT).build())","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"                                .build());","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"        expectedModel.addPerson(ALICE);","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"        Appointment deletedAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"                new DeleteAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"                String.format(DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS, deletedAppointment);","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"        assertCommandSuccess(deleteAppointmentCommand, actualModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"    public void execute_invalidPersonIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_22_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"                .build());","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"        Index outOfBoundPersonIndex \u003d Index.fromOneBased(testModel.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"                new DeleteAppointmentCommand(outOfBoundPersonIndex, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(deleteAppointmentCommand, testModel, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"jialatteo"},"content":"    public void execute_invalidPersonIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"jialatteo"},"content":"                            .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"jialatteo"},"content":"                                    .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"jialatteo"},"content":"                                    .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-17"},{"lineNumber":130,"author":{"gitId":"jialatteo"},"content":"                            .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"jialatteo"},"content":"                                    .withDateTime(VALID_DATETIME_22_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"jialatteo"},"content":"                                    .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"jialatteo"},"content":"                            .build());","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(ALICE);","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"jialatteo"},"content":"        showPersonAtIndex(testModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"jialatteo"},"content":"        Index outOfBoundPersonIndex \u003d Index.fromOneBased(testModel.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"jialatteo"},"content":"                new DeleteAppointmentCommand(outOfBoundPersonIndex, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(deleteAppointmentCommand, testModel, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"jialatteo"},"content":"    public void execute_invalidAppointmentIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"jialatteo"},"content":"                            .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"jialatteo"},"content":"                                    .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"jialatteo"},"content":"                                    .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"jialatteo"},"content":"                            .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"jialatteo"},"content":"                                    .withDateTime(VALID_DATETIME_22_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"jialatteo"},"content":"                                    .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"jialatteo"},"content":"                            .build());","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"jialatteo"},"content":"        Index outOfBoundAppointmentIndex \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":158,"author":{"gitId":"jialatteo"},"content":"                Index.fromOneBased(testModel.getFilteredPersonList().get(0)","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"jialatteo"},"content":"                                                .getAppointments().size() + 1);","lastModifiedDate":"2022-10-17"},{"lineNumber":160,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":162,"author":{"gitId":"jialatteo"},"content":"                new DeleteAppointmentCommand(outOfBoundAppointmentIndex, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(deleteAppointmentCommand, testModel, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":165,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":167,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"jialatteo"},"content":"    public void execute_invalidAppointmentIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":169,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_22_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-15"},{"lineNumber":177,"author":{"gitId":"jialatteo"},"content":"                .build());","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"jialatteo"},"content":"        showPersonAtIndex(testModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":181,"author":{"gitId":"jialatteo"},"content":"        Index outOfBoundAppointmentIndex \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"jialatteo"},"content":"                Index.fromOneBased(testModel.getFilteredPersonList().get(0)","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"jialatteo"},"content":"                                            .getAppointments().size() + 1);","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":186,"author":{"gitId":"jialatteo"},"content":"                new DeleteAppointmentCommand(outOfBoundAppointmentIndex, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":187,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(deleteAppointmentCommand, testModel, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":191,"author":{"gitId":"jialatteo"},"content":"    public void execute_noAppointmentToDeleteUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":192,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":193,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT).build());","lastModifiedDate":"2022-10-17"},{"lineNumber":194,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":195,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":196,"author":{"gitId":"jialatteo"},"content":"                new DeleteAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":197,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":198,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(deleteAppointmentCommand, testModel, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":199,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":200,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":201,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":202,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":203,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":205,"author":{"gitId":"jialatteo"},"content":"    public void execute_noAppointmentToDeleteFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":206,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":207,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT).build());","lastModifiedDate":"2022-10-15"},{"lineNumber":208,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(new PersonBuilder(ALICE).build());","lastModifiedDate":"2022-10-15"},{"lineNumber":209,"author":{"gitId":"jialatteo"},"content":"        showPersonAtIndex(testModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-15"},{"lineNumber":210,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":211,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":212,"author":{"gitId":"jialatteo"},"content":"                new DeleteAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":213,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":214,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(deleteAppointmentCommand, testModel, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":215,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":218,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"jialatteo"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand deleteFirstApptFromFirstCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":221,"author":{"gitId":"jialatteo"},"content":"                new DeleteAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":222,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand deleteSecondApptFromSecondCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":223,"author":{"gitId":"jialatteo"},"content":"                new DeleteAppointmentCommand(INDEX_SECOND_PERSON, INDEX_SECOND_APPOINTMENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":224,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":225,"author":{"gitId":"jialatteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"jialatteo"},"content":"        assertTrue(deleteFirstApptFromFirstCommand.equals(deleteFirstApptFromFirstCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":227,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"jialatteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":229,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand deleteFirstCommandCopy \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":230,"author":{"gitId":"jialatteo"},"content":"                new DeleteAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":231,"author":{"gitId":"jialatteo"},"content":"        assertTrue(deleteFirstApptFromFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-17"},{"lineNumber":232,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"jialatteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"jialatteo"},"content":"        assertFalse(deleteFirstApptFromFirstCommand.equals(1));","lastModifiedDate":"2022-10-17"},{"lineNumber":235,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"jialatteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"jialatteo"},"content":"        assertFalse(deleteFirstApptFromFirstCommand.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":238,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"jialatteo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"jialatteo"},"content":"        assertFalse(deleteFirstApptFromFirstCommand.equals(deleteSecondApptFromSecondCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":241,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":242,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jialatteo":242}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jialatteo":4,"-":106}},{"path":"src/test/java/seedu/address/logic/commands/EditAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_21_JAN_2023;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_22_JAN_2023;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_23_JAN_2023;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_JURONGPOINT;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_WESTMALL;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalPersons.MUSAB_WITH_NO_APPT;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.EditAppointmentDescriptor;","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"public class EditAppointmentCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    public void execute_editAppointmentBothFields_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        // Create actualModel","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"        Model actualModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentToEdit \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"                                            .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"                                            .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"        actualModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"                    .withAppointment(appointmentToEdit)","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"                    .build());","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        // Create expectedModel","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"                                            .withDateTime(VALID_DATETIME_23_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"                                            .withLocation(VALID_LOCATION_WESTMALL).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"        expectedModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(editedAppointment)","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"                .build());","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        // Create editAppointmentCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"        descriptor.setDateTime(ParserUtil.parseDateTime(VALID_DATETIME_23_JAN_2023));","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"        descriptor.setLocation(new Location(VALID_LOCATION_WESTMALL));","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"                new EditAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT, descriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"                appointmentToEdit, editedAppointment);","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"        assertCommandSuccess(editAppointmentCommand, actualModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"    public void execute_editAppointmentLocationFieldOnly_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"        // Create actualModel","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"        Model actualModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentToEdit \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"                                            .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"                                            .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        actualModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(appointmentToEdit)","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"                .build());","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        // Create expectedModel","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_WESTMALL).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"        expectedModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(editedAppointment)","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"                .build());","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"        // Create editAppointmentCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"        descriptor.setLocation(new Location(VALID_LOCATION_WESTMALL));","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"                new EditAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT, descriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"                String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"                        appointmentToEdit, editedAppointment);","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"        assertCommandSuccess(editAppointmentCommand, actualModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"    public void execute_editAppointmentDateFieldOnly_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"        // Create actualModel","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"        Model actualModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentToEdit \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"        actualModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(appointmentToEdit)","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"                .build());","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        // Create expectedModel","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_23_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"        expectedModel.addPerson(new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(editedAppointment)","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"                .build());","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"jialatteo"},"content":"        // Create editAppointmentCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"jialatteo"},"content":"        descriptor.setDateTime(ParserUtil.parseDateTime(VALID_DATETIME_23_JAN_2023));","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"jialatteo"},"content":"                new EditAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT, descriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"jialatteo"},"content":"                appointmentToEdit, editedAppointment);","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"jialatteo"},"content":"        assertCommandSuccess(editAppointmentCommand, actualModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"jialatteo"},"content":"    public void execute_editNonExistingAppointment_failure() {","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"jialatteo"},"content":"        // Create testModel","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"jialatteo"},"content":"        Person testPerson \u003d new PersonBuilder(MUSAB_WITH_NO_APPT).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(testPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"jialatteo"},"content":"        // Create editAppointmentCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"jialatteo"},"content":"        descriptor.setDateTime(ParserUtil.parseDateTime(VALID_DATETIME_23_JAN_2023));","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"jialatteo"},"content":"        descriptor.setLocation(new Location(VALID_LOCATION_WESTMALL));","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"jialatteo"},"content":"                new EditAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT, descriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(editAppointmentCommand, testModel, expectedMessage);","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":153,"author":{"gitId":"jialatteo"},"content":"    public void execute_editAppointmentWithInvalidPersonIndex_failure() {","lastModifiedDate":"2022-10-17"},{"lineNumber":154,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"jialatteo"},"content":"        Index outOfBoundsPersonIndex \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"jialatteo"},"content":"                Index.fromOneBased(testModel.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-17"},{"lineNumber":158,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"jialatteo"},"content":"        // Create editAppointmentCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":160,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-17"},{"lineNumber":161,"author":{"gitId":"jialatteo"},"content":"        descriptor.setDateTime(ParserUtil.parseDateTime(VALID_DATETIME_22_JAN_2023));","lastModifiedDate":"2022-10-17"},{"lineNumber":162,"author":{"gitId":"jialatteo"},"content":"        descriptor.setLocation(new Location(VALID_LOCATION_WESTMALL));","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"jialatteo"},"content":"                new EditAppointmentCommand(outOfBoundsPersonIndex, INDEX_FIRST_APPOINTMENT, descriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":165,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":166,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-17"},{"lineNumber":167,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(editAppointmentCommand, testModel, expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"jialatteo"},"content":"    public void execute_editAppointmentWithInvalidAppointmentIndex_failure() {","lastModifiedDate":"2022-10-17"},{"lineNumber":172,"author":{"gitId":"jialatteo"},"content":"        Model testModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":173,"author":{"gitId":"jialatteo"},"content":"        Person testPerson \u003d new PersonBuilder(MUSAB_WITH_NO_APPT)","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"jialatteo"},"content":"                .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-15"},{"lineNumber":177,"author":{"gitId":"jialatteo"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"jialatteo"},"content":"        testModel.addPerson(testPerson);","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"jialatteo"},"content":"        Index outOfBoundsAppointmentIndex \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"jialatteo"},"content":"                Index.fromOneBased(testModel.getFilteredPersonList().get(0)","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"jialatteo"},"content":"                                                        .getAppointments().size() + 1);","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"jialatteo"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"jialatteo"},"content":"                                        .withDateTime(VALID_DATETIME_22_JAN_2023)","lastModifiedDate":"2022-10-17"},{"lineNumber":185,"author":{"gitId":"jialatteo"},"content":"                                        .withLocation(VALID_LOCATION_WESTMALL).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":186,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":187,"author":{"gitId":"jialatteo"},"content":"        // Create editAppointmentCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":188,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-17"},{"lineNumber":189,"author":{"gitId":"jialatteo"},"content":"        descriptor.setDateTime(ParserUtil.parseDateTime(VALID_DATETIME_22_JAN_2023));","lastModifiedDate":"2022-10-17"},{"lineNumber":190,"author":{"gitId":"jialatteo"},"content":"        descriptor.setLocation(new Location(VALID_LOCATION_WESTMALL));","lastModifiedDate":"2022-10-17"},{"lineNumber":191,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":192,"author":{"gitId":"jialatteo"},"content":"                new EditAppointmentCommand(INDEX_FIRST_PERSON, outOfBoundsAppointmentIndex, descriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":193,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-17"},{"lineNumber":195,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"jialatteo"},"content":"        assertCommandFailure(editAppointmentCommand, testModel, expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"jialatteo"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-17"},{"lineNumber":201,"author":{"gitId":"jialatteo"},"content":"        descriptor.setDateTime(ParserUtil.parseDateTime(VALID_DATETIME_21_JAN_2023));","lastModifiedDate":"2022-10-17"},{"lineNumber":202,"author":{"gitId":"jialatteo"},"content":"        descriptor.setLocation(new Location(VALID_LOCATION_NUS));","lastModifiedDate":"2022-10-17"},{"lineNumber":203,"author":{"gitId":"jialatteo"},"content":"        final EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"jialatteo"},"content":"                INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT, descriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":205,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"jialatteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentCommand commandWithSameValues \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":208,"author":{"gitId":"jialatteo"},"content":"                new EditAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT, descriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":209,"author":{"gitId":"jialatteo"},"content":"        assertTrue(editAppointmentCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-12"},{"lineNumber":210,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":211,"author":{"gitId":"jialatteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"jialatteo"},"content":"        assertTrue(editAppointmentCommand.equals(editAppointmentCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":213,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":214,"author":{"gitId":"jialatteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":215,"author":{"gitId":"jialatteo"},"content":"        assertFalse(editAppointmentCommand.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"jialatteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"jialatteo"},"content":"        assertFalse(editAppointmentCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"jialatteo"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor differentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-17"},{"lineNumber":222,"author":{"gitId":"jialatteo"},"content":"        descriptor.setDateTime(ParserUtil.parseDateTime(VALID_DATETIME_23_JAN_2023));","lastModifiedDate":"2022-10-17"},{"lineNumber":223,"author":{"gitId":"jialatteo"},"content":"        descriptor.setLocation(new Location(VALID_LOCATION_JURONGPOINT));","lastModifiedDate":"2022-10-17"},{"lineNumber":224,"author":{"gitId":"jialatteo"},"content":"        assertFalse(editAppointmentCommand.equals(","lastModifiedDate":"2022-10-17"},{"lineNumber":225,"author":{"gitId":"jialatteo"},"content":"                new EditAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT, differentDescriptor)));","lastModifiedDate":"2022-10-17"},{"lineNumber":226,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jialatteo":228}},{"path":"src/test/java/seedu/address/logic/commands/EditAppointmentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPT_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPT_2;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_21_JAN_2023;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_23_JAN_2023;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_WESTMALL;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.EditAppointmentDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"public class EditAppointmentDescriptorTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    public void equals() {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor descriptorWithSameValues \u003d new EditAppointmentDescriptor(DESC_APPT_1);","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"        assertTrue(DESC_APPT_1.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"        assertTrue(DESC_APPT_1.equals(DESC_APPT_1));","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        assertFalse(DESC_APPT_1.equals(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"        assertFalse(DESC_APPT_1.equals(5));","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"        assertFalse(DESC_APPT_1.equals(DESC_APPT_2));","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        // different datetime -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor editedAppt \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_23_JAN_2023)","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        assertFalse(DESC_APPT_1.equals(editedAppt));","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"        editedAppt \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_WESTMALL).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        assertFalse(DESC_APPT_1.equals(editedAppt));","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":48}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"                new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"                new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"                new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"                new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jialatteo":10,"MuhdMusab":1,"-":167}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"MuhdMusab":1,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.ClientTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.FindPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.IncomeContainsKeywordsPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.NormalTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.PlanTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.RiskTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    private static FindPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    private static FindPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"    private static FindPredicate thirdPredicate \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"senwei01"},"content":"            new NormalTagContainsKeywordsPredicate(Collections.singletonList(\"friends\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"    private static FindPredicate fourthPredicate \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"senwei01"},"content":"            new RiskTagContainsKeywordsPredicate(Collections.singletonList(\"medium\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    private static FindPredicate fifthPredicate \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"senwei01"},"content":"            new PlanTagContainsKeywordsPredicate(Collections.singletonList(\"Savings Plan\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"    private static FindPredicate sixthPredicate \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"rgonslayer"},"content":"                    new IncomeContainsKeywordsPredicate(Collections.singletonList(\"100\"), \"\u003e\");","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"    private static List\u003cFindPredicate\u003e allPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"    private static List\u003cFindPredicate\u003e firstAndSecondPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"    private static List\u003cFindPredicate\u003e secondAndThirdPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    private static List\u003cFindPredicate\u003e thirdAndFourthPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"    private static List\u003cFindPredicate\u003e fourthAndFifthPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"    private static List\u003cFindPredicate\u003e fifthAndSixthPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    @BeforeAll","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    public static void setUp() {","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        allPredicates.add(firstPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"        allPredicates.add(secondPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"        allPredicates.add(thirdPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"        allPredicates.add(fourthPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"        allPredicates.add(fifthPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"        firstAndSecondPredicates.add(firstPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"        firstAndSecondPredicates.add(secondPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"        secondAndThirdPredicates.add(secondPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"        secondAndThirdPredicates.add(thirdPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"        thirdAndFourthPredicates.add(thirdPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"        thirdAndFourthPredicates.add(fourthPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"        fourthAndFifthPredicates.add(fourthPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"        fourthAndFifthPredicates.add(fifthPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"        fifthAndSixthPredicates.add(fifthPredicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"        fifthAndSixthPredicates.add(sixthPredicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand findAllCommand \u003d new FindCommand(allPredicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand findFirstAndSecondCommand \u003d new FindCommand(firstAndSecondPredicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand findSecondAndThirdCommand \u003d new FindCommand(secondAndThirdPredicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand findThirdAndFourthCommand \u003d new FindCommand(thirdAndFourthPredicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand findFourthAndFifthCommand \u003d new FindCommand(fourthAndFifthPredicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand findFifthAndSixthCommand \u003d new FindCommand(fifthAndSixthPredicates);","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(findAllCommand.equals(findAllCommand));","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(findFirstAndSecondCommand.equals(findFirstAndSecondCommand));","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(findSecondAndThirdCommand.equals(findSecondAndThirdCommand));","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(findThirdAndFourthCommand.equals(findThirdAndFourthCommand));","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(findFifthAndSixthCommand.equals(findFifthAndSixthCommand));","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand findAllCommandCopy \u003d new FindCommand(allPredicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(findAllCommand.equals(findAllCommandCopy));","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand findFirstAndSecondCommandCopy \u003d new FindCommand(firstAndSecondPredicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(findFirstAndSecondCommand.equals(findFirstAndSecondCommandCopy));","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand findSecondAndThirdCommandCopy \u003d new FindCommand(secondAndThirdPredicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(findSecondAndThirdCommand.equals(findSecondAndThirdCommandCopy));","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand findFifthAndSixthCommandCopy \u003d new FindCommand(fifthAndSixthPredicates);","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(findFifthAndSixthCommandCopy.equals(findFifthAndSixthCommandCopy));","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(findAllCommand.equals(1));","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(findFirstAndSecondCommandCopy.equals(3));","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(findAllCommand.equals(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(findFourthAndFifthCommand.equals(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"        // different keywords -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(findFirstAndSecondCommandCopy.equals(findAllCommand));","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(findSecondAndThirdCommandCopy.equals(findFirstAndSecondCommandCopy));","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(findFourthAndFifthCommand.equals(findThirdAndFourthCommand));","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(findFifthAndSixthCommand.equals(findThirdAndFourthCommand));","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareNamePredicate(\" \"));","lastModifiedDate":"2022-10-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_findName_multiplePersonsFound() {","lastModifiedDate":"2022-10-31"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-31"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareNamePredicate(\"Kurz Elle Kunz\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_findName_noPersonsFound() {","lastModifiedDate":"2022-10-31"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-31"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareNamePredicate(\"Yewjon\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(Arrays.asList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_findPhone_multiplePersonsFound() {","lastModifiedDate":"2022-10-31"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-31"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(preparePhonePredicate(\"9482427 87652533 98765432\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_findPhone_noPersonsFound() {","lastModifiedDate":"2022-10-31"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-31"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":184,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(preparePhonePredicate(\"999\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":185,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":186,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":187,"author":{"gitId":"MuhdMusab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":188,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(Arrays.asList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareNamePredicate(\"Kurz Elle Kunz\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":196,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareRiskPredicate(\"MEDIUM\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":198,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":203,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"senwei01"},"content":"    public void execute_zeroRiskTags_noPersonFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareRiskPredicate(\" \"));","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"senwei01"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":210,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":211,"author":{"gitId":"senwei01"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"senwei01"},"content":"    public void execute_oneRiskTags_onePersonFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareRiskPredicate(\"HIGH\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"senwei01"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":221,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"senwei01"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":225,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"senwei01"},"content":"    public void execute_zeroNormalTags_noPersonFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-26"},{"lineNumber":228,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareNormalPredicate(\" \"));","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"senwei01"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":232,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":233,"author":{"gitId":"senwei01"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-26"},{"lineNumber":234,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":235,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":237,"author":{"gitId":"senwei01"},"content":"    public void execute_multipleNormalTags_threePersonFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-26"},{"lineNumber":239,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareNormalPredicate(\"friends\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"senwei01"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":243,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":244,"author":{"gitId":"senwei01"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-10-26"},{"lineNumber":245,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":246,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":247,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":248,"author":{"gitId":"senwei01"},"content":"    public void execute_zeroPlanTags_noPersonFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":249,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-26"},{"lineNumber":250,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":251,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(preparePlanPredicate(\" \"));","lastModifiedDate":"2022-10-27"},{"lineNumber":252,"author":{"gitId":"senwei01"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":253,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":254,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":255,"author":{"gitId":"senwei01"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-26"},{"lineNumber":256,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":257,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":258,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":259,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":260,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_multiplePrefixesAndMultipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-10-27"},{"lineNumber":261,"author":{"gitId":"MuhdMusab"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-27"},{"lineNumber":262,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":263,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareNamePredicate(\"Kurz Elle Kunz\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":264,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareRiskPredicate(\"MEDIUM\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-10-27"},{"lineNumber":269,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":270,"author":{"gitId":"MuhdMusab"},"content":"        //resets the FilteredPersonList","lastModifiedDate":"2022-10-31"},{"lineNumber":271,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":272,"author":{"gitId":"MuhdMusab"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-31"},{"lineNumber":273,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":274,"author":{"gitId":"MuhdMusab"},"content":"        String secondExpectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-27"},{"lineNumber":275,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e secondPredicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":276,"author":{"gitId":"MuhdMusab"},"content":"        secondPredicate.add(prepareNamePredicate(\"Meier\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":277,"author":{"gitId":"MuhdMusab"},"content":"        secondPredicate.add(prepareNormalPredicate(\"friends\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":278,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand secondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":279,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(secondPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":280,"author":{"gitId":"MuhdMusab"},"content":"        assertCommandSuccess(secondCommand, model, secondExpectedMessage, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-10-27"},{"lineNumber":282,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":283,"author":{"gitId":"MuhdMusab"},"content":"        //resets the FilteredPersonList","lastModifiedDate":"2022-10-31"},{"lineNumber":284,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":285,"author":{"gitId":"MuhdMusab"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-31"},{"lineNumber":286,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":287,"author":{"gitId":"MuhdMusab"},"content":"        String thirdExpectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 5);","lastModifiedDate":"2022-10-28"},{"lineNumber":288,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e thirdPredicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":289,"author":{"gitId":"MuhdMusab"},"content":"        thirdPredicate.add(prepareNamePredicate(\"Meier\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":290,"author":{"gitId":"MuhdMusab"},"content":"        thirdPredicate.add(prepareIncomePredicate(\"1500\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":291,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand thirdCommand \u003d new FindCommand(thirdPredicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":292,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(thirdPredicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":293,"author":{"gitId":"MuhdMusab"},"content":"        assertCommandSuccess(thirdCommand, model, thirdExpectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":294,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2022-10-28"},{"lineNumber":295,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":296,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":297,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":298,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_subsequentFindCommand_displaysPersonsBasedOnCurrentList() {","lastModifiedDate":"2022-10-31"},{"lineNumber":299,"author":{"gitId":"MuhdMusab"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-31"},{"lineNumber":300,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":301,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareNamePredicate(\"Kurz Elle Kunz\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":302,"author":{"gitId":"MuhdMusab"},"content":"        predicate.add(prepareRiskPredicate(\"MEDIUM\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":303,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":304,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":305,"author":{"gitId":"MuhdMusab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":306,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":307,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":308,"author":{"gitId":"MuhdMusab"},"content":"        //Alice, Carl, Daniel have \"LOW\" RISK_APPETITE","lastModifiedDate":"2022-10-31"},{"lineNumber":309,"author":{"gitId":"MuhdMusab"},"content":"        //However, filteredPersons consist of Carl, Elle, Fiona hence only Carl will be displayed","lastModifiedDate":"2022-10-31"},{"lineNumber":310,"author":{"gitId":"MuhdMusab"},"content":"        String secondExpectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-31"},{"lineNumber":311,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e secondPredicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":312,"author":{"gitId":"MuhdMusab"},"content":"        secondPredicate.add(prepareRiskPredicate(\"LOW\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":313,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand secondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":314,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.updateFilteredPersonList(secondPredicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":315,"author":{"gitId":"MuhdMusab"},"content":"        assertCommandSuccess(secondCommand, model, secondExpectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":316,"author":{"gitId":"MuhdMusab"},"content":"        assertNotEquals(Arrays.asList(ALICE, CARL, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":317,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":323,"author":{"gitId":"MuhdMusab"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2022-10-31"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":326,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":327,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":328,"author":{"gitId":"senwei01"},"content":"     * Parses {@code userInput} into a {@code RiskTagContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-26"},{"lineNumber":329,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":330,"author":{"gitId":"senwei01"},"content":"    private RiskTagContainsKeywordsPredicate prepareRiskPredicate(String userInput) {","lastModifiedDate":"2022-10-26"},{"lineNumber":331,"author":{"gitId":"senwei01"},"content":"        return new RiskTagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":332,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":333,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":334,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":335,"author":{"gitId":"senwei01"},"content":"     * Parses {@code userInput} into a {@code NormalTagContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-26"},{"lineNumber":336,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":337,"author":{"gitId":"senwei01"},"content":"    private NormalTagContainsKeywordsPredicate prepareNormalPredicate(String userInput) {","lastModifiedDate":"2022-10-26"},{"lineNumber":338,"author":{"gitId":"senwei01"},"content":"        return new NormalTagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":339,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":340,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":341,"author":{"gitId":"senwei01"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":342,"author":{"gitId":"senwei01"},"content":"     * Parses {@code userInput} into a {@code PlanTagContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-26"},{"lineNumber":343,"author":{"gitId":"senwei01"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":344,"author":{"gitId":"senwei01"},"content":"    private PlanTagContainsKeywordsPredicate preparePlanPredicate(String userInput) {","lastModifiedDate":"2022-10-26"},{"lineNumber":345,"author":{"gitId":"senwei01"},"content":"        return new PlanTagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"(?\u003c\u003d\\\\s\\\\S{1,100})\\\\s\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":346,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":347,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":348,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":349,"author":{"gitId":"rgonslayer"},"content":"     * Parses {@code userInput} into a {@code PlanTagContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-27"},{"lineNumber":350,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":351,"author":{"gitId":"rgonslayer"},"content":"    private IncomeContainsKeywordsPredicate prepareIncomePredicate(String userInput) {","lastModifiedDate":"2022-10-27"},{"lineNumber":352,"author":{"gitId":"rgonslayer"},"content":"        return new IncomeContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")), \"\u003e\");","lastModifiedDate":"2022-10-27"},{"lineNumber":353,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":354,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":355,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-31"},{"lineNumber":356,"author":{"gitId":"MuhdMusab"},"content":"     * Parses {@code userInput} into a {@code PhoneContainsKeywordsPredicate }.","lastModifiedDate":"2022-10-31"},{"lineNumber":357,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-31"},{"lineNumber":358,"author":{"gitId":"MuhdMusab"},"content":"    private PhoneContainsKeywordsPredicate preparePhonePredicate(String userInput) {","lastModifiedDate":"2022-10-31"},{"lineNumber":359,"author":{"gitId":"MuhdMusab"},"content":"        return new PhoneContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-31"},{"lineNumber":360,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":361,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":362,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-31"},{"lineNumber":363,"author":{"gitId":"MuhdMusab"},"content":"     * Parses {@code userInput} into a {@code ClientTagContainsKeywordsPredicate }.","lastModifiedDate":"2022-10-31"},{"lineNumber":364,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-31"},{"lineNumber":365,"author":{"gitId":"MuhdMusab"},"content":"    private ClientTagContainsKeywordsPredicate prepareClientTagPredicate(String userInput) {","lastModifiedDate":"2022-10-31"},{"lineNumber":366,"author":{"gitId":"MuhdMusab"},"content":"        return new ClientTagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-31"},{"lineNumber":367,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jialatteo":1,"MuhdMusab":212,"rgonslayer":8,"-":73,"senwei01":74}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jialatteo":3,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"senwei01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"import static seedu.address.testutil.TypicalPersons.MUSAB_WITH_NO_APPT;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByAppointment;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByIncome;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByMonthly;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByName;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByRiskTag;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"public class SortCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"    private Model model;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"    public void setModel() {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"        this.model \u003d new ModelManager();","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"        Person[] persons \u003d {ELLE, FIONA, GEORGE, ALICE};","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"        for (Person p: persons) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"            model.addPerson(p);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"    public void testCompare() {","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"        // this is to test the result of compare() in SortByAppointment","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"        SortByAppointment sortByAppointment \u003d new SortByAppointment(\"asc\");","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"senwei01"},"content":"        SortByIncome sortByIncome \u003d new SortByIncome(\"asc\");","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"        int result \u003d sortByAppointment.compare(MUSAB_WITH_NO_APPT, ELLE);","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"        int result2 \u003d sortByAppointment.compare(MUSAB_WITH_NO_APPT, ALICE);","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"        int result3 \u003d sortByIncome.compare(ALICE, AMY);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"        assertEquals(1, result);","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"senwei01"},"content":"        assertEquals(0, result2);","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"senwei01"},"content":"        assertEquals(0, result3);","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"senwei01"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"senwei01"},"content":"        SortByName sortByName \u003d new SortByName(\"asc\");","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"senwei01"},"content":"        SortCommand sortByNameCommand \u003d new SortCommand(sortByName, \"name\");","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"senwei01"},"content":"        SortByAppointment sortByAppointment \u003d new SortByAppointment(\"asc\");","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"senwei01"},"content":"        SortCommand sortByAppointmentCommand \u003d new SortCommand(sortByAppointment, \"appt\");","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"senwei01"},"content":"        SortByRiskTag sortByRiskTag \u003d new SortByRiskTag(\"asc\");","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"senwei01"},"content":"        SortCommand sortByRiskTagCommand \u003d new SortCommand(sortByRiskTag, \"risk\");","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"senwei01"},"content":"        SortByIncome sortByIncome \u003d new SortByIncome(\"asc\");","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"senwei01"},"content":"        SortCommand sortByIncomeCommand \u003d new SortCommand(sortByIncome, \"income\");","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"senwei01"},"content":"        SortByMonthly sortByMonthly \u003d new SortByMonthly(\"asc\");","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"senwei01"},"content":"        SortCommand sortByMonthlyCommand \u003d new SortCommand(sortByMonthly, \"monthly\");","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"senwei01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"senwei01"},"content":"        assertTrue(sortByName.equals(sortByName));","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"senwei01"},"content":"        assertTrue(sortByAppointment.equals(sortByAppointment));","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"senwei01"},"content":"        assertTrue(sortByRiskTag.equals(sortByRiskTag));","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"senwei01"},"content":"        assertTrue(sortByIncome.equals(sortByIncome));","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"senwei01"},"content":"        assertTrue(sortByMonthly.equals(sortByMonthly));","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"senwei01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"senwei01"},"content":"        assertFalse(sortByAppointment.equals(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"senwei01"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"senwei01"},"content":"        SortCommand sortByNameCommandClone \u003d new SortCommand(sortByName, \"name\");","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"senwei01"},"content":"        assertTrue(sortByNameCommand.equals(sortByNameCommandClone));","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"senwei01"},"content":"        SortCommand sortByAppointmentCommandClone \u003d new SortCommand(sortByAppointment, \"appt\");","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"senwei01"},"content":"        assertTrue(sortByAppointmentCommand.equals(sortByAppointmentCommandClone));","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"senwei01"},"content":"        SortCommand sortByRiskTagCommandClone \u003d new SortCommand(sortByRiskTag, \"risk\");","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"senwei01"},"content":"        assertTrue(sortByRiskTagCommand.equals(sortByRiskTagCommandClone));","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"senwei01"},"content":"        SortCommand sortByIncomeCommandClone \u003d new SortCommand(sortByIncome, \"income\");","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"senwei01"},"content":"        assertTrue(sortByIncomeCommand.equals(sortByIncomeCommandClone));","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"senwei01"},"content":"        SortCommand sortByMonthlyCommandClone \u003d new SortCommand(sortByMonthly, \"monthly\");","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"senwei01"},"content":"        assertTrue(sortByMonthlyCommand.equals(sortByMonthlyCommandClone));","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"senwei01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"senwei01"},"content":"        assertFalse(sortByNameCommand.equals(sortByRiskTagCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"senwei01"},"content":"        assertFalse(sortByIncomeCommand.equals(sortByAppointmentCommand));","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"senwei01"},"content":"        assertFalse(sortByMonthlyCommand.equals(sortByAppointmentCommand));","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"senwei01"},"content":"    public void execute_sortByName_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"senwei01"},"content":"        this.expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"senwei01"},"content":"        Person[] persons \u003d {ALICE, ELLE, FIONA, GEORGE};","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"senwei01"},"content":"        for (Person p: persons) {","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"senwei01"},"content":"            expectedModel.addPerson(p);","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, \"name\");","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"senwei01"},"content":"        SortCommand sortCommand \u003d new SortCommand(new SortByName(\"asc\"), \"name\");","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"senwei01"},"content":"    public void execute_sortByNameDesc_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"senwei01"},"content":"        this.expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"senwei01"},"content":"        Person[] persons \u003d {GEORGE, FIONA, ELLE, ALICE};","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"senwei01"},"content":"        for (Person p: persons) {","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"senwei01"},"content":"            expectedModel.addPerson(p);","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, \"name\");","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"senwei01"},"content":"        SortCommand sortCommand \u003d new SortCommand(new SortByName(\"desc\"), \"name\");","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"senwei01"},"content":"    public void execute_sortByAppt_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"senwei01"},"content":"        this.expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"senwei01"},"content":"        Person[] persons \u003d {GEORGE, ELLE, FIONA, ALICE};","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"senwei01"},"content":"        for (Person p: persons) {","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"senwei01"},"content":"            expectedModel.addPerson(p);","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, \"appt\");","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"senwei01"},"content":"        SortCommand sortCommand \u003d new SortCommand(new SortByAppointment(\"asc\"), \"appt\");","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"senwei01"},"content":"    public void execute_sortByApptDesc_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"senwei01"},"content":"        this.expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"senwei01"},"content":"        Person[] persons \u003d {FIONA, ELLE, GEORGE, ALICE};","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"senwei01"},"content":"        for (Person p: persons) {","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"senwei01"},"content":"            expectedModel.addPerson(p);","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, \"appt\");","lastModifiedDate":"2022-10-24"},{"lineNumber":147,"author":{"gitId":"senwei01"},"content":"        SortCommand sortCommand \u003d new SortCommand(new SortByAppointment(\"desc\"), \"appt\");","lastModifiedDate":"2022-10-24"},{"lineNumber":148,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":151,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":152,"author":{"gitId":"senwei01"},"content":"    public void execute_sortByRiskTag_success() {","lastModifiedDate":"2022-10-25"},{"lineNumber":153,"author":{"gitId":"senwei01"},"content":"        this.expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"senwei01"},"content":"        Person[] persons \u003d {GEORGE, ALICE, ELLE, FIONA};","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"senwei01"},"content":"        for (Person p: persons) {","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"senwei01"},"content":"            expectedModel.addPerson(p);","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":158,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, \"risk\");","lastModifiedDate":"2022-10-25"},{"lineNumber":160,"author":{"gitId":"senwei01"},"content":"        SortCommand sortCommand \u003d new SortCommand(new SortByRiskTag(\"asc\"), \"risk\");","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"senwei01"},"content":"    public void execute_sortByRiskTagDesc_success() {","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"senwei01"},"content":"        this.expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-25"},{"lineNumber":167,"author":{"gitId":"senwei01"},"content":"        Person[] persons \u003d {ELLE, FIONA, GEORGE, ALICE};","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"senwei01"},"content":"        for (Person p: persons) {","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"senwei01"},"content":"            expectedModel.addPerson(p);","lastModifiedDate":"2022-10-25"},{"lineNumber":170,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, \"risk\");","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"senwei01"},"content":"        SortCommand sortCommand \u003d new SortCommand(new SortByRiskTag(\"desc\"), \"risk\");","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"senwei01"},"content":"    public void execute_sortByIncome_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"senwei01"},"content":"        this.expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"senwei01"},"content":"        Person[] persons \u003d {ALICE, FIONA, ELLE, GEORGE};","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"senwei01"},"content":"        for (Person p: persons) {","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"senwei01"},"content":"            expectedModel.addPerson(p);","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, \"income\");","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"senwei01"},"content":"        SortCommand sortCommand \u003d new SortCommand(new SortByIncome(\"asc\"), \"income\");","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"senwei01"},"content":"    public void execute_sortByIncomeDesc_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"senwei01"},"content":"        this.expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"senwei01"},"content":"        Person[] persons \u003d {GEORGE, ELLE, FIONA, ALICE};","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"senwei01"},"content":"        for (Person p: persons) {","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"senwei01"},"content":"            expectedModel.addPerson(p);","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, \"income\");","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"senwei01"},"content":"        SortCommand sortCommand \u003d new SortCommand(new SortByIncome(\"desc\"), \"income\");","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"senwei01"},"content":"    public void execute_sortByMonthly_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"senwei01"},"content":"        this.expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"senwei01"},"content":"        Person[] persons \u003d {ALICE, ELLE, GEORGE, FIONA};","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"senwei01"},"content":"        for (Person p: persons) {","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"senwei01"},"content":"            expectedModel.addPerson(p);","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":210,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":211,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, \"monthly\");","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"senwei01"},"content":"        SortCommand sortCommand \u003d new SortCommand(new SortByMonthly(\"asc\"), \"monthly\");","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"senwei01"},"content":"    public void execute_sortByMonthlyDesc_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"senwei01"},"content":"        this.expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"senwei01"},"content":"        Person[] persons \u003d {FIONA, GEORGE, ELLE, ALICE};","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"senwei01"},"content":"        for (Person p: persons) {","lastModifiedDate":"2022-10-26"},{"lineNumber":221,"author":{"gitId":"senwei01"},"content":"            expectedModel.addPerson(p);","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"senwei01"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"senwei01"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, \"monthly\");","lastModifiedDate":"2022-10-26"},{"lineNumber":225,"author":{"gitId":"senwei01"},"content":"        SortCommand sortCommand \u003d new SortCommand(new SortByMonthly(\"desc\"), \"monthly\");","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"senwei01"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":228,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"senwei01":229}},{"path":"src/test/java/seedu/address/logic/parser/AddAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FIRST_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INCOME_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BOTH_FIELD_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_FIELD_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LOCATION_FIELD_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MONTHLY_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RISKTAG_DESC_HIGH;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_21_JAN_2023;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_22_JAN_2023;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"public class AddAppointmentCommandParserTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    private AddAppointmentCommandParser parser \u003d new AddAppointmentCommandParser();","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_allFieldsPresentOneAppointment_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        Index targetPersonIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        String userInput \u003d targetPersonIndex.getOneBased() + FIRST_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentToAdd \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"                                    .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"                                    .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"        AddAppointmentCommand expectedCommand \u003d new AddAppointmentCommand(targetPersonIndex, appointmentToAdd);","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"        String expectedFailureMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"                AddAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        // negative index","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"-5\" + VALID_DATETIME_21_JAN_2023, expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        // zero index","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"0\" + VALID_DATETIME_22_JAN_2023, expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"1 some random string\", expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"1 i/ string\", expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"    public void parse_invalidAppointmentField_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"        String expectedFailureMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"                AddAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"        int targetPersonIndex \u003d INDEX_SECOND_PERSON.getOneBased();","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"        int targetAppointmentIndex \u003d INDEX_FIRST_APPOINTMENT.getOneBased();","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"        // add appointment with invalid date","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetPersonIndex + \".\" + targetAppointmentIndex","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"                + INVALID_DATE_FIELD_APPOINTMENT_DESC, expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        // add appointment with invalid location","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetPersonIndex + \".\" + targetAppointmentIndex","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"                + INVALID_LOCATION_FIELD_APPOINTMENT_DESC, expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        // add appointment with invalid location and invalid date","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetPersonIndex + \".\" + targetAppointmentIndex","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"                + INVALID_BOTH_FIELD_APPOINTMENT_DESC, expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"        // add appointment with no field","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetPersonIndex + \".\" + targetAppointmentIndex, expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"    public void parse_validAppointmentWithOtherField_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"        String expectedFailureMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"                AddAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"        int targetIndex \u003d INDEX_SECOND_PERSON.getOneBased();","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"        // add appointment with name","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetIndex + NAME_DESC_AMY + FIRST_APPOINTMENT_DESC, expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"        // add appointment with phone","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetIndex + PHONE_DESC_AMY + FIRST_APPOINTMENT_DESC, expectedFailureMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"        // add appointment with email","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetIndex + EMAIL_DESC_AMY + FIRST_APPOINTMENT_DESC, expectedFailureMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"        // add appointment with address","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetIndex + ADDRESS_DESC_AMY + FIRST_APPOINTMENT_DESC, expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"        // add appointment with normal tag","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetIndex + TAG_DESC_FRIEND + FIRST_APPOINTMENT_DESC, expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"        // add appointment with risk tag","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetIndex + RISKTAG_DESC_HIGH + FIRST_APPOINTMENT_DESC, expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        // add appointment with monthly","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetIndex + MONTHLY_DESC_AMY + FIRST_APPOINTMENT_DESC, expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"        // add appointment with income","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetIndex + INCOME_DESC_AMY + FIRST_APPOINTMENT_DESC, expectedFailureMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jialatteo":81,"MuhdMusab":34,"rgonslayer":2}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLIENTTAG_DESC_CURRENT;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLIENTTAG_DESC_POTENTIAL;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INCOME_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INCOME_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CLIENTTAG_DESC;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INCOME_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MONTHLY_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PLANTAG_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RISKTAG_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MONTHLY_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MONTHLY_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PLANTAG_DESC_SAVINGS;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RISKTAG_DESC_HIGH;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RISKTAG_DESC_LOW;","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLIENTTAG_POTENTIAL;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INCOME_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MONTHLY_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PLANTAG_SAVINGS;","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKTAG_HIGH;","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.IncomeLevel;","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"rgonslayer"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + MONTHLY_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"                + RISKTAG_DESC_LOW + PLANTAG_DESC_SAVINGS + CLIENTTAG_DESC_POTENTIAL","lastModifiedDate":"2022-10-31"},{"lineNumber":77,"author":{"gitId":"rgonslayer"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"rgonslayer"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + MONTHLY_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"                + RISKTAG_DESC_LOW + PLANTAG_DESC_SAVINGS + CLIENTTAG_DESC_POTENTIAL","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"rgonslayer"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"rgonslayer"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + MONTHLY_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"                + RISKTAG_DESC_LOW + PLANTAG_DESC_SAVINGS + CLIENTTAG_DESC_POTENTIAL","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"rgonslayer"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"rgonslayer"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + MONTHLY_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"                + RISKTAG_DESC_LOW + PLANTAG_DESC_SAVINGS + TAG_DESC_FRIEND + CLIENTTAG_DESC_POTENTIAL,","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"rgonslayer"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + MONTHLY_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"                + RISKTAG_DESC_LOW + PLANTAG_DESC_SAVINGS + CLIENTTAG_DESC_POTENTIAL","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"rgonslayer"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"rgonslayer"},"content":"        // multiple income - last income accepted","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"rgonslayer"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"rgonslayer"},"content":"                + MONTHLY_DESC_BOB + INCOME_DESC_AMY + INCOME_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"                + RISKTAG_DESC_LOW + PLANTAG_DESC_SAVINGS + CLIENTTAG_DESC_POTENTIAL","lastModifiedDate":"2022-10-31"},{"lineNumber":107,"author":{"gitId":"rgonslayer"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":109,"author":{"gitId":"rgonslayer"},"content":"        //multiple riskTags - last riskTag accepted","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"rgonslayer"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"rgonslayer"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + MONTHLY_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"                + RISKTAG_DESC_LOW + PLANTAG_DESC_SAVINGS + RISKTAG_DESC_LOW","lastModifiedDate":"2022-10-31"},{"lineNumber":113,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"rgonslayer"},"content":"        //multiple planTags - last planTag accepted","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"rgonslayer"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"rgonslayer"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + MONTHLY_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"rgonslayer"},"content":"                + RISKTAG_DESC_LOW + PLANTAG_DESC_SAVINGS + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"rgonslayer"},"content":"        //multiple clientTags - last planTag accepted","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"rgonslayer"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"rgonslayer"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + MONTHLY_DESC_BOB","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"rgonslayer"},"content":"                + RISKTAG_DESC_LOW + PLANTAG_DESC_SAVINGS + CLIENTTAG_DESC_CURRENT","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_LOW + PLANTAG_DESC_SAVINGS + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":139,"author":{"gitId":"rgonslayer"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"rgonslayer"},"content":"                        + INCOME_DESC_AMY + MONTHLY_DESC_AMY + RISKTAG_DESC_LOW","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"rgonslayer"},"content":"                        + PLANTAG_DESC_SAVINGS + CLIENTTAG_DESC_CURRENT,","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"rgonslayer"},"content":"                        + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"rgonslayer"},"content":"                + PLANTAG_DESC_SAVINGS + CLIENTTAG_DESC_POTENTIAL, expectedMessage);","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"rgonslayer"},"content":"                        + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"rgonslayer"},"content":"                + PLANTAG_DESC_SAVINGS + CLIENTTAG_DESC_POTENTIAL, expectedMessage);","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL, expectedMessage);","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":166,"author":{"gitId":"rgonslayer"},"content":"                        + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"rgonslayer"},"content":"                + PLANTAG_DESC_SAVINGS + CLIENTTAG_DESC_POTENTIAL, expectedMessage);","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":169,"author":{"gitId":"rgonslayer"},"content":"        // missing income prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":170,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":171,"author":{"gitId":"rgonslayer"},"content":"                + VALID_INCOME_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL, expectedMessage);","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"rgonslayer"},"content":"        // missing monthly prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":175,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"rgonslayer"},"content":"                        + INCOME_DESC_BOB + VALID_MONTHLY_BOB + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"rgonslayer"},"content":"                        + CLIENTTAG_DESC_POTENTIAL,","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":179,"author":{"gitId":"rgonslayer"},"content":"        // missing riskTag prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":181,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB + VALID_RISKTAG_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL, expectedMessage);","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"rgonslayer"},"content":"        // missing planTag prefix","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH + VALID_PLANTAG_SAVINGS","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL, expectedMessage);","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"rgonslayer"},"content":"        // missing clientTag prefix","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-28"},{"lineNumber":190,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"rgonslayer"},"content":"                + VALID_CLIENTTAG_POTENTIAL, expectedMessage);","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"rgonslayer"},"content":"                + VALID_INCOME_BOB + VALID_MONTHLY_BOB + VALID_RISKTAG_HIGH + VALID_PLANTAG_SAVINGS","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"rgonslayer"},"content":"                + VALID_CLIENTTAG_POTENTIAL, expectedMessage);","lastModifiedDate":"2022-10-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":203,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":208,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":213,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":218,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"rgonslayer"},"content":"        // invalid income","lastModifiedDate":"2022-10-13"},{"lineNumber":221,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-13"},{"lineNumber":222,"author":{"gitId":"rgonslayer"},"content":"                + INVALID_INCOME_DESC + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, IncomeLevel.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":224,"author":{"gitId":"rgonslayer"},"content":"        // invalid monthly","lastModifiedDate":"2022-10-14"},{"lineNumber":225,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-10-14"},{"lineNumber":226,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + INVALID_MONTHLY_DESC + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":229,"author":{"gitId":"rgonslayer"},"content":"        // invalid riskTag","lastModifiedDate":"2022-10-14"},{"lineNumber":230,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":231,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-26"},{"lineNumber":232,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + INVALID_RISKTAG_DESC + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-28"},{"lineNumber":233,"author":{"gitId":"rgonslayer"},"content":"                + TAG_DESC_FRIEND, RiskTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":235,"author":{"gitId":"rgonslayer"},"content":"        // invalid planTag","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":237,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"rgonslayer"},"content":"                + RISKTAG_DESC_HIGH + INVALID_PLANTAG_DESC + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-26"},{"lineNumber":239,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + TAG_DESC_FRIEND, PlanTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":240,"author":{"gitId":"rgonslayer"},"content":"        // invalid clientTag","lastModifiedDate":"2022-10-28"},{"lineNumber":241,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"rgonslayer"},"content":"                + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"rgonslayer"},"content":"                + INVALID_CLIENTTAG_DESC + TAG_DESC_FRIEND, ClientTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":248,"author":{"gitId":"rgonslayer"},"content":"                + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-26"},{"lineNumber":249,"author":{"gitId":"rgonslayer"},"content":"                + CLIENTTAG_DESC_POTENTIAL + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":252,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-10-14"},{"lineNumber":253,"author":{"gitId":"rgonslayer"},"content":"                        + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH","lastModifiedDate":"2022-10-26"},{"lineNumber":254,"author":{"gitId":"rgonslayer"},"content":"                + PLANTAG_DESC_SAVINGS + CLIENTTAG_DESC_POTENTIAL , Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":258,"author":{"gitId":"rgonslayer"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + MONTHLY_DESC_BOB + RISKTAG_DESC_HIGH + PLANTAG_DESC_SAVINGS","lastModifiedDate":"2022-10-26"},{"lineNumber":259,"author":{"gitId":"rgonslayer"},"content":"                        + CLIENTTAG_DESC_POTENTIAL + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-28"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"rgonslayer":134,"MuhdMusab":10,"-":118}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_21_JAN_2023;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_LOCATION;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.FindPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"    public void parseCommand_addAppointment() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        AddAppointmentCommand command \u003d (AddAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"                AddAppointmentCommand.COMMAND_WORD","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"                        + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"                        + \" \" + PREFIX_APPOINTMENT_DATE + VALID_DATETIME_21_JAN_2023","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"                        + \" \" + PREFIX_APPOINTMENT_LOCATION + VALID_LOCATION_NUS);","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentToAdd \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"                                    .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"                                    .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"        assertEquals(new AddAppointmentCommand(INDEX_FIRST_PERSON, appointmentToAdd), command);","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"    public void parseCommand_editAppointment() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"        descriptor.setDateTime(ParserUtil.parseDateTime(VALID_DATETIME_21_JAN_2023));","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"        descriptor.setLocation(new Location(VALID_LOCATION_NUS));","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentCommand command \u003d (EditAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"                EditAppointmentCommand.COMMAND_WORD","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"                        + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"                        + \".\" + INDEX_FIRST_APPOINTMENT.getOneBased()","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"                        + \" \" + PREFIX_APPOINTMENT_DATE + VALID_DATETIME_21_JAN_2023","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"                        + \" \" + PREFIX_APPOINTMENT_LOCATION + VALID_LOCATION_NUS);","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"        assertEquals(new EditAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT, descriptor), command);","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"    public void parseCommand_deleteAppointment() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"        DeleteAppointmentCommand command \u003d (DeleteAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"                DeleteAppointmentCommand.COMMAND_WORD","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"                        + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"                        + \".\" + INDEX_FIRST_APPOINTMENT.getOneBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        assertEquals(new DeleteAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT), command);","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"senwei01"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_NAME + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cFindPredicate\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"        predicates.add(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(new FindCommand(predicates), command);","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jialatteo":47,"MuhdMusab":5,"-":96,"senwei01":4}},{"path":"src/test/java/seedu/address/logic/parser/DateTimeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    public static final String FIRST_VALID_DATE_TIME \u003d \"1-Apr-2023 12:30 PM\";","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    public static final String SECOND_VALID_DATE_TIME \u003d \"2-Apr-2023 12:30 PM\";","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"    public static final String THIRD_VALID_DATE_TIME \u003d \"3-Apr-2023 12:30 PM\";","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_YEAR \u003d \"1-Apr-23 12:30 PM\";","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_MONTH \u003d \"1-January-2023 12:30 PM\";","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_DAY \u003d \"1000-Apr-2023 12:30 PM\";","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_DAY_ERROR_MESSAGE \u003d \"Text \u00271000-Apr-2023 12:30 PM\u0027 could not be parsed: \"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"            + \"Invalid value for DayOfMonth (valid values 1 - 28/31): 1000\";","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_MONTH_ERROR_MESSAGE \u003d \"Text \u00271-January-2023 12:30 PM\u0027 could not be parsed at \"","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"            + \"index 5\";","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_YEAR_ERROR_MESSAGE \u003d \"Text \u00271-Apr-23 12:30 PM\u0027 could not be parsed at index 6\";","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    private DateTimeParser parser \u003d new DateTimeParser();","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_dateTimeCorrectFormat_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime expectedLocalDateTime \u003d LocalDateTime.of(2023, 4, 1, 12, 30);","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime parsedLocalDateTime \u003d parser.parseLocalDateTimeFromString(FIRST_VALID_DATE_TIME);","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(expectedLocalDateTime, parsedLocalDateTime);","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_dateTimeInvalidDayOfMonthFormat_exceptionThrown() {","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime parsedLocalDateTime \u003d parser.parseLocalDateTimeFromString(INVALID_DAY);","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(INVALID_DAY_ERROR_MESSAGE, e.getMessage());","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_dateTimeInvalidMonthFormat_exceptionThrown() {","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime parsedLocalDateTime \u003d parser.parseLocalDateTimeFromString(INVALID_MONTH);","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(INVALID_MONTH_ERROR_MESSAGE, e.getMessage());","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_dateTimeInvalidYearFormat_exceptionThrown() {","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime parsedLocalDateTime \u003d parser.parseLocalDateTimeFromString(INVALID_YEAR);","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(INVALID_YEAR_ERROR_MESSAGE, e.getMessage());","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"    public void isValidDateTime_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(DateTimeParser.isValidDateTime(FIRST_VALID_DATE_TIME));","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"    public void isValidDateTime_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(DateTimeParser.isValidDateTime(INVALID_DAY));","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"jialatteo":1,"MuhdMusab":72}},{"path":"src/test/java/seedu/address/logic/parser/DeleteAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"public class DeleteAppointmentCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"    private DeleteAppointmentCommandParser parser \u003d new DeleteAppointmentCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"    public void parse_validArgs_returnsDeleteAppointmentCommand() {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"        assertParseSuccess(parser, \"1.1\", new DeleteAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_APPOINTMENT));","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"                DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"1^_^\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"                DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"1.a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"                DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"a.1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"                DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"a.a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"                DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"1.1.1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"                DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jialatteo":37}},{"path":"src/test/java/seedu/address/logic/parser/EditAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FIRST_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BOTH_FIELD_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_FIELD_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LOCATION_FIELD_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_21_JAN_2023;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_22_JAN_2023;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"public class EditAppointmentCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"    private EditAppointmentCommandParser parser \u003d new EditAppointmentCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        // no index specified","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        // no field specified","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        // negative person index","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"-5.5\" + VALID_DATETIME_21_JAN_2023, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"        // negative appointment index","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"5.-5\" + VALID_DATETIME_21_JAN_2023, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        // only one index","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"1\" + VALID_DATETIME_21_JAN_2023, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"        // zero index","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"0\" + VALID_DATETIME_22_JAN_2023, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        // invalid arguments being parsed as preamble for person index","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"1 some random string.1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"        // invalid arguments being parsed as preamble for appointment index","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"1.1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"    public void parse_validAppointmentWithOtherField_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"        int targetPersonIndex \u003d INDEX_SECOND_PERSON.getOneBased();","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"        int targetAppointmentIndex \u003d INDEX_SECOND_APPOINTMENT.getOneBased();","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"        // edit appointment with tag","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetPersonIndex + \".\" + targetAppointmentIndex","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"                + TAG_DESC_FRIEND + FIRST_APPOINTMENT_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"        // edit appointment with phone","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetPersonIndex + \".\" + targetAppointmentIndex","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"                + PHONE_DESC_AMY + FIRST_APPOINTMENT_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"        // edit appointment with email","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetPersonIndex + \".\" + targetAppointmentIndex","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"                + EMAIL_DESC_AMY + FIRST_APPOINTMENT_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"    public void parse_invalidAppointmentField_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"        int targetIndex \u003d INDEX_SECOND_PERSON.getOneBased();","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"        int targetAppointmentIndex \u003d INDEX_SECOND_APPOINTMENT.getOneBased();","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"        // edit appointment with invalid date","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetIndex + \".\" + targetAppointmentIndex","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"                + INVALID_DATE_FIELD_APPOINTMENT_DESC, DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"        // edit appointment with invalid location","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetIndex + \".\" + targetAppointmentIndex","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"                + INVALID_LOCATION_FIELD_APPOINTMENT_DESC, Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"        // edit appointment with invalid date and location","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetIndex + \".\" + targetAppointmentIndex","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"                + INVALID_BOTH_FIELD_APPOINTMENT_DESC, DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"        // edit appointment with no field","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"        assertParseFailure(parser, targetIndex + \".\" + targetAppointmentIndex","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"                + \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"    public void parse_validSingleAppointmentField_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        Index targetPersonIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"        Index targetAppointmentIndex \u003d INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"        String userInput \u003d targetPersonIndex.getOneBased() + \".\"","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"                + targetAppointmentIndex.getOneBased() + FIRST_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"        descriptor.setDateTime(ParserUtil.parseDateTime(VALID_DATETIME_21_JAN_2023));","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"        descriptor.setLocation(new Location(VALID_LOCATION_NUS));","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"jialatteo"},"content":"        EditAppointmentCommand expectedCommand \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"jialatteo"},"content":"                new EditAppointmentCommand(targetPersonIndex, targetAppointmentIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"jialatteo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jialatteo":124,"rgonslayer":1}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLIENTTAG_DESC_CURRENT;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INCOME_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CLIENTTAG_DESC;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INCOME_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MONTHLY_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PLANTAG_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RISKTAG_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MONTHLY_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PLANTAG_DESC_SAVINGS;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RISKTAG_DESC_LOW;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLIENTTAG_CURRENT;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INCOME_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MONTHLY_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PLANTAG_SAVINGS;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKTAG_LOW;","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.IncomeLevel;","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.Monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":98,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, \"1 z/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, \"1\" + INVALID_RISKTAG_DESC, RiskTag.MESSAGE_CONSTRAINTS); // invalid riskTag","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PLANTAG_DESC, PlanTag.MESSAGE_CONSTRAINTS); // invalid PlanTag","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CLIENTTAG_DESC, ClientTag.MESSAGE_CONSTRAINTS); // invalid ClientTag","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, \"1\" + INVALID_INCOME_DESC, IncomeLevel.MESSAGE_CONSTRAINTS); // invalid income","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"rgonslayer"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MONTHLY_DESC, Monthly.MESSAGE_CONSTRAINTS); // invalid monthly","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":136,"author":{"gitId":"rgonslayer"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + INCOME_DESC_AMY + MONTHLY_DESC_AMY","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"rgonslayer"},"content":"                + NAME_DESC_AMY + RISKTAG_DESC_LOW + PLANTAG_DESC_SAVINGS + CLIENTTAG_DESC_CURRENT + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"rgonslayer"},"content":"                .withIncome(VALID_INCOME_AMY).withMonthly(VALID_MONTHLY_AMY)","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"rgonslayer"},"content":"                .withRiskTag(VALID_RISKTAG_LOW).withPlanTag(VALID_PLANTAG_SAVINGS)","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"rgonslayer"},"content":"                .withClientTag(VALID_CLIENTTAG_CURRENT).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"rgonslayer":32,"-":207}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FIRST_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CLIENTTAG_DESC;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INCOME_DESC;","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MONTHLY_DESC;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PLANTAG_DESC;","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RISKTAG_DESC;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_FIELD_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENTTAG;","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MONTHLY;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANTAG;","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKTAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.ClientTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.FindPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.IncomeContainsKeywordsPredicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.IncomeLevel;","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Monthly;","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.MonthlyContainsKeywordsPredicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.NormalTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.PlanTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"senwei01"},"content":"import seedu.address.model.person.RiskTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validNameArgs_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"        List\u003cFindPredicate\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"        predicates.add(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(predicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME.getPrefix() + \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME.getPrefix() + \"Alice  \\t \\n Bob\", expectedFindCommand);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validPhoneArgs_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-31"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"        List\u003cFindPredicate\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"        predicates.add(new PhoneContainsKeywordsPredicate(Arrays.asList(\"9482427\", \"87652533\", \"98765432\")));","lastModifiedDate":"2022-10-31"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(predicates);","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_PHONE.getPrefix() + \"9482427 87652533 98765432\",","lastModifiedDate":"2022-10-31"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"                expectedFindCommand);","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-31"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_PHONE.getPrefix() + \"9482427 \\t 87652533 \\n \"","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"                        + \"98765432\", expectedFindCommand);","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validRiskTagArgs_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":93,"author":{"gitId":"senwei01"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"        List\u003cFindPredicate\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"        predicates.add(new RiskTagContainsKeywordsPredicate(Arrays.asList(\"high\", \"medium\")));","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(predicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser , \" \" + PREFIX_RISKTAG.getPrefix()","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"senwei01"},"content":"                + \"high medium\", expectedFindCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"senwei01"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_RISKTAG.getPrefix()","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"senwei01"},"content":"                + \"high \\n \\t medium\" , expectedFindCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validNormalTagArgs_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":106,"author":{"gitId":"senwei01"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"        List\u003cFindPredicate\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"        predicates.add(new NormalTagContainsKeywordsPredicate(Arrays.asList(\"friends\",","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"senwei01"},"content":"                \"owesMoney\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"                new FindCommand(predicates);","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser , \" \" + PREFIX_TAG.getPrefix()","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"senwei01"},"content":"                + \"friends owesMoney\", expectedFindCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"senwei01"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_TAG.getPrefix()","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"senwei01"},"content":"                + \"friends \\n \\t owesMoney\" , expectedFindCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validPlanTagArgs_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-31"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"        List\u003cFindPredicate\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"        predicates.add(new PlanTagContainsKeywordsPredicate(Arrays.asList(\"Savings Plan\",","lastModifiedDate":"2022-10-31"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"                \"Hospitalisation Plan\")));","lastModifiedDate":"2022-10-31"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-31"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"                new FindCommand(predicates);","lastModifiedDate":"2022-10-31"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser , \" \" + PREFIX_PLANTAG.getPrefix()","lastModifiedDate":"2022-10-31"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"                + \"Savings Plan Hospitalisation Plan\", expectedFindCommand);","lastModifiedDate":"2022-10-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-31"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"        //uncomment once regex is fixed","lastModifiedDate":"2022-10-31"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"        //  assertParseSuccess(parser, \" \" + PREFIX_PLANTAG.getPrefix()","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"        //  + \"Savings Plan \\n \\t Hospitalisation Plan\" , expectedFindCommand);","lastModifiedDate":"2022-10-31"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validClientTagArgs_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-31"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"        List\u003cFindPredicate\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"        predicates.add(new ClientTagContainsKeywordsPredicate(Arrays.asList(\"CURRENT\",","lastModifiedDate":"2022-10-31"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"                \"POTENTIAL\")));","lastModifiedDate":"2022-10-31"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-31"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"                new FindCommand(predicates);","lastModifiedDate":"2022-10-31"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser , \" \" + PREFIX_CLIENTTAG.getPrefix()","lastModifiedDate":"2022-10-31"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"                + \"CURRENT POTENTIAL\", expectedFindCommand);","lastModifiedDate":"2022-10-31"},{"lineNumber":145,"author":{"gitId":"MuhdMusab"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-31"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CLIENTTAG.getPrefix()","lastModifiedDate":"2022-10-31"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"                + \"CURRENT \\n \\t POTENTIAL\" , expectedFindCommand);","lastModifiedDate":"2022-10-31"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validIncomeArgs_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-31"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"        List\u003cFindPredicate\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"        predicates.add(new IncomeContainsKeywordsPredicate(Arrays.asList(\"1000\",","lastModifiedDate":"2022-10-31"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"                \"2000\"), \"\u003e\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-31"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"                new FindCommand(predicates);","lastModifiedDate":"2022-10-31"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser , \" \" + PREFIX_INCOME.getPrefix()","lastModifiedDate":"2022-10-31"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"                + \"\u003e1000 2000\", expectedFindCommand);","lastModifiedDate":"2022-10-31"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-31"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_INCOME.getPrefix()","lastModifiedDate":"2022-10-31"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"                + \"\u003e1000 \\n \\t 2000\" , expectedFindCommand);","lastModifiedDate":"2022-10-31"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validMonthlyArgs_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-31"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"        List\u003cFindPredicate\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"        predicates.add(new MonthlyContainsKeywordsPredicate(Arrays.asList(\"1000\",","lastModifiedDate":"2022-10-31"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"                \"2000\"), \"\u003e\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-31"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"                new FindCommand(predicates);","lastModifiedDate":"2022-10-31"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser , \" \" + PREFIX_MONTHLY.getPrefix()","lastModifiedDate":"2022-10-31"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"                + \"\u003e1000 2000\", expectedFindCommand);","lastModifiedDate":"2022-10-31"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-31"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MONTHLY.getPrefix()","lastModifiedDate":"2022-10-31"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"                + \"\u003e1000 \\n \\t 2000\" , expectedFindCommand);","lastModifiedDate":"2022-10-31"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_noPrefixesPresent_failure() {","lastModifiedDate":"2022-10-31"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-10-31"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE)); // invalid name","lastModifiedDate":"2022-10-31"},{"lineNumber":184,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":185,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":186,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":187,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-31"},{"lineNumber":188,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-31"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-31"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, INVALID_RISKTAG_DESC, RiskTag.MESSAGE_CONSTRAINTS); // invalid riskTag","lastModifiedDate":"2022-10-31"},{"lineNumber":191,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, INVALID_PLANTAG_DESC, PlanTag.MESSAGE_CONSTRAINTS); // invalid PlanTag","lastModifiedDate":"2022-10-31"},{"lineNumber":192,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, INVALID_CLIENTTAG_DESC, ClientTag.MESSAGE_CONSTRAINTS); // invalid ClientTag","lastModifiedDate":"2022-10-31"},{"lineNumber":193,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, INVALID_INCOME_DESC, IncomeLevel.MESSAGE_CONSTRAINTS); // invalid income","lastModifiedDate":"2022-10-31"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, INVALID_MONTHLY_DESC, Monthly.MESSAGE_CONSTRAINTS); // invalid monthly","lastModifiedDate":"2022-10-31"},{"lineNumber":195,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-31"},{"lineNumber":196,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":197,"author":{"gitId":"MuhdMusab"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-10-31"},{"lineNumber":198,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-31"},{"lineNumber":199,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":200,"author":{"gitId":"MuhdMusab"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-10-31"},{"lineNumber":201,"author":{"gitId":"MuhdMusab"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-31"},{"lineNumber":202,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-31"},{"lineNumber":203,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":204,"author":{"gitId":"MuhdMusab"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-31"},{"lineNumber":205,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-31"},{"lineNumber":206,"author":{"gitId":"MuhdMusab"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-31"},{"lineNumber":207,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":208,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":209,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":210,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_invalidPrefixes_failure() {","lastModifiedDate":"2022-10-31"},{"lineNumber":211,"author":{"gitId":"MuhdMusab"},"content":"        //prefix DATE_TIME present will throw exception","lastModifiedDate":"2022-10-31"},{"lineNumber":212,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, FIRST_APPOINTMENT_DESC,","lastModifiedDate":"2022-10-31"},{"lineNumber":213,"author":{"gitId":"MuhdMusab"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-31"},{"lineNumber":214,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":215,"author":{"gitId":"MuhdMusab"},"content":"        //prefix LOCATION present will throw exception","lastModifiedDate":"2022-10-31"},{"lineNumber":216,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, VALID_LOCATION_FIELD_APPOINTMENT_DESC,","lastModifiedDate":"2022-10-31"},{"lineNumber":217,"author":{"gitId":"MuhdMusab"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-31"},{"lineNumber":218,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":219,"author":{"gitId":"MuhdMusab"},"content":"        //both DATE_TIME and LOCATION prefixes present throws exception","lastModifiedDate":"2022-10-31"},{"lineNumber":220,"author":{"gitId":"MuhdMusab"},"content":"        assertParseFailure(parser, VALID_LOCATION_FIELD_APPOINTMENT_DESC + FIRST_APPOINTMENT_DESC,","lastModifiedDate":"2022-10-31"},{"lineNumber":221,"author":{"gitId":"MuhdMusab"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"MuhdMusab":171,"-":34,"senwei01":19}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"    private static final String DUPLICATE_NAME \u003d \"Rachel     Walker\";","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"wongyewjon"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"wongyewjon"},"content":"    public void parseName_duplicateNameWithoutWhiteSpace_returnsDuplicateName() throws Exception {","lastModifiedDate":"2022-10-31"},{"lineNumber":86,"author":{"gitId":"wongyewjon"},"content":"        String nameWithWhitespace \u003d DUPLICATE_NAME;","lastModifiedDate":"2022-10-31"},{"lineNumber":87,"author":{"gitId":"wongyewjon"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"wongyewjon"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"wongyewjon"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"wongyewjon"},"content":"    public void parseName_duplicateNameWithWhiteSpace_returnsTrimmedDuplicateName() throws Exception {","lastModifiedDate":"2022-10-31"},{"lineNumber":93,"author":{"gitId":"wongyewjon"},"content":"        String nameWithWhitespace \u003d WHITESPACE + DUPLICATE_NAME + WHITESPACE;","lastModifiedDate":"2022-10-31"},{"lineNumber":94,"author":{"gitId":"wongyewjon"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"wongyewjon"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":97,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":99,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"rgonslayer"},"content":"        Tag expectedTag \u003d new NormalTag(VALID_TAG_1);","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"rgonslayer"},"content":"        Tag expectedTag \u003d new NormalTag(VALID_TAG_1);","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"rgonslayer"},"content":"        Set\u003cNormalTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2022-10-26"},{"lineNumber":210,"author":{"gitId":"rgonslayer"},"content":"        Set\u003cNormalTag\u003e expectedTagSet \u003d new HashSet\u003cNormalTag\u003e(Arrays.asList(new NormalTag(VALID_TAG_1),","lastModifiedDate":"2022-10-26"},{"lineNumber":211,"author":{"gitId":"rgonslayer"},"content":"                new NormalTag(VALID_TAG_2)));","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"rgonslayer":6,"wongyewjon":17,"-":191}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByAppointment;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.sort.SortByClientTag;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByIncome;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByMonthly;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByName;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"import seedu.address.logic.parser.sort.SortByRiskTag;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"    // No empty arguments","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"senwei01"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"senwei01"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"senwei01"},"content":"    // Invalid arguments","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"senwei01"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"senwei01"},"content":"        assertParseFailure(parser, \"na\", String.format(SortCommand.MESSAGE_INCORRECT_KEYWORD,","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"senwei01"},"content":"                SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"senwei01"},"content":"        assertParseFailure(parser, \"app\", String.format(SortCommand.MESSAGE_INCORRECT_KEYWORD,","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"senwei01"},"content":"                SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validNameArgsAscending_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"        SortCommand expectedSortCommandName \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"                new SortCommand(new SortByName(\"asc\"), \"name\");","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"        assertParseSuccess(parser, \"name\", expectedSortCommandName);","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \\n name \\n\", expectedSortCommandName);","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validAppointmentArgsAscending_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"senwei01"},"content":"        SortCommand expectedSortCommandAppt \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"senwei01"},"content":"                new SortCommand(new SortByAppointment(\"asc\"), \"appt\");","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"senwei01"},"content":"        assertParseSuccess(parser, \"appt\", expectedSortCommandAppt);","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \\t appt \\n\", expectedSortCommandAppt);","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validRiskTagArgsAscending_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"senwei01"},"content":"        SortCommand expectedSortCommandRisk \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"senwei01"},"content":"                new SortCommand(new SortByRiskTag(\"asc\"), \"risk\");","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"senwei01"},"content":"        assertParseSuccess(parser, \"risk\", expectedSortCommandRisk);","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \\t risk \\n\", expectedSortCommandRisk);","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validIncomeArgsAscending_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":62,"author":{"gitId":"senwei01"},"content":"        SortCommand expectedSortCommandIncome \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"senwei01"},"content":"                new SortCommand(new SortByIncome(\"asc\"), \"income\");","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"senwei01"},"content":"        assertParseSuccess(parser, \"income\", expectedSortCommandIncome);","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \\t income \\n\", expectedSortCommandIncome);","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validMonthlyArgsAscending_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"senwei01"},"content":"        SortCommand expectedSortCommandMonthly \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"senwei01"},"content":"                new SortCommand(new SortByMonthly(\"asc\"), \"monthly\");","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"senwei01"},"content":"        assertParseSuccess(parser, \"monthly\", expectedSortCommandMonthly);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"senwei01"},"content":"        assertParseSuccess(parser, \" \\t monthly \\n\", expectedSortCommandMonthly);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"senwei01"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validClientTagArgsAscending_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"        SortCommand expectedSortCommandClientTag \u003d","lastModifiedDate":"2022-10-31"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"                new SortCommand(new SortByClientTag(\"asc\"), \"client\");","lastModifiedDate":"2022-10-31"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \"client\", expectedSortCommandClientTag);","lastModifiedDate":"2022-10-31"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \\t client\\n\", expectedSortCommandClientTag);","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validNameArgsDescending_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"senwei01"},"content":"        SortCommand expectedSortCommandName \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"senwei01"},"content":"                new SortCommand(new SortByName(\"desc\"), \"name in descending order\");","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"senwei01"},"content":"        assertParseSuccess(parser, \"name desc\", expectedSortCommandName);","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \\n name desc \\n\", expectedSortCommandName);","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validAppointmentArgsDescending_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":93,"author":{"gitId":"senwei01"},"content":"        SortCommand expectedSortCommandAppt \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"senwei01"},"content":"                new SortCommand(new SortByAppointment(\"desc\"), \"appt in descending order\");","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"senwei01"},"content":"        assertParseSuccess(parser, \"appt desc\", expectedSortCommandAppt);","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \\t appt desc \\n\", expectedSortCommandAppt);","lastModifiedDate":"2022-10-31"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validRiskTagArgsDescending_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"senwei01"},"content":"        SortCommand expectedSortCommandRisk \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"senwei01"},"content":"                new SortCommand(new SortByRiskTag(\"desc\"), \"risk in descending order\");","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"senwei01"},"content":"        assertParseSuccess(parser, \"risk desc\", expectedSortCommandRisk);","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \\t risk desc \\n\", expectedSortCommandRisk);","lastModifiedDate":"2022-10-31"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validIncomeArgsDescending_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":108,"author":{"gitId":"senwei01"},"content":"        SortCommand expectedSortCommandIncome \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"senwei01"},"content":"                new SortCommand(new SortByIncome(\"desc\"), \"income in descending order\");","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"senwei01"},"content":"        assertParseSuccess(parser, \"income desc\", expectedSortCommandIncome);","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \\t income desc \\n\", expectedSortCommandIncome);","lastModifiedDate":"2022-10-31"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validMonthlyArgsDescending_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":115,"author":{"gitId":"senwei01"},"content":"        SortCommand expectedSortCommandMonthly \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"senwei01"},"content":"                new SortCommand(new SortByMonthly(\"desc\"), \"monthly in descending order\");","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"senwei01"},"content":"        assertParseSuccess(parser, \"monthly desc\", expectedSortCommandMonthly);","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"senwei01"},"content":"        assertParseSuccess(parser, \" \\t monthly desc \\n\", expectedSortCommandMonthly);","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"senwei01"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validClientTagArgsDescending_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"        SortCommand expectedSortCommandClientTag \u003d","lastModifiedDate":"2022-10-31"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"                new SortCommand(new SortByClientTag(\"desc\"), \"client in descending order\");","lastModifiedDate":"2022-10-31"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \"client desc\", expectedSortCommandClientTag);","lastModifiedDate":"2022-10-31"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, \" \\t client desc \\n\", expectedSortCommandClientTag);","lastModifiedDate":"2022-10-31"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":128,"author":{"gitId":"senwei01"},"content":"}","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"MuhdMusab":51,"senwei01":78}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_21_JAN_2023;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_JURONGPOINT;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"    public void hasPersonWithSameAppointmentDateTime_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPersonWithSameAppointmentDateTime(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"    public void hasPersonWithSameAppointmentDateTime_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"        assertFalse(addressBook.hasPersonWithSameAppointmentDateTime(new AppointmentBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"                                                    .withDateTime(\"01-Jan-1800 12:00 AM\")","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"                                                    .withLocation(\"UniqueLocation\").build()));","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"    public void hasPersonWithSameAppointmentDateTime_personInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"        AddressBook testAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"        Appointment aliceAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"        editedAlice.getAppointments().add(aliceAppointment);","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"        testAddressBook.addPerson(editedAlice);","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"        Appointment appointmentWithSameDateTime \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_JURONGPOINT).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        assertTrue(testAddressBook.hasPersonWithSameAppointmentDateTime(appointmentWithSameDateTime));","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jialatteo":33,"-":102}},{"path":"src/test/java/seedu/address/model/CommandHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.model.CommandHistory.MAX_COMMAND_HISTORY_SIZE;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"public class CommandHistoryTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"    private final CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"        assertEquals(Collections.emptyList(), commandHistory.getCommandHistoryList());","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    public void setCommandHistoryList_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e commandHistory.setCommandHistoryList(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"    public void setCommandHistoryList_withValidList_replacesData() {","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"        commandHistoryList.add(\"list\");","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"        commandHistoryList.add(\"find benny\");","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        CommandHistory newData \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        newData.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"        commandHistory.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        assertEquals(newData, commandHistory);","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    public void addToEmptyCommandHistoryList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"        commandHistoryList.add(\"list\");","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"        CommandHistory expected \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        expected.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        CommandHistory actual \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"        actual.addToCommandHistory(\"list\");","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"    public void addToFullCommandHistoryList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        CommandHistory expected \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 1; i \u003c\u003d MAX_COMMAND_HISTORY_SIZE; i++) {","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"            commandHistoryList.add(\"find \" + i);","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"        expected.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e actualCommandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"        CommandHistory actual \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 0; i \u003c\u003d MAX_COMMAND_HISTORY_SIZE; i++) {","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"            actualCommandHistoryList.add(\"find \" + i);","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"        actual.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"    public void addDuplicateValidCommand() {","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"        CommandHistory expected \u003d new CommandHistory();","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"        expected.addToCommandHistory(\"list\");","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"        expected.setCurrentZeroBasedIndex(1);","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"        CommandHistory actual \u003d new CommandHistory();","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 0; i \u003c MAX_COMMAND_HISTORY_SIZE; i++) {","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"            actual.addToCommandHistory(\"list\");","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"    public void getPrevCommand_onEmptyCommandList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"        CommandHistory actual \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"        assertEquals(\"\", actual.getPrevCommand());","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"    public void getNextCommand_onEmptyCommandList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"        CommandHistory actual \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"        assertEquals(\"\", actual.getNextCommand());","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"    // Get previous and next commands when index is at/beyond limit of command history list","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"    public void getPrevCommand_atZeroIndex_onNonEmptyCommandList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"        CommandHistory actual \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 0; i \u003c MAX_COMMAND_HISTORY_SIZE / 2; i++) {","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"            commandHistoryList.add(\"find \" + i);","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"        actual.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"        actual.setCurrentZeroBasedIndex(0);","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"        assertEquals(\"find 0\", actual.getPrevCommand());","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"    public void getNextCommand_atMaxIndex_onNonEmptyCommandList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"        CommandHistory actual \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"        int listSize \u003d MAX_COMMAND_HISTORY_SIZE / 2;","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"        int maxIndex \u003d listSize - 1;","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 0; i \u003c listSize; i++) {","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"            commandHistoryList.add(\"find \" + i);","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"        actual.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"        actual.setCurrentZeroBasedIndex(maxIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"jialatteo"},"content":"        assertEquals(\"\", actual.getNextCommand());","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"jialatteo"},"content":"        assertEquals(listSize, actual.getCurrentZeroBasedIndex());","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"jialatteo"},"content":"    public void getNextCommand_beyondMaxIndex_onNonEmptyCommandList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"jialatteo"},"content":"        CommandHistory actual \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"jialatteo"},"content":"        int listSize \u003d MAX_COMMAND_HISTORY_SIZE / 2;","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"jialatteo"},"content":"        int beyondMaxIndex \u003d listSize;","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 0; i \u003c listSize; i++) {","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"jialatteo"},"content":"            commandHistoryList.add(\"find \" + i);","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"jialatteo"},"content":"        actual.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"jialatteo"},"content":"        actual.setCurrentZeroBasedIndex(beyondMaxIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"jialatteo"},"content":"        assertEquals(\"\", actual.getNextCommand());","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"jialatteo"},"content":"        assertEquals(listSize, actual.getCurrentZeroBasedIndex());","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"jialatteo"},"content":"    // Get previous and next commands when index is not at limit of command history list","lastModifiedDate":"2022-10-23"},{"lineNumber":143,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"jialatteo"},"content":"    public void getPrevCommand_atNonZeroIndex_onNonEmptyCommandList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"jialatteo"},"content":"        int testZeroBasedIndex \u003d 5;","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"jialatteo"},"content":"        CommandHistory actual \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 0; i \u003c\u003d MAX_COMMAND_HISTORY_SIZE / 2; i++) {","lastModifiedDate":"2022-10-23"},{"lineNumber":150,"author":{"gitId":"jialatteo"},"content":"            commandHistoryList.add(\"find \" + i);","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"jialatteo"},"content":"        actual.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"jialatteo"},"content":"        actual.setCurrentZeroBasedIndex(testZeroBasedIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"jialatteo"},"content":"        assertEquals(\"find \" + (testZeroBasedIndex - 1), actual.getPrevCommand());","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":158,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"jialatteo"},"content":"    public void getNextCommand_atNonMaxIndex_onNonEmptyCommandList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"jialatteo"},"content":"        int testZeroBasedIndex \u003d 5;","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":162,"author":{"gitId":"jialatteo"},"content":"        CommandHistory actual \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":164,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 0; i \u003c\u003d MAX_COMMAND_HISTORY_SIZE / 2; i++) {","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"jialatteo"},"content":"            commandHistoryList.add(\"find \" + i);","lastModifiedDate":"2022-10-23"},{"lineNumber":166,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"jialatteo"},"content":"        actual.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":168,"author":{"gitId":"jialatteo"},"content":"        actual.setCurrentZeroBasedIndex(testZeroBasedIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"jialatteo"},"content":"        assertEquals(\"find \" + (testZeroBasedIndex + 1), actual.getNextCommand());","lastModifiedDate":"2022-10-23"},{"lineNumber":171,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":172,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":173,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":174,"author":{"gitId":"jialatteo"},"content":"    public void resetCurrentIndexToBeyondMaxIndex() {","lastModifiedDate":"2022-10-23"},{"lineNumber":175,"author":{"gitId":"jialatteo"},"content":"        CommandHistory actual \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":176,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":177,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 0; i \u003c MAX_COMMAND_HISTORY_SIZE; i++) {","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"jialatteo"},"content":"            commandHistoryList.add(\"find \" + i);","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"jialatteo"},"content":"        actual.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"jialatteo"},"content":"        actual.setCurrentZeroBasedIndex(0);","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"jialatteo"},"content":"        actual.resetCurrentIndexToBeyondMaxIndex();","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":184,"author":{"gitId":"jialatteo"},"content":"        assertEquals(actual.getCurrentZeroBasedIndex(), MAX_COMMAND_HISTORY_SIZE);","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":190,"author":{"gitId":"jialatteo"},"content":"    public void getCommandHistoryList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":191,"author":{"gitId":"jialatteo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e commandHistory.getCommandHistoryList().remove(0));","lastModifiedDate":"2022-10-23"},{"lineNumber":192,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":193,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":194,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"jialatteo":194}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"    public void getCommandHistoryList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getCommandHistory()","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"                                                                .getCommandHistoryList().remove(0));","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"        CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        commandHistoryList.add(\"list\");","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"        CommandHistory differentCommandHistory \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"        differentCommandHistory.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, commandHistory);","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, commandHistory);","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"jialatteo"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, commandHistory)));","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"jialatteo"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, commandHistory)));","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"jialatteo"},"content":"        // different commandHistory -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"jialatteo"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, differentCommandHistory)));","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":146,"author":{"gitId":"jialatteo"},"content":"        assertFalse(modelManager.equals(","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"jialatteo"},"content":"                new ModelManager(addressBook, differentUserPrefs, commandHistory)));","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jialatteo":21,"-":128}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    public void test() {","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(userPrefs.equals(userPrefs));","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(userPrefs.equals(null));","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(userPrefs.equals(5));","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"MuhdMusab":16,"-":21}},{"path":"src/test/java/seedu/address/model/calendar/CalendarEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.model.calendar;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"public class CalendarEventTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    private static final Name AMY \u003d new Name(\"AMY\");","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    private static final Name BOB \u003d new Name(\"BOB\");","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    private static final Appointment firstAppointment \u003d new Appointment(new DateTime(","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"            DateTimeParser.parseLocalDateTimeFromString(\"1-Apr-2023 01:00 PM\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"            new Location(\"NUS TechnoEdge\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    private static final CalendarEvent firstEvent \u003d new CalendarEvent(AMY, firstAppointment);","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"    public void method_getName_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertEquals(AMY, firstEvent.getName());","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertNotEquals(BOB, firstEvent.getName());","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"    public void method_getDay_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertEquals(1, firstEvent.getDay());","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertNotEquals(2, firstEvent.getDay());","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    public void method_getMonth_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertEquals(4, firstEvent.getMonth());","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertNotEquals(1, firstEvent.getMonth());","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"    public void method_getYear_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertEquals(2023, firstEvent.getYear());","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertNotEquals(2022, firstEvent.getYear());","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"    public void method_getTimeFormat_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertEquals(\"01:00 PM\", firstEvent.getTimeFormat());","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertNotEquals(\"01:00 AM\", firstEvent.getTimeFormat());","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertNotEquals(\"1-Apr-2023 01:00 PM\", firstEvent.getTimeFormat());","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertNotEquals(\"1/Apr/2023 01:00 PM\", firstEvent.getTimeFormat());","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertNotEquals(\"13:00 PM\", firstEvent.getTimeFormat());","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"    private class ValidAppointmentStub extends Appointment {","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        ValidAppointmentStub() {","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"            super(new ValidDateTimeStub(), new ValidLocationStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"        public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"            return \"21-Jan-2023 09:00 AM\";","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"     * A stub class to check the String representation","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"     * of the Location and to check equality.","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"    private static class ValidLocationStub extends Location {","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"        ValidLocationStub() {","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"            super(\"NUS TechnoEdge\");","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"        public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"            return \"NUS TechnoEdge\";","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"    private class ValidDateTimeStub extends DateTime {","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"        ValidDateTimeStub() {","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"            super(LocalDateTime.of(2023, 1, 21, 9, 00));","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"        public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"            return \"21-Jan-2023 09:00 AM\";","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"     * A stub class to check the String representation","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"     * of the Appointment and to check equality.","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"    private static class AppointmentStub extends Appointment {","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"        AppointmentStub() {","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"            super(new DateTime(DateTimeParser.parseLocalDateTimeFromString(\"1-Apr-2023 12:30 PM\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"                    new Location(\"NUS TechnoEdge\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"        public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"            return \"1-Apr-2023 12:30 PM, NUS TechnoEdge\";","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"    public void constructor_nameNull_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CalendarEvent(null, new ValidAppointmentStub()));","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"    public void constructor_appointmentNull_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CalendarEvent(AMY, null));","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"    public void constructor_nameAndAppointmentNull_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CalendarEvent(null, null));","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"jialatteo"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"jialatteo"},"content":"        CalendarEvent newEvent \u003d new CalendarEvent(AMY, new ValidAppointmentStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertEquals(\"09:00 AM, AMY\", newEvent.toString());","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"jialatteo"},"content":"    public void equals_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"jialatteo"},"content":"        CalendarEvent firstCalendarEvent \u003d new CalendarEvent(AMY, new AppointmentStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"jialatteo"},"content":"        CalendarEvent secondCalendarEvent \u003d new CalendarEvent(AMY, new AppointmentStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"jialatteo"},"content":"        CalendarEvent thirdCalendarEvent \u003d new CalendarEvent(BOB, new AppointmentStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertEquals(firstCalendarEvent, firstCalendarEvent);","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertNotEquals(firstCalendarEvent, null);","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertEquals(firstCalendarEvent, secondCalendarEvent);","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertNotEquals(firstCalendarEvent, thirdCalendarEvent);","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":143}},{"path":"src/test/java/seedu/address/model/calendar/CalendarMonthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.model.calendar;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.CalendarMonthBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"public class CalendarMonthTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"    private static final Name AMY \u003d new Name(\"Amy\");","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"    private static final Name BOB \u003d new Name(\"Bob\");","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    private static final Appointment firstAppointment \u003d new Appointment(new DateTime(","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"            DateTimeParser.parseLocalDateTimeFromString(\"1-Apr-2023 01:00 PM\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"            new Location(\"NUS TechnoEdge\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"    private static final Appointment secondAppointment \u003d new Appointment(new DateTime(","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"            DateTimeParser.parseLocalDateTimeFromString(\"1-May-2023 01:00 PM\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"            new Location(\"NUS TechnoEdge\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    private static final Appointment thirdAppointment \u003d new Appointment(new DateTime(","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"            DateTimeParser.parseLocalDateTimeFromString(\"1-Apr-2024 01:00 PM\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"            new Location(\"NUS TechnoEdge\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    public void method_getCalendarEventDayNull_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        CalendarMonth calendarMonth \u003d new CalendarMonthBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e calendarMonth.getCalendarEventInDayOfMonth(null, 3, 2023));","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"    public void method_getCalendarEventMonthNull_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"        CalendarMonth calendarMonth \u003d new CalendarMonthBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e calendarMonth.getCalendarEventInDayOfMonth(1, null, 2023));","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    public void method_getCalendarEventYearNull_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        CalendarMonth calendarMonth \u003d new CalendarMonthBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e calendarMonth.getCalendarEventInDayOfMonth(1, 3, null));","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"    public void method_getCalendarEventAllArgumentsNull_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        CalendarMonth calendarMonth \u003d new CalendarMonthBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e calendarMonth.getCalendarEventInDayOfMonth(null, null, null));","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"    public void method_getCalendarEvenInDayOfMonth_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        CalendarMonth calendarMonth \u003d new CalendarMonthBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"        CalendarEvent firstEvent \u003d new CalendarEvent(AMY, firstAppointment);","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        ObservableList\u003cCalendarEvent\u003e calendarEvents \u003d FXCollections.observableArrayList(firstEvent);","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"        assertEquals(calendarEvents, calendarMonth.getCalendarEventInDayOfMonth(1, 4, 2023));","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"    public void constructor_nameNull_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CalendarMonth(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"    public void equals() {","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"        CalendarEvent firstEvent \u003d new CalendarEvent(AMY, firstAppointment);","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        CalendarEvent secondEvent \u003d new CalendarEvent(AMY, secondAppointment);","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"        CalendarEvent thirdEvent \u003d new CalendarEvent(AMY, thirdAppointment);","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"        ObservableList\u003cCalendarEvent\u003e firstEventList \u003d FXCollections.observableArrayList(firstEvent, secondEvent,","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"                thirdEvent);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        ObservableList\u003cCalendarEvent\u003e secondEventList \u003d FXCollections.observableArrayList(firstEvent, secondEvent);","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"        CalendarMonth firstCalendarMonth \u003d new CalendarMonth(firstEventList);","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"        CalendarMonth secondCalendarMonth \u003d new CalendarMonth(secondEventList);","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"        CalendarMonth calendarMonthCopy \u003d new CalendarMonthBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"        assertTrue(firstCalendarMonth.equals(firstCalendarMonth));","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"        assertTrue(firstCalendarMonth.equals(calendarMonthCopy));","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"        assertFalse(calendarMonthCopy.equals(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"        assertFalse(calendarMonthCopy.equals(5));","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"        // different calendarMonth -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"        assertFalse(calendarMonthCopy.equals(secondCalendarMonth));","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":101}},{"path":"src/test/java/seedu/address/model/person/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"public class AppointmentTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    private class InvalidDateTimeStub extends DateTime {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"        InvalidDateTimeStub() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"            super(LocalDateTime.of(2023, 1, 21, 9, 00));","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"        public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"            return \"20/Jan-2023 9:00 AM\";","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    private class ValidDateTimeStub extends DateTime {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        ValidDateTimeStub() {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"            super(LocalDateTime.of(2023, 1, 21, 9, 00));","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"            return \"21-Jan-2023 09:00 AM\";","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    private class ValidTimeStub extends Time {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        ValidTimeStub() {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"            super(LocalTime.of(9, 00));","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"            return \"09:00 AM\";","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"    private class ValidDateStub extends Date {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        ValidDateStub() {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"            super(LocalDate.of(2023, 1, 21));","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"            return \"21-Jan-2023\";","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"     * A stub class to check the String representation","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"     * of the DateTime and to check equality.","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"    private static class DateTimeStub extends DateTime {","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"        DateTimeStub() {","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"            super(DateTimeParser.parseLocalDateTimeFromString(\"1-Apr-2023 12:30 PM\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"        public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"            return \"1-Apr-2023 12:30 PM\";","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"     * A stub class to check the String representation","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"     * of the Location and to check equality.","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"    private static class ValidLocationStub extends Location {","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        ValidLocationStub() {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"            super(\"NUS TechnoEdge\");","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"        public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"            return \"NUS TechnoEdge\";","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"    private static class InvalidLocationStub extends Location {","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"        InvalidLocationStub() {","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"            super(\"\");","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"        public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"            return \"\";","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Appointment(null, null));","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"        Appointment newAppointment \u003d new Appointment(new DateTimeStub(), new ValidLocationStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertEquals(\"1-Apr-2023 12:30 PM, NUS TechnoEdge\", newAppointment.toString());","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"    public void isValidAppointment_validDateTimeAndLocation_returnsTrue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertTrue(Appointment.isValidAppointment(new ValidDateTimeStub(), new ValidLocationStub()));","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"    public void isValidAppointment_invalidDateTime_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertFalse(Appointment.isValidAppointment(new InvalidDateTimeStub(), new ValidLocationStub()));","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"    public void isValidAppointment_invalidLocation_returnsFalse() {","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Appointment(","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"                new InvalidDateTimeStub(), new InvalidLocationStub()));","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"jialatteo"},"content":"    public void isValidAppointment_invalidLocationAndDateTime_returnsFalse() {","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"jialatteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Appointment(","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"jialatteo"},"content":"                new InvalidDateTimeStub(), new InvalidLocationStub()));","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"    public void getDateTime_sameDateTime_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"        ValidDateTimeStub dateTimeStub \u003d new ValidDateTimeStub();","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"jialatteo"},"content":"        Appointment appointment \u003d new Appointment(dateTimeStub, new ValidLocationStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"        appointment.getDateTime().equals(dateTimeStub);","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"    public void getDate_sameDate_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"        ValidDateStub dateStub \u003d new ValidDateStub();","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"jialatteo"},"content":"        Appointment appointment \u003d new Appointment(new ValidDateTimeStub(), new ValidLocationStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"        appointment.getDate().equals(dateStub);","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"jialatteo"},"content":"    public void getYear_sameYear_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"jialatteo"},"content":"        Appointment appointment \u003d new Appointment(new ValidDateTimeStub(), new ValidLocationStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertEquals(2023, appointment.getYear());","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertNotEquals(2022, appointment.getYear());","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"    public void getTime_sameTime_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"        ValidTimeStub timeStub \u003d new ValidTimeStub();","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"jialatteo"},"content":"        Appointment appointment \u003d new Appointment(new ValidDateTimeStub(), new ValidLocationStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"        appointment.getTime().equals(timeStub);","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"jialatteo"},"content":"    public void getLocation_sameLocation_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"jialatteo"},"content":"        ValidLocationStub locationStub \u003d new ValidLocationStub();","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"jialatteo"},"content":"        Appointment appointment \u003d new Appointment(new ValidDateTimeStub(), new ValidLocationStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"jialatteo"},"content":"        appointment.getLocation().equals(locationStub);","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"    public void equals_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"jialatteo"},"content":"        Appointment firstAppointment \u003d new Appointment(new DateTimeStub(), new ValidLocationStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"jialatteo"},"content":"        Appointment secondAppointment \u003d new Appointment(new DateTimeStub(), new ValidLocationStub());","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertEquals(firstAppointment, firstAppointment);","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertNotEquals(firstAppointment, null);","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertEquals(firstAppointment, secondAppointment);","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jialatteo":59,"MuhdMusab":109}},{"path":"src/test/java/seedu/address/model/person/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"public class DateTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    private static final Date DATE_21_JAN_2023 \u003d new Date(LocalDate.of(2023, 1, 21));","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    private static final Date DATE_22_JAN_2023 \u003d new Date(LocalDate.of(2023, 1, 22));","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    private static final Date DATE_21_JAN_2022 \u003d new Date(LocalDate.of(2022, 1, 21));","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    private static final Date DATE_21_FEB_2023 \u003d new Date(LocalDate.of(2023, 2, 21));","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Time(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"        Date date \u003d new Date(LocalDate.of(2023, 1, 21));","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"21-Jan-2023\", date.toString());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"wongyewjon"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"wongyewjon"},"content":"    public void getYear_sameYear_success() {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"wongyewjon"},"content":"        Date date \u003d new Date(LocalDate.of(2023, 1, 21));","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"wongyewjon"},"content":"        Assertions.assertEquals(2023, date.getYear());","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"wongyewjon"},"content":"        Assertions.assertNotEquals(2022, date.getYear());","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"wongyewjon"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"wongyewjon"},"content":"    public void getMonth_sameMonth_success() {","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"wongyewjon"},"content":"        Date date \u003d new Date(LocalDate.of(2023, 1, 21));","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"wongyewjon"},"content":"        Assertions.assertEquals(1, date.getMonth());","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"wongyewjon"},"content":"        Assertions.assertNotEquals(2, date.getMonth());","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"wongyewjon"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    public void equals_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(DATE_21_JAN_2023, DATE_21_JAN_2023);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"        assertNotEquals(DATE_21_JAN_2023, null);","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        assertNotEquals(DATE_21_JAN_2023, 1);","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"        // different day -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"        assertNotEquals(DATE_21_JAN_2023, DATE_22_JAN_2023);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"        // different month -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"        assertNotEquals(DATE_21_JAN_2023, DATE_21_FEB_2023);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"        // different year -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"        assertNotEquals(DATE_21_JAN_2023, DATE_21_JAN_2022);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"MuhdMusab":49,"wongyewjon":14}},{"path":"src/test/java/seedu/address/model/person/DateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_21_JAN_2023;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_22_JAN_2023;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"public class DateTimeTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"    private class ValidDateTimeStub extends DateTime {","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"        ValidDateTimeStub() {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"            super(LocalDateTime.of(2023, 1, 21, 9, 00));","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"        public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"            return \"21-Jan-2023 09:00 AM\";","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"    public void getYear_sameYear_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertEquals(2023, new ValidDateTimeStub().getYear());","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"        Assertions.assertNotEquals(2022, new ValidDateTimeStub().getYear());","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateTime(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"    public void equals_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        DateTime firstDateTime \u003d ParserUtil.parseDateTime(VALID_DATETIME_21_JAN_2023);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"        DateTime secondDateTime \u003d ParserUtil.parseDateTime(VALID_DATETIME_22_JAN_2023);","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertEquals(firstDateTime, firstDateTime);","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertNotEquals(firstDateTime, null);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertNotEquals(firstDateTime, secondDateTime);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jialatteo":23,"MuhdMusab":22,"wongyewjon":2}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":"    private static String CHAR_LIMIT \u003d \"john@aaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaa.com\";","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"wongyewjon"},"content":"    private static String EXCEED_CHAR_LIMIT \u003d \"john@aaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaab.com\";","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"wongyewjon"},"content":"    private static String BELOW_CHAR_LIMIT \u003d \"john@aaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"wongyewjon"},"content":"            + \"aaaaaaaaaaaaaaaaa.com\";","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":74,"author":{"gitId":"wongyewjon"},"content":"        assertFalse(Email.isValidEmail(EXCEED_CHAR_LIMIT)); // exceed length of maximum 320 characters","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":87,"author":{"gitId":"wongyewjon"},"content":"        assertTrue(Email.isValidEmail(CHAR_LIMIT)); //At the standard email length of maximum 320 characters","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"wongyewjon"},"content":"        assertTrue(Email.isValidEmail(BELOW_CHAR_LIMIT)); //below the standard email length of maximum 320 characters","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"wongyewjon":24,"-":66}},{"path":"src/test/java/seedu/address/model/person/IncomeLevelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"public class IncomeLevelTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new IncomeLevel(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"    public void constructor_invalidIncomeLevel_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"        String invalidIncomeLevel \u003d \"aslkdh\";","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new IncomeLevel(invalidIncomeLevel));","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    public void isValidIncomeLevel() {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"        // null name","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e IncomeLevel.isValidIncome(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"        // invalid name","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        assertFalse(IncomeLevel.isValidIncome(\"\")); // empty string","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"        assertFalse(IncomeLevel.isValidIncome(\" \")); // spaces only","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"        assertFalse(IncomeLevel.isValidIncome(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"        assertFalse(IncomeLevel.isValidIncome(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        assertFalse(IncomeLevel.isValidIncome(\"fdasfd\")); // numbers only","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        assertFalse(IncomeLevel.isValidIncome(\"$-1\")); // negative number","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"        assertFalse(IncomeLevel.isValidIncome(\"$00001\")); // trailing zeroes","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        // valid name","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        assertTrue(IncomeLevel.isValidIncome(\"$231231\")); // $ + numbers","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"        assertTrue(IncomeLevel.isValidIncome(\"$0\")); // $ + numbers","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        assertTrue(IncomeLevel.isValidIncome(\"$999\")); // $ + numbers","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":41}},{"path":"src/test/java/seedu/address/model/person/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"public class LocationTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"        String invalidLocation \u003d \"\";","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidLocation));","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"    public void isValidLocation() {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"        // null address","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        // invalid addresses","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"        assertFalse(Location.isValidLocation(\" \")); // spaces only","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        // valid addresses","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        assertTrue(Location.isValidLocation(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"        assertTrue(Location.isValidLocation(\"-\")); // one character","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"        assertTrue(Location.isValidLocation(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":37}},{"path":"src/test/java/seedu/address/model/person/MonthlyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"public class MonthlyTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Monthly(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"    public void constructor_invalidMonthly_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"        String invalidMonthly \u003d \"aslkdh\";","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Monthly(invalidMonthly));","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    public void isValidMonthly() {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"        // null name","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Monthly.isValidMonthly(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"        // invalid name","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        assertFalse(Monthly.isValidMonthly(\"\")); // empty string","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"        assertFalse(Monthly.isValidMonthly(\" \")); // spaces only","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"        assertFalse(Monthly.isValidMonthly(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"        assertFalse(Monthly.isValidMonthly(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        assertFalse(Monthly.isValidMonthly(\"fdasfd\")); // numbers only","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        assertFalse(Monthly.isValidMonthly(\"$-1\")); // negative number","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"        assertFalse(Monthly.isValidMonthly(\"$00001\")); // trailing zeroes","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        // valid name","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        assertTrue(Monthly.isValidMonthly(\"$231231\")); // $ + numbers","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"        assertTrue(Monthly.isValidMonthly(\"$0\")); // $ + numbers","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        assertTrue(Monthly.isValidMonthly(\"$999\")); // $ + numbers","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":41}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.model.person.Appointment.EMPTY_APPOINTMENTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    @AfterAll","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    public static void setAlice() {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        ALICE.setAppointments(EMPTY_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"    public void method_getCalendarEventsEmpty_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        List\u003cCalendarEvent\u003e eventList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"        assertEquals(eventList, ALICE.getCalendarEvents());","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"        boolean temp \u003d ALICE.equals(aliceCopy);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jialatteo":11,"MuhdMusab":8,"-":91}},{"path":"src/test/java/seedu/address/model/person/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"public class TimeTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"    private static final Time TIME_TWELVE_THIRTY_PM \u003d new Time(LocalTime.of(12, 30));","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    private static final Time TIME_ONE_THIRTY_AM \u003d new Time(LocalTime.of(1, 30));","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    private static final Time TIME_ONE_THIRTY_PM \u003d new Time(LocalTime.of(13, 30));","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Time(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"        Time time \u003d new Time(LocalTime.of(12, 30));","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"12:30 PM\", time.toString());","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    public void equals_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(TIME_TWELVE_THIRTY_PM, TIME_TWELVE_THIRTY_PM);","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        assertNotEquals(TIME_TWELVE_THIRTY_PM, null);","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        assertNotEquals(TIME_TWELVE_THIRTY_PM, 1);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        // different hour -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        assertNotEquals(TIME_TWELVE_THIRTY_PM, TIME_ONE_THIRTY_PM);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        // different period -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        assertNotEquals(TIME_ONE_THIRTY_AM, TIME_ONE_THIRTY_PM);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"MuhdMusab":45}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_21_JAN_2023;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_WESTMALL;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    public void containsPersonWithSameDateTimeAppointment_personInList_returnsTrue() {","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        UniquePersonList testUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"        Appointment aliceAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"                                        .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"                                        .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        Person testPerson \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        testPerson.getAppointments().add(aliceAppointment);","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        testUniquePersonList.add(testPerson);","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        Appointment duplicateAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_WESTMALL).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"        assertTrue(testUniquePersonList.containsPersonWithSameAppointmentDateTime(duplicateAppointment));","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"    public void containsPersonWithSameDateTimeAppointment_personNotInList_returnsFalse() {","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"        Appointment uniqueAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"                .withDateTime(\"01-Jan-1880 12:00 AM\")","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"                .withLocation(VALID_LOCATION_NUS).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"        assertFalse(uniquePersonList.containsPersonWithSameAppointmentDateTime(uniqueAppointment));","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jialatteo":26,"-":170}},{"path":"src/test/java/seedu/address/model/tag/ClientTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-31"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.model.tag.ClientTag.isClientTag;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"public class ClientTagTest {","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"    public void isValidClientTagName_validInput_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(isClientTag(\"CURRENT\"), true);","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(isClientTag(\"POTENTIAL\"), true);","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    public void isValidClientTagName_invalidInput_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(isClientTag(\"FUTURE\"), false);","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(isClientTag(\"PREVIOUS\"), false);","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    public void getType() {","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"        ClientTag currentClientTag \u003d new ClientTag(\"CURRENT\");","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(1, currentClientTag.getType());","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"        ClientTag potentialClientTag \u003d new ClientTag(\"POTENTIAL\");","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(2, potentialClientTag.getType());","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-31"}],"authorContributionMap":{"MuhdMusab":30}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NormalTag(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new NormalTag(invalidTagName));","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"rgonslayer":2,"-":24}},{"path":"src/test/java/seedu/address/model/util/MaximumSortedListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.util;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.exceptions.SortedListException;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"public class MaximumSortedListTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private class ComparableStub implements Comparable\u003cComparableStub\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"        private int value;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"        private ComparableStub(int value) {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"            this.value \u003d value;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"                return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"            if (!(other instanceof ComparableStub)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"                return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"            ComparableStub otherComparableStub \u003d (ComparableStub) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"            if (otherComparableStub.value !\u003d this.value) {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"                return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"            } else {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"                return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        public int compareTo(ComparableStub other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"            if (this.value \u003d\u003d other.value) {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"                return 0;","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"            } else if (this.value \u003e other.value) {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"                return 1;","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"            } else {","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"                return -1;","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    private static final int MAX_LIST_SIZE \u003d 5;","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    private MaximumSortedList\u003cComparableStub\u003e stubMaximumSortedList;","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"    private final ComparableStub comparableStubOne \u003d new ComparableStub(1);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"    private final ComparableStub comparableStubTwo \u003d new ComparableStub(2);","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"    private final ComparableStub comparableStubThree \u003d new ComparableStub(3);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"    private final ComparableStub comparableStubFour \u003d new ComparableStub(4);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"    private final ComparableStub comparableStubFive \u003d new ComparableStub(5);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList \u003d new MaximumSortedList\u003c\u003e(MAX_LIST_SIZE);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    public void contains_nullComparable_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(NullPointerException.class, () -\u003e stubMaximumSortedList.contains(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"    public void contains_emptyList_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(stubMaximumSortedList.contains(comparableStubOne));","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"    public void contains_comparableInList_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubOne);","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(stubMaximumSortedList.contains(comparableStubOne));","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"    public void contains_comparableWithSameValueInList_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(new ComparableStub(1));","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(stubMaximumSortedList.contains(comparableStubOne));","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"    public void getObservableList_returns_observableList() {","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"        // empty observable List","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"        ObservableList\u003cComparableStub\u003e observableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"        assertTrue(stubMaximumSortedList.getObservableList().equals(observableList));","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"        // non-empty observable list","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"        stubMaximumSortedList.add(comparableStubOne);","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"        stubMaximumSortedList.add(comparableStubTwo);","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"        observableList.add(comparableStubOne);","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"        observableList.add(comparableStubTwo);","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"        assertTrue(stubMaximumSortedList.getObservableList().equals(observableList));","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"    public void add_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(NullPointerException.class, () -\u003e stubMaximumSortedList.add(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"    public void add_duplicateComparable_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubOne);","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(stubMaximumSortedList.add(comparableStubOne));","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(stubMaximumSortedList.add(new ComparableStub(1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"    public void add_comparableInSortedOrder() {","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubFive);","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubOne);","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubThree);","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubTwo);","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubFour);","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"        for (int i \u003d 0; i \u003c MAX_LIST_SIZE; i++) {","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"            try {","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"                assertEquals(stubMaximumSortedList.remove(0), new ComparableStub(i + 1));","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"            } catch (SortedListException e) {","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"                fail();","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"    public void remove_nullComparable_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(NullPointerException.class, () -\u003e stubMaximumSortedList.remove(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"    public void remove_invalidIndex_throwsSortedListException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(SortedListException.class, () -\u003e stubMaximumSortedList.remove(-1));","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(SortedListException.class, () -\u003e stubMaximumSortedList.remove(-100));","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(SortedListException.class, () -\u003e stubMaximumSortedList.remove(10));","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"MuhdMusab"},"content":"    public void remove_invalidComparable_throwsSortedListException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubOne);","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(SortedListException.class, () -\u003e stubMaximumSortedList.remove(new ComparableStub(2)));","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(SortedListException.class, () -\u003e stubMaximumSortedList.remove(new ComparableStub(-1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(SortedListException.class, () -\u003e stubMaximumSortedList.remove(new ComparableStub(-10)));","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"    public void remove_existingComparable_removesComparable() {","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubOne);","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"            stubMaximumSortedList.remove(comparableStubOne);","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"        } catch (SortedListException e) {","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"        MaximumSortedList\u003cComparableStub\u003e expectedMaximumSortedList \u003d new MaximumSortedList\u003c\u003e(MAX_LIST_SIZE);","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(expectedMaximumSortedList, stubMaximumSortedList);","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"    public void remove_existingEquivalentComparable_removesComparable() {","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubOne);","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"            stubMaximumSortedList.remove(new ComparableStub(1));","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"        } catch (SortedListException e) {","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"        MaximumSortedList\u003cComparableStub\u003e expectedMaximumSortedList \u003d new MaximumSortedList\u003c\u003e(MAX_LIST_SIZE);","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(expectedMaximumSortedList, stubMaximumSortedList);","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"        final MaximumSortedList\u003cComparableStub\u003e firstTestMaximumSortedList \u003d new MaximumSortedList\u003c\u003e(MAX_LIST_SIZE);","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"        // same max_size value -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(stubMaximumSortedList.equals(firstTestMaximumSortedList));","lastModifiedDate":"2022-10-13"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":184,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(stubMaximumSortedList.equals(stubMaximumSortedList));","lastModifiedDate":"2022-10-13"},{"lineNumber":185,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":186,"author":{"gitId":"MuhdMusab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":187,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(stubMaximumSortedList.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(stubMaximumSortedList.equals(1));","lastModifiedDate":"2022-10-13"},{"lineNumber":191,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":192,"author":{"gitId":"MuhdMusab"},"content":"        // different elements -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubOne);","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubTwo);","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"MuhdMusab"},"content":"        stubMaximumSortedList.add(comparableStubThree);","lastModifiedDate":"2022-10-13"},{"lineNumber":196,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"MuhdMusab"},"content":"        firstTestMaximumSortedList.add(comparableStubOne);","lastModifiedDate":"2022-10-13"},{"lineNumber":198,"author":{"gitId":"MuhdMusab"},"content":"        firstTestMaximumSortedList.add(comparableStubTwo);","lastModifiedDate":"2022-10-13"},{"lineNumber":199,"author":{"gitId":"MuhdMusab"},"content":"        firstTestMaximumSortedList.add(comparableStubFour);","lastModifiedDate":"2022-10-13"},{"lineNumber":200,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":201,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(stubMaximumSortedList.equals(firstTestMaximumSortedList));","lastModifiedDate":"2022-10-13"},{"lineNumber":202,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":203,"author":{"gitId":"MuhdMusab"},"content":"        // same elements -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":204,"author":{"gitId":"MuhdMusab"},"content":"        final MaximumSortedList\u003cComparableStub\u003e secondTestMaximumSortedList \u003d new MaximumSortedList\u003c\u003e(MAX_LIST_SIZE);","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"MuhdMusab"},"content":"        secondTestMaximumSortedList.add(comparableStubOne);","lastModifiedDate":"2022-10-13"},{"lineNumber":206,"author":{"gitId":"MuhdMusab"},"content":"        secondTestMaximumSortedList.add(comparableStubTwo);","lastModifiedDate":"2022-10-13"},{"lineNumber":207,"author":{"gitId":"MuhdMusab"},"content":"        secondTestMaximumSortedList.add(comparableStubThree);","lastModifiedDate":"2022-10-13"},{"lineNumber":208,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":209,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(stubMaximumSortedList.equals(secondTestMaximumSortedList));","lastModifiedDate":"2022-10-13"},{"lineNumber":210,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":211,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jialatteo":16,"MuhdMusab":195}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATETIME_210_JAN_2023;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LOCATION;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_21_JAN_2023;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"public class JsonAdaptedAppointmentTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    public void toModelType_validAppointmentDetails_returnsExpectedMessage() throws IllegalValueException {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_DATETIME_21_JAN_2023, VALID_LOCATION_NUS);","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"        assertEquals(new AppointmentBuilder()","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"                        .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"                        .withLocation(VALID_LOCATION_NUS).build(),","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"                     appointment.toModelType());","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"    public void toModelType_invalidDateTime_throwsIllegalValueException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"                INVALID_DATETIME_210_JAN_2023, VALID_LOCATION_NUS);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d DateTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    public void toModelType_nullDateTime_throwsIllegalValueException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(null, VALID_LOCATION_NUS);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d DateTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_DATETIME_21_JAN_2023, INVALID_LOCATION);","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_DATETIME_21_JAN_2023, null);","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":56}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKTAG_HIGH;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.IncomeLevel;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.Monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"rgonslayer"},"content":"    private static final String INVALID_RISKTAG \u003d \"jump\";","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"    private static final String INVALID_PLANTAG \u003d \"sit\";","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"    private static final String INVALID_CLIENTTAG \u003d \"stand\";","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"    private static final String INVALID_INCOME \u003d \"301222\";","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"    private static final String INVALID_MONTHLY \u003d \"201\";","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    private static final String INVALID_DATETIME \u003d \"21/05/2023 2359\";","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"    private static final String VALID_INCOME \u003d BENSON.getIncome().toString();","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"rgonslayer"},"content":"    private static final String VALID_RISKTAG \u003d BENSON.getRiskTag().toString();","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"    private static final String VALID_PLANTAG \u003d BENSON.getPlanTag().tagName;","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"    private static final String VALID_CLIENTTAG \u003d BENSON.getClientTag().toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"    private static final String VALID_MONTHLY \u003d BENSON.getMonthly().toString();","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"    private static final List\u003cJsonAdaptedAppointment\u003e VALID_APPOINTMENTS \u003d BENSON.getAppointments().stream()","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"            .map(JsonAdaptedAppointment::new)","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"rgonslayer"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"rgonslayer"},"content":"                        VALID_MONTHLY, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"rgonslayer"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"rgonslayer"},"content":"                VALID_MONTHLY, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"rgonslayer"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"rgonslayer"},"content":"                        VALID_MONTHLY, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"rgonslayer"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"rgonslayer"},"content":"                VALID_MONTHLY, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"rgonslayer"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"rgonslayer"},"content":"                        VALID_MONTHLY, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"rgonslayer"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"rgonslayer"},"content":"                VALID_MONTHLY, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"rgonslayer"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"rgonslayer"},"content":"                        VALID_MONTHLY, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"rgonslayer"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_INCOME,","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"rgonslayer"},"content":"                VALID_MONTHLY, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"rgonslayer"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"rgonslayer"},"content":"    public void toModelType_invalidRiskTag_throwsIllegalValueException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"rgonslayer"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"rgonslayer"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"rgonslayer"},"content":"                VALID_MONTHLY, INVALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"rgonslayer"},"content":"        String expectedMessage \u003d RiskTag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"rgonslayer"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"rgonslayer"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"rgonslayer"},"content":"    public void toModelType_nullRiskTag_throwsIllegalValueException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"rgonslayer"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"rgonslayer"},"content":"                VALID_INCOME, VALID_MONTHLY, null, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"rgonslayer"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, RiskTag.class.getSimpleName());","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"rgonslayer"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"    public void toModelType_nullIncome_throwsIllegalValueException() {","lastModifiedDate":"2022-10-31"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-31"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"                null, VALID_MONTHLY, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-31"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, IncomeLevel.class.getSimpleName());","lastModifiedDate":"2022-10-31"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-31"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":158,"author":{"gitId":"rgonslayer"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"rgonslayer"},"content":"    public void toModelType_invalidIncome_throwsIllegalValueException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"rgonslayer"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"rgonslayer"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_INCOME,","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"rgonslayer"},"content":"                        VALID_MONTHLY, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"rgonslayer"},"content":"        String expectedMessage \u003d IncomeLevel.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"rgonslayer"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"    public void toModelType_nullMonthly_throwsIllegalValueException() {","lastModifiedDate":"2022-10-31"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-31"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"                VALID_INCOME , null, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-31"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Monthly.class.getSimpleName());","lastModifiedDate":"2022-10-31"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-31"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":175,"author":{"gitId":"rgonslayer"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"rgonslayer"},"content":"    public void toModelType_invalidMonthly_throwsIllegalValueException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":177,"author":{"gitId":"rgonslayer"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":178,"author":{"gitId":"rgonslayer"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"rgonslayer"},"content":"                        INVALID_MONTHLY, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"rgonslayer"},"content":"        String expectedMessage \u003d Monthly.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-14"},{"lineNumber":181,"author":{"gitId":"rgonslayer"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-14"},{"lineNumber":182,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":183,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":189,"author":{"gitId":"rgonslayer"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2022-10-13"},{"lineNumber":190,"author":{"gitId":"rgonslayer"},"content":"                        VALID_MONTHLY, VALID_RISKTAG, VALID_PLANTAG, VALID_CLIENTTAG, invalidTags, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"rgonslayer"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"rgonslayer"},"content":"    public void toModelType_invalidPlanTag_throwsIllegalValueException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"rgonslayer"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"rgonslayer"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"rgonslayer"},"content":"                        VALID_MONTHLY, VALID_RISKTAG_HIGH, INVALID_PLANTAG,","lastModifiedDate":"2022-10-28"},{"lineNumber":199,"author":{"gitId":"rgonslayer"},"content":"                        VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":200,"author":{"gitId":"rgonslayer"},"content":"        String expectedMessage \u003d PlanTag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"rgonslayer"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"rgonslayer"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"rgonslayer"},"content":"    public void toModelType_nullPlanTag_throwsIllegalValueException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"rgonslayer"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"rgonslayer"},"content":"                VALID_INCOME, VALID_MONTHLY, VALID_RISKTAG_HIGH, null, VALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":208,"author":{"gitId":"rgonslayer"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PlanTag.class.getSimpleName());","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"rgonslayer"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-26"},{"lineNumber":210,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":211,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":212,"author":{"gitId":"rgonslayer"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":213,"author":{"gitId":"rgonslayer"},"content":"    public void toModelType_invalidClientTag_throwsIllegalValueException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":214,"author":{"gitId":"rgonslayer"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":215,"author":{"gitId":"rgonslayer"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"rgonslayer"},"content":"                        VALID_MONTHLY, VALID_RISKTAG_HIGH, VALID_PLANTAG,","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"rgonslayer"},"content":"                        INVALID_CLIENTTAG, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":218,"author":{"gitId":"rgonslayer"},"content":"        String expectedMessage \u003d ClientTag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-28"},{"lineNumber":219,"author":{"gitId":"rgonslayer"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":221,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":222,"author":{"gitId":"rgonslayer"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":223,"author":{"gitId":"rgonslayer"},"content":"    public void toModelType_nullClientTag_throwsIllegalValueException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":224,"author":{"gitId":"rgonslayer"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":225,"author":{"gitId":"rgonslayer"},"content":"                VALID_INCOME, VALID_MONTHLY, VALID_RISKTAG_HIGH, VALID_PLANTAG, null, VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":226,"author":{"gitId":"rgonslayer"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ClientTag.class.getSimpleName());","lastModifiedDate":"2022-10-28"},{"lineNumber":227,"author":{"gitId":"rgonslayer"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jialatteo":3,"rgonslayer":105,"MuhdMusab":20,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"senwei01"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"FAP.json\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":122,"senwei01":1}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.ReadOnlyCommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        Path tempchPath \u003d getTempFilePath(\"ch\");","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"        TextCommandHistoryStorage commandHistoryStorage \u003d new TextCommandHistoryStorage(tempchPath);","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, commandHistoryStorage);","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"    public void commandHistoryReadSave() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"        /*","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"         * {@link TextCommandHistoryStorage} class.","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"         * More extensive testing of CommandHistory saving/reading","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"         * is done in {@link TextCommandHistoryStorageTest} class.","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"         */","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"        CommandHistory original \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        commandHistoryList.add(\"list\");","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"        commandHistoryList.add(\"find alex\");","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"        original.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"        storageManager.saveCommandHistory(original);","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"        ReadOnlyCommandHistory retrieved \u003d storageManager.readCommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"        System.out.println(original.equals(new CommandHistory(retrieved)));","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"        assertEquals(original, new CommandHistory(retrieved));","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jialatteo":26,"-":67}},{"path":"src/test/java/seedu/address/storage/TextCommandHistoryStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.ReadOnlyCommandHistory;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"public class TextCommandHistoryStorageTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    @TempDir","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    public void readCommandHistory_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e readCommandHistory(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"    private ReadOnlyCommandHistory readCommandHistory(String filePath) throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        return new TextCommandHistoryStorage(Paths.get(filePath)).readCommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"    public void read_missingFile() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        assertEquals(readCommandHistory(\"NonExistentFile.txt\"), new CommandHistory());","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    public void readAndSaveCommandHistory_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        Path filePath \u003d testFolder.resolve(\"TempCommandHistory.txt\");","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"        CommandHistory original \u003d new CommandHistory();","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        List\u003cString\u003e commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        commandHistoryList.add(\"list\");","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"        commandHistoryList.add(\"clear\");","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"        original.setCommandHistoryList(commandHistoryList);","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        TextCommandHistoryStorage textCommandHistoryStorage \u003d new TextCommandHistoryStorage(filePath);","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"        textCommandHistoryStorage.saveCommandHistory(original, filePath);","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        ReadOnlyCommandHistory readBack \u003d textCommandHistoryStorage.readCommandHistory(filePath);","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"        assertEquals(original, new CommandHistory(readBack));","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"        original.addToCommandHistory(\"aa l/Starbucks\");","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        original.addToCommandHistory(\"find benny\");","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        textCommandHistoryStorage.saveCommandHistory(original, filePath);","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        readBack \u003d textCommandHistoryStorage.readCommandHistory(filePath);","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"        assertEquals(original, new CommandHistory(readBack));","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"        original.addToCommandHistory(\"List\");","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        textCommandHistoryStorage.saveCommandHistory(original); // file path not specified","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"        readBack \u003d textCommandHistoryStorage.readCommandHistory(); // file path not specified","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        assertEquals(original, new CommandHistory(readBack));","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"    public void saveCommandHistory_nullCommandHistory_throwsNullPointerException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveCommandHistory(null, \"SomeFile.txt\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"    private void saveCommandHistory(ReadOnlyCommandHistory commandHistory, String filePath) {","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"            new TextCommandHistoryStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"                    .saveCommandHistory(commandHistory, Paths.get(filePath));","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"    public void saveCommandHistory_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveCommandHistory(new CommandHistory(), null));","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"jialatteo":83}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":" * A utility class to help with building Appointment objects.","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"    public static final String DEFAULT_DATETIME \u003d \"21-Jan-2023 01:00 AM\";","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"    public static final String DEFAULT_LOCATION \u003d \"301 Upper Thomson Rd, Singapore 574408\";","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    private DateTime dateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    private Location location;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"     * Creates a {@code AppointmentBuilder} with the default details.","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"        LocalDateTime localDateTime \u003d DateTimeParser.parseLocalDateTimeFromString(DEFAULT_DATETIME);","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"        dateTime \u003d new DateTime(localDateTime);","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"     * Initializes the AppointmentBuilder with the data of {@code appointmentToCopy}.","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    public AppointmentBuilder(Appointment appointmentToCopy) {","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"        dateTime \u003d appointmentToCopy.getDateTime();","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        location \u003d appointmentToCopy.getLocation();","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"     * Sets the {@code DateTime} of the {@code Appointment} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"    public AppointmentBuilder withDateTime(String dateTime) {","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        LocalDateTime localDateTime \u003d DateTimeParser.parseLocalDateTimeFromString(dateTime);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"        this.dateTime \u003d new DateTime(localDateTime);","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"     * Sets the {@code Location} of the {@code Appointment} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"    public AppointmentBuilder withLocation(String location) {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"     * Returns a Person with the respective arguments as fields","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"     * By default, the set of appointments field is created but is empty","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"    public Appointment build() {","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        return new Appointment(dateTime, location);","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":65}},{"path":"src/test/java/seedu/address/testutil/CalendarMonthBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.calendar.CalendarEvent;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.calendar.CalendarMonth;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":" * A utility class to help with building CalendarMonth objects.","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"public class CalendarMonthBuilder {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    private static final String DEFAULT_FIRST_NAME \u003d \"Amy\";","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    private static final String DEFAULT_SECOND_NAME \u003d \"Bob\";","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"    private static final String DEFAULT_FIRST_DATE \u003d \"1-Apr-2023 01:00 PM\";","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"    private static final String DEFAULT_SECOND_DATE \u003d \"1-May-2023 01:00 PM\";","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    private static final String DEFAULT_THIRD_DATE \u003d \"1-Apr-2024 01:00 PM\";","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"    private ObservableList\u003cCalendarEvent\u003e eventList;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    public CalendarMonthBuilder() {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"        Name firstName \u003d new Name(DEFAULT_FIRST_NAME);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"        Name secondName \u003d new Name(DEFAULT_SECOND_NAME);","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        Appointment firstAppointment \u003d new Appointment(new DateTime(","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"                DateTimeParser.parseLocalDateTimeFromString(DEFAULT_FIRST_DATE)),","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"                new Location(\"NUS TechnoEdge\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"        Appointment secondAppointment \u003d new Appointment(new DateTime(","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"                DateTimeParser.parseLocalDateTimeFromString(DEFAULT_SECOND_DATE)),","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"                new Location(\"NUS TechnoEdge\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"        Appointment thirdAppointment \u003d new Appointment(new DateTime(","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"                DateTimeParser.parseLocalDateTimeFromString(DEFAULT_THIRD_DATE)),","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"                new Location(\"NUS TechnoEdge\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"        CalendarEvent firstEvent \u003d new CalendarEvent(firstName, firstAppointment);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"        CalendarEvent secondEvent \u003d new CalendarEvent(firstName, secondAppointment);","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        CalendarEvent thirdEvent \u003d new CalendarEvent(firstName, thirdAppointment);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        this.eventList \u003d FXCollections.observableArrayList(firstEvent, secondEvent, thirdEvent);","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"     * Initializes the CalendarMonthBuilder with the data of {@code CalendarMonthToCopy}.","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"    public CalendarMonthBuilder(CalendarMonth calendarMonthToCopy) {","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        this.eventList \u003d calendarMonthToCopy.getCalendarEvents();","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"     * Returns a CalendarMonth with the respective arguments as fields.","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"    public CalendarMonth build() {","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        return new CalendarMonth(eventList);","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":66}},{"path":"src/test/java/seedu/address/testutil/EditAppointmentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.EditAppointmentDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":" * A utility class to help with building EditAppointmentDescriptor objects.","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"public class EditAppointmentDescriptorBuilder {","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"    private EditAppointmentDescriptor descriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"    public EditAppointmentDescriptorBuilder() {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"        descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"     * Returns an {@code EditAppointmentDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"    public EditAppointmentDescriptorBuilder(Appointment appointment) {","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"        descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"        descriptor.setDateTime(appointment.getDateTime());","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"        descriptor.setLocation(appointment.getLocation());","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"     * Sets the {@code DateTime} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"    public EditAppointmentDescriptorBuilder withDateTime(String dateTime) {","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"        descriptor.setDateTime(ParserUtil.parseDateTime(dateTime));","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"     * Sets the {@code Location} of the {@code EditAppointmentDescriptor} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    public EditAppointmentDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        descriptor.setLocation(new Location(location));","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"    public EditAppointmentDescriptor build() {","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"        return descriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jialatteo":46}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.IncomeLevel;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.Monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"rgonslayer"},"content":"     * Sets the {@code RiskTag} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"rgonslayer"},"content":"    public EditPersonDescriptorBuilder withRiskTag(String riskTag) {","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"rgonslayer"},"content":"        descriptor.setRiskTag(new RiskTag(riskTag));","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"rgonslayer"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"rgonslayer"},"content":"     * Sets the {@code PlanTag} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"rgonslayer"},"content":"    public EditPersonDescriptorBuilder withPlanTag(String planTag) {","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"rgonslayer"},"content":"        descriptor.setPlanTag(new PlanTag(planTag));","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"rgonslayer"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"rgonslayer"},"content":"     * Sets the {@code ClientTag} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"rgonslayer"},"content":"    public EditPersonDescriptorBuilder withClientTag(String clientTag) {","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"rgonslayer"},"content":"        descriptor.setClientTag(new ClientTag(clientTag));","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"rgonslayer"},"content":"        return this;","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"rgonslayer"},"content":"     * Sets the {@code Income} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"rgonslayer"},"content":"    public EditPersonDescriptorBuilder withIncome(String income) {","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"rgonslayer"},"content":"        descriptor.setIncome(new IncomeLevel(income));","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"rgonslayer"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"rgonslayer"},"content":"     * Sets the {@code Monthly} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"rgonslayer"},"content":"    public EditPersonDescriptorBuilder withMonthly(String monthly) {","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"rgonslayer"},"content":"        descriptor.setMonthly(new Monthly(monthly));","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"rgonslayer"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"rgonslayer"},"content":"        Set\u003cNormalTag\u003e tagSet \u003d Stream.of(tags).map(NormalTag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"MuhdMusab":1,"rgonslayer":46,"-":84}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import static seedu.address.model.person.Person.MAXIMUM_NUM_OF_APPOINTMENTS;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.IncomeLevel;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.person.Monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.ClientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.PlanTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.RiskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.util.MaximumSortedList;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"rgonslayer"},"content":"    public static final String DEFAULT_RISKTAG \u003d \"LOW\";","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"rgonslayer"},"content":"    public static final String DEFAULT_PLANTAG \u003d \"Savings Plan\";","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"rgonslayer"},"content":"    public static final String DEFAULT_CLIENTTAG \u003d \"POTENTIAL\";","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"    public static final String DEFAULT_INCOME \u003d \"$1000\";","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"    public static final String DEFAULT_MONTHLY \u003d \"$200\";","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"rgonslayer"},"content":"    private RiskTag riskTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"rgonslayer"},"content":"    private PlanTag planTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"rgonslayer"},"content":"    private ClientTag clientTag;","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"rgonslayer"},"content":"    private IncomeLevel income;","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"    private Monthly monthly;","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"rgonslayer"},"content":"    private Set\u003cNormalTag\u003e tags;","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"    private MaximumSortedList\u003cAppointment\u003e appointments;","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"rgonslayer"},"content":"        riskTag \u003d new RiskTag(DEFAULT_RISKTAG);","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"rgonslayer"},"content":"        planTag \u003d new PlanTag(DEFAULT_PLANTAG);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"rgonslayer"},"content":"        clientTag \u003d new ClientTag(DEFAULT_CLIENTTAG);","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"rgonslayer"},"content":"        income \u003d new IncomeLevel(DEFAULT_INCOME);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"rgonslayer"},"content":"        monthly \u003d new Monthly(DEFAULT_MONTHLY);","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"        appointments \u003d new MaximumSortedList\u003c\u003e(MAXIMUM_NUM_OF_APPOINTMENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"rgonslayer"},"content":"        income \u003d personToCopy.getIncome();","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"rgonslayer"},"content":"        monthly \u003d personToCopy.getMonthly();","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"rgonslayer"},"content":"        riskTag \u003d personToCopy.getRiskTag();","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"rgonslayer"},"content":"        planTag \u003d personToCopy.getPlanTag();","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"rgonslayer"},"content":"        clientTag \u003d personToCopy.getClientTag();","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"        income \u003d personToCopy.getIncome();","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"        appointments \u003d new MaximumSortedList\u003c\u003e(personToCopy.getAppointments());","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"rgonslayer"},"content":"     * Sets the {@code RiskTag} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"rgonslayer"},"content":"    public PersonBuilder withRiskTag(String riskTag) {","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"rgonslayer"},"content":"        this.riskTag \u003d new RiskTag(riskTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"rgonslayer"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"rgonslayer"},"content":"     * Sets the {@code PlanTag} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"rgonslayer"},"content":"    public PersonBuilder withPlanTag(String planTag) {","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"rgonslayer"},"content":"        this.planTag \u003d new PlanTag(planTag);","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"rgonslayer"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"rgonslayer"},"content":"     * Sets the {@code ClientTag} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"rgonslayer"},"content":"    public PersonBuilder withClientTag(String clientTag) {","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"rgonslayer"},"content":"        this.clientTag \u003d new ClientTag(clientTag);","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"rgonslayer"},"content":"        return this;","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"rgonslayer"},"content":"     * Sets the {@code Income} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"rgonslayer"},"content":"    public PersonBuilder withIncome(String income) {","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"rgonslayer"},"content":"        this.income \u003d new IncomeLevel(income);","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"rgonslayer"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"rgonslayer"},"content":"     * Sets the {@code Monthly} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"rgonslayer"},"content":"    public PersonBuilder withMonthly(String monthly) {","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"rgonslayer"},"content":"        this.monthly \u003d new Monthly(monthly);","lastModifiedDate":"2022-10-14"},{"lineNumber":162,"author":{"gitId":"rgonslayer"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":163,"author":{"gitId":"rgonslayer"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"     * Sets the {@code Appointment} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"jialatteo"},"content":"    public PersonBuilder withAppointment(Appointment appointmentToBeAdded) {","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"jialatteo"},"content":"        this.appointments.add(appointmentToBeAdded);","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"rgonslayer"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"jialatteo"},"content":"     * Returns a Person with the respective arguments as fields","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"jialatteo"},"content":"     * By default, the set of appointments field is created but is empty","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"rgonslayer"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":177,"author":{"gitId":"rgonslayer"},"content":"        return new Person(name, phone, email, address, income, monthly,","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"rgonslayer"},"content":"                riskTag, planTag, clientTag, tags, appointments);","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jialatteo":7,"MuhdMusab":12,"rgonslayer":69,"-":93}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENTTAG;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MONTHLY;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANTAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKTAG;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":"import seedu.address.model.tag.NormalTag;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"rgonslayer"},"content":"        sb.append(PREFIX_RISKTAG + person.getRiskTag().tagName + \" \");","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"rgonslayer"},"content":"        sb.append(PREFIX_PLANTAG + person.getPlanTag().tagName + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"rgonslayer"},"content":"        sb.append(PREFIX_CLIENTTAG + person.getClientTag().tagName + \" \");","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"        sb.append(PREFIX_INCOME + person.getIncome().value + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"rgonslayer"},"content":"        sb.append(PREFIX_MONTHLY + person.getMonthly().value + \" \");","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"rgonslayer"},"content":"        descriptor.getRiskTag().ifPresent(riskTag -\u003e sb.append(PREFIX_RISKTAG).append(riskTag.tagName).append(\" \"));","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"rgonslayer"},"content":"        descriptor.getClientTag().ifPresent(","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"rgonslayer"},"content":"                clientTag -\u003e sb.append(PREFIX_CLIENTTAG).append(clientTag.tagName).append(\" \"));","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"rgonslayer"},"content":"        descriptor.getMonthly().ifPresent(monthly -\u003e sb.append(PREFIX_MONTHLY).append(monthly.value).append(\" \"));","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"rgonslayer"},"content":"        descriptor.getPlanTag().ifPresent(planTag -\u003e sb.append(PREFIX_PLANTAG).append(planTag.tagName).append(\" \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        descriptor.getIncome().ifPresent(incomeLevel -\u003e sb.append(PREFIX_INCOME).append(incomeLevel.value).append(\" \"));","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"rgonslayer"},"content":"            Set\u003cNormalTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"rgonslayer":17,"MuhdMusab":5,"-":60}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"    public static final Index INDEX_FIRST_APPOINTMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"    public static final Index INDEX_SECOND_APPOINTMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"    public static final Index INDEX_THIRD_APPOINTMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jialatteo":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLIENTTAG_CURRENT;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLIENTTAG_POTENTIAL;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_21_JAN_2023;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_22_JAN_2023;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_23_MAR_2024;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INCOME_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INCOME_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_JURONGPOINT;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_NUS;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_WESTMALL;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MONTHLY_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MONTHLY_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"senwei01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKTAG_LOW;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"senwei01"},"content":"    public static final Person ALICE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"senwei01"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"senwei01"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"senwei01"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"senwei01"},"content":"            .withIncome(\"$1000\")","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"senwei01"},"content":"            .withMonthly(\"$200\")","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"senwei01"},"content":"            .withRiskTag(\"LOW\")","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"rgonslayer"},"content":"            .withPlanTag(\"Savings Plan\")","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"rgonslayer"},"content":"            .withClientTag(\"POTENTIAL\")","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"senwei01"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"senwei01"},"content":"            .build();","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"senwei01"},"content":"    public static final Person MUSAB_WITH_NO_APPT \u003d new PersonBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"senwei01"},"content":"            .withName(\"Musab\")","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"            .withAddress(\"301 Upper Thomson Rd, Singapore 574408\")","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"senwei01"},"content":"            .withEmail(\"musab@gmail.com\")","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"senwei01"},"content":"            .withPhone(\"92345678\")","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"senwei01"},"content":"            .withMonthly(\"$100\")","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"senwei01"},"content":"            .withRiskTag(\"LOW\")","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"rgonslayer"},"content":"            .withPlanTag(\"Savings Plan\")","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"rgonslayer"},"content":"            .withClientTag(\"CURRENT\")","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"            .withTags(\"gay\")","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"            .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"senwei01"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"senwei01"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"            .withIncome(\"$1000\")","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"            .withMonthly(\"$100\")","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"            .withRiskTag(\"HIGH\")","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"rgonslayer"},"content":"            .withPlanTag(\"Savings Plan\")","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"rgonslayer"},"content":"            .withClientTag(\"POTENTIAL\")","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"            .build();","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"senwei01"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"senwei01"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"senwei01"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"senwei01"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"senwei01"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"senwei01"},"content":"            .withIncome(\"$1000\")","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"senwei01"},"content":"            .withMonthly(\"$200\")","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"senwei01"},"content":"            .withRiskTag(\"LOW\")","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"rgonslayer"},"content":"            .withPlanTag(\"Savings Plan\")","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"rgonslayer"},"content":"            .withClientTag(\"CURRENT\")","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"senwei01"},"content":"            .build();","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"senwei01"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"senwei01"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"senwei01"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"senwei01"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"senwei01"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"senwei01"},"content":"            .withIncome(\"$1000\")","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"senwei01"},"content":"            .withMonthly(\"$300\")","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"senwei01"},"content":"            .withRiskTag(\"LOW\")","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"senwei01"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"rgonslayer"},"content":"            .withPlanTag(\"Savings Plan\")","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"            .withClientTag(\"CURRENT\")","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"senwei01"},"content":"            .build();","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"senwei01"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"senwei01"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"senwei01"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"senwei01"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"senwei01"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"senwei01"},"content":"            .withIncome(\"$6000\")","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"senwei01"},"content":"            .withMonthly(\"$250\")","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"senwei01"},"content":"            .withRiskTag(\"MEDIUM\")","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"            .withClientTag(\"POTENTIAL\")","lastModifiedDate":"2022-10-31"},{"lineNumber":108,"author":{"gitId":"rgonslayer"},"content":"            .withPlanTag(\"Savings Plan\")","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"senwei01"},"content":"            .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"senwei01"},"content":"                    .withDateTime(VALID_DATETIME_22_JAN_2023)","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"senwei01"},"content":"                    .withLocation(VALID_LOCATION_JURONGPOINT).build())","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"senwei01"},"content":"            .build();","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"senwei01"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"senwei01"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"senwei01"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"senwei01"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"senwei01"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"senwei01"},"content":"            .withIncome(\"$2000\")","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"senwei01"},"content":"            .withMonthly(\"$500\")","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"senwei01"},"content":"            .withRiskTag(\"MEDIUM\")","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"rgonslayer"},"content":"            .withClientTag(\"CURRENT\")","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"rgonslayer"},"content":"            .withPlanTag(\"Savings Plan\")","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"senwei01"},"content":"            .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"senwei01"},"content":"                    .withDateTime(VALID_DATETIME_23_MAR_2024)","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"senwei01"},"content":"                    .withLocation(VALID_LOCATION_WESTMALL).build())","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"senwei01"},"content":"            .build();","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"senwei01"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"senwei01"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"senwei01"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"senwei01"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"senwei01"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"senwei01"},"content":"            .withIncome(\"$10000\")","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"senwei01"},"content":"            .withMonthly(\"$400\")","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"senwei01"},"content":"            .withRiskTag(\"LOW\")","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"rgonslayer"},"content":"            .withClientTag(\"POTENTIAL\")","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"rgonslayer"},"content":"            .withPlanTag(\"Savings Plan\")","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"senwei01"},"content":"            .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"senwei01"},"content":"                    .withDateTime(VALID_DATETIME_21_JAN_2023)","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"senwei01"},"content":"                    .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"senwei01"},"content":"            .withAppointment(new AppointmentBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"senwei01"},"content":"                    .withDateTime(VALID_DATETIME_23_MAR_2024)","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"senwei01"},"content":"                    .withLocation(VALID_LOCATION_NUS).build())","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"senwei01"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":147,"author":{"gitId":"senwei01"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-24"},{"lineNumber":148,"author":{"gitId":"senwei01"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"senwei01"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"senwei01"},"content":"            .withAddress(\"little india\")","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"senwei01"},"content":"            .withIncome(\"$1000\")","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"senwei01"},"content":"            .withMonthly(\"$300\")","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"senwei01"},"content":"            .withRiskTag(\"LOW\")","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"rgonslayer"},"content":"            .withClientTag(\"CURRENT\")","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"rgonslayer"},"content":"            .withPlanTag(\"Savings Plan\")","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"senwei01"},"content":"            .build();","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"senwei01"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"senwei01"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"senwei01"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"senwei01"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"senwei01"},"content":"            .withAddress(\"chicago ave\")","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"senwei01"},"content":"            .withIncome(\"$1000\")","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"senwei01"},"content":"            .withMonthly(\"$200\")","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"rgonslayer"},"content":"            .withClientTag(\"POTENTIAL\")","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"senwei01"},"content":"            .withRiskTag(\"MEDIUM\")","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"rgonslayer"},"content":"            .withPlanTag(\"Savings Plan\")","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"senwei01"},"content":"            .build();","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"senwei01"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"senwei01"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-24"},{"lineNumber":172,"author":{"gitId":"senwei01"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-24"},{"lineNumber":173,"author":{"gitId":"senwei01"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"senwei01"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"senwei01"},"content":"            .withIncome(VALID_INCOME_AMY)","lastModifiedDate":"2022-10-24"},{"lineNumber":176,"author":{"gitId":"senwei01"},"content":"            .withMonthly(VALID_MONTHLY_AMY)","lastModifiedDate":"2022-10-24"},{"lineNumber":177,"author":{"gitId":"senwei01"},"content":"            .withRiskTag(VALID_RISKTAG_LOW)","lastModifiedDate":"2022-10-24"},{"lineNumber":178,"author":{"gitId":"rgonslayer"},"content":"            .withPlanTag(\"Savings Plan\")","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"rgonslayer"},"content":"            .withClientTag(VALID_CLIENTTAG_CURRENT)","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"senwei01"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"senwei01"},"content":"            .build();","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"senwei01"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"senwei01"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"senwei01"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"senwei01"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":186,"author":{"gitId":"senwei01"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":187,"author":{"gitId":"senwei01"},"content":"            .withIncome(VALID_INCOME_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":188,"author":{"gitId":"senwei01"},"content":"            .withMonthly(VALID_MONTHLY_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":189,"author":{"gitId":"senwei01"},"content":"            .withRiskTag(VALID_RISKTAG_LOW)","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"rgonslayer"},"content":"            .withPlanTag(\"Savings Plan\")","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"rgonslayer"},"content":"            .withClientTag(VALID_CLIENTTAG_POTENTIAL)","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"senwei01"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jialatteo":11,"rgonslayer":24,"MuhdMusab":3,"-":53,"senwei01":122}}]
